Процедура ПриОткрытии()
	ЭлементыФормы.ПередЗаполнениемПоле.УстановитьТекст(ОбработчикПередЗаполнением);
	ЭлементыФормы.ПолучениеТабличнойЧастиПоле.УстановитьТекст(ОбработчикПолучениеТабличнойЧасти);
	ЭлементыФормы.ПослеВыгрузкиПоле.УстановитьТекст(ОбработчикПослеВыгрузки);
	ЭлементыФормы.ФильтрПоле.УстановитьТекст(ОбработчикФильтрВыгрузки);
	ЭлементыФормы.ПроверкаЗагрузкиПоле.УстановитьТекст(ОбработчикПроверкаЗагрузки);
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	ОбработчикПередЗаполнением=ЭлементыФормы.ПередЗаполнениемПоле.ПолучитьТекст();
	ОбработчикПолучениеТабличнойЧасти=ЭлементыФормы.ПолучениеТабличнойЧастиПоле.ПолучитьТекст();
	ОбработчикПослеВыгрузки=ЭлементыФормы.ПослеВыгрузкиПоле.ПолучитьТекст();
	ОбработчикФильтрВыгрузки=ЭлементыФормы.ФильтрПоле.ПолучитьТекст();
	ОбработчикПроверкаЗагрузки=ЭлементыФормы.ПроверкаЗагрузкиПоле.ПолучитьТекст();
КонецПроцедуры

Процедура ТабличноеПоле1ОбработчикПередВыгрузкойНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаРедактораКода = ЭтотОбъект.ПолучитьФорму("Форма");
	ФормаРедактораКода.ЭлементыФормы.КодПоле.УстановитьТекст(Элемент.Значение);
	ФормаРедактораКода.ОткрытьМодально();
	Элемент.Значение = ФормаРедактораКода.ЭлементыФормы.КодПоле.ПолучитьТекст();
КонецПроцедуры

Процедура ИмяТаблицыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТаблицаТаблиц = Infor_Интеграция.ПолучитьСписокТаблицБазыДанных("Bufer");
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ЗагрузитьЗначения(ТаблицаТаблиц.ВыгрузитьКолонку("Имя"));
	Рез = ВыбратьИзСписка(СписокВыбора, Элемент, СписокВыбора.Получить(0));
	Если НЕ Рез = Неопределено Тогда
		ИмяТаблицы = "dbo." + Рез.Значение;
		Рез = ТаблицаТаблиц.Найти(Рез.Значение, "Имя");
		IDТаблицы = Рез.ID;
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьПоля(Кнопка)
	ТаблицаПолей = Infor_Интеграция.ПолучитьСписокПолейТаблицы(IDТаблицы);
	Поля.Очистить();
	Для Каждого ТекПоле Из ТаблицаПолей Цикл
		НС = Поля.Добавить();
		НС.Активность = (ТекПоле.НеНуль = 0);
		НС.ИмяПоля = ТекПоле.Имя;
		НС.ТипПоля = Infor_Интеграция.ПолучитьТипПоля(ТекПоле.Тип);
		НС.ТолькоЧтение = (ТекПоле.Ключ = 1);
		Если НС.ТипПоля = Перечисления.Infor_ТипыПолей.Строка Тогда
			НС.ДлиннаПоля = ТекПоле.ДлиннаПоля;
		Иначе
			НС.ДлиннаПоля = 0;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ТабличноеПоле1ИмяПоляНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТаблицаПолей = Infor_Интеграция.ПолучитьСписокПолейТаблицы(IDТаблицы);
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.ЗагрузитьЗначения(ТаблицаПолей.ВыгрузитьКолонку("Имя"));
	Рез = ВыбратьИзСписка(СписокВыбора, Элемент, СписокВыбора.Получить(0));
	Если НЕ Рез = Неопределено Тогда
		Элемент.Значение = Рез.Значение;
	КонецЕсли;
КонецПроцедуры

Процедура ТипОбъектаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("ИмяТипа");
	
	Типы = Метаданные.РегистрыСведений.Infor_ОчередьВыгрузки.Измерения.Объект.Тип.Типы();
	Для Каждого СтрТип Из Типы Цикл
		Мет = Метаданные.НайтиПоТипу(СтрТип);
		НС = ТаблицаЗначений.Добавить();
		НС.ИмяТипа = Мет.ПолноеИмя();
	КонецЦикла;
	ТаблицаЗначений.Сортировать("ИмяТипа");
	
	Для Каждого СтрТип Из ТаблицаЗначений Цикл
		СписокВыбора.Добавить(СтрТип.ИмяТипа);
	КонецЦикла;
	
	
	Рез = ВыбратьИзСписка(СписокВыбора, Элемент, СписокВыбора.Получить(0));
	Если НЕ Рез = Неопределено Тогда
		ТипОбъекта = Рез;
	КонецЕсли;
КонецПроцедуры
