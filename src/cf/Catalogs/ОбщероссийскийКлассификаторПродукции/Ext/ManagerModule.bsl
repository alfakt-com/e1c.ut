#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает таблицу классификатора из макета с предопределенными элементами.
// Макеты хранятся в макетах данного справочника (см. общую форму "ДобавлениеЭлементовВКлассификатор").
//	Параметры:
//		Переменные - Строка - в данном методе не используется, однако является обязательной в случе обращения к другим классификаторам.
//	Возвращаемое значение:
//		Таблица значений - таблица классификатора с колонками:
//			* Код - Строка - строковое представление кода элемента классификатора.
//			* Наименование - Строка - наименование элемента классификатора.
//
Функция ТаблицаКлассификатора(Знач Переменные) Экспорт
		
	// Заполняет список из макета ОКП
	КлассификаторXML = Справочники.ОбщероссийскийКлассификаторПродукции.ПолучитьМакет("ОбщероссийскийКлассификаторПродукции").ПолучитьТекст();
	
	Возврат(ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные);
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.3.4,
// создает элементы справочника по ранее созданным кодам ОКП
//
Процедура КлассификаторОКПД2_ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Конвертация", Справочники.КлассификаторОКПД2.ТаблицаКонвертацииОКП_ОКПД2());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Конвертация.КодОКП,
	|	Конвертация.КодОКПД2
	|ПОМЕСТИТЬ Конвертация
	|ИЗ
	|	&Конвертация КАК Конвертация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщероссийскийКлассификаторПродукции.Ссылка КАК Ссылка
	|ИЗ
	|	Конвертация КАК Конвертация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбщероссийскийКлассификаторПродукции КАК ОбщероссийскийКлассификаторПродукции
	|		ПО Конвертация.КодОКП = ОбщероссийскийКлассификаторПродукции.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОКПД2 КАК КлассификаторОКПД2
	|		ПО Конвертация.КодОКПД2 = КлассификаторОКПД2.Код
	|ГДЕ
	|	КлассификаторОКПД2.Ссылка ЕСТЬ NULL
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура КлассификаторОКПД2_ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
 	ПолноеИмяОбъекта = "Справочник.ОбщероссийскийКлассификаторПродукции";
	МетаданныеСправочника = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Параметры.Вставить("Конвертация", Справочники.КлассификаторОКПД2.ТаблицаКонвертацииОКП_ОКПД2());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Конвертация.КодОКП,
	|	Конвертация.КодОКПД2
	|ПОМЕСТИТЬ Конвертация
	|ИЗ
	|	&Конвертация КАК Конвертация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщероссийскийКлассификаторПродукции.Ссылка КАК Ссылка,
	|	ОбщероссийскийКлассификаторПродукции.ВерсияДанных КАК ВерсияДанных,
	|	Конвертация.КодОКПД2 КАК КодОКПД2
	|ИЗ
	|	ВТДляОбработкиОбщероссийскийКлассификаторПродукции КАК ВТОбъектыДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбщероссийскийКлассификаторПродукции КАК ОбщероссийскийКлассификаторПродукции
	|		ПО ВТОбъектыДляОбработки.Ссылка = ОбщероссийскийКлассификаторПродукции.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Конвертация КАК Конвертация
	|		ПО Конвертация.КодОКП = ОбщероссийскийКлассификаторПродукции.Код
	|";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
		
	КлассификаторОКПД2 = Справочники.КлассификаторОКПД2.ТаблицаКлассификатора();
	КлассификаторОКПД2.Индексы.Добавить("Код");
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("Справочник.КлассификаторОКПД2");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать данные для обработки элемента классификатора ОКП: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеСправочника,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
			
		КонецПопытки;
		
		Попытка
			
			СправочникОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если СправочникОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			КодОКПД2 = Выборка.КодОКПД2;
			ЭлементКлассификатора = Справочники.КлассификаторОКПД2.НайтиПоКоду(КодОКПД2);
			Если Не ЗначениеЗаполнено(ЭлементКлассификатора) Тогда
				
				СтрокиКлассификатора = КлассификаторОКПД2.НайтиСтроки(Новый Структура("Код", КодОКПД2));
				Если СтрокиКлассификатора.Количество() = 0 Тогда
					ЗафиксироватьТранзакцию();
					Продолжить;
				КонецЕсли;
				
				СтрокаКлассификатора = СтрокиКлассификатора[0];
				НовыйЭлементКлассификатора = Справочники.КлассификаторОКПД2.СоздатьЭлемент();
				НовыйЭлементКлассификатора.Код = СтрокаКлассификатора.Код;
				НовыйЭлементКлассификатора.Наименование       = СтрокаКлассификатора.Наименование;
				НовыйЭлементКлассификатора.НаименованиеПолное = СтрокаКлассификатора.Наименование;
				НовыйЭлементКлассификатора.Записать();
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
		
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент классификатора ОКП : %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеСправочника,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли