
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ИспользуетсяРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	
	Если ИспользуетсяРеглУчет Тогда
		Элементы.КорреспондирующийСчет.Видимость = Ложь;
	Иначе
		ЗаполнитьСписокВыбораКоррСчета();
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.СтатьиДвиженияДенежныхСредств) Тогда
		Элементы.РедактироватьСписокХозяйственныхОпераций.Доступность = Ложь;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ХозяйственныеОперацииНаименование = СформироватьЗаголовокРедактированияСпискаОпераций();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Объект.ХозяйственныеОперации.Очистить();
		
		Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
			Объект.ХозяйственныеОперации.Добавить().ХозяйственнаяОперация = ЭлементСписка.Значение;
		КонецЦикла;
		
		ХозяйственныеОперацииНаименование = СформироватьЗаголовокРедактированияСпискаОпераций();
		
		ПриИзмененииСпискаХозОпераций();
		
		Модифицированность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ХозяйственныеОперацииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокХозяйственныхОпераций", Новый СписокЗначений);
	Для Каждого СтрокаХозОперации Из Объект.ХозяйственныеОперации Цикл
		ПараметрыФормы.СписокХозяйственныхОпераций.Добавить(СтрокаХозОперации.ХозяйственнаяОперация);
	КонецЦикла;
	
	ОткрытьФорму("Справочник.СтатьиДвиженияДенежныхСредств.Форма.ФормаРедактированияСпискаХозяйственныхОпераций",
		ПараметрыФормы, ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Функция СформироватьЗаголовокРедактированияСпискаОпераций()

	Результат = "";
	Для Каждого СтрокаХозОперации Из Объект.ХозяйственныеОперации Цикл
		Результат = Результат + ?(Результат="","","; ") + СокрЛП(СтрокаХозОперации.ХозяйственнаяОперация);
	КонецЦикла;
	
	Если ПустаяСтрока(Результат) Тогда
		Результат = НСтр("ru='<Указать хозяйственные операции>'");
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаСервере
Процедура ПриИзмененииСпискаХозОпераций()
	
	ЗаполнитьВидДвиженияДенежныхСредств();
	
	Если Не ИспользуетсяРеглУчет Тогда
		Объект.КорреспондирующийСчет = "";
		ЗаполнитьСписокВыбораКоррСчета();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидДвиженияДенежныхСредств()
	
	Объект.ВидДвиженияДенежныхСредств = Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка();
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.ХозяйственныеОперации Цикл
		
		ВидДвиженияДДС = Неопределено;
		
		Если (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда;
			
		ИначеЕсли (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности;
			
		ИначеЕсли (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
			ИЛИ (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков; 
			
		ИначеЕсли (СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы) Тогда
			ВидДвиженияДДС = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
			
		КонецЕсли;
		
		Если ВидДвиженияДДС <> Неопределено Тогда
			Если НЕ Объект.ВидДвиженияДенежныхСредств.Пустая()  Тогда
				Объект.ВидДвиженияДенежныхСредств = Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка();
				Прервать;
			Иначе
				Объект.ВидДвиженияДенежныхСредств = ВидДвиженияДДС;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораКоррСчета()
	
	СписокСчетов = Элементы.КорреспондирующийСчет.СписокВыбора;
	СписокСчетов.Очистить();
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.ХозяйственныеОперации Цикл
		Если СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы Тогда
			
			СписокСчетов.Добавить("6290", "Прочие доходы (6290)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
			
			СписокСчетов.Добавить("3350", "Краткосрочная задолженность по оплате труда (3350)");
			СписокСчетов.Добавить("7110", "Расходы по реализации продукции и оказанию услуг (7110)");
			СписокСчетов.Добавить("7210", "Административные расходы (7210)");
			СписокСчетов.Добавить("7480", "Прочие расходы (7480)");
			СписокСчетов.Добавить("8410", "Накладные расходы (8410)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств Тогда
			
			СписокСчетов.Добавить("1022", "Денежные средства в пути конвертация валюты (1022)");
			СписокСчетов.Добавить("1110", "Краткосрочные предоставленные займы (1110)");
			СписокСчетов.Добавить("2010", "Долгосрочные предоставленные займы (2010)");
			СписокСчетов.Добавить("3020", "Краткосрочные займы полученные (3020)");
			СписокСчетов.Добавить("4020", "Долгосрочные займы полученные (4020)");
			СписокСчетов.Добавить("3010", "Краткосрочные банковские займы (3010)");
			СписокСчетов.Добавить("4010", "Долгосрочные банковские займы (4010)");
			СписокСчетов.Добавить("1274", "Прочая краткосрочная дебиторская задолженность (1274)");
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
			
			СписокСчетов.Добавить("1022", "Денежные средства в пути конвертация валюты (1022)");
			СписокСчетов.Добавить("1110", "Краткосрочные предоставленные займы (1110)");
			СписокСчетов.Добавить("2010", "Долгосрочные предоставленные займы (2010)");
			СписокСчетов.Добавить("3020", "Краткосрочные займы полученные (3020)");
			СписокСчетов.Добавить("4020", "Долгосрочные займы полученные (4020)");
			СписокСчетов.Добавить("3010", "Краткосрочные банковские займы (3010)");
			СписокСчетов.Добавить("4010", "Долгосрочные банковские займы (4010)");
			СписокСчетов.Добавить("1274", "Прочая краткосрочная дебиторская задолженность (1274)");
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу Тогда
			
			СписокСчетов.Добавить("1010", "Денежные средства в кассе (1010)");
			СписокСчетов.Добавить("1021", "Денежные средства в пути (кассы) (1024)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
			
			СписокСчетов.Добавить("3310", "Краткосрочная задолженность поставщикам и подрядчикам (3310)");
			СписокСчетов.Добавить("1710", "Краткосрочные авансы выданные (1710)");
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка
			Или СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет Тогда
			
			СписокСчетов.Добавить("1021", "Денежные средства в пути (расчетные счета) (1021)");
			СписокСчетов.Добавить("1030", "Денежные средства на текущих банковских счетах (1030)");
			СписокСчетов.Добавить("1040", "Денежные средства на корреспондентских счетах (1040)");
			СписокСчетов.Добавить("1050", "Денежные средства на сберегательных счетах (1050)");
			СписокСчетов.Добавить("1060", "Денежные средства ограниченные в использовании (1060)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
			
			СписокСчетов.Добавить("1210", "Краткосрочная дебиторская задолженность покупателей и заказчиков (1210)");
			СписокСчетов.Добавить("3510", "Краткосрочные авансы полученные (3510)");
			СписокСчетов.Добавить("1274", "Прочая краткосрочная дебиторская задолженность (1274)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк Тогда
			
			СписокСчетов.Добавить("1021", "Денежные средства в пути (расчетные счета) (1021)");
			СписокСчетов.Добавить("1030", "Денежные средства на текущих банковских счетах (1030)");
			СписокСчетов.Добавить("1040", "Денежные средства на корреспондентских счетах (1040)");
			СписокСчетов.Добавить("1050", "Денежные средства на сберегательных счетах (1050)");
			СписокСчетов.Добавить("1060", "Денежные средства ограниченные в использовании (1060)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
			
			СписокСчетов.Добавить("3310", "Краткосрочная задолженность поставщикам и подрядчикам (3310)");
			СписокСчетов.Добавить("1710", "Краткосрочные авансы выданные (1710)");
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
			
			СписокСчетов.Добавить("1210", "Краткосрочная дебиторская задолженность покупателей и заказчиков (1210)");
			СписокСчетов.Добавить("3510", "Краткосрочные авансы полученные (3510)");
			СписокСчетов.Добавить("1274", "Прочая краткосрочная дебиторская задолженность (1274)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации Тогда
			
			СписокСчетов.Добавить("1210", "Краткосрочная дебиторская задолженность покупателей и заказчиков (1210)");
			СписокСчетов.Добавить("3510", "Краткосрочные авансы полученные (3510)");
			СписокСчетов.Добавить("1274", "Прочая краткосрочная дебиторская задолженность (1274)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
			
			СписокСчетов.Добавить("3310", "Краткосрочная задолженность поставщикам и подрядчикам (3310)");
			СписокСчетов.Добавить("1710", "Краткосрочные авансы выданные (1710)");
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ Тогда
			
			СписокСчетов.Добавить("1010", "Денежные средства в кассе (1010)");
			СписокСчетов.Добавить("1023", "Операционная касса (1023)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ Тогда
			
			СписокСчетов.Добавить("1010", "Денежные средства в кассе (1010)");
			СписокСчетов.Добавить("1023", "Операционная касса (1023)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПодотчетника Тогда
			
			СписокСчетов.Добавить("1251", "Краткосрочная задолженность подотчетных лиц (1251)");
			СписокСчетов.Добавить("1252", "Краткосрочная задолженность подотчетных лиц (в валюте) (1252)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика Тогда
			
			СписокСчетов.Добавить("3310", "Краткосрочная задолженность поставщикам и подрядчикам (3310)");
			СписокСчетов.Добавить("1710", "Краткосрочные авансы выданные (1710)");
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
			
			СписокСчетов.Добавить("1210", "Краткосрочная дебиторская задолженность покупателей и заказчиков (1210)");
			СписокСчетов.Добавить("3510", "Краткосрочные авансы полученные (3510)");
			СписокСчетов.Добавить("1274", "Прочая краткосрочная дебиторская задолженность (1274)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
			
			СписокСчетов.Добавить("1251", "Краткосрочная задолженность подотчетных лиц (1251)");
			СписокСчетов.Добавить("1252", "Краткосрочная задолженность подотчетных лиц (в валюте) (1252)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы Тогда
			
			СписокСчетов.Добавить("1010", "Денежные средства в кассе (1010)");
			СписокСчетов.Добавить("1024", "Денежные средства в пути (кассы) (1024)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
			
			СписокСчетов.Добавить("1240", "Краткосрочная дебиторская задолженность филиалов и структурных подразделений (1240)");
			СписокСчетов.Добавить("2140", "Долгосрочная дебиторская задолженность филиалов и структурных подразделений (2140)");
			СписокСчетов.Добавить("3340", "Краткосрочная кредиторская задолженность филиалам и структурным подразделениям (3340)");
			СписокСчетов.Добавить("4140", "Долгосрочная кредиторская задолженность филиалам и структурным подразделениям (4140)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
			
			СписокСчетов.Добавить("1022", "Денежные средства в пути конвертация валюты (1022)");

			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
			
			СписокСчетов.Добавить("3350", "Краткосрочная задолженность по оплате труда (3350)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
			
			СписокСчетов.Добавить("3110", "Корпоративный подоходный налог подлежащий уплате (3110)");
			СписокСчетов.Добавить("3120", "Индивидуальный подоходный налог (3120)");
			СписокСчетов.Добавить("3130", "Налог на добавленную стоимость (3130)");
			СписокСчетов.Добавить("3140", "Акцизы (3140)");
			СписокСчетов.Добавить("3150", "Социальный налог (3150)");
			СписокСчетов.Добавить("3160", "Земельный налог (3160)");
			СписокСчетов.Добавить("3170", "Транспортный налог (3170)");
			СписокСчетов.Добавить("3180", "Налог на имущество (3180)");
			СписокСчетов.Добавить("3190", "Прочие налоги (3190)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
			
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
			
			СписокСчетов.Добавить("1050", "Денежные средства на сберегательных счетах (1050)");

			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
			
			СписокСчетов.Добавить("1110", "Краткосрочные предоставленные займы (1110)");
			СписокСчетов.Добавить("2010", "Долгосрочные предоставленные займы (2010)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
			
			// кредиты и займы краткосрочные
			СписокСчетов.Добавить("3020", "Краткосрочные займы полученные (3020)");
			СписокСчетов.Добавить("3010", "Краткосрочные банковские займы (3010)");
			
			// кредиты и займы долгосрочные
			СписокСчетов.Добавить("4020", "Долгосрочные займы полученные (4020)");
			СписокСчетов.Добавить("4010", "Долгосрочные банковские займы (4010)");
			
			// комиссия (и прочие платежи) по кредитам и займам
			СписокСчетов.Добавить("3388", "Прочая краткосрочная кредиторская задолженность (3388)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам Тогда
			
			СписокСчетов.Добавить("1050", "Денежные средства на сберегательных счетах (1050)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным Тогда
			
			СписокСчетов.Добавить("1110", "Краткосрочные предоставленные займы (1110)");
			СписокСчетов.Добавить("2010", "Долгосрочные предоставленные займы (2010)");
			
		ИначеЕсли СтрокаТабличнойЧасти.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам Тогда
			
			СписокСчетов.Добавить("1030", "Денежные средства на текущих банковских счетах (1030)");
			СписокСчетов.Добавить("1010", "Денежные средства в кассе (1010)");
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСчетов.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	
	Индекс = 0;
	ВГраницаСписка = СписокСчетов.Количество() - 1;
	
	Пока Индекс < ВГраницаСписка Цикл
		Если СписокСчетов[Индекс].Значение = СписокСчетов[Индекс + 1].Значение Тогда
			СписокСчетов.Удалить(СписокСчетов[Индекс + 1]);
			ВГраницаСписка = ВГраницаСписка - 1;
		Иначе
			Индекс = Индекс + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВ"

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

