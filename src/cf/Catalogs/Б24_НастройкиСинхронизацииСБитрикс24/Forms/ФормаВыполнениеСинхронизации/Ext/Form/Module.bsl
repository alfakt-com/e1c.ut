
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкаСинхронизации 	= Параметры.НастройкаСинхронизации;
	ВидСинхронизации 		= Параметры.ВидСинхронизации;
	ПолнаяСинхронизация 	= Параметры.ПолнаяСинхронизация;
	
	ВыполнятьЗагрузку 		= Параметры.ВыполнятьЗагрузку;
	ВыполнятьВыгрузку 		= Параметры.ВыполнятьВыгрузку;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ЗапуститьВыполнениеОбмена", 0.1, Истина);
	
	ЭтаФорма.ПодключитьОбработчикОжидания("ОбновлениеИнформацииОСинхронизации", 3);

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьВыполнениеОбмена()
	
	ПараметрыСинхронизации = Новый Структура;
	ПараметрыСинхронизации.Вставить("НастройкаСинхронизации", НастройкаСинхронизации);
	ПараметрыСинхронизации.Вставить("ВидСинхронизации"		, ВидСинхронизации);
	ПараметрыСинхронизации.Вставить("ПолнаяСинхронизация"	, ПолнаяСинхронизация);
	ПараметрыСинхронизации.Вставить("ВыполнятьЗагрузку"		, ВыполнятьЗагрузку);
	ПараметрыСинхронизации.Вставить("ВыполнятьВыгрузку"		, ВыполнятьВыгрузку);
	
	ДлительнаяОперация = ВыполнитьСинхронизациюСБитрикс24НаСервере(ПараметрыСинхронизации);
	ИдентификаторЗадания = ДлительнаяОперация.ИдентификаторЗадания;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;

	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриЗавершенииОперацииЗагрузки", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеОповещения, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеИнформацииОСинхронизации()
	
	ОбновлениеИнформацииОСинхронизацииСервер();	
	
	ДлинаПротокола = СтрДлина(Протокол);
	
	Если ДлинаПротокола > 0 тогда           
		Элементы.Протокол.ТекущаяОбласть  = ТабличныйПротокол.Области[ТабличныйПротокол.Области.Количество()-1];
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ОбновлениеИнформацииОСинхронизацииСервер()
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("УникальныйИдентификатор", ИдентификаторЗадания));
	
	Если Задания.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Макет = Справочники.Б24_НастройкиСинхронизацииСБитрикс24.ПолучитьМакет("МакетЛога");
	
	Задание = Задания[0];
	
	Сообщения = Задание.ПолучитьСообщенияПользователю(Истина);
	
	Для Каждого Сообщение Из Сообщения Цикл
		
		Если Лев(Сообщение.Текст, 26)= "Тело запроса HTTP запроса:" тогда
			Продолжить;
		КонецЕсли;
		
		Если Лев(Сообщение.Текст, 16)= "Ответ с портала:" тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСообщения = Сообщение.Поле + " -- " + Сообщение.Текст;
		
		Протокол = Протокол + ТекстСообщения + Символы.ПС; 
		
		Если Сообщение.ПутьКДанным = "КритическаяОшибка" тогда
			ОбластьМакета= Макет.ПолучитьОбласть("КритическаяОшибка");                                                                                                                                                                                                                                                                                                                                                
		ИначеЕсли Сообщение.ПутьКДанным = "Ошибка" тогда
			ОбластьМакета= Макет.ПолучитьОбласть("Ошибка");                                                                                                                                                                                                                                                                                                                                                
		Иначе
			ОбластьМакета= Макет.ПолучитьОбласть("Информация");                                                                                                                                                                                                                                                                                                                                                
		КонецЕсли;
		
		ОбластьМакета.Параметры.ТекстСообщения = ТекстСообщения; 
		ТабличныйПротокол.Вывести(ОбластьМакета);
	
	КонецЦикла;
	
КонецПроцедуры	


&НаКлиенте
Процедура ПриЗавершенииОперацииЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.ГруппаКнопки.Видимость 	= Истина;
	Элементы.КнопкаЗакрыть.Видимость 	= Истина;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ОбновлениеИнформацииОСинхронизации();
	
	Если ЗначениеЗаполнено(Результат.ПодробноеПредставлениеОшибки) тогда
		ОписаниеОшибки 										= Результат.ПодробноеПредставлениеОшибки; 
		Элементы.СтраницыФормы.ТекущаяСтраница 				= Элементы.СтраницаОшибка;
		Элементы.НаписатьВТехподдержку.Видимость 			= Истина;
		Элементы.НаписатьВТехподдержку.КнопкаПоУмолчанию 	= Истина;
	Иначе
		
		//#Если ВебКлиент тогда
		//	Закрыть();
		//#КонецЕсли	
		
		ПоказатьОповещениеПользователя(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1 ""%2""'"),
		Формат(ТекущаяДата(), "ДЛФ=DT"),
		НастройкаСинхронизации) 
		,,
		НСтр("ru = 'Синхронизация с Битрикс24 завершена'"),
		БиблиотекаКартинок.Информация32);
		
		Элементы.НадписьВыполняетсяОбмен.Заголовок 	= "Синхронизация завершена";
		Элементы.КартинкаВыполняетсяОбмен.Видимость = Ложь;
		Элементы.КнопкаЗакрыть.КнопкаПоУмолчанию 	= Истина;
		
	КонецЕсли;
	
	ЭтаФорма.ОтключитьОбработчикОжидания("ОбновлениеИнформацииОСинхронизации");
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьСинхронизациюСБитрикс24НаСервере(ПараметрыСинхронизации)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Выполнение синхронизации с Битрикс24'");
	
	Результат = ДлительныеОперации.ВыполнитьВФоне("Б24_СинхронизацияКлиентСервер.ВыполнитьСинхронизациюПоФоновомуЗаданию", ПараметрыСинхронизации, ПараметрыВыполнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура НаписатьВТехподдержку(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОписаниеОшибки", ОписаниеОшибки);	
	ПараметрыФормы.Вставить("Протокол"		, Протокол);	
	ОткрытьФорму("ОбщаяФорма.Б24_НаписатьТикетВТехподдержку", ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
