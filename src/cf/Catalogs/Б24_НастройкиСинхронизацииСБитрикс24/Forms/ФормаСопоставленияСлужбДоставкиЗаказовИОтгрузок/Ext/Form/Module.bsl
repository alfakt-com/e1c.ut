
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновлениеЭлементовФормы();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ Параметры.Свойство("НастройкаСинхронизации") тогда
		Возврат;	
	КонецЕсли;
	
	НастройкаСинхронизации = Параметры.НастройкаСинхронизации;	
	ТипИсточника 			 = Параметры.ТипИсточника;
		
	НастройкиОбмена = НастройкаСинхронизации.НастройкиСинхронизации.Получить();
	
	НастройкиСинхронизацииЗаказов = НастройкиОбмена.НастройкиСинхронизацииЗаказов;
	
	Если НастройкиСинхронизацииЗаказов.Свойство("ИнформацияОДоставках") тогда
		
		ИнформацияОДоставках = НастройкиСинхронизацииЗаказов.ИнформацияОДоставках;
		
		ИсточникСлужбДоставкиЗаказов 	= ИнформацияОДоставках.ИсточникСлужбДоставкиЗаказов;
		ИсточникСлужбДоставкиОтгрузок 	= ИнформацияОДоставках.ИсточникСлужбДоставкиОтгрузок;
		
		СвойствоЗаказа 		= ИнформацияОДоставках.СвойствоЗаказа;
		СвойствоОтгрузки 	= ИнформацияОДоставках.СвойствоОтгрузки;
		
		СоответствияСЗначениямиСвойствЗаказа.Загрузить(ИнформацияОДоставках.СоответствияСЗначениямиСвойствЗаказа);
		СоответствияСпособовДоставкиЗаказа.Загрузить(ИнформацияОДоставках.СоответствияСпособовДоставкиЗаказа);   
		СоответствияСЗначенямиСвойствОтгрузки.Загрузить(ИнформацияОДоставках.СоответствияСЗначенямиСвойствОтгрузки);  
		
	Иначе
		ИсточникСлужбДоставкиЗаказов 	= "СпособыДоставкиЗаказов";
		ИсточникСлужбДоставкиОтгрузок 	= "СвойствоОтгрузок";
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
		
	Если Модифицированность И НЕ НужноЗакрытьОкно тогда
		Отказ = Истина; 
		
		Если ЗавершениеРаботы = Истина Тогда 
			ТекстПредупреждения = "Настройки по доставкам не будут сохранены. Закрыть?"; 
		Иначе
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОЗакрытииОкна", ЭтаФорма, Параметры);
			ПоказатьВопрос(Оповещение, "Настройки были изменены. Сохранить изменения перед закрытием?", РежимДиалогаВопрос.ДаНетОтмена, 0);
		КонецЕсли;
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаОЗакрытииОкна(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда		
		Если (ТипИсточника = "Заказ" И ИсточникСлужбДоставкиЗаказов = "СвойствоЗаказов" И НЕ ЗначениеЗаполнено(СвойствоЗаказа))
		ИЛИ (ТипИсточника = "Отгрузка" И ИсточникСлужбДоставкиОтгрузок = "СвойствоОтгрузок" И НЕ ЗначениеЗаполнено(СвойствоОтгрузки))	тогда
			ПоказатьПредупреждение(,"Не указано свойство заказов или отгрузок. Запись настроек невозможна");
		Иначе		
			НужноЗакрытьОкно = Истина;
			СохранениеНастроек();
        		Закрыть();
       		 КонецЕсли;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет тогда
		НужноЗакрытьОкно = Истина;
		Закрыть();
    КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	Если (ТипИсточника = "Заказ" И ИсточникСлужбДоставкиЗаказов = "СвойствоЗаказов" И НЕ ЗначениеЗаполнено(СвойствоЗаказа))
	ИЛИ (ТипИсточника = "Отгрузка" И ИсточникСлужбДоставкиОтгрузок = "СвойствоОтгрузок" И НЕ ЗначениеЗаполнено(СвойствоОтгрузки))	тогда
		ПоказатьПредупреждение(,"Не указано свойство счета. Запись настроек невозможна");
	Иначе
		СохранениеНастроек();
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ИсточникСлужбДоставкиЗаказаПриИзменении(Элемент)
	ОбновлениеЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ИсточникСлужбДоставкиОтгрузокПриИзменении(Элемент)
	ОбновлениеЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСлужбыДоставки(Команда)
		
	ОбщиеНастройки =  Б24_СинхронизацияКлиентСервер.СформироватьБазовуюСтруктуруНастроек(НастройкаСинхронизации);  
	
	Если ОбщиеНастройки = Неопределено тогда
		Возврат;
	КонецЕсли;
	                                                                                             
	ОбщиеНастройки.Измерение2 = "Получение списка статусов заказов.";
	
	ТелоHTTPЗапроса = "";	
	СтруктураОтвета = Б24_RestApiВызовСервера.ОтправкаДанныхНаПортал(ОбщиеНастройки, "/rest/sale.deliveryservices.getactivelist", ТелоHTTPЗапроса); 
	
	Если СтруктураОтвета <> Неопределено тогда
		
		result = СтруктураОтвета.Получить("result");
		
		Если result <> Неопределено тогда
			
			deliveryServices =  result.Получить("deliveryServices");

			Если deliveryServices <> Неопределено тогда
				
				мТаблицы = Новый Массив;
				мТаблицы.Добавить(СоответствияСЗначениямиСвойствЗаказа);
				мТаблицы.Добавить(СоответствияСЗначенямиСвойствОтгрузки);
				мТаблицы.Добавить(СоответствияСпособовДоставкиЗаказа);
				
				Для Каждого ТекЭлемент из deliveryServices Цикл 
						
					//НазваниеСлужбы 	= ТекЭлемент.Получить("name");
					//ИдСлужбы 			= Формат(ТекЭлемент.Получить("id"),"ЧГ=0");
					
					НазваниеСлужбы 		= ТекЭлемент.Получить("name");
					ИдСлужбы 			= Формат(ТекЭлемент.Получить("id"),"ЧГ=0");
					
					Для Каждого ТекТаблица из мТаблицы Цикл

						НайденныеСтроки = ТекТаблица.НайтиСтроки(Новый Структура("ИдСлужбы", ИдСлужбы));

						Если НайденныеСтроки.количество() = 0 тогда
							НоваяЗапись = ТекТаблица.Добавить();
							НоваяЗапись.ИдСлужбы			= ИдСлужбы;
							НоваяЗапись.НазваниеСлужбы 		= НазваниеСлужбы;
						Иначе
							Для Каждого ТекСтрокаТаблицы из ТекТаблица Цикл
								Если ТекСтрокаТаблицы.ИдСлужбы 		= ИдСлужбы тогда
									ТекСтрокаТаблицы.НазваниеСлужбы = НазваниеСлужбы; 
									Прервать;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли; 						
					КонецЦикла;
					
				КонецЦикла;

			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСлужбыДоставкиОтгрузки(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти


#Область Прочее

&НаСервере
Процедура СохранениеНастроек()

	НастройкиОбмена = НастройкаСинхронизации.НастройкиСинхронизации.Получить();
	
	Если НЕ НастройкиОбмена.Свойство("НастройкиСинхронизацииЗаказов") тогда
		СтруктураНастроек = Новый Структура;	
	Иначе
		СтруктураНастроек = НастройкиОбмена.НастройкиСинхронизацииЗаказов;	
	КонецЕсли;
	
	СтруктураИнформацииОСтатусах = Новый Структура;
	СтруктураИнформацииОСтатусах.Вставить("ИсточникСлужбДоставкиЗаказов"	, ИсточникСлужбДоставкиЗаказов);
	СтруктураИнформацииОСтатусах.Вставить("ИсточникСлужбДоставкиОтгрузок"	, ИсточникСлужбДоставкиОтгрузок);
	
	СтруктураИнформацииОСтатусах.Вставить("СвойствоЗаказа"		, СвойствоЗаказа);
	СтруктураИнформацииОСтатусах.Вставить("СвойствоОтгрузки"	, СвойствоОтгрузки);		

	СтруктураИнформацииОСтатусах.Вставить("СоответствияСЗначениямиСвойствЗаказа"	, СоответствияСЗначениямиСвойствЗаказа.Выгрузить());
	СтруктураИнформацииОСтатусах.Вставить("СоответствияСЗначенямиСвойствОтгрузки"	, СоответствияСЗначенямиСвойствОтгрузки.Выгрузить());
	СтруктураИнформацииОСтатусах.Вставить("СоответствияСпособовДоставкиЗаказа"		, СоответствияСпособовДоставкиЗаказа.Выгрузить());
	
	Справочники.Б24_НастройкиСинхронизацииСБитрикс24.ДобавитьНастройкуВСтруктуру(СтруктураНастроек, "ИнформацияОДоставках"	, СтруктураИнформацииОСтатусах);
			
	Если НЕ НастройкиОбмена.Свойство("НастройкиСинхронизацииЗаказов") тогда
		НастройкиОбмена.Вставить("НастройкиСинхронизацииЗаказов", СтруктураНастроек); 	
	Иначе
		НастройкиОбмена.НастройкиСинхронизацииЗаказов = СтруктураНастроек;
	КонецЕсли;
	
	ТекущаяНастройкаСинхронизации = НастройкаСинхронизации.ПолучитьОбъект();
	ТекущаяНастройкаСинхронизации.НастройкиСинхронизации = Новый ХранилищеЗначения(НастройкиОбмена);
	ТекущаяНастройкаСинхронизации.Записать();	
	
	ОбновитьПовторноИспользуемыеЗначения();	
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеЭлементовФормы()

	Если ТипИсточника = "Заказ" тогда
		
		Элементы.СтраницыТипыИсточников.ТекущаяСтраница = Элементы.Заказы;		
	
		Если ИсточникСлужбДоставкиЗаказов = "СвойствоЗаказов" тогда			
			Элементы.СтраницыЗаказ.ТекущаяСтраница = Элементы.СтраницаСвойствоЗаказа;			
		ИначеЕсли ИсточникСлужбДоставкиЗаказов = "СпособыДоставкиЗаказов" тогда 
			Элементы.СтраницыЗаказ.ТекущаяСтраница = Элементы.СтраницаСпособыДоставкиЗаказа;
		КонецЕсли;
		
	ИначеЕсли ТипИсточника = "Отгрузка" тогда
		
		Элементы.СтраницыТипыИсточников.ТекущаяСтраница = Элементы.Отгрузки;		

		Если ИсточникСлужбДоставкиОтгрузок = "СвойствоОтгрузок" тогда			
			Элементы.СтраницыОтгрузка.ТекущаяСтраница = Элементы.СтраницаСвойствоОтгрузки;			
		КонецЕсли;
			
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
