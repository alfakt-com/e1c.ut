
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Возврат при получении формы для анализа.
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
		
	ВосстановитьНастройки(Параметры);
	
	НастроитьФорму(Параметры);
	
	Если ОформляемыеДокументы = "ТолькоПередачи" Тогда
		НавигационнаяСсылка = "e1cib/command/Обработка.ЖурналДокументовИнтеркампани.Команда.ПередачиКОформлению";
	КонецЕсли;	
	
	ПоляШапки = Новый ФиксированнаяСтруктура(ЗапасыСервер.ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций());
	
	Элементы.ДекорацияЕстьЛишниеРезервы.Видимость          = Ложь;	
	Элементы.ДекорацияЕстьОшибкаПереносаРезервов.Видимость = Ложь;	
	Элементы.ДекорацияОформитьПередачи.Видимость           = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		СохранитьНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПередачаТоваровМеждуОрганизациями"
		Тогда
		
		ЗаполнитьКОформлениюЗаПериод();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьКОформлениюЗаПериод();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	Период.ДатаНачала    = НачалоМесяца(Период.ДатаНачала);
	Период.ДатаОкончания = ?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецМесяца(Период.ДатаОкончания), Период.ДатаОкончания);
	
	Если Период.ДатаНачала > Период.ДатаОкончания
		И ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru = 'Дата начала периода не может быть больше даты окончания периода'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Период");
		
		Период.ДатаОкончания = КонецМесяца(Период.ДатаНачала);
	КонецЕсли;
	
	ЗаполнитьКОформлениюЗаПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПриИзменении(Элемент)
	
	ЗаполнитьКОформлениюЗаПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	ЗаполнитьКОформлениюЗаПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ЗаполнитьКОформлениюЗаПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЕстьОшибкаПереносаРезервовОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ЗапускатьНеВФоне", Истина);
	ПараметрыОтбора.Вставить("ДатаНачала", ВремяНачалаПереноса);
	ПараметрыОтбора.Вставить("СобытиеЖурналаРегистрации", ИмяСобытияПереносаРезервов());
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ПараметрыОтбора);

КонецПроцедуры

&НаКлиенте
Процедура СмТакжеВРаботеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиСмТакжеПерейти(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПерейтиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	ОбработкаНавигационнойСсылкиСмТакжеПерейти(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры


&НаКлиенте
Процедура ДекорацияОформитьПередачиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыПередач = Новый Структура;
	ПараметрыФормыПередач.Вставить("КлючНазначенияИспользования", "ДокументыИнтеркампани");
	
	ОтборыФормыСписка = Новый Структура;
	ОтборыФормыСписка.Вставить("Организация", Получатель);
	ОтборыФормыСписка.Вставить("Склад", Склад);
		
	ПараметрыФормыПередач.Вставить("ОтборыФормыСписка", ОтборыФормыСписка);
	
	ОткрытьФорму("Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоПередачиВыкуп",
				ПараметрыФормыПередач,
				,
				"ДокументыИнтеркампани");

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЕстьЛишниеРезервыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПеренестиРезервы();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОформитьДокументЗаПериод(Команда)
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
	"Обработка.ЖурналДокументовИнтеркампани.РабочееМестоПередачиВыкуп.Команда.ОформитьДокументЗаПериод");
	
	Строка = Элементы.КОформлениюЗаПериод.ТекущиеДанные;
	
	Если Строка <> Неопределено Тогда
		
		СтруктураПолейШапки = Новый Структура(ПоляШапки);
		
		ЗаполнитьЗначенияСвойств(СтруктураПолейШапки, Строка);
		
		Если ОформляемыеДокументы = "ТолькоПередачи" Тогда
			ИмяФормыОткрытия = "Документ.ПередачаТоваровМеждуОрганизациями.ФормаОбъекта";
		КонецЕсли;
		
		Основание = Новый Структура;
		Основание.Вставить("ПоляШапки", СтруктураПолейШапки);
		Основание.Вставить("ЗаполнятьПоРезервамТоваровОрганизаций");
		
		СтруктураПараметры = Новый Структура("Основание", Основание);
		
		ОткрытьФорму(ИмяФормыОткрытия, СтруктураПараметры, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьКОформлениюЗаПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРезервы(Команда)
	
	СвернутьРезервыСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКОформлениюЗаПериод

&НаКлиенте
Процедура КОформлениюЗаПериодПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПеренестиРезервы

&НаКлиенте
Процедура ПеренестиРезервы()		
	
	Элементы.ДекорацияЕстьЛишниеРезервы.Видимость = Ложь;
	
	ФоновоеЗадание = ПеренестиРезервыСервер();
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания = Истина;
	Обработчик = Новый ОписаниеОповещения("ПослеЗаполненияКОформлениюЗаПериод", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПеренестиРезервыСервер()
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru = 'Перенос резервов товаров организаций'");
	ПараметрыВыполненияВФоне.ЗапуститьВФоне = Истина;
	
	ФоновоеЗадание = ДлительныеОперации.ВыполнитьВФоне("Обработки.ЖурналДокументовИнтеркампани.РаспределитьРезервыПоПериодам",
		ПараметрыЗаполненияКОформлениюЗаПериод(), ПараметрыВыполненияВФоне);
		
	ВремяНачалаПереноса = ТекущаяДатаСеанса();
		
	Возврат ФоновоеЗадание;
	
КонецФункции

#КонецОбласти


#Область ЗаполнитьКОформлениюЗаПериод

&НаКлиенте
Процедура ЗаполнитьКОформлениюЗаПериод()		
	
	Элементы.ДекорацияЕстьЛишниеРезервы.Видимость = Ложь;
	Элементы.ДекорацияЕстьОшибкаПереносаРезервов.Видимость = Ложь;
	
	ФоновоеЗадание = ЗаполнитьКОформлениюЗаПериодСервер();
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания = Истина;
	Обработчик = Новый ОписаниеОповещения("ПослеЗаполненияКОформлениюЗаПериод", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьКОформлениюЗаПериодСервер()
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НСтр("ru = 'Перенос резервов товаров организаций'");
	
	ВремяНачалаПереноса = ТекущаяДатаСеанса();
	
	ФоновоеЗадание = ДлительныеОперации.ВыполнитьВФоне("Обработки.ЖурналДокументовИнтеркампани.ЗаполнитьКОформлениюЗаПериод",
		ПараметрыЗаполненияКОформлениюЗаПериод(), ПараметрыВыполненияВФоне);
		
	Возврат ФоновоеЗадание;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаполненияКОформлениюЗаПериод(ФоновоеЗадание, ДополнительныеПараметры) Экспорт
	
	Если ФоновоеЗадание <> Неопределено 
		И ФоновоеЗадание.Статус = "Выполнено" Тогда
	
		Если ЭтоАдресВременногоХранилища(ФоновоеЗадание.АдресРезультата) Тогда
			ЗагрузитьКОформлениюЗаПериод(ФоновоеЗадание.АдресРезультата);
		КонецЕсли;
		
	Иначе
		Если ФоновоеЗадание <> Неопределено Тогда
			ОписаниеОшибки = НСтр("ru = 'Не удалось закончить выполнения задания по причине: %Причина%'");
			ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "%Причина%",  ФоновоеЗадание.ПодробноеПредставлениеОшибки);
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
		КОформлениюЗаПериод.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКОформлениюЗаПериод(АдресВоВременномХранилище)
	
	Результат = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище); 
	
	Если Результат.КОформлениюЗаПериод <> Неопределено Тогда  
		КОформлениюЗаПериод.Загрузить(Результат.КОформлениюЗаПериод);
	Иначе
		КОформлениюЗаПериод.Очистить();
	КонецЕсли;
	
	Элементы.ДекорацияЕстьЛишниеРезервы.Видимость          = Результат.ЛишниеРезервы = "ЕстьЛишниеРезервы";	
	Элементы.ДекорацияЕстьОшибкаПереносаРезервов.Видимость = Результат.ЛишниеРезервы = "Ошибка";	
	Элементы.ДекорацияОформитьПередачи.Видимость           = Результат.ЕстьТоварыКОформлениюПередачПередВыкупом;
	
КонецПроцедуры

Функция ПараметрыЗаполненияКОформлениюЗаПериод()
	
	ПараметрыЗаполнения = Новый Структура;
	
	ПараметрыЗаполнения.Вставить("ОформлятьПередачи", ОформляемыеДокументы = "ТолькоПередачи"); 
	ПараметрыЗаполнения.Вставить("ОформлятьВыкупы",   ОформляемыеДокументы = "ТолькоВыкупы"); 
	ПараметрыЗаполнения.Вставить("Период",            Период);
	ПараметрыЗаполнения.Вставить("Отправитель",       Отправитель);
	ПараметрыЗаполнения.Вставить("Получатель",        Получатель);
	ПараметрыЗаполнения.Вставить("Склад",             Склад);
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "КОформлениюЗаПериод.Период",
		"КОформлениюЗаПериодПериод");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылкиСмТакжеПерейти(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОтборыФормыСписка = Новый Структура;
	ОтборыФормыСписка.Вставить("Склад", Склад);
	
	ПараметрыЖурнала = Новый Структура;
	
	Если ОформляемыеДокументы = "ТолькоПередачи" Тогда
		ОтборыФормыСписка.Вставить("Организация", Отправитель);
		
		ПараметрыЖурнала.Вставить("КлючНазначенияИспользования", "ПередачаТоваровМеждуОрганизациями");
	КонецЕсли;
	
	ПараметрыЖурнала.Вставить("СтруктураБыстрогоОтбора", ОтборыФормыСписка);
	
	ОткрытьФорму(НавигационнаяСсылкаФорматированнойСтроки, ПараметрыЖурнала);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция КлючНазначенияФормыПоУмолчанию()
	
	Возврат "ДокументыИнтеркампани";
	
КонецФункции

&НаСервере
Процедура ВосстановитьНастройки(Параметры)
	Если Параметры.Свойство("КлючНазначенияИспользования")
		И ЗначениеЗаполнено(Параметры.КлючНазначенияИспользования) Тогда
		
		КлючНазначенияИспользования = Параметры.КлючНазначенияИспользования;
		
	Иначе
		КлючНазначенияИспользования = КлючНазначенияФормыПоУмолчанию();
	КонецЕсли;
	
	ОформлениеПередач = КлючНазначенияИспользования = КлючНазначенияФормыПоУмолчанию();
	
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		ФормаОткрытаПоГиперссылке = Истина;
		
		Если ОформлениеПередач Тогда
			Получатель  = Параметры.Организация;
			Отправитель = Параметры.Организация;
		Иначе
			Получатель = Параметры.Организация;
		КонецЕсли;
		
		ДатаНачала     = НачалоМесяца(Параметры.ПериодРегистрации);
		ДатаОконачания = КонецМесяца(Параметры.ПериодРегистрации);
		
		Период.ДатаНачала    = ДатаНачала;
		Период.ДатаОкончания = ДатаОконачания;
		
	ИначеЕсли Параметры.Свойство("ОтборыФормыСписка") Тогда
		
		ФормаОткрытаПоГиперссылке = Истина;
		ОтборыФормыСписка = Параметры.ОтборыФормыСписка;
		
		Если ОформлениеПередач Тогда
			Отправитель = ОтборыФормыСписка.Организация;
		Иначе
			Получатель = ОтборыФормыСписка.Организация;
		КонецЕсли;
		
		Склад = ОтборыФормыСписка.Склад;
		
	Иначе
		
		ФормаОткрытаПоГиперссылке = Ложь;
		
		КлючОбъекта = "Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоПередачиВыкуп";
		Настройки   = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(КлючОбъекта, КлючНазначенияИспользования);
		
		Если Настройки <> Неопределено Тогда
			Период               = Настройки.Период;
			Отправитель          = Настройки.Отправитель;
			Получатель           = Настройки.Получатель;
			Склад                = Настройки.Склад;
			ОформляемыеДокументы = Настройки.ОформляемыеДокументы;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОформляемыеДокументы) Тогда
		ОформляемыеДокументы = ?(ОформлениеПередач, "ТолькоПередачи", "ТолькоВыкупы");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму(Параметры)
	
	ПараметрыФормирования = Новый Структура;
	
	МассивМенеджеровРасчетаСмТакжеВРаботе = Новый Массив();
	
	ИспользоватьНесколькоСкладов = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	
	Если ОформляемыеДокументы = "ТолькоПередачи" Тогда
		
		Заголовок = НСтр("ru = 'Передачи товаров к оформлению'");
		
		Отправитель = ?(ЗначениеЗаполнено(Отправитель), Отправитель, Справочники.Организации.ПустаяСсылка());
		Склад = ?(ЗначениеЗаполнено(Склад), Склад, Справочники.Склады.ПустаяСсылка());
		
		Элементы.Склад.ВыбиратьТип = Ложь;
		                                
		Элементы.Склад.Видимость                         = ИспользоватьНесколькоСкладов;
		Элементы.КОформлениюЗаПериодСклад.Видимость      = ИспользоватьНесколькоСкладов;
		Элементы.КОформлениюЗаПериодКонтрагент.Видимость = Ложь;
		Элементы.КОформлениюЗаПериодНалогообложениеНДС.Видимость = Истина;
		
		ПараметрыФормирования.Вставить("КлючНазначенияИспользования", "ПередачаТоваровМеждуОрганизациями");
		МассивМенеджеровРасчетаСмТакжеВРаботе.Добавить("Обработка.ЖурналДокументовИнтеркампани");
		
	Иначе
		
		Заголовок = НСтр("ru = 'Выкупы товаров к оформлению'");
		
		Отправитель = ?(ЗначениеЗаполнено(Отправитель), Отправитель, Справочники.Партнеры.ПустаяСсылка());
		
		ПараметрВыбора = Новый ПараметрВыбора("Отбор.Поставщик", Истина);
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ПараметрВыбора);
		
		Элементы.Отправитель.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
		
		ЗаголовокПолучатель = НСтр("ru = 'Организация'");
		Элементы.Получатель.Заголовок                    = ЗаголовокПолучатель;
		Элементы.КОформлениюЗаПериодПолучатель.Заголовок = ЗаголовокПолучатель;
		
		ЗаголовокСклада = НСтр("ru = 'Место хранения'");                       
		Элементы.Склад.Заголовок                    = ЗаголовокСклада;
		Элементы.КОформлениюЗаПериодСклад.Заголовок = ЗаголовокСклада;
				
		Элементы.КОформлениюЗаПериодКонтрагент.Видимость         = Истина;
		Элементы.КОформлениюЗаПериодНалогообложениеНДС.Видимость = Ложь;
		
		ПараметрыФормирования.Вставить("КлючНазначенияИспользования", "ВыкупПринятыхНаХранениеТоваров");
		МассивМенеджеровРасчетаСмТакжеВРаботе.Добавить("Обработка.ЖурналДокументовЗакупки");
		
	КонецЕсли;
	
	СмТакжеВРаботе = ОбщегоНазначенияУТ.СформироватьГиперссылкуСмТакжеВРаботе(МассивМенеджеровРасчетаСмТакжеВРаботе, ПараметрыФормирования);
	Элементы.СмТакжеВРаботе.Видимость = ЗначениеЗаполнено(СмТакжеВРаботе);
	
	МассивМенеджеровРасчетаСмТакжеВРаботе = Новый Массив;
	МассивМенеджеровРасчетаСмТакжеВРаботе.Добавить("Обработка.ФормированиеПередачТоваровМеждуОрганизациямиИВыкупов");
	
	СсылкаПерейти = ОбщегоНазначенияУТ.СформироватьГиперссылкуСмТакжеВРаботе(МассивМенеджеровРасчетаСмТакжеВРаботе, ПараметрыФормирования, НСтр("ru = 'Перейти:'")); 
	Элементы.СсылкаПерейти.Видимость = ЗначениеЗаполнено(СсылкаПерейти);
	
	Элементы.КОформлениюПоМесяцамСвернутьРезервы.Видимость = ОбщегоНазначенияУТ.РежимОтладки();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	Если ФормаОткрытаПоГиперссылке Тогда
		Возврат;
	КонецЕсли;
	
	КлючОбъекта = "Обработка.ЖурналДокументовИнтеркампани.Форма.РабочееМестоПередачиВыкуп";
	ИменаСохраняемыхРеквизитов = "Период,Отправитель,Получатель,Склад,ОформляемыеДокументы";
	
	Настройки = Новый Структура(ИменаСохраняемыхРеквизитов);
	ЗаполнитьЗначенияСвойств(Настройки, ЭтаФорма);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(КлючОбъекта, КлючНазначенияИспользования, Настройки);
	
КонецПроцедуры

&НаСервере
Процедура СвернутьРезервыСервер()
	
	РегистрыНакопления.РезервыТоваровОрганизаций.ВыполнитьСверткуРегистраРезервыТоваровОрганизаций();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяСобытияПереносаРезервов()
	
	Возврат Обработки.ЖурналДокументовИнтеркампани.ИмяСобытияПереносаРезервов();
	
КонецФункции

#КонецОбласти
