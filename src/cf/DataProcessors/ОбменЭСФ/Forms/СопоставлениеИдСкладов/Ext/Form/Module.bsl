#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокОрганизаций();
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> ВСКлиентСерверПереопределяемый.ПолучитьПустуюСсылкуОрганизации() Тогда
		Элементы.ТаблицаСкладов.ОтборСтрок = Новый ФиксированнаяСтруктура("Организация", ВыбранноеЗначение) ;
	Иначе
		Элементы.ТаблицаСкладов.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииИспользоватьПриИзменении(Элемент)
	
	ЗаполнитьСпискиОтборыПоВыбраннымОрганизациям();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораПоляОтбораПоОрганизации()
	
	Элементы.Организация.СписокВыбора.Очистить();
	ВыбранныеОрганизации = ПолучитьВыбранныеОрганизации(Организации);
	Элементы.Организация.СписокВыбора.Добавить(ВСКлиентСерверПереопределяемый.ПолучитьПустуюСсылкуОрганизации(), НСтр("ru='<Все организации>'"));
	
	Для Индекс = 0 По ВыбранныеОрганизации.Количество()-1 Цикл
		Элементы.Организация.СписокВыбора.Добавить(ВыбранныеОрганизации[Индекс]);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораПоляОрганизацииТаблицыСкладов()
	
	Элементы.ТаблицаОрганизация.СписокВыбора.Очистить();
	ВыбранныеОрганизации = ПолучитьВыбранныеОрганизации(Организации);
	Для Индекс = 0 По ВыбранныеОрганизации.Количество()-1 Цикл
		Элементы.ТаблицаОрганизация.СписокВыбора.Добавить(ВыбранныеОрганизации[Индекс]);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СопоставитьСкладыДляПустыхЭлементов(Команда)
	Если ТаблицаСкладов.Количество() = 0 Тогда
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru='В таблице складов нет ни одного склада.'"));
	Иначе
		СопоставитьСклады(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СопоставитьСкладыДляВсехЭлементов(Команда)
	
	ВопросПередСопоставлением(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередСопоставлением(ПропускатьЗаполненные = Ложь)
	
	Если ТаблицаСкладов.Количество() = 0 Тогда
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru='В таблице складов нет ни одного склада.'"));
	Иначе
		ПродолжениеСопоставления = Новый ОписаниеОповещения("ПродолжениеСопоставленияСкладовПослеВопроса", ЭтаФорма,ПропускатьЗаполненные);
		ПоказатьВопрос(ПродолжениеСопоставления, "Вы собираетесь произвести сопоставление для всех складов, включая те, для которых уже выбраны виртуальные склады. Продолжить?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжениеСопоставленияСкладовПослеВопроса(РезультатВопроса, ПропускатьЗаполненные) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СопоставитьСклады(ПропускатьЗаполненные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьТаблицуСкладовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуСкладовНаСервере()
	
	Для Каждого Строка Из ТаблицаСкладов Цикл
		Строка.ВиртуальныйСклад = Справочники.ВиртуальныеСклады.ПустаяСсылка();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеПометкиПоОрганизациям(Команда)
	УстановитьСнятьВсеПометкиПоОрганизациям(Истина);
	ЗаполнитьСпискиОтборыПоВыбраннымОрганизациям();
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеПометкиПоОрганизациям(Команда)
	УстановитьСнятьВсеПометкиПоОрганизациям(Ложь);	
	ЗаполнитьСпискиОтборыПоВыбраннымОрганизациям();
КонецПроцедуры

Процедура УстановитьСнятьВсеПометкиПоОрганизациям(Отметка)
	Для Каждого Строка Из Организации Цикл
		Строка.Использовать = Отметка;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФукнции

//Получение складов из ВС
&НаКлиенте
Процедура ПолучитьСклады(Команда)
	
	Если ПроверитьВыборОрганизацииПользователем() Тогда
		ПолучитьСкладыВС();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСкладыВС()
	
	Контейнер = ВСКлиентСервер.КонтейнерМетодов();
	
	Если Не Контейнер.КриптопровайдерПодключается() Тогда
		Возврат;
	КонецЕсли;
	ЕстьНесколькоПрофилейДляОрганизации = Ложь;
	ПрофилиИСЭСФПоВыбраннымОрганизациям = ПолучитьПрофилиИСЭСФПоВыбраннымОрганизациям();
	МассивПрофилейИСЭСФ = Новый Массив;
	Для Каждого Элемент Из ПрофилиИСЭСФПоВыбраннымОрганизациям Цикл
		Если Элемент.Значение.Количество() = 1 Тогда
			МассивПрофилейИСЭСФ.Добавить(Элемент.Значение[0]);		
		Иначе
			ЕстьНесколькоПрофилейДляОрганизации = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("МассивПрофилейИСЭСФ", МассивПрофилейИСЭСФ);
	
	
	Если Не ЕстьНесколькоПрофилейДляОрганизации Тогда
		МассивПользователейИСЭСФБезПароля = ЭСФВызовСервера.ПользователиИСЭСФБезПароляАутентификации(МассивПрофилейИСЭСФ);
		ДополнительныеПараметры.Вставить("МассивПользователейИСЭСФБезПароля", МассивПользователейИСЭСФБезПароля);
	КонецЕсли;
	ПолучитьСкладыИзИСВС = Новый ОписаниеОповещения("ПолучитьСкладыИзИСВС", ЭтаФорма, ДополнительныеПараметры);
	ОбновитьДокументыВыборДанныхПрофилейИСЭСФ = Новый ОписаниеОповещения("ПолучитьСкладыЗавершение", ЭтаФорма, ДополнительныеПараметры);	
	
	Если ЕстьНесколькоПрофилейДляОрганизации Тогда
		
		ПараметрыФормы = Новый Структура("СписокСтруктурныхЕдиниц, ВызвавшийМодуль", ПрофилиИСЭСФПоВыбраннымОрганизациям, ПредопределенноеЗначение("Перечисление.МодулиЭСФ.ВС"));
		ЭСФКлиент.ОткрытьФормуВводаДанныхИСЭСФ(ПолучитьСкладыИзИСВС, ПараметрыФормы);	

	Иначе
		ЭСФКлиент.ПаролиАутентификации(ОбновитьДокументыВыборДанныхПрофилейИСЭСФ, МассивПользователейИСЭСФБезПароля, ПредопределенноеЗначение("Перечисление.МодулиЭСФ.ВС"));	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСкладыЗавершение(Результат = Неопределено, ДополнительныеПараметры) Экспорт
	
	МассивПрофилейИСЭСФ = ДополнительныеПараметры.МассивПрофилейИСЭСФ;
	Если ДополнительныеПараметры.Свойство("МассивПользователейИСЭСФБезПароля") Тогда
		МассивПользователейИСЭСФБезПароля = ДополнительныеПараметры.МассивПользователейИСЭСФБезПароля;
	КонецЕсли;
		
	Если НЕ Результат = Неопределено Тогда
		
		КоллецияПаролей = Результат;
		МассивДанныхПрофилейИСЭСФ = ДанныеПрофилейДляПолученияСкладовНаСервере(МассивПрофилейИСЭСФ, КоллецияПаролей);
	
	КонецЕсли;

	Если МассивДанныхПрофилейИСЭСФ = Неопределено ИЛИ МассивДанныхПрофилейИСЭСФ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ОчиститьСообщения();
	
	ПолучитьСкладыИзИСВС(МассивДанныхПрофилейИСЭСФ, Неопределено);
		
КонецПроцедуры

&НаСервере  
Процедура ПолучитьСкладыИзИСВС(ДанныеПрофилейИСЭСФ, ДополнительныеПараметры) Экспорт  
	
	Если ДанныеПрофилейИСЭСФ <> Неопределено Тогда	
		ТаблицаСкладов.Очистить();
		Для Каждого Элемент Из ДанныеПрофилейИСЭСФ Цикл
			ДанныеПрофиляИСЭСФ = Неопределено;
			
			Если ТипЗнч(Элемент) = Тип("Структура") Тогда
				ДанныеПрофиляИСЭСФ = Элемент;
				ПарольПрофиляИСЭСФ = ДанныеПрофиляИСЭСФ.ПользовательИСЭСФ.ПарольАутентификации;
			Иначе
				ПрофильИСЭСФ = Элемент.Значение.ПрофильИСЭСФ;
				ПарольПрофиляИСЭСФ = Элемент.Значение.ПарольИСЭСФ;
			КонецЕсли;
			
			Если ДанныеПрофиляИСЭСФ = Неопределено Тогда
				ДанныеПрофиляИСЭСФ = ЭСФСервер.ДанныеПрофиляИСЭСФ(ПрофильИСЭСФ);
			КонецЕсли;
			
			Если ДанныеПрофиляИСЭСФ.ТекущийПарольАутентификации = "" Тогда
				ДанныеПрофиляИСЭСФ.ТекущийПарольАутентификации =  ПарольПрофиляИСЭСФ;
			КонецЕсли;        
			
			Если Не ЗначениеЗаполнено(ДанныеПрофиляИСЭСФ) Тогда
				Возврат;	
			КонецЕсли;
			
			СтруктурнаяЕдиница = ДанныеПрофиляИСЭСФ.СтруктурнаяЕдиница.Ссылка;
			Склады = ВСВызовСервера.ПолучитьСклады(ДанныеПрофиляИСЭСФ);
		    			
			Если Склады <> Неопределено Тогда
				ТекстСообщения = НСтр("ru='Виртуальные склады организации %1 успешно получены.'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, СтруктурнаяЕдиница);
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				СохранитьВиртуальныеСкладыВСправочник(Склады, ДанныеПрофиляИСЭСФ.СтруктурнаяЕдиница.Ссылка);
			Иначе
				ТекстСообщения = НСтр("ru='Не получено ни одного склада для организации %1. Проверьте наличие складов в модуле Виртуальный Склад и настройки профиля ИС ЭСФ.'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, СтруктурнаяЕдиница);
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
			ЗаполнитьСписокПолученныхВиртуальныхСкладов();
			
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеПрофилейДляПолученияСкладовНаСервере(Знач МассивПрофилейИСЭСФ, Знач КоллецияПаролей)
	
	// Создать массив, содержащий данные профилей ИС ЭСФ.
	МассивДанныхПрофилейИСЭСФ = Новый Массив();
	Для Каждого ПрофильИСЭСФ Из МассивПрофилейИСЭСФ Цикл
		ДанныеПрофиляИСЭСФ = ЭСФСервер.ДанныеПрофиляИСЭСФ(ПрофильИСЭСФ);
		МассивДанныхПрофилейИСЭСФ.Добавить(ДанныеПрофиляИСЭСФ);
	КонецЦикла;
	
	// Заполнить пароли, у пользователей, которые не имеют сохраненных паролей. 
	Для Каждого ДанныеПрофиляИСЭСФ Из МассивДанныхПрофилейИСЭСФ Цикл
		Если ПустаяСтрока(ДанныеПрофиляИСЭСФ.ТекущийПарольАутентификации) Тогда
			ДанныеПрофиляИСЭСФ.ТекущийПарольАутентификации = КоллецияПаролей[ДанныеПрофиляИСЭСФ.ПользовательИСЭСФ.Ссылка];	
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивДанныхПрофилейИСЭСФ;
	
КонецФункции

&НаКлиенте
Функция ИндексТекущейСтраницы()
	
	Возврат Элементы.ГруппаШапка.ПодчиненныеЭлементы.Индекс(Элементы.ГруппаШапка.ТекущаяСтраница);
	
КонецФункции

&НаСервере
Процедура ИсключитьОрганизацииБезВиртуальныхСкладов (МассивОрганизаций)
	
	МассивОрганизацийБезСкладовВС = ПолучитьМассивОрганизацийБезВиртуальныхСкладов(МассивОрганизаций);
	
	Для Индекс = 0 По МассивОрганизацийБезСкладовВС.Количество() -1 Цикл
		НайденныйЭлемент = МассивОрганизаций.Найти(МассивОрганизацийБезСкладовВС[Индекс]); 
		Если НайденныйЭлемент <> Неопределено Тогда
			МассивОрганизаций.Удалить(НайденныйЭлемент);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивОрганизацийБезВиртуальныхСкладов(МассивОрганизаций = Неопределено)
	
	Если МассивОрганизаций = Неопределено Тогда
		МассивОрганизаций = ПолучитьВыбранныеОрганизации(Организации);
	КонецЕсли;	
	
	МассивОрганизацийБезСкладов = ВССерверПереопределяемый.ПолучитьМассивОрганизацийБезВиртуальныхСкладов(МассивОрганизаций);
	
	Возврат МассивОрганизацийБезСкладов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВыбранныеОрганизации(Организации)
	
	ПараметрыОтбора = Новый Структура;
	МассивОрганизаций = Новый Массив;	
	
	ПараметрыОтбора.Вставить("Использовать", Истина);
	НайденныеСтроки = Организации.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого Строка из НайденныеСтроки цикл
		МассивОрганизаций.Добавить(Строка.Организация);
	КонецЦикла;
	
	Возврат МассивОрганизаций;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПрофилиИСЭСФПоВыбраннымОрганизациям()
	
	СоответствиеПрофилей = новый Соответствие;
	ТекущийПользователь = ЭСФКлиентСерверПереопределяемый.ТекущийПользователь();	
	Для Каждого Строка из Организации Цикл
		Если Строка.Использовать Тогда
			МассивПрофилейИСЭСФ = ЭСФВызовСервераПовтИсп.ПрофилиИСЭСФ(Строка.Организация,,ТекущийПользователь);

			СоответствиеПрофилей.Вставить(Строка.Организация, МассивПрофилейИСЭСФ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СоответствиеПрофилей;
	
КонецФункции

&НаКлиенте
Функция ПроверитьВыборОрганизацииПользователем()
	
	МассивВыбранныхОрганизаций = ПолучитьВыбранныеОрганизации(Организации);
	Если МассивВыбранныхОрганизаций.Количество() = 0 Тогда
		Предупреждение(НСтр("ru='Выберите одну или несколько организаций для продолжения.'"));
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УдалениеСкладаОприходывания(Склады)
	
	Индекс = 0;
	Для Каждого Склад Из Склады Цикл
		Если Булево(Склад.isPostingGoods) Тогда
			Склады.Удалить(Индекс);	
			Возврат;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиОтборыПоВыбраннымОрганизациям()
	
	ЗаполнитьСписокПолученныхВиртуальныхСкладов();
	ЗаполнитьСписокВыбораПоляОтбораПоОрганизации();
	ЗаполнитьСписокВыбораПоляОрганизацииТаблицыСкладов();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеТаблицыСкладовНаСервере()
	
	ЕстьОшибки = Ложь;
	Для Каждого Строка Из ТаблицаСкладов Цикл
		ИндексСтроки = ТаблицаСкладов.Индекс(Строка);
		ВиртуальныйСкладЗаполнен = ЗначениеЗаполнено(Строка.ВиртуальныйСклад);
		Если НЕ ЗначениеЗаполнено(Строка.Организация) И ВиртуальныйСкладЗаполнен Тогда
			
			Поле = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку("ТаблицаСкладов[%1].Организация", ИндексСтроки);
			
			ТекстСообщения = НСтр("ru='Не заполнено поле организация'");
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения,,Поле);
			
			ЕстьОшибки = Истина;
			
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Строка.Склад) И ВиртуальныйСкладЗаполнен Тогда
			
			Поле = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку("ТаблицаСкладов[%1].Склад", ИндексСтроки);
			
			ТекстСообщения = НСтр("ru='Не заполнено поле склад'");
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения,,Поле);
			
			ЕстьОшибки = Истина;
			
		КонецЕсли;
		Если НЕ ВиртуальныйСкладЗаполнен Тогда
			ЕстьОшибки = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат ЕстьОшибки;
КонецФункции

&НаКлиенте
Процедура СоздатьВСНаОсновеОбычных(Команда)
	
	Если ПроверитьВыборОрганизацииПользователем() Тогда	
		ОписаниеОповещенияПослеЗакрытия = Новый ОписаниеОповещения("ПослеЗакрытияФормыСозданияСкладов", ЭтаФорма);
		ОткрытьФорму("Обработка.ОбменЭСФ.Форма.СозданиеВСизОбычныхСкладов", Новый Структура("ВыбранныеОрганизации", ПолучитьВыбранныеОрганизации(Организации)),,,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещенияПослеЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ПослеЗакрытияФормыСозданияСкладов(Результат, ДополнительныеПараметры) Экспорт
	ЗаполнитьСписокПолученныхВиртуальныхСкладов();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОрганизации

&НаСервере
Процедура ЗаполнитьСписокОрганизаций()
	МассивПрофилейИСЭСФ = ЭСФВызовСервераПовтИсп.ПрофилиИСЭСФ(,,ЭСФКлиентСерверПереопределяемый.ТекущийПользователь());
	ПараметрыОтбора		= Новый Структура;
	Если МассивПрофилейИСЭСФ.Количество() = 0 Тогда
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(НСтр("ru='Для текущего пользователя не настроен профиль ИС ЭСФ. Для получения складов сперва необходимо настроить профиль ИСЭСФ и выбрать организации для работы'"));
		Возврат; 	
	КонецЕсли;
	Для каждого Элемент из МассивПрофилейИСЭСФ цикл
		ПараметрыОтбора.Вставить("Организация", Элемент.СтруктурнаяЕдиница);
		ОрганизацияПрофиля = Элемент.СтруктурнаяЕдиница; 
		Если ЗначениеЗаполнено(ОрганизацияПрофиля) И  Организации.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда
			НоваяСтрока = Организации.Добавить();
			НоваяСтрока.Использовать = Ложь;
			НоваяСтрока.Организация = Элемент.СтруктурнаяЕдиница;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПолученныеСклады

&НаСервере
Процедура ЗаполнитьСписокПолученныхВиртуальныхСкладов()
	
	ИндексВыделеннойОрганизации = Элементы.Организации.ТекущаяСтрока;
	Если ИндексВыделеннойОрганизации <> Неопределено Тогда
		ВыделеннаяОрганизация = Организации.Получить(ИндексВыделеннойОрганизации).Организация;
		ВыбранныеОрганизации = ПолучитьВыбранныеОрганизации(Организации);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВиртуальныеСклады.Ссылка КАК ВиртуальныйСклад,
		|	ВиртуальныеСклады.Организация КАК Организация,
		|	ВиртуальныеСклады.ПризнакОприходования
		|ИЗ
		|	Справочник.ВиртуальныеСклады КАК ВиртуальныеСклады
		|ГДЕ
		|	ВиртуальныеСклады.Организация В(&ВыбранныеОрганизации)
		|ИТОГИ ПО
		|	Организация КАК Организация";
		
		Запрос.УстановитьПараметр("ВыбранныеОрганизации", ВыбранныеОрганизации);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		ЗначениеВРеквизитФормы(ВыборкаДетальныеЗаписи, "ПолученныеВиртуальныеСклады");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВиртуальныеСкладыВСправочник(Склады, ОрганизацияСессии)
		
	СправочникВС = Справочники.ВиртуальныеСклады;	
	Для Каждого Склад Из Склады Цикл
		Если Склад <> Неопределено И Склад.Свойства().Получить("id") <> Неопределено Тогда
			ЭлементСправочника =  СправочникВС.НайтиПоРеквизиту("ИдентификаторСклада",Число(Склад.id));
			Если ЗначениеЗаполнено(ЭлементСправочника) Тогда
								
				Если Не ЭлементСправочника.Наименование = Склад.storeName 
					ИЛИ Не ЭлементСправочника.ПризнакОприходования = Булево(Склад.isPostingGoods) Тогда 
					ЭлементСправочника = ЭлементСправочника.ПолучитьОбъект();
					ЭлементСправочника.Наименование 				= Склад.storeName;
					ЭлементСправочника.ПризнакОприходования 		= Булево(Склад.isPostingGoods);
					ЭлементСправочника.Организация 					= ОрганизацияСессии;
					ЭлементСправочника.Статус		        		= ВСКлиентСервер.СтатусСклада_ИБ(Склад.status);
					Попытка
						ЭлементСправочника.Записать();
					Исключение
					КонецПопытки
				КонецЕсли;
			Иначе
				ЭлементСправочника = СправочникВС.СоздатьЭлемент();
				
				ЭлементСправочника.Организация 					  = ОрганизацияСессии;
				ЭлементСправочника.ИдентификаторСклада 			  = Склад.id;                                                  
				ЭлементСправочника.Наименование 				  = Склад.storeName;
				ЭлементСправочника.ПризнакОприходования 		  = Булево(Склад.isPostingGoods);
				ЭлементСправочника.Статус		        		  = ВСКлиентСервер.СтатусСклада_ИБ(Склад.status);
												
				//ЭлементСправочника.ПризнакПубличногоСклада = Булево(ПолученныйСклад.isPublicStore);
								
				ЭлементСправочника.ПереработкаДавальческогоСырья  = Булево(Склад.isRawMaterials);
				ЭлементСправочника.СкладУСД                       = Булево(Склад.isJointStore);
				
				address = ЭСФСервер.ПолучитьСвойство(Склад, "address", "");			
				Если ЗначениеЗаполнено(address) Тогда
					ЭлементСправочника.Адрес                      = Склад.address;
				КонецЕсли;
				
				ЭлементСправочника.СкладРеорганизуемогоЛица       = Булево(Склад.isInherited);
				ЭлементСправочника.СкладДляЛизинга                = Булево(Склад.isCooperativeStore);
				
				lesseeTin = ЭСФСервер.ПолучитьСвойство(Склад, "lesseeTin", "");			
				Если ЗначениеЗаполнено(lesseeTin) Тогда
					ЭлементСправочника.БИНЛизингополучателя           = Склад.lesseeTin ;
				КонецЕсли;
				
				lesseeContractNumber = ЭСФСервер.ПолучитьСвойство(Склад, "lesseeContractNumber", "");			
				Если ЗначениеЗаполнено(lesseeContractNumber) Тогда
					ЭлементСправочника.НомерДоговораЛизингополучателя = Склад.lesseeContractNumber;
				КонецЕсли;
			
				ЭлементСправочника.ДатаДоговораЛизингополучателя  = ЭСФСервер.ДатаИБ(ЭСФСервер.ПолучитьСвойство(Склад, "lesseeContractDate", "01.01.0001"));
				
				ЭлементСправочника.ТипСклада                      = ВСКлиентСервер.ТипСклада_ИБ(Склад.storeTypeCode);
				ЭлементСправочника.ЯвляетсяСкладомПоУмолчанию     = Булево(Склад.isDefault);
				ЭлементСправочника.ИИНОтветственногоЛица          = Склад.responsiblePersonIin;
		
				Попытка
					ЭлементСправочника.Записать();
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаСкладов

&НаСервере
Процедура ЗаполнитьСклады(ЗаполнятьВсе = Ложь)
	
	ТаблицаСкладов.Очистить();
	МассивОрганизаций = ПолучитьВыбранныеОрганизации(Организации);	
	ИсключитьОрганизацииБезВиртуальныхСкладов(МассивОрганизаций);
	
	ТаблицаСтруктурныхЕдиниц = ВССерверПереопределяемый.ТаблицаСтруктурныхЕдиницДляСопоставления(МассивОрганизаций);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Организации.Организация КАК Организация
	|ПОМЕСТИТЬ ВС_СтруктурныеЕдиницы
	|ИЗ
	|	&ТаблицаСтруктурныхЕдиниц КАК Организации
	|
	|;
	|
	|ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	Организации.Организация КАК Организация,
	|	Склады.Наименование
	|ПОМЕСТИТЬ Склады
	|ИЗ
	|	Справочник.Склады КАК Склады,
	|	ВС_СтруктурныеЕдиницы КАК Организации
	|ГДЕ
	|	Склады.ЭтоГруппа = Ложь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Склады.Склад КАК Склад,
	|	Склады.Организация КАК Организация,
	|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад,
	|	Склады.Наименование
	|ИЗ
	|	Склады КАК Склады
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|		ПО Склады.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
	|			И Склады.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &ЗаполнятьВсе
	|				ТОГДА СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад ЕСТЬ NULL 
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Склад";
	
	Запрос.УстановитьПараметр("ЗаполнятьВсе", ЗаполнятьВсе);
	Запрос.УстановитьПараметр("ВыбранныеОрганизации", МассивОрганизаций);
	Запрос.УстановитьПараметр("ТаблицаСтруктурныхЕдиниц", ТаблицаСтруктурныхЕдиниц);
	
	Склады = Запрос.Выполнить().Выбрать();
	
	Пока Склады.Следующий() Цикл
		
		НоваяСтрока = ТаблицаСкладов.Добавить();	
		НоваяСтрока.Склад =  Склады.Склад;
		НоваяСтрока.Организация = Склады.Организация;
		НоваяСтрока.ВиртуальныйСклад = Склады.ВиртуальныйСклад;
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура СопоставитьСклады(ПропускатьЗаполненные, ВыводитьСообщение = Истина)
	
	МассивОрганизаций = ПолучитьВыбранныеОрганизации(Организации);
	ИсключитьОрганизацииБезВиртуальныхСкладов(МассивОрганизаций);	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаСклады.Склад,
	               |	ТаблицаСклады.Организация,
	               |	ТаблицаСклады.ВиртуальныйСклад
	               |ПОМЕСТИТЬ ВТСклады
	               |ИЗ
	               |	&ТаблицаСклады КАК ТаблицаСклады
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ПропускатьЗаполненные
	               |				ТОГДА ТаблицаСклады.ВиртуальныйСклад = ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТСклады.Склад,
	               |	ВТСклады.Организация,
	               |	ВиртуальныеСклады.Ссылка КАК ВиртуальныйСклад
	               |ИЗ
	               |	ВТСклады КАК ВТСклады
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВиртуальныеСклады КАК ВиртуальныеСклады
	               |		ПО ВТСклады.Склад.Наименование = ВиртуальныеСклады.Наименование
	               |			И ВТСклады.Организация = ВиртуальныеСклады.Организация";


	Запрос.УстановитьПараметр("ТаблицаСклады", ТаблицаСкладов.Выгрузить());
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	Запрос.УстановитьПараметр("ПропускатьЗаполненные", ПропускатьЗаполненные);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КоличествоСопоставленныхСтрок = 0;                                      
	ЕстьПустыеСтроки = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация", ВыборкаДетальныеЗаписи.Организация);
		ПараметрыОтбора.Вставить("Склад", ВыборкаДетальныеЗаписи.Склад);
		НайденныеСтроки = ТаблицаСкладов.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].ВиртуальныйСклад = ВыборкаДетальныеЗаписи.ВиртуальныйСклад;
			Если НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ВиртуальныйСклад) И НЕ ЕстьПустыеСтроки Тогда
				ЕстьПустыеСтроки = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Если ВыводитьСообщение Тогда
		Если ЕстьПустыеСтроки Тогда
			ТекстСообщения = НСтр("ru='Сопоставление проведено успешно. 
			|Некоторые строки не удалось сопоставить, проверьте наименования складов или выберите виртуальные склады вручную'");
		Иначе
			ТекстСообщения = НСтр("ru='Сопоставление проведено успешно.'");
		КонецЕсли;
		ЭСФКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСклады(Команда)
	
	СохранитьСкладыВРегистрНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСкладыВРегистрНаСервере()
	
	Для Каждого Строка Из ТаблицаСкладов Цикл
		Если ЗначениеЗаполнено(Строка.Склад) 
			И ЗначениеЗаполнено(Строка.ВиртуальныйСклад)
			И ЗначениеЗаполнено(Строка.Организация) Тогда
			МенеджерЗаписи = РегистрыСведений.СоответствиеСкладовИВиртуальныхСкладов.СоздатьМенеджерЗаписи();						
			
			МенеджерЗаписи.Организация = Строка.Организация; 
			МенеджерЗаписи.Склад = Строка.Склад; 
			МенеджерЗаписи.ВиртуальныйСклад = Строка.ВиртуальныйСклад;
			МенеджерЗаписи.Записать();
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСкладовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Склад) И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация) Тогда
		ПараметрыОтбора = Новый Структура;
		МассивОрганизаций = Новый Массив;	
		
		ПараметрыОтбора.Вставить("Организация", Элемент.ТекущиеДанные.Организация);
		ПараметрыОтбора.Вставить("Склад", Элемент.ТекущиеДанные.Склад);
		
		НайденныеСтроки = ТаблицаСкладов.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 1 И Не ОтменаРедактирования Тогда
			СообщениеПользователю = "ru = 'Указанное сочетание Организация - Склад уже присутствует в таблице. Пожалуйста, выберите другую организацию или склад.'";
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(НСтр(СообщениеПользователю));
			Отказ = Истина;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Подвал

&НаКлиенте
Процедура Готово(Команда)
	
	ЕстьОшибки = ПроверитьЗаполнениеТаблицыСкладовНаСервере();
	Если ЕстьОшибки Тогда
		ПродолжениеЗавершения = Новый ОписаниеОповещения("ПродолжениеЗавершенияПослеВопроса", ЭтаФорма);
		ПоказатьВопрос(ПродолжениеЗавершения, "В таблице присутствуют строки с незаполненными полями. Строки с незаполненными полями не будут записаны. Продолжить?", РежимДиалогаВопрос.ДаНет);	
	Иначе
		ПродолжениеЗавершенияПослеВопроса(КодВозвратаДиалога.Да);	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПродолжениеЗавершенияПослеВопроса(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Попытка
			СохранитьСкладыВРегистрНаСервере();
			Закрыть();
			ЭСФКлиентСервер.СообщитьПользователю(НСтр("ru='Данные сопоставления складов записаны успешно'"));
		Исключение
			ЭСФКлиентСервер.СообщитьПользователю(НСтр("ru='При записи результата сопоставления складов произошла ошибка'"));
		КонецПопытки;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если ИндексТекущейСтраницы() > 0 Тогда
		
		ПредыдущаяСтраница = Элементы.ГруппаШапка.ПодчиненныеЭлементы.Получить(ИндексТекущейСтраницы() - 1);
		
		Элементы.ГруппаШапка.ТекущаяСтраница = ПредыдущаяСтраница;
		
	КонецЕсли;
	
	ОбновитьПанельКнопокНазадДалееЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ПерейтиНаСледующуюСтраницу = Истина;
	
	Если Элементы.ГруппаШапка.ТекущаяСтраница = Элементы.ПолучениеСкладов Тогда
		Если Организации.Количество() = 0 Тогда
			Предупреждение(НСтр("ru = 'Для текущего пользователя не настроен профиль ИС ЭСФ. Перед получением виртуальных складов необходимо настроить профиль ИСЭСФ и указать организации.'"));	
			ПерейтиНаСледующуюСтраницу = Ложь;		
		ИначеЕсли Не ПроверитьВыборОрганизацииПользователем() Тогда
			ПерейтиНаСледующуюСтраницу = Ложь;	
		КонецЕсли;
		
		ОрганизацииСОтсутствующимиСкладамиВС = ПолучитьМассивОрганизацийБезВиртуальныхСкладов();
		СписокОрганизаций = "";
		Если ОрганизацииСОтсутствующимиСкладамиВС.Количество() > 0 Тогда
			Для Индекс = 0 По ОрганизацииСОтсутствующимиСкладамиВС.Количество() - 1 Цикл
				СписокОрганизаций = СписокОрганизаций + ОрганизацииСОтсутствующимиСкладамиВС[Индекс] + 	", ";	
			КонецЦикла;
			СписокОрганизаций = Сред(СписокОрганизаций, 0, СтрДлина(СписокОрганизаций)-2);
			
			СообщениеПользователю = "ru = 'У организаций %1 отсутствуют виртуальные склады в учетной системе, произведите получение виртуальных складов нажав на кнопку ""Получить виртуальные склады"" либо создайте их самостоятельно.'";
			СообщениеПользователю = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(СообщениеПользователю, СписокОрганизаций);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(НСтр(СообщениеПользователю));
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если ПерейтиНаСледующуюСтраницу Тогда
		
		МаксимальныйИндексСтраницы = Элементы.ГруппаШапка.ПодчиненныеЭлементы.Количество() - 1;
				
		СледующаяСтраница = Элементы.ГруппаШапка.ПодчиненныеЭлементы.Получить(ИндексТекущейСтраницы() + 1);
		
		Если СледующаяСтраница.Имя = "СтраницаКриптография" 
			ИЛИ СледующаяСтраница.Имя = "СтраницаДоступ" 
			ИЛИ СледующаяСтраница.Имя = "СтраницаПользователи" Тогда
			
			Элементы.ГруппаШапка.ТекущаяСтраница = Элементы.СтраницаЗавершение;
			
		Иначе
			
			Если СледующаяСтраница.Имя = "СопоставлениеСкладов" Тогда
				ЗаполнитьСклады(Истина);
				СопоставитьСклады(Истина, Ложь);
			КонецЕсли;
			Элементы.ГруппаШапка.ТекущаяСтраница = СледующаяСтраница;
			
		КонецЕсли;
		
		ОбновитьПанельКнопокНазадДалееЗакрыть();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПанельКнопокНазадДалееЗакрыть()
	
	ИндексТекущейСтраницы = Элементы.ГруппаШапка.ПодчиненныеЭлементы.Индекс(Элементы.ГруппаШапка.ТекущаяСтраница);
	МаксимальныйИндексСтраницы = Элементы.ГруппаШапка.ПодчиненныеЭлементы.Количество() - 1;
	
	Если ИндексТекущейСтраницы = 0 Тогда
		
		Элементы.СтраницыПодвал.ТекущаяСтраница = Элементы.СтраницаДалее;
		Элементы.Далее.КнопкаПоУмолчанию = Истина;
		
	ИначеЕсли ИндексТекущейСтраницы > 0 И ИндексТекущейСтраницы < МаксимальныйИндексСтраницы Тогда
		
		Элементы.СтраницыПодвал.ТекущаяСтраница = Элементы.СтраницаНазадДалее;
		Элементы.Далее2.КнопкаПоУмолчанию = Истина;
		
	Иначе
		
		Элементы.СтраницыПодвал.ТекущаяСтраница = Элементы.СтраницаГотово;	
		Элементы.Готово.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти