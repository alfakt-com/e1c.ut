// Форма используется для
// - Настройки параметров прокси-сервера при выходе в интернет (при обращении к ИС ЭСФ и при обращении к ресурсу для скачивания компоненты криптографии)

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПараметрыПодключения = ЭСФСервер.ПолучитьПараметрыПодключенияКСерверуИСЭСФ();
	
	ПроксиСервер_ВариантИспользования	 = ПараметрыПодключения.ПроксиСервер_ВариантИспользования;
	ПроксиСервер_Пароль					 = ПараметрыПодключения.ПроксиСервер_Пароль;
	ПроксиСервер_Пользователь			 = ПараметрыПодключения.ПроксиСервер_Пользователь;
	ПроксиСервер_Порт					 = ПараметрыПодключения.ПроксиСервер_Порт;
	ПроксиСервер_Сервер					 = ПараметрыПодключения.ПроксиСервер_Сервер;	

	//Параметры подключения к ИС ЭСФ настраиваются в отдельном окне. Но здесь запомним их, чтобы при схранении записать 
	//ранее установленные параметры
	СерверИСЭСФ_HTTPS 					 = ПараметрыПодключения.СерверИСЭСФ_HTTPS;
	СерверИСЭСФ_Адрес					 = ПараметрыПодключения.СерверИСЭСФ_Адрес;	
	СерверИСЭСФ_ПолныйАдрес				 = ПараметрыПодключения.СерверИСЭСФ_ПолныйАдрес;
	СерверИСЭСФ_Порт					 = ПараметрыПодключения.СерверИСЭСФ_Порт;
	СерверИСЭСФ_Ресурс					 = ПараметрыПодключения.СерверИСЭСФ_Ресурс;
	СерверИСЭСФ_Таймаут					 = ПараметрыПодключения.СерверИСЭСФ_Таймаут;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Контейнер = ЭСФКлиентСервер.КонтейнерМетодов();	
	Контейнер.ПриОткрытииФормы(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	УправлениеФормой();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПроксиСервер_ВариантИспользованияПриИзменении(Элемент)
	Если ПроксиСервер_ВариантИспользования <> ЭСФКлиентСервер.ПроксиДругиеНастройки() Тогда
    	ПроксиСервер_Сервер = "";
		ПроксиСервер_Порт = 0;
		ПроксиСервер_Пользователь = "";
		ПроксиСервер_Пароль = "";
	КонецЕсли;
	
	УправлениеФормой();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьНастройкиПодключения();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура УправлениеФормой()
	
	Если ПроксиСервер_ВариантИспользования = ЭСФКлиентСервер.ПроксиДругиеНастройки() Тогда
		ДоступностьПараметровПрокси = Истина;
	Иначе
		ДоступностьПараметровПрокси = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаАдресСервера.Доступность = ДоступностьПараметровПрокси;
	Элементы.ГруппаПользовательПароль.Доступность = ДоступностьПараметровПрокси;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПодключения()
	
	ПараметрыПодключения = ЭСФСервер.ПустыеПараметрыПодключенияКСерверуИСЭСФ();
	
	ПараметрыПодключения.ПроксиСервер_ВариантИспользования	 = ПроксиСервер_ВариантИспользования;
	ПараметрыПодключения.ПроксиСервер_Пароль				 = ПроксиСервер_Пароль;
	ПараметрыПодключения.ПроксиСервер_Пользователь			 = ПроксиСервер_Пользователь;
	ПараметрыПодключения.ПроксиСервер_Порт					 = ПроксиСервер_Порт;
	ПараметрыПодключения.ПроксиСервер_Сервер				 = ПроксиСервер_Сервер;
	
	ПараметрыПодключения.СерверИСЭСФ_HTTPS					 = СерверИСЭСФ_HTTPS;
	ПараметрыПодключения.СерверИСЭСФ_Адрес					 = СерверИСЭСФ_Адрес;
	ПараметрыПодключения.СерверИСЭСФ_ПолныйАдрес			 = СерверИСЭСФ_ПолныйАдрес;
	ПараметрыПодключения.СерверИСЭСФ_Порт					 = СерверИСЭСФ_Порт;
	ПараметрыПодключения.СерверИСЭСФ_Ресурс					 = СерверИСЭСФ_Ресурс;
	ПараметрыПодключения.СерверИСЭСФ_Таймаут				 = СерверИСЭСФ_Таймаут;
	
	ЭСФСервер.СохранитьПараметрыПодключенияКСерверуИСЭСФ(ПараметрыПодключения);
		
КонецПроцедуры

