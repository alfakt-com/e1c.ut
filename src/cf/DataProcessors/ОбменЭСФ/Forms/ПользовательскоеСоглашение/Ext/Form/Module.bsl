
&НаКлиенте
Перем ХронологияПереключенияСтраниц;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимЗаключениеСоглашения = Параметры.ЦельОткрытияСоглашения = "Заключение" ИЛИ Параметры.ЦельОткрытияСоглашения = "Обновление";
	
	ВосстановитьНастройки();
	
	ТекстСоглашения.УстановитьHTML(ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().ПолучитьМакет("ОфертаКриптографии").ПолучитьТекст(), Новый Структура);
	Если РежимЗаключениеСоглашения Тогда
		Организация = ЭСФСерверПереопределяемый.ПолучитьОрганизациюпоУмолчанию();
		Если ЗначениеЗаполнено(Организация) Тогда
			ОрганизацияПриИзмененииНаСервере();
		КонецЕсли;
		
		Пользователь = ЭСФКлиентСерверПереопределяемый.ТекущийПользователь();
		Если ЗначениеЗаполнено(Пользователь) Тогда
			ПользовательПриИзмененииНаСервере();
		КонецЕсли;
	Иначе
		ПользовательСогласен = ?(Параметры.ИспользоватьОбменЭСФЧерезAPI, 1, -1);
	КонецЕсли;
	
	Элементы.СтраницыШагиПомощника.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Элементы.КомандыНавигации.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	ЗаполнитьДополнительныеПараметрыСоглашенияНаСервере(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Контейнер = ЭСФКлиентСервер.КонтейнерМетодов();
	Контейнер.ПриОткрытииФормы(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ХронологияПереключенияСтраниц = Новый Массив;
	
	СменитьСтраницуШаги(Элементы.СтраницаТекстОферты);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательСогласенПриИзменении(Элемент)
	Элементы.ДалееПервая.Доступность = (ПользовательСогласен = 1);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПользовательПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Закрыть(?(ПользовательСогласен = 1, Истина, Ложь));
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ОчиститьСообщения();
	Если Элементы.СтраницыШагиПомощника.ТекущаяСтраница = Элементы.СтраницаТекстОферты Тогда
		
		Отказ = Ложь;
		Если ПользовательСогласен <> 1 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Для продолжения необходимо принять условия Соглашения'"), , "ПользовательСогласен", , Отказ);
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаТекстОферты);
		СменитьСтраницуШаги(Элементы.СтраницаДанныеКлиента);
		
	ИначеЕсли Элементы.СтраницыШагиПомощника.ТекущаяСтраница = Элементы.СтраницаДанныеКлиента Тогда
		
		Если НЕ ПроверитьЗаполнение() Тогда
			ТекстСообщения = НСтр("ru = 'Для получения библиотеки необходимо заполнить требуемые сведения.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ХронологияПереключенияСтраниц.Добавить(Элементы.СтраницаДанныеКлиента);
		СменитьСтраницуШаги(Элементы.СтраницаФинал);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ПредыдушийШаг = ХронологияПереключенияСтраниц[ХронологияПереключенияСтраниц.ВГраница()];
	ХронологияПереключенияСтраниц.Удалить(ХронологияПереключенияСтраниц.ВГраница());
	СменитьСтраницуШаги(ПредыдушийШаг);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СменитьСтраницуКомандНавигации(НоваяСтраница)
	
	Элементы.КомандыНавигации.ТекущаяСтраница = НоваяСтраница;
	
	Если НоваяСтраница = Элементы.ДалееОтмена Тогда
		Элементы.ДалееПервая.КнопкаПоУмолчанию = Истина;
		Элементы.ДалееПервая.АктивизироватьПоУмолчанию = Истина;
		ТекущийЭлемент = Элементы.ДалееПервая;
	ИначеЕсли НоваяСтраница = Элементы.НазадДалееОтмена Тогда
		Элементы.ДалееВторая.КнопкаПоУмолчанию = Истина;
		Элементы.ДалееВторая.АктивизироватьПоУмолчанию = Истина;
		ТекущийЭлемент = Элементы.ДалееВторая;
	ИначеЕсли НоваяСтраница = Элементы.НазадГотово Тогда
		Элементы.Готово.КнопкаПоУмолчанию = Истина;
	ИначеЕсли НоваяСтраница = Элементы.Отмена Тогда
		Элементы.ОтменаЧетвертая.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьСтраницуШаги(НоваяСтраница)
	
	Элементы.КомандыНавигации.Видимость = Истина;
	
	КомандыСВозвратом = Элементы.НазадДалееОтмена;
	КомандыБезВозврата = Элементы.ДалееОтмена;
	
	Если НоваяСтраница = Элементы.СтраницаФинал Тогда
		
		Элементы.ДекорацияУспешноеПолучение.Видимость = Ложь;
		Элементы.ДекорацияНеПолучено.Видимость = Ложь;
		
		Если ХронологияПереключенияСтраниц.Количество() Тогда
			КомандыСВозвратом = Элементы.НазадОтмена;
		Иначе
			КомандыБезВозврата = Элементы.Отмена;
		КонецЕсли;
		
		Элементы.ГруппаПолучениеМодуляОбменаССервера.Видимость = Истина;
		Элементы.ПолучениеМодуляОбменаКартинка.Картинка = БиблиотекаКартинок.ДлительнаяОперация48;
		
		СохранитьНастройки();
		
		КонтекстЭСФКлиент = ЭСФКлиентСервер.КонтейнерМетодов();
		ПараметрыАвторизации = ПолучитьТекущиеПараметрыСоглашения(ЭтотОбъект);
		ДополнительныеПараметры = Новый Структура("ПользовательСогласен", ПользовательСогласен);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьМодульКриптографииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		КонтекстЭСФКлиент.ОбновитьМодульКриптографии(ПараметрыАвторизации, ОписаниеОповещения);
		
	ИначеЕсли НоваяСтраница = Элементы.СтраницаТекстОферты Тогда
		
		Элементы.ДалееПервая.Доступность = (ПользовательСогласен = 1);
		
		Если РежимЗаключениеСоглашения Тогда
			КомандыБезВозврата = Элементы.ДалееОтмена;
		Иначе
			Элементы.ТекстСоглашения.АктивизироватьПоУмолчанию = Истина;
			Элементы.ГруппаОтветПользователя.Видимость = Ложь;
			Элементы.ДекорацияПредупреждение.Видимость = Ложь;
			КомандыБезВозврата = Элементы.Отмена;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ХронологияПереключенияСтраниц.Количество() Тогда
		СменитьСтраницуКомандНавигации(КомандыСВозвратом)
	Иначе
		СменитьСтраницуКомандНавигации(КомандыБезВозврата)
	КонецЕсли;
	
	Элементы.СтраницыШагиПомощника.ТекущаяСтраница = НоваяСтраница;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМодульКриптографииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	// Удалось получить библиотеку.
	Если Результат Тогда
		Элементы.ДекорацияУспешноеПолучение.Видимость = Истина;
		Элементы.ПолучениеМодуляОбменаКартинка.Картинка = БиблиотекаКартинок.ЭСФУспешно32;
		КомандыСВозвратом = Элементы.НазадГотово;
		СменитьСтраницуКомандНавигации(КомандыСВозвратом);
		Элементы.НазадТретья.Видимость = Ложь;
	Иначе
		Элементы.ДекорацияНеПолучено.Видимость = Истина;
		Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ОписаниеОшибки") И ЗначениеЗаполнено(Результат.ОписаниеОшибки) Тогда
			Элементы.ДекорацияНеПолучено.Подсказка = Результат.ОписаниеОшибки;
			Элементы.ДекорацияНеПолучено.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		КонецЕсли;
		Элементы.ПолучениеМодуляОбменаКартинка.Картинка = БиблиотекаКартинок.ЭСФОшибка32;
		КомандыБезВозврата = Элементы.НазадГотово;
		СменитьСтраницуКомандНавигации(КомандыБезВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	РеквизитыОрганизаци = ЭСФСерверПереопределяемый.РеквизитыОрганизации(Организация);
	
	ОрганизацияБИН          = РеквизитыОрганизаци.ИдентификационныйНомер;
	ОрганизацияНаименование = РеквизитыОрганизаци.Наименование;
	ОрганизацияАдрес        = РеквизитыОрганизаци.Адрес;
	ОрганизацияТелефон      = РеквизитыОрганизаци.Телефон;
	
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииНаСервере()
	
	РеквизитыПользователя = ЭСФСерверПереопределяемый.РеквизитыПользователя(Пользователь);
	
	ПользовательИИН       = РеквизитыПользователя.ИдентификационныйНомер;
	ПользовательФамилия   = РеквизитыПользователя.Фамилия;
	ПользовательИмя       = РеквизитыПользователя.Имя;
	ПользовательОтчество  = РеквизитыПользователя.Отчество;
	ПользовательДолжность = РеквизитыПользователя.Должность;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТекущиеПараметрыСоглашения(Форма)
	ПараметрыСоглашения = Новый Структура(
		"ИДКонфигурации, ВерсияКонфигурации, ЭтоБазовая, РегистрационныйНомер, ПользовательСогласен,
		|Организация, ОрганизацияБИН, ОрганизацияНаименование, ОрганизацияАдрес, ОрганизацияТелефон,
		|Пользователь, ПользовательИИН, ПользовательФамилия, ПользовательИмя, ПользовательОтчество, ПользовательДолжность,
		|ДатаЗаключения, ДополнительныеСведения");
	ЗаполнитьЗначенияСвойств(ПараметрыСоглашения, Форма);
	
	// На сервере установлена обязательность представления контактных данных при регистрации обращения
	Если НЕ ЗначениеЗаполнено(ПараметрыСоглашения.ОрганизацияТелефон) Тогда
		ПараметрыСоглашения.ОрганизацияТелефон = "Не указано";
	КонецЕсли;
	
	Возврат ПараметрыСоглашения;
КонецФункции

&НаСервере
Процедура ЗаполнитьДополнительныеПараметрыСоглашенияНаСервере(ПараметрыСоглашения) Экспорт
	ПараметрыСоглашения.ИДКонфигурации 	= ЭСФСерверПереопределяемый.ИДКонфигурации();
	ПараметрыСоглашения.ВерсияКонфигурации = Метаданные.Версия;
	ПараметрыСоглашения.ЭтоБазовая 		= (Найти(ВРег(Метаданные.Имя), "БАЗОВАЯ") > 0);	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	Если РежимЗаключениеСоглашения И ПользовательСогласен = 1 Тогда
		ПараметрыСоглашения = ПолучитьТекущиеПараметрыСоглашения(ЭтотОбъект);
		
		ПараметрыСоглашения.ДатаЗаключения = ТекущаяДатаСеанса();
		
		Константы.ЭСФПараметрыСоглашения.Установить(Новый ХранилищеЗначения(ПараметрыСоглашения));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки()
	ПараметрыСоглашения = Константы.ЭСФПараметрыСоглашения.Получить().Получить();
	Если ТипЗнч(ПараметрыСоглашения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыСоглашения);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти