перем УвеличитьВремяНа; 
перем ПрошлыйМесяц;

&НаКлиенте
Процедура ОтправитьАктСверки(Контрагент, УвеличитьВремяНа);	
	СущАС =	ПроверитьСуществованиеАктаСверки(Контрагент);
	Если СущАС = Истина тогда 	
		СтруктураЭлементов = ПолучитьАктСверки(Контрагент);
		Если СтруктураЭлементов <> Неопределено тогда
			АдресЭП = СтруктураЭлементов.Почта;
			ВремФайл=ПолучитьИмяВременногоФайла("pdf");
			СтруктураЭлементов.ТабДок.Записать(ВремФайл,ТипФайлаТабличногоДокумента.PDF);
			Данные = Новый ДвоичныеДанные(ВремФайл);
			Если АдресЭП <> Неопределено или АдресЭП <> "" тогда
				СоздатьПисьмо(Данные, АдресЭП, Контрагент, УвеличитьВремяНа) 
			иначе
				Сообщить ("Не указан электронный адрес у "+"<"+Контрагент+">");
			КонецЕсли;	
		КонецЕсли;	
	Иначе
		Сообщить("Акт сверки <" +Контрагент+ "> за указанный период существует");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьСуществованиеАктаСверки(Контрагент)
	
ПрошлыйМесяц = ДобавитьМесяц(ТекущаяДата(), -1);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СверкаВзаиморасчетов.Контрагент
		|ИЗ
		|	Документ.СверкаВзаиморасчетов КАК СверкаВзаиморасчетов
		|ГДЕ
		|	СверкаВзаиморасчетов.Проведен = ИСТИНА
		|	И СверкаВзаиморасчетов.КонецПериода <= &КонецПериода
		|	И СверкаВзаиморасчетов.НачалоПериода >= &НачалоПериода
		|	И СверкаВзаиморасчетов.Контрагент = &Контрагент
		|	И СверкаВзаиморасчетов.ЦС_Отправлен = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	СверкаВзаиморасчетов.Контрагент";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня (НачалоМесяца (ПрошлыйМесяц)));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня (КонецМесяца (ПрошлыйМесяц)));
	Запрос.УстановитьПараметр("Контрагент", Контрагент); 
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() тогда 
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Процедура СоздатьПисьмо(Данные, АдресЭП, Контрагент, УвеличитьВремяНа);
	// Создаем документ Электронное письмо
	НачатьТранзакцию();
	ЭлПисьмо = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
	ЭлПисьмо.УстановитьНовыйНомер();
	ЭлПисьмо.Автор = ПараметрыСеанса.ТекущийПользователь;
	ЭлПисьмо.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	ЭлПисьмо.Дата = ТекущаяДата();
	ЭлПисьмо.ДатаОтправления = ТекущаяДата() + УвеличитьВремяНа;
	ЭлПисьмо.Ответственный = ПараметрыСеанса.ТекущийПользователь;	
	ЭлПисьмо.СписокПолучателейПисьма = АдресЭП;
	ИмяАгента = СокрЛП(Контрагент);
	Тема = "Акт сверки взаиморасчётов " + СокрЛП(Контрагент);
	НаименованиеФайла = "Акт сверки взаиморасчётов "; //+ СокрЛП(ОбъектДок.Контрагент) + " от " + ИмяАгента + " " + Лев(ОбъектДок.Дата,10);
	ЭлПисьмо.Тема = Тема;
	ЭлПисьмо.ЕстьВложения = Истина;
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	ЭлПисьмо.ОтправительПредставление = УчетнаяЗапись;
	ЭлПисьмо.УчетнаяЗапись = УчетнаяЗапись;
	ЭлПисьмо.Записать(); 
	ЗафиксироватьТранзакцию();
	Спр = Справочники.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.СоздатьЭлемент();
	Спр.ВладелецФайла = ЭлПисьмо.Ссылка;
	Спр.Наименование = НаименованиеФайла;
	Спр.Расширение = "pdf";
	Спр.ФайлХранилище = Новый ХранилищеЗначения(Данные);
	Спр.Записать();
	
	//МенеджерЗаписи = РегистрыСведений.ПрисоединенныеФайлы.СоздатьМенеджерЗаписи();
	//МенеджерЗаписи.ПрисоединенныйФайл = Спр.Ссылка;
	//МенеджерЗаписи.ХранимыйФайл = Новый ХранилищеЗначения(ВремФайл);	
	//МенеджерЗаписи.Записать(Истина);

	
	соотвВложения = Новый Соответствие; 
	соотвВложения.Вставить(НаименованиеФайла+".pdf", Данные);
	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Тема", Тема);
	ПараметрыПисьма.Вставить("Тело", НСтр("ru = 'Это сообщение отправлено подсистемой электронной почты 1С:Предприятие'"));
	ПараметрыПисьма.Вставить("Кому", АдресЭП);
	ПараметрыПисьма.Вставить("Вложения", соотвВложения);
	
	
	
		
	ИдентификаторПисьма = РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(ЭлПисьмо.УчетнаяЗапись, ПараметрыПисьма);
	
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАктСверки(Контрагент)
	
	АктСверки = Документы.СверкаВзаиморасчетов.СоздатьДокумент();
	АктСверки.Дата = ТекущаяДата();
	АктСверки.Контрагент =  Контрагент; 
	АктСверки.УстановитьНовыйНомер();
	АктСверки.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
	АктСверки.Статус = Перечисления.СтатусыСверокВзаиморасчетов.Создана;
	ПрошлыйМесяц = ДобавитьМесяц(АктСверки.Дата, -1); 
	АктСверки.НачалоПериода = НачалоДня (НачалоМесяца (ПрошлыйМесяц));
	АктСверки.КонецПериода = КонецДня (КонецМесяца (ПрошлыйМесяц));
	АктСверки.Комментарий = "Создан автоматически " + ТекущаяДата();
	АктСверки.ЦС_Отправлен = Истина;
	
	ТабличнаяЧасть = АктСверки.ДанныеКонтрагента;
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("Дата",			   	   АктСверки.Дата);
	ДанныеДокумента.Вставить("Организация",		   	   Справочники.Организации.ОрганизацияПоУмолчанию());
	ДанныеДокумента.Вставить("Контрагент",		   	   Контрагент);
	ДанныеДокумента.Вставить("Партнер",		 		   Справочники.Партнеры.ПустаяСсылка());
	ДанныеДокумента.Вставить("Договор",		 		   Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	ДанныеДокумента.Вставить("КонецПериода", 	   	   АктСверки.КонецПериода);
	ДанныеДокумента.Вставить("РасшифровкаПоЗаказам",   Ложь);
	ДанныеДокумента.Вставить("РасшифровкаПоПартнерам", Ложь);
	ДанныеДокумента.Вставить("РасшифровкаПоДоговорам", Ложь);
	
	Документы.СверкаВзаиморасчетов.ЗаполнитьДанныеКонтрагента(ДанныеДокумента, ТабличнаяЧасть);
	
	Если ТабличнаяЧасть.Количество() <> 0 тогда
		АктСверки.Записать(РежимЗаписиДокумента.Проведение);
		
		МассивОбъектов = Новый массив;
		МассивОбъектов.Добавить(АктСверки.Ссылка);
		
		КИ = Контрагент.КонтактнаяИнформация;
		Для каждого стр из КИ цикл
			Если стр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты тогда
				Почта = стр.АдресЭП;	
			КонецЕсли;
		КонецЦикла;
			
		ТабДок = СформироватьПечатнуюФормуАктСверкиВзаимныхРасчетов(МассивОбъектов);
		Если ТабДок <> Неопределено тогда	
			СтруктураЭлементов = Новый Структура;
			СтруктураЭлементов.Вставить("ТабДок", ТабДок);
			СтруктураЭлементов.Вставить("Почта", Почта);
			СтруктураЭлементов.Вставить("Контрагент", Контрагент);
			Возврат СтруктураЭлементов;	
		КонецЕсли;
	Иначе
		Сообщить ("Нет расчетов с контрагентом " +"<" + Контрагент +">" + ". "+" Отправка акта сверки взаимных расчетов не требуется.")
	КонецЕсли;
КонецФункции

&НаСервере
Функция СформироватьПечатнуюФормуАктСверкиВзаимныхРасчетов(МассивОбъектов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеДокумента = ВыборкаДанныхДокумента(МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ПервыйДокумент = Истина;
	Пока ДанныеДокумента.Следующий() Цикл
		
		ДетальныеРасчеты = ДетальныеРасчеты(ДанныеДокумента);
		
		Если ДетальныеРасчеты = Неопределено Тогда 
		
			Возврат Неопределено;	
			
		КонецЕсли;
		
		Обработка =  РеквизитФормыВЗначение("Объект");
		Макет = Обработка.ПолучитьМакет("ПФ_MXL_АктСверкиВзаимныхРасчетов");  
		
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// ШАПКА ДОКУМЕНТА
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеДокумента.ДокументСсылка);
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеДокумента, НСтр("ru='Акт сверки взаимных расчетов'"));
		
		Если ДанныеДокумента.НачалоПериода = '00010101' Тогда
			
			ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'по состоянию на %1'"),
			Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД"),);
			
			ПредставлениеПериодаРасчетов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'По состоянию на %1'"),
			Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД"),);
			
		Иначе
			
			ПредставлениеПериода = ПредставлениеПериода(ДанныеДокумента.НачалоПериода, КонецДня(ДанныеДокумента.КонецПериода));
			
			ПервыйСимволПредставлениеПериода = Лев(ПредставлениеПериода, 1);
			Если  КодСимвола(ПервыйСимволПредставлениеПериода) >= 48
				И КодСимвола(ПервыйСимволПредставлениеПериода) <= 57 Тогда
				
				ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='за период: %1'"), ПредставлениеПериода);
				
			Иначе
				
				ПредставлениеПериода = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='за %1'"), ПредставлениеПериода);
				
			КонецЕсли;
			
			ПредставлениеПериодаРасчетов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В период с %1 по %2'"),
			Формат(ДанныеДокумента.НачалоПериода, "ДЛФ=ДД"),
			Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД"),);
			
		КонецЕсли;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеДокумента.Организация, ДанныеДокумента.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, 
		"ПолноеНаименование");
		СведенияОКонтрагенте  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеДокумента.Контрагент,  ДанныеДокумента.Дата);
		КонтрагентНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, 
		"ПолноеНаименование");
		
		СтруктураПредставленийУчастников = Новый Структура;
		СтруктураПредставленийУчастников.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		СтруктураПредставленийУчастников.Вставить("КонтрагентНаименование", КонтрагентНаименование);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеДокумента);
		ОбластьМакета.Параметры.Заполнить(СтруктураПредставленийУчастников);
		ОбластьМакета.Параметры.ТекстЗаголовка 			 = ТекстЗаголовка;       
		ОбластьМакета.Параметры.ФИОРуководителяКонтрагента = СокрЛП(ДанныеДокумента.ФИОРуководителяКонтрагента);
		ОбластьМакета.Параметры.ПредставлениеПериода 	 = ПредставлениеПериода;
		ОбластьМакета.Параметры.ПредставлениеПериодаРасчетов = ПредставлениеПериодаРасчетов;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// 1. ДЕТАЛЬНЫЕ РАСЧЕТЫ
		
		ТаблицаЗадолженности = Новый ТаблицаЗначений;
		ТаблицаЗадолженности.Колонки.Добавить("Валюта");
		ТаблицаЗадолженности.Колонки.Добавить("Сумма");
		Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда
			ТаблицаЗадолженности.Колонки.Добавить("Партнер");
		КонецЕсли; 
		Если ДанныеДокумента.РасшифровкаПоДоговорам Тогда
			ТаблицаЗадолженности.Колонки.Добавить("Договор");
		КонецЕсли; 
		
		Пока ДетальныеРасчеты.Следующий() Цикл
			
			Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда
				ВыборкаПоДетальнымРасчетам = ДетальныеРасчеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоДетальнымРасчетам.Следующий() Цикл
					ТабличныйДокумент.Вывести(ВывестиДетальныеЗаписи(ВыборкаПоДетальнымРасчетам, ДанныеДокумента, ДетальныеРасчеты.Партнер, , СтруктураПредставленийУчастников, Макет, ТаблицаЗадолженности));
				КонецЦикла; 
			ИначеЕсли ДанныеДокумента.РасшифровкаПоДоговорам Тогда
				ВыборкаПоДетальнымРасчетам = ДетальныеРасчеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоДетальнымРасчетам.Следующий() Цикл
					ТабличныйДокумент.Вывести(ВывестиДетальныеЗаписи(ВыборкаПоДетальнымРасчетам, ДанныеДокумента, , ДетальныеРасчеты.Договор, СтруктураПредставленийУчастников, Макет, ТаблицаЗадолженности));
				КонецЦикла; 
			Иначе
				ТабличныйДокумент.Вывести(ВывестиДетальныеЗаписи(ДетальныеРасчеты, ДанныеДокумента, , , СтруктураПредставленийУчастников, Макет, ТаблицаЗадолженности));
			КонецЕсли;
			
		КонецЦикла; 
		
		// 2. ЗАДОЛЖЕННОСТЬ
		
		Если ТаблицаЗадолженности.Количество() > 0 Тогда
			
			ОбластьМакетаЗаголовок		 = Макет.ПолучитьОбласть("ЗаголовокЗадолженность");
			ОбластьМакетаСтрока			 = Макет.ПолучитьОбласть("СтрокаЗадолженность");
			ОбластьМакетаСтрокаПодробно1 = Макет.ПолучитьОбласть("СтрокаЗадолженностьПодробноВтч");
			ОбластьМакетаСтрокаПодробно2 = Макет.ПолучитьОбласть("СтрокаЗадолженностьПодробно");
			
			ОбластьМакетаЗаголовок.Параметры.КонецПериодаСверки = Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД");
			ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
			
			ТаблицаЗадолженностиПоВалютам = ТаблицаЗадолженности.Скопировать();
			ТаблицаЗадолженностиПоВалютам.Свернуть("Валюта", "Сумма");
			Для Каждого СтрокаЗадолженностиПоВалютам Из ТаблицаЗадолженностиПоВалютам Цикл
				
				ОбластьМакетаСтрока.Параметры.Валюта = СтрокаЗадолженностиПоВалютам.Валюта;
				Если СтрокаЗадолженностиПоВалютам.Сумма > 0 Тогда
					ОбластьМакетаСтрока.Параметры.Сумма = Формат(СтрокаЗадолженностиПоВалютам.Сумма, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
					Если ЗначениеЗаполнено(ДанныеДокумента.Партнер) Тогда
						ОбластьМакетаСтрока.Параметры.Дебитор = ДанныеДокумента.ПредставлениеПартнера;
					Иначе
						ОбластьМакетаСтрока.Параметры.Дебитор = СтруктураПредставленийУчастников.КонтрагентНаименование;
					КонецЕсли;
				Иначе
					ОбластьМакетаСтрока.Параметры.Сумма = Формат(-СтрокаЗадолженностиПоВалютам.Сумма, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
					Если ЗначениеЗаполнено(ДанныеДокумента.Партнер) Тогда
						ОбластьМакетаСтрока.Параметры.Дебитор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='%1 перед %2'"),
						СтруктураПредставленийУчастников.ПредставлениеОрганизации,
						ДанныеДокумента.ПредставлениеПартнера);
					Иначе
						ОбластьМакетаСтрока.Параметры.Дебитор = СтруктураПредставленийУчастников.ПредставлениеОрганизации;
					КонецЕсли;
				КонецЕсли;
				ОбластьМакетаСтрока.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтрокаЗадолженностиПоВалютам.Сумма,СтрокаЗадолженностиПоВалютам.Валюта);
				ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
				
				Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда
					
					ПервыйПроходПоПартнерам = Истина;
					МассивСтрокЗадолженности = ТаблицаЗадолженности.НайтиСтроки(Новый Структура("Валюта", СтрокаЗадолженностиПоВалютам.Валюта));
					Для Каждого СтрокаЗадолженности Из МассивСтрокЗадолженности Цикл
						Если ПервыйПроходПоПартнерам Тогда
							ОбластьМакета = ОбластьМакетаСтрокаПодробно1;
						Иначе
							ОбластьМакета = ОбластьМакетаСтрокаПодробно2;
						КонецЕсли;
						
						ОбластьМакета.Параметры.Валюта = СтрокаЗадолженности.Валюта;
						Если СтрокаЗадолженности.Сумма > 0 Тогда
							ОбластьМакета.Параметры.Сумма = Формат(СтрокаЗадолженности.Сумма, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
							ОбластьМакета.Параметры.Дебитор = СтрокаЗадолженности.Партнер;
						Иначе
							ОбластьМакета.Параметры.Сумма = Формат(-СтрокаЗадолженности.Сумма, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
							ОбластьМакета.Параметры.Дебитор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='%1 перед %2'"),
							СтруктураПредставленийУчастников.ПредставлениеОрганизации,
							СтрокаЗадолженности.Партнер);
						КонецЕсли;
						ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтрокаЗадолженности.Сумма, СтрокаЗадолженности.Валюта);
						ТабличныйДокумент.Вывести(ОбластьМакета);
						
						ПервыйПроходПоПартнерам = Ложь;
					КонецЦикла; 
					
				КонецЕсли;
				
			КонецЦикла; 
			
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокЗадолженностьОтсутствует");
			ОбластьМакета.Параметры.КонецПериодаСверки = Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД");
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли; 
		
		// 3. РАСХОЖДЕНИЙ НЕ ВЫЯВЛЕНО
		
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокРасхождения");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// ПОДПИСИ
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(ДанныеДокумента);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес");
		
		ОбластьМакета.Параметры.КонтрагентНаименование   = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, 
		"ПолноеНаименование,ИНН,ЮридическийАдрес");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// ПРИЛОЖЕНИЕ
		Если ДанныеДокумента.РасшифровкаПоЗаказам Тогда
			
			ТаблицаОстатков = ОстаткиРасчетов(ДанныеДокумента);
			
			Если ТаблицаОстатков <> Неопределено Тогда
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТекстЗаголовкаПриложения = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеДокумента,
				НСтр("ru='к акту сверки взаимных расчетов'"));
				
				ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокПриложение");
				ОбластьМакета.Параметры.ТекстЗаголовкаПриложения = ТекстЗаголовкаПриложения;
				ОбластьМакета.Параметры.КонецПериодаСверки = Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				МассивВалют = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(ТаблицаОстатков.ВыгрузитьКолонку("ВалютаВзаиморасчетов"));
				Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда
					МассивПартнеров = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(ТаблицаОстатков.ВыгрузитьКолонку("Партнер"));
				КонецЕсли; 
				
				Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда
					Для Каждого Партнер Из МассивПартнеров Цикл
						ТабличныйДокумент.Вывести(ВывестиТаблицуЗадолженности(ДанныеДокумента, ТаблицаОстатков, МассивВалют, Партнер, СтруктураПредставленийУчастников, Макет));
					КонецЦикла; 
				Иначе
					ТабличныйДокумент.Вывести(ВывестиТаблицуЗадолженности(ДанныеДокумента, ТаблицаОстатков, МассивВалют, , СтруктураПредставленийУчастников, Макет));
				КонецЕсли;	
				
				ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
				ОбластьМакета.Параметры.Заполнить(ДанныеДокумента);
				ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, 
				"ПолноеНаименование,ИНН,ЮридическийАдрес");
				
				ОбластьМакета.Параметры.КонтрагентНаименование   = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, 
				"ПолноеНаименование,ИНН,ЮридическийАдрес");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли; 
			
		КонецЕсли;
		
		//УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.ДокументСсылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ВыборкаДанныхДокумента(МассивОбъектов) 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Если ЗначениеЗаполнено(МассивОбъектов) Тогда
		ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	Иначе
		ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(Документы.СверкаВзаиморасчетов.ПустаяСсылка(), МенеджерВременныхТаблиц);	
	КонецЕсли;
	
	ЗапросДанныеДокумента = Новый Запрос;
	ЗапросДанныеДокумента.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросДанныеДокумента.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК ДокументСсылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Партнер.НаименованиеПолное КАК ПредставлениеПартнера,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Договор.НаименованиеДляПечати КАК ПредставлениеДоговора,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КонецПериода КАК КонецПериода,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК ФИОРуководителя,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ДанныеДокумента.ФИОРуководителяКонтрагента КАК ФИОРуководителяКонтрагента,
	|	ДанныеДокумента.ДолжностьРуководителяКонтрагента КАК ДолжностьРуководителяКонтрагента,
	|	ДанныеДокумента.РасшифровкаПоЗаказам КАК РасшифровкаПоЗаказам,
	|	ДанныеДокумента.РасшифровкаПоПартнерам КАК РасшифровкаПоПартнерам,
	|	ДанныеДокумента.РасшифровкаПоДоговорам КАК РасшифровкаПоДоговорам
	|ИЗ
	|	Документ.СверкаВзаиморасчетов КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Номер";
	
	ЗапросДанныеДокумента.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат ЗапросДанныеДокумента.Выполнить().Выбрать();
	
КонецФункции

&НаСервере
Функция ДетальныеРасчеты(ДанныеДокумента)
	
	ЗапросНашихДанных = Новый Запрос;
	
	ТекстЗапроса = ТекстЗапросаОтборПоАналитике() + "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка					КАК Документ,
	|	ДанныеДокумента.НомерВходящегоДокумента	КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента	КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата                    КАК Дата,
	|	Истина									КАК ЭтоВходящийДокумент
	|
	|ПОМЕСТИТЬ ДокументыИнтеркампани
	|
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента                 
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Организация = &Организация
	|	И ДанныеДокумента.Контрагент = &Контрагент
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериодаСверки И &КонецПериодаСверки
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка					КАК Документ,
	|	ДанныеДокумента.Номер 					КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента	КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата 					КАК Дата,
	|	Ложь									КАК ЭтоВходящийДокумент
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента                 
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Комиссионер = &Организация
	|	И ДанныеДокумента.Контрагент = &Контрагент
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериодаСверки И &КонецПериодаСверки
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка					КАК Документ,
	|	ДанныеДокумента.НомерВходящегоДокумента КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента	КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата                    КАК Дата,
	|	Истина									КАК ЭтоВходящийДокумент
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента                 
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ОрганизацияПолучатель = &Организация
	|	И ДанныеДокумента.Контрагент = &Контрагент
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериодаСверки И &КонецПериодаСверки
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка					КАК Документ,
	|	ДанныеДокумента.Номер 					КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента	КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата 					КАК Дата,
	|	Ложь									КАК ЭтоВходящийДокумент
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента                 
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Организация = &Организация
	|	И ДанныеДокумента.Контрагент = &Контрагент
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериодаСверки И &КонецПериодаСверки
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	РасчетыСКлиентамиОстаткиИОбороты.Период КАК Период,
	|	ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор, Неопределено) КАК Документ,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		ВЫБОР КОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Номер
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента,
	|				РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Номер)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.Номер
	|	КОНЕЦ КАК Номер,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Дата
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		ЕСТЬNULL(РасчетыСКлиентамиОстаткиИОбороты.Регистратор.ДатаВходящегоДокумента,
	|				РасчетыСКлиентамиОстаткиИОбороты.Регистратор.Дата)
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.Дата
	|	КОНЕЦ КАК ДатаВходящегоДокумента,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер 	 КАК Партнер,
	|	РегистрАналитикаУчетаПоПартнерам.Договор	 КАК Договор,
	|	РасчетыСКлиентамиОстаткиИОбороты.Валюта 	 КАК Валюта,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		ВЫБОР КОГДА РасчетыСКлиентамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента ЕСТЬ NULL
	|		 ИЛИ РасчетыСКлиентамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			Ложь
	|		ИНАЧЕ
	|			Истина
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.ЭтоВходящийДокумент
	|	КОНЕЦ КАК ЭтоВходящийДокумент,
	|	ВЫБОР КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход < 0 ТОГДА
	|		-РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход
	|	КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход > 0 ТОГДА
	|		РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход
	|	КОНЕЦ КАК СуммаДолгПартнера,
	|	ВЫБОР КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход < 0 ТОГДА
	|		-РасчетыСКлиентамиОстаткиИОбороты.СуммаПриход
	|	КОГДА РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход > 0 ТОГДА
	|		РасчетыСКлиентамиОстаткиИОбороты.СуммаРасход
	|	КОНЕЦ КАК СуммаНашДолг,
	|	РасчетыСКлиентамиОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	РасчетыСКлиентамиОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ЕСТЬNULL(РеализацияТоваровУслугРеглУчет.Организация, Неопределено) КАК ОрганизацияРеглУчет
	|
	|ПОМЕСТИТЬ РасчетыСПартнерами
	|
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(
	|			&НачалоПериодаСверки,
	|			&ГраницаКонецПериода,
	|			Регистратор,
	|			ДвиженияИГраницыПериода,
	|			АналитикаУчетаПоПартнерам В
	|				(ВЫБРАТЬ
	|					ОтборПоАналитике.КлючАналитики
	|				ИЗ
	|					ОтборПоАналитике)
	|	) КАК РасчетыСКлиентамиОстаткиИОбороты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСКлиентамиОстаткиИОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДокументыИнтеркампани КАК ДокументыИнтеркампани
	|		ПО РасчетыСКлиентамиОстаткиИОбороты.Регистратор = ДокументыИнтеркампани.Документ
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслугРеглУчет
	|		ПО РасчетыСКлиентамиОстаткиИОбороты.Регистратор = РеализацияТоваровУслугРеглУчет.Ссылка
	|		И РеализацияТоваровУслугРеглУчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|		И &Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСПоставщикамиОстаткиИОбороты.Период КАК Период,
	|	ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор, Неопределено) КАК Документ,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		ВЫБОР КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Номер
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента,
	|				РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Номер)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.Номер
	|	КОНЕЦ КАК Номер,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		ВЫБОР КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.ДатаВходящегоДокумента,
	|				РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.Дата)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.Дата
	|	КОНЕЦ КАК ДатаВходящегоДокумента,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер 	 КАК Партнер,
	|	РегистрАналитикаУчетаПоПартнерам.Договор	 КАК Договор,
	|	РасчетыСПоставщикамиОстаткиИОбороты.Валюта 	 КАК Валюта,
	|	ВЫБОР КОГДА ДокументыИнтеркампани.Документ ЕСТЬ NULL ТОГДА
	|		ВЫБОР КОГДА РасчетыСПоставщикамиОстаткиИОбороты.Регистратор.НомерВходящегоДокумента ЕСТЬ NULL
	|		 ИЛИ РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств ТОГДА
	|			Ложь
	|		ИНАЧЕ
	|			Истина
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ДокументыИнтеркампани.ЭтоВходящийДокумент
	|	КОНЕЦ КАК ЭтоВходящийДокумент,
	|	ВЫБОР КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход < 0 ТОГДА
	|		-РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход
	|	КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход > 0 ТОГДА
	|		РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход
	|	КОНЕЦ КАК СуммаДолгПартнера,
	|	ВЫБОР КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход < 0 ТОГДА
	|		-РасчетыСПоставщикамиОстаткиИОбороты.СуммаПриход
	|	КОГДА РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход > 0 ТОГДА
	|		РасчетыСПоставщикамиОстаткиИОбороты.СуммаРасход
	|	КОНЕЦ КАК СуммаНашДолг,
	|	РасчетыСПоставщикамиОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	РасчетыСПоставщикамиОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	ЕСТЬNULL(ПоступлениеТоваровУслугРеглУчет.Организация, Неопределено) КАК ОрганизацияРеглУчет
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.ОстаткиИОбороты(
	|			&НачалоПериодаСверки,
	|			&ГраницаКонецПериода,
	|			Регистратор,
	|			ДвиженияИГраницыПериода,
	|			АналитикаУчетаПоПартнерам В
	|				(ВЫБРАТЬ
	|					ОтборПоАналитике.КлючАналитики
	|				ИЗ
	|					ОтборПоАналитике)
	|	) КАК РасчетыСПоставщикамиОстаткиИОбороты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО РасчетыСПоставщикамиОстаткиИОбороты.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДокументыИнтеркампани КАК ДокументыИнтеркампани
	|		ПО РасчетыСПоставщикамиОстаткиИОбороты.Регистратор = ДокументыИнтеркампани.Документ
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслугРеглУчет
	|		ПО РасчетыСПоставщикамиОстаткиИОбороты.Регистратор = ПоступлениеТоваровУслугРеглУчет.Ссылка
	|		И ПоступлениеТоваровУслугРеглУчет.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|		И &Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ГДЕ
	|	РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ЕСТЬ NULL
	|	ИЛИ НЕ РасчетыСПоставщикамиОстаткиИОбороты.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата				КАК Период,
	|	ДанныеДокумента.Ссылка				КАК Документ,
	|	Расшифровка.НомерВходящегоДокумента	КАК Номер,
	|	Расшифровка.ДатаВходящегоДокумента	КАК Дата,
	|	Расшифровка.ДатаВходящегоДокумента	КАК ДатаВходящегоДокумента,
	|	Расшифровка.Поставщик				КАК Партнер,
	|	ВЫБОР КОГДА Расшифровка.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Расшифровка.Заказ
	|	ИНАЧЕ
	|		Расшифровка.Заказ.Договор
	|	КОНЕЦ								КАК Договор,
	|	Расшифровка.ВалютаВзаиморасчетов	КАК Валюта,
	|	Истина								КАК ЭтоВходящийДокумент,
	|	Расшифровка.СуммаВзаиморасчетов		КАК СуммаДолгПартнера,
	|	0									КАК СуммаНашДолг,
	|	0									КАК СуммаНачальныйОстаток,
	|	0									КАК СуммаКонечныйОстаток,
	|	Неопределено						КАК ОрганизацияРеглУчет
	|ИЗ
	|	Документ.АвансовыйОтчет КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Расшифровка
	|		ПО Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Организация = &Организация
	|	И Расшифровка.Контрагент = &Контрагент
	|	И ДанныеДокумента.Дата МЕЖДУ &НачалоПериодаСверки И &КонецПериодаСверки
	|	И (&НеИспользоватьОтборПоДоговору
	|		ИЛИ ВЫБОР КОГДА Расшифровка.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|			Расшифровка.Заказ
	|		ИНАЧЕ
	|			Расшифровка.Заказ.Договор
	|		КОНЕЦ = &Договор)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период				 		КАК Период,
	|	РасчетыСПартнерами.Документ				 		КАК Документ,
	|	РасчетыСПартнерами.Номер				 		КАК Номер,
	|	РасчетыСПартнерами.Дата					 		КАК Дата,
	|	РасчетыСПартнерами.ДатаВходящегоДокумента       КАК ДатаВходящегоДокумента,
	|	%ПолеПартнер%
	|	%ПолеДоговор%
	|	РасчетыСПартнерами.Валюта				 		КАК Валюта,
	|	РасчетыСПартнерами.ЭтоВходящийДокумент	 		КАК ЭтоВходящийДокумент,
	|	СУММА(РасчетыСПартнерами.СуммаДолгПартнера)	 	КАК СуммаДолгПартнера,
	|	СУММА(РасчетыСПартнерами.СуммаНашДолг)			КАК СуммаНашДолг,
	|	СУММА(РасчетыСПартнерами.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
	|	СУММА(РасчетыСПартнерами.СуммаКонечныйОстаток)	КАК СуммаКонечныйОстаток,
	|	РасчетыСПартнерами.ОрганизацияРеглУчет			КАК ОрганизацияРеглУчет
	|ПОМЕСТИТЬ РасчетыСПартнерамиГруппировка
	|ИЗ
	|	РасчетыСПартнерами КАК РасчетыСПартнерами
	|
	|СГРУППИРОВАТЬ ПО
	|	Период, Документ, Номер, Дата, ДатаВходящегоДокумента, %Партнер% %Договор% Валюта, ЭтоВходящийДокумент, ОрганизацияРеглУчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период                 КАК Период,
	|	РасчетыСПартнерами.Документ               КАК Документ,
	|	РасчетыСПартнерами.Номер                  КАК Номер,
	|	РасчетыСПартнерами.Дата                   КАК Дата,
	|	РасчетыСПартнерами.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	%ПолеПартнер%
	|	%ПолеДоговор%
	|	РасчетыСПартнерами.Валюта                 КАК Валюта,
	|	РасчетыСПартнерами.ЭтоВходящийДокумент    КАК ЭтоВходящийДокумент,
	|	РасчетыСПартнерами.СуммаДолгПартнера      КАК СуммаДолгПартнера,
	|	РасчетыСПартнерами.СуммаНашДолг           КАК СуммаНашДолг,
	|	РасчетыСПартнерами.СуммаНачальныйОстаток  КАК СуммаНачальныйОстаток,
	|	РасчетыСПартнерами.СуммаКонечныйОстаток   КАК СуммаКонечныйОстаток,
	|	РасчетыСПартнерами.ОрганизацияРеглУчет    КАК ОрганизацияРеглУчет
	|ИЗ
	|	РасчетыСПартнерамиГруппировка КАК РасчетыСПартнерами
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период, Документ
	|
	|ИТОГИ ПО
	|	%Партнер%
	|	%Договор%
	|	Валюта
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПолеПартнер%", ?(ДанныеДокумента.РасшифровкаПоПартнерам, "РасчетыСПартнерами.Партнер КАК Партнер,", ""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Партнер%", ?(ДанныеДокумента.РасшифровкаПоПартнерам, "Партнер,", ""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПолеДоговор%", ?(ДанныеДокумента.РасшифровкаПоДоговорам, "РасчетыСПартнерами.Договор КАК Договор,", ""));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%Договор%", ?(ДанныеДокумента.РасшифровкаПоДоговорам, "Договор,", ""));
	ЗапросНашихДанных.Текст = ТекстЗапроса;
	
	ЗапросНашихДанных.УстановитьПараметр("НачалоПериодаСверки", ДанныеДокумента.НачалоПериода);
	ЗапросНашихДанных.УстановитьПараметр("КонецПериодаСверки",	КонецДня(ДанныеДокумента.КонецПериода));
	ЗапросНашихДанных.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(
	КонецДня(ДанныеДокумента.КонецПериода)+1,
	ВидГраницы.Исключая));
	ЗапросНашихДанных.УстановитьПараметр("Организация",		    ДанныеДокумента.Организация);
	ЗапросНашихДанных.УстановитьПараметр("Контрагент",		    ДанныеДокумента.Контрагент);
	ЗапросНашихДанных.УстановитьПараметр("Партнер",		  	    ДанныеДокумента.Партнер);
	ЗапросНашихДанных.УстановитьПараметр("Договор",		  	    ДанныеДокумента.Договор);
	ЗапросНашихДанных.УстановитьПараметр("НеИспользоватьОтборПоПартнеру", НЕ ЗначениеЗаполнено(ДанныеДокумента.Партнер));
	ЗапросНашихДанных.УстановитьПараметр("НеИспользоватьОтборПоДоговору", НЕ ЗначениеЗаполнено(ДанныеДокумента.Договор));
	
	РезультатЗапросаНашихДанных = ЗапросНашихДанных.Выполнить();
	
	Если НЕ РезультатЗапросаНашихДанных.Пустой() Тогда
		ВыборкаНашихДанных = РезультатЗапросаНашихДанных.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе
		ВыборкаНашихДанных = Неопределено;
	КонецЕсли;
	
	Возврат ВыборкаНашихДанных;
	
КонецФункции

&НаСервере
Функция ВывестиДетальныеЗаписи(
	ВыборкаДетальныхЗаписей, 
	ДанныеДокумента, 
	ТекущийПартнер = Неопределено, 
	ТекущийДоговор = Неопределено, 
	СтруктураПредставленийУчастников, 
	Макет, 
	ТаблицаЗадолженности)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьМакетаГруппировка = Макет.ПолучитьОбласть("ГруппировкаПартнерВалюта");
	ОбластьМакетаШапка		 = Макет.ПолучитьОбласть("ШапкаТаблицыРасчеты");
	ОбластьМакетаНачОстаток  = Макет.ПолучитьОбласть("СтрокаТаблицыРасчетыНачОстаток");
	ОбластьМакетаСтрока 	 = Макет.ПолучитьОбласть("СтрокаТаблицыРасчеты");
	ОбластьМакетаКонОстаток  = Макет.ПолучитьОбласть("СтрокаТаблицыРасчетыКонОстаток");
	
	СтрокаЗадолженности = ТаблицаЗадолженности.Добавить();
	СтрокаЗадолженности.Валюта = ВыборкаДетальныхЗаписей.Валюта;
	Если ТаблицаЗадолженности.Колонки.Найти("Партнер") <> Неопределено Тогда
		СтрокаЗадолженности.Партнер = ?(ДанныеДокумента.РасшифровкаПоПартнерам,
		ПредставлениеПартнера(ТекущийПартнер),
		ПредставлениеПартнера(ДанныеДокумента.Партнер));
	КонецЕсли;
	Если ТаблицаЗадолженности.Колонки.Найти("Договор") <> Неопределено Тогда
		СтрокаЗадолженности.Договор = ?(ДанныеДокумента.РасшифровкаПоДоговорам,
		ПредставлениеДоговора(ТекущийДоговор),
		ПредставлениеДоговора(ДанныеДокумента.Договор));
	КонецЕсли;
	Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда 
		ОбластьМакетаГруппировка.Параметры.ПартнерВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1, в валюте: %2'"), СтрокаЗадолженности.Партнер, ВыборкаДетальныхЗаписей.Валюта);
	ИначеЕсли ДанныеДокумента.РасшифровкаПоДоговорам Тогда 
		ОбластьМакетаГруппировка.Параметры.ПартнерВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1, в валюте: %2'"), СтрокаЗадолженности.Договор, ВыборкаДетальныхЗаписей.Валюта);
	Иначе
		ОбластьМакетаГруппировка.Параметры.ПартнерВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='в валюте: %1'"), ВыборкаДетальныхЗаписей.Валюта);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакетаГруппировка);
	
	ОбластьМакетаШапка.Параметры.Заполнить(СтруктураПредставленийУчастников);
	ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
	
	ПредставленияДокументов = ПредставленияДокументов();
	ПредставленияВладельцевДокументов = ПредставленияВладельцевДокументов();
	
	ПредставлениеДокумента = "";
	ПредставлениеВладельцаДокумента = "";
	
	НачальныйОстаток = 0;
	КонечныйОстаток  = 0;
	
	ДетальныеЗаписи = ВыборкаДетальныхЗаписей.Выбрать();
	
	ПервыйПроход = Истина;
	Пока ДетальныеЗаписи.Следующий() Цикл
		
		Если ДетальныеЗаписи.Документ = Неопределено Тогда
			Если ДетальныеЗаписи.Период = ДанныеДокумента.НачалоПериода Тогда
				НачальныйОстаток = НачальныйОстаток + ДетальныеЗаписи.СуммаНачальныйОстаток;
			Иначе
				КонечныйОстаток = КонечныйОстаток + ДетальныеЗаписи.СуммаКонечныйОстаток;
			КонецЕсли;
		Иначе
			
			Если ПервыйПроход
				И ЗначениеЗаполнено(ДанныеДокумента.НачалоПериода) Тогда
				
				ОбластьМакетаНачОстаток.Параметры.НачалоПериодаСверки = Формат(ДанныеДокумента.НачалоПериода, "ДЛФ=ДД");
				Если НачальныйОстаток > 0 Тогда
					ОбластьМакетаНачОстаток.Параметры.СуммаНашДолг = 0;
					ОбластьМакетаНачОстаток.Параметры.СуммаДолгПартнера = НачальныйОстаток;
				Иначе
					ОбластьМакетаНачОстаток.Параметры.СуммаНашДолг = -НачальныйОстаток;
					ОбластьМакетаНачОстаток.Параметры.СуммаДолгПартнера = 0;
				КонецЕсли;				
				ТабличныйДокумент.Вывести(ОбластьМакетаНачОстаток);
				
			КонецЕсли;
			
			ИмяДокумента = ДетальныеЗаписи.Документ.Метаданные().Имя;
			ПредставленияДокументов.Свойство(ИмяДокумента, ПредставлениеДокумента);
			ПредставленияВладельцевДокументов.Свойство(ИмяДокумента, ПредставлениеВладельцаДокумента);
			
			Если ЗначениеЗаполнено(ПредставлениеВладельцаДокумента) Тогда
				ПредставлениеВладельцаДокумента = ПредставлениеВладельцаДокумента + " " + ?(ДетальныеЗаписи.ЭтоВходящийДокумент,
				СтруктураПредставленийУчастников.КонтрагентНаименование,
				СтруктураПредставленийУчастников.ПредставлениеОрганизации);
			КонецЕсли;
			
			ОписаниеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 №%2 от %3'"),
			?(ПредставлениеДокумента <> Неопределено, ПредставлениеДокумента, ""),
			?(ЗначениеЗаполнено(ДетальныеЗаписи.Номер), ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДетальныеЗаписи.Номер), "_______"),
			?(ЗначениеЗаполнено(ДетальныеЗаписи.ДатаВходящегоДокумента), Формат(ДетальныеЗаписи.ДатаВходящегоДокумента, "ДЛФ=D") + " " + НСтр("ru='г.'"), "'  .  .    '"));
			
			Если ЗначениеЗаполнено(ДетальныеЗаписи.ОрганизацияРеглУчет) Тогда
				
				СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДетальныеЗаписи.ОрганизацияРеглУчет, ДанныеДокумента.Дата);
				ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, 
				"ПолноеНаименование");
				
				ОписаниеДокумента = НСтр("ru='Перенос задолженности'");
				ПредставлениеВладельцаДокумента = НСтр("ru='от'") + " " + ПредставлениеОрганизации;
				
			КонецЕсли;
			
			ОбластьМакетаСтрока.Параметры.Дата = Формат(ДетальныеЗаписи.Дата, "ДЛФ=ДД");
			ОбластьМакетаСтрока.Параметры.Документ = ОписаниеДокумента;
			ОбластьМакетаСтрока.Параметры.ОтКого = ПредставлениеВладельцаДокумента;
			ОбластьМакетаСтрока.Параметры.СуммаДолгПартнера = ДетальныеЗаписи.СуммаДолгПартнера;
			ОбластьМакетаСтрока.Параметры.СуммаНашДолг = ДетальныеЗаписи.СуммаНашДолг;
			ОбластьМакетаСтрока.Параметры.ДокументСсылка = ДетальныеЗаписи.Документ;
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			ПервыйПроход = Ложь;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Если ПервыйПроход
		И ЗначениеЗаполнено(ДанныеДокумента.НачалоПериода) Тогда
		
		ОбластьМакетаНачОстаток.Параметры.НачалоПериодаСверки = Формат(ДанныеДокумента.НачалоПериода, "ДЛФ=ДД");
		Если НачальныйОстаток > 0 Тогда
			ОбластьМакетаНачОстаток.Параметры.СуммаНашДолг = 0;
			ОбластьМакетаНачОстаток.Параметры.СуммаДолгПартнера = НачальныйОстаток;
		Иначе
			ОбластьМакетаНачОстаток.Параметры.СуммаНашДолг = -НачальныйОстаток;
			ОбластьМакетаНачОстаток.Параметры.СуммаДолгПартнера = 0;
		КонецЕсли;				
		ТабличныйДокумент.Вывести(ОбластьМакетаНачОстаток);
		
	КонецЕсли;
	
	ОбластьМакетаКонОстаток.Параметры.КонецПериодаСверки = Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД");
	Если КонечныйОстаток > 0 Тогда
		ОбластьМакетаКонОстаток.Параметры.СуммаНашДолг = 0;
		ОбластьМакетаКонОстаток.Параметры.СуммаДолгПартнера = КонечныйОстаток;
	Иначе
		ОбластьМакетаКонОстаток.Параметры.СуммаНашДолг = -КонечныйОстаток;
		ОбластьМакетаКонОстаток.Параметры.СуммаДолгПартнера = 0;
	КонецЕсли;				
	ТабличныйДокумент.Вывести(ОбластьМакетаКонОстаток);
	
	Если КонечныйОстаток <> 0 Тогда
		СтрокаЗадолженности.Сумма = КонечныйОстаток;
	Иначе
		ТаблицаЗадолженности.Удалить(СтрокаЗадолженности);
	КонецЕсли; 
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ОстаткиРасчетов(ДанныеДокумента) 
	
	ЗапросНашихДанных = Новый Запрос;
	
	ЗапросНашихДанных.Текст = ТекстЗапросаОтборПоАналитике() + "
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.ЗаказКлиента				КАК РасчетныйДокумент,
	|	ОстаткиЗадолженности.Валюта						КАК ВалютаВзаиморасчетов,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер		КАК Партнер,
	|	ВЫБОР
	|		КОГДА ОстаткиЗадолженности.СуммаОстаток > 0
	|			ТОГДА ОстаткиЗадолженности.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СуммаДолгПартнера,
	|	ВЫБОР
	|		КОГДА ОстаткиЗадолженности.СуммаОстаток < 0
	|			ТОГДА -ОстаткиЗадолженности.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СуммаНашДолг
	|ПОМЕСТИТЬ ОстаткиЗадолженностиРазвернуто
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(
	|			&КонецПериодаСверки,
	|			АналитикаУчетаПоПартнерам В (ВЫБРАТЬ
	|											ОтборПоАналитике.КлючАналитики
	|										 ИЗ
	|											ОтборПоАналитике)
	|			) КАК ОстаткиЗадолженности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО ОстаткиЗадолженности.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.ЗаказПоставщику			КАК РасчетныйДокумент,
	|	ОстаткиЗадолженности.Валюта						КАК ВалютаВзаиморасчетов,
	|	РегистрАналитикаУчетаПоПартнерам.Партнер		КАК Партнер,
	|	ВЫБОР
	|		КОГДА ОстаткиЗадолженности.СуммаОстаток > 0
	|			ТОГДА ОстаткиЗадолженности.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СуммаДолгПартнера,
	|	ВЫБОР
	|		КОГДА ОстаткиЗадолженности.СуммаОстаток < 0
	|			ТОГДА -ОстаткиЗадолженности.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ											КАК СуммаНашДолг
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Остатки(
	|			&КонецПериодаСверки,
	|			АналитикаУчетаПоПартнерам В (ВЫБРАТЬ
	|											ОтборПоАналитике.КлючАналитики
	|										 ИЗ
	|											ОтборПоАналитике)
	|			) КАК ОстаткиЗадолженности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО ОстаткиЗадолженности.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		  КАК РасчетныйДокумент,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	  КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	  КАК Партнер,
	|	СУММА(ОстаткиЗадолженности.СуммаДолгПартнера) КАК СуммаДолгПартнера,
	|	СУММА(ОстаткиЗадолженности.СуммаНашДолг)	  КАК СуммаНашДолг
	|ПОМЕСТИТЬ ОстаткиЗадолженности
	|ИЗ
	|	ОстаткиЗадолженностиРазвернуто КАК ОстаткиЗадолженности
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиЗадолженности.РасчетныйДокумент,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ПОМЕСТИТЬ ЗадолженностьПоДокументамРасчетов
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ПоступлениеУслугПрочихАктивов КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ОтчетКомитентуОСписании КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	Неопределено								КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	Неопределено								КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.КорректировкаПоступления КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.КорректировкаРеализации КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер				КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.Номер						КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.Дата						КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыКлиентом КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	ДанныеДокумента.НомерВходящегоДокумента		КАК НомерРасчетногоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента		КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер				КАК Партнер,
	|	ДанныеДокумента.Договор						КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыУПоставщика КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК РасчетныйДокумент,
	|	НЕОПРЕДЕЛЕНО								КАК НомерРасчетногоДокумента,
	|	НЕОПРЕДЕЛЕНО								КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 	КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 	КАК Партнер,
	|	ОстаткиЗадолженности.РасчетныйДокумент		КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера		КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг			КАК СуммаНашДолг
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|		ПО ОстаткиЗадолженности.РасчетныйДокумент = ДанныеДокумента.Ссылка
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадолженностьПоДокументамРасчетов.РасчетныйДокумент		   КАК РасчетныйДокумент,
	|	ЗадолженностьПоДокументамРасчетов.НомерРасчетногоДокумента КАК НомерРасчетногоДокумента,
	|	ЗадолженностьПоДокументамРасчетов.ДатаРасчетногоДокумента  КАК ДатаРасчетногоДокумента,
	|	ЗадолженностьПоДокументамРасчетов.ВалютаВзаиморасчетов	   КАК ВалютаВзаиморасчетов,
	|	ЗадолженностьПоДокументамРасчетов.Партнер				   КАК Партнер,
	|	ЗадолженностьПоДокументамРасчетов.Договор				   КАК Договор,
	|	ЗадолженностьПоДокументамРасчетов.СуммаДолгПартнера		   КАК СуммаДолгПартнера,
	|	ЗадолженностьПоДокументамРасчетов.СуммаНашДолг			   КАК СуммаНашДолг
	|ИЗ
	|	ЗадолженностьПоДокументамРасчетов КАК ЗадолженностьПоДокументамРасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|		
	|ВЫБРАТЬ
	|	Неопределено											   КАК РасчетныйДокумент,
	|	Неопределено											   КАК НомерРасчетногоДокумента,
	|	Неопределено											   КАК ДатаРасчетногоДокумента,
	|	ОстаткиЗадолженности.ВалютаВзаиморасчетов 				   КАК ВалютаВзаиморасчетов,
	|	ОстаткиЗадолженности.Партнер			 				   КАК Партнер,
	|	Неопределено											   КАК Договор,
	|	ОстаткиЗадолженности.СуммаДолгПартнера					   КАК СуммаДолгПартнера,
	|	ОстаткиЗадолженности.СуммаНашДолг						   КАК СуммаНашДолг
	|ИЗ
	|	ОстаткиЗадолженности КАК ОстаткиЗадолженности
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЗадолженностьПоДокументамРасчетов КАК ЗадолженностьПоДокументамРасчетов
	|		ПО ЗадолженностьПоДокументамРасчетов.РасчетныйДокумент = ОстаткиЗадолженности.РасчетныйДокумент
	|		И ЗадолженностьПоДокументамРасчетов.ВалютаВзаиморасчетов = ОстаткиЗадолженности.ВалютаВзаиморасчетов
	|ГДЕ
	|	ЗадолженностьПоДокументамРасчетов.РасчетныйДокумент ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРасчетногоДокумента,
	|	НомерРасчетногоДокумента
	|";
	
	ЗапросНашихДанных.УстановитьПараметр("КонецПериодаСверки", Новый Граница(
	КонецДня(ДанныеДокумента.КонецПериода),
	ВидГраницы.Включая));
	ЗапросНашихДанных.УстановитьПараметр("Организация",		   ДанныеДокумента.Организация);
	ЗапросНашихДанных.УстановитьПараметр("Контрагент",		   ДанныеДокумента.Контрагент);
	ЗапросНашихДанных.УстановитьПараметр("Партнер",		  	   ДанныеДокумента.Партнер);
	ЗапросНашихДанных.УстановитьПараметр("Договор",		  	   ДанныеДокумента.Договор);
	ЗапросНашихДанных.УстановитьПараметр("НеИспользоватьОтборПоПартнеру", НЕ ЗначениеЗаполнено(ДанныеДокумента.Партнер));
	ЗапросНашихДанных.УстановитьПараметр("НеИспользоватьОтборПоДоговору", НЕ ЗначениеЗаполнено(ДанныеДокумента.Договор));
	
	РезультатЗапросаНашихДанных = ЗапросНашихДанных.Выполнить();
	
	Если НЕ РезультатЗапросаНашихДанных.Пустой() Тогда
		ТаблицаНашихДанных = РезультатЗапросаНашихДанных.Выгрузить();
		
		СписокПолейГруппировки = "ВалютаВзаиморасчетов";
		Если ДанныеДокумента.РасшифровкаПоЗаказам Тогда
			СписокПолейГруппировки = СписокПолейГруппировки + ", РасчетныйДокумент, НомерРасчетногоДокумента, ДатаРасчетногоДокумента";
		КонецЕсли; 
		Если ДанныеДокумента.РасшифровкаПоПартнерам Тогда
			СписокПолейГруппировки = СписокПолейГруппировки + ", Партнер";
		КонецЕсли;
		Если ДанныеДокумента.РасшифровкаПоДоговорам Тогда
			СписокПолейГруппировки = СписокПолейГруппировки + ", Договор";
		КонецЕсли;
		ТаблицаНашихДанных.Свернуть(СписокПолейГруппировки, "СуммаДолгПартнера, СуммаНашДолг");
	Иначе
		ТаблицаНашихДанных = Неопределено;
	КонецЕсли;
	
	Возврат ТаблицаНашихДанных;
	
КонецФункции

&НаСервере
Функция ВывестиТаблицуЗадолженности(
	ДанныеДокумента, 
	ТаблицаОстатков, 
	МассивВалют, 
	Партнер = Неопределено, 
	СтруктураПредставленийУчастников, 
	Макет, 
	ВыводитьПодвал = Ложь, 
	ТаблицаРасхождений = Неопределено, 
	ЭтоДанныеКонтрагента = Ложь)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьМакетаГруппировка = Макет.ПолучитьОбласть("ГруппировкаПартнерВалюта");
	ОбластьМакетаШапка		 = Макет.ПолучитьОбласть("ШапкаТаблицыЗадолженность");
	ОбластьМакетаСтрока 	 = Макет.ПолучитьОбласть("СтрокаТаблицыЗадолженность");
	Если ВыводитьПодвал Тогда
		ОбластьМакетаПодвал  = Макет.ПолучитьОбласть("ПодвалТаблицыЗадолженность");
	КонецЕсли; 
	
	ПредставлениеПартнера = ПредставлениеПартнера(Партнер);
	
	Для Каждого ВалютаВзаиморасчетов Из МассивВалют Цикл
		
		СуммаДолгПартнера = 0;
		СуммаНашДолг = 0;
		
		СтруктураОтбора = Новый Структура("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
		Если Партнер <> Неопределено Тогда
			СтруктураОтбора.Вставить("Партнер", Партнер);
		КонецЕсли; 
		МассивСтрокЗадолженности = ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрокЗадолженности.Количество() > 0 Тогда
			Если Партнер <> Неопределено Тогда
				ОбластьМакетаГруппировка.Параметры.ПартнерВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1, в валюте: %2'"), ПредставлениеПартнера, ВалютаВзаиморасчетов);
			Иначе
				ОбластьМакетаГруппировка.Параметры.ПартнерВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='в валюте: %1'"), ВалютаВзаиморасчетов);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьМакетаГруппировка);
			ОбластьМакетаШапка.Параметры.Заполнить(СтруктураПредставленийУчастников);
			ТабличныйДокумент.Вывести(ОбластьМакетаШапка);
		КонецЕсли;
		
		Для Каждого СтрокаЗадолженности Из МассивСтрокЗадолженности Цикл
			
			ОбластьМакетаСтрока.Параметры.СуммаДолгПартнера = СтрокаЗадолженности.СуммаДолгПартнера;
			ОбластьМакетаСтрока.Параметры.СуммаНашДолг 		= СтрокаЗадолженности.СуммаНашДолг;
			Если ТаблицаОстатков.Колонки.Найти("РасчетныйДокумент") <> Неопределено Тогда
				ОбластьМакетаСтрока.Параметры.ДокументСсылка = СтрокаЗадолженности.РасчетныйДокумент;
			КонецЕсли; 
			Если НЕ ЭтоДанныеКонтрагента Тогда
				Если ТаблицаОстатков.Колонки.Найти("РасчетныйДокумент") <> Неопределено Тогда
					ОбластьМакетаСтрока.Параметры.Документ = ОписаниеРасчетногоДокумента(СтрокаЗадолженности.РасчетныйДокумент,
					СтрокаЗадолженности.НомерРасчетногоДокумента,
					СтрокаЗадолженности.ДатаРасчетногоДокумента,
					СтруктураПредставленийУчастников,
					(СтрокаЗадолженности.СуммаДолгПартнера > 0));
				КонецЕсли;
			Иначе
				ОбластьМакетаСтрока.Параметры.Документ = СтрокаЗадолженности.ОписаниеДокумента;
			КонецЕсли; 
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			СуммаДолгПартнера = СуммаДолгПартнера + СтрокаЗадолженности.СуммаДолгПартнера;
			СуммаНашДолг	  = СуммаНашДолг 	  + СтрокаЗадолженности.СуммаНашДолг;
			
		КонецЦикла; 
		
		Если ВыводитьПодвал Тогда
			ОбластьМакетаПодвал.Параметры.СуммаДолгПартнера = СуммаДолгПартнера;
			ОбластьМакетаПодвал.Параметры.СуммаНашДолг = СуммаНашДолг;
			ОбластьМакетаПодвал.Параметры.КонецПериодаСверки = Формат(ДанныеДокумента.КонецПериода, "ДЛФ=ДД");
			ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		КонецЕсли; 
		
		Если ТаблицаРасхождений <> Неопределено Тогда
			СтрокаТаблицыРасхождений = ТаблицаРасхождений.Добавить();
			СтрокаТаблицыРасхождений.ВалютаВзаиморасчетов = ВалютаВзаиморасчетов;
			Если Партнер <> Неопределено Тогда
				СтрокаТаблицыРасхождений.Партнер = Партнер;
			КонецЕсли; 
			Если НЕ ЭтоДанныеКонтрагента Тогда
				СтрокаТаблицыРасхождений.СуммаДолгПартнера = СуммаДолгПартнера;
				СтрокаТаблицыРасхождений.СуммаНашДолг = СуммаНашДолг;
			Иначе
				СтрокаТаблицыРасхождений.СуммаДолгПартнера = -СуммаДолгПартнера;
				СтрокаТаблицыРасхождений.СуммаНашДолг = -СуммаНашДолг;
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаОтборПоАналитике()
	
	Возврат "
	|ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ОтборПоАналитике
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация = &Организация
	|	И АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
	|	И (АналитикаУчетаПоПартнерам.Партнер = &Партнер
	|		ИЛИ &НеИспользоватьОтборПоПартнеру)
	|	И (АналитикаУчетаПоПартнерам.Договор = &Договор
	|		ИЛИ &НеИспользоватьОтборПоДоговору)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

&НаСервере
Функция ПредставлениеПартнера(Партнер)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	Партнеры.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Ссылка = &Партнер
	|")
	;
	Запрос.УстановитьПараметр("Партнер", Партнер);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПредставлениеПартнера = Выборка.НаименованиеПолное;
	Иначе
		ПредставлениеПартнера = "";
	КонецЕсли;
	
	Возврат ПредставлениеПартнера;
	
КонецФункции

&НаСервере
Функция ПредставлениеДоговора(Договор)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	ДоговорыКонтрагентов.НаименованиеДляПечати КАК НаименованиеДляПечати
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Договор
	|")
	;
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПредставлениеДоговора = Выборка.НаименованиеДляПечати;
	Иначе
		ПредставлениеДоговора = "";
	КонецЕсли;
	
	Возврат ПредставлениеДоговора;
	
КонецФункции

&НаСервере
Функция ПредставленияДокументов()
	
	ВидыДокументовКонтрагента = Новый Структура;
	
	ВидыДокументовКонтрагента.Вставить("АвансовыйОтчет",						НСтр("ru='Приходный кассовый ордер'"));
	ВидыДокументовКонтрагента.Вставить("АктВыполненныхРабот", 					НСтр("ru='Акт выполненных работ'"));
	ВидыДокументовКонтрагента.Вставить("ВводОстатков",							НСтр("ru='Корректировка задолженности'"));
	ВидыДокументовКонтрагента.Вставить("ВзаимозачетЗадолженности",				НСтр("ru='Взаимозачет задолженности'"));
	ВидыДокументовКонтрагента.Вставить("ВозвратТоваровМеждуОрганизациями",		НСтр("ru='Накладная (возврат)'"));
	ВидыДокументовКонтрагента.Вставить("ВозвратТоваровОтКлиента",				НСтр("ru='Накладная (возврат)'"));
	ВидыДокументовКонтрагента.Вставить("ВозвратТоваровПоставщику",				НСтр("ru='Накладная (возврат)'"));
	ВидыДокументовКонтрагента.Вставить("ВыкупВозвратнойТарыКлиентом", 			НСтр("ru='Выкуп возвратной тары'"));
	ВидыДокументовКонтрагента.Вставить("ВыкупВозвратнойТарыУПоставщика", 		НСтр("ru='Выкуп возвратной тары'"));
	ВидыДокументовКонтрагента.Вставить("ЗаказКлиента", 							НСтр("ru='Заказ'"));
	ВидыДокументовКонтрагента.Вставить("ЗаказПоставщику", 						НСтр("ru='Заказ'"));
	ВидыДокументовКонтрагента.Вставить("ЗаявкаНаВозвратТоваровОтКлиента", 		НСтр("ru='Заказ (возврат)'"));
	ВидыДокументовКонтрагента.Вставить("КорректировкаПоступления",				НСтр("ru='Корректировка задолженности'"));
	ВидыДокументовКонтрагента.Вставить("КорректировкаРеализации",				НСтр("ru='Корректировка задолженности'"));
	ВидыДокументовКонтрагента.Вставить("КорректировкаРегистров",				НСтр("ru='Корректировка задолженности'"));
	ВидыДокументовКонтрагента.Вставить("ОперацияПоПлатежнойКарте",				НСтр("ru='Эквайринговая операция'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомиссионера",						НСтр("ru='Отчет комитенту'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомиссионераОСписании",			НСтр("ru='Отчет комитенту'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомитенту",						НСтр("ru='Отчет комитенту'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомитентуОСписании",				НСтр("ru='Отчет комитенту'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетПоКомиссииМеждуОрганизациями",		НСтр("ru='Отчет комитенту'"));
	ВидыДокументовКонтрагента.Вставить("ПередачаТоваровМеждуОрганизациями",		НСтр("ru='Накладная'"));
	ВидыДокументовКонтрагента.Вставить("ПоступлениеБезналичныхДенежныхСредств", НСтр("ru='Платежное поручение'"));
	ВидыДокументовКонтрагента.Вставить("ПоступлениеТоваровУслуг",				НСтр("ru='Накладная'"));
	ВидыДокументовКонтрагента.Вставить("ПоступлениеУслугПрочихАктивов",			НСтр("ru='Акт'"));
	ВидыДокументовКонтрагента.Вставить("ПриходныйКассовыйОрдер",				НСтр("ru='Приходный кассовый ордер'"));
	ВидыДокументовКонтрагента.Вставить("РасходныйКассовыйОрдер",				НСтр("ru='Расходный кассовый ордер'"));
	ВидыДокументовКонтрагента.Вставить("РеализацияТоваровУслуг", 				НСтр("ru='Накладная'"));
	ВидыДокументовКонтрагента.Вставить("РеализацияУслугПрочихАктивов",			НСтр("ru='Акт'"));
	ВидыДокументовКонтрагента.Вставить("СписаниеБезналичныхДенежныхСредств", 	НСтр("ru='Платежное поручение'"));
	ВидыДокументовКонтрагента.Вставить("СписаниеЗадолженности", 				НСтр("ru='Списание задолженности'"));
	ВидыДокументовКонтрагента.Вставить("СчетНаОплатуКлиенту", 					НСтр("ru='Счет на оплату'"));
	ВидыДокументовКонтрагента.Вставить("СчетФактураВыданный", 					НСтр("ru='Счет-фактура'"));
	ВидыДокументовКонтрагента.Вставить("СчетФактураПолученный", 				НСтр("ru='Счет-фактура'"));
	ВидыДокументовКонтрагента.Вставить("ТаможеннаяДекларацияИмпорт", 			НСтр("ru='Таможенная декларация'"));
	
	Возврат ВидыДокументовКонтрагента;
	
КонецФункции

&НаСервере
Функция ПредставленияВладельцевДокументов()
	
	ВидыДокументовКонтрагента = Новый Структура;
	
	ВидыДокументовКонтрагента.Вставить("АвансовыйОтчет",						НСтр("ru='получатель'"));
	ВидыДокументовКонтрагента.Вставить("АктВыполненныхРабот", 					НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ВозвратТоваровМеждуОрганизациями",		НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ВозвратТоваровОтКлиента",				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ВозвратТоваровПоставщику",				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ЗаказКлиента", 							НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ЗаказПоставщику", 						НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ЗаявкаНаВозвратТоваровОтКлиента", 		НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("КорректировкаПоступления",				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("КорректировкаРеализации",				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ОперацияПоПлатежнойКарте",				НСтр("ru='плательщик'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомиссионера",						НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомиссионераОСписании",			НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомитенту",						НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетКомитентуОСписании",				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ОтчетПоКомиссииМеждуОрганизациями",		НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ПередачаТоваровМеждуОрганизациями",		НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ПоступлениеБезналичныхДенежныхСредств", НСтр("ru='плательщик'"));
	ВидыДокументовКонтрагента.Вставить("ПоступлениеТоваровУслуг",				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ПоступлениеУслугПрочихАктивов", 		НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ПриходныйКассовыйОрдер",				НСтр("ru='получатель'"));
	ВидыДокументовКонтрагента.Вставить("РасходныйКассовыйОрдер",				НСтр("ru='плательщик'"));
	ВидыДокументовКонтрагента.Вставить("РеализацияТоваровУслуг", 				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("РеализацияУслугПрочихАктивов", 			НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("СписаниеБезналичныхДенежныхСредств", 	НСтр("ru='плательщик'"));
	ВидыДокументовКонтрагента.Вставить("СчетНаОплатуКлиенту", 					НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("СчетФактураВыданный", 					НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("СчетФактураПолученный", 				НСтр("ru='от'"));
	ВидыДокументовКонтрагента.Вставить("ТаможеннаяДекларацияИмпорт", 			НСтр("ru='от'"));
	
	Возврат ВидыДокументовКонтрагента;
	
КонецФункции

&НаСервере
Функция ОписаниеРасчетногоДокумента(
	ДокументСсылка,
	Номер, 
	Дата, 
	СтруктураПредставленийУчастников,
	ЭтоДолгПартнера = Неопределено) Экспорт
	
	ПредставленияДокументов     	  = ПредставленияДокументов();
	ПредставленияВладельцевДокументов = ПредставленияВладельцевДокументов();
	МассивДокументовКонтрагента		  = ИменаМетаданныхВходящихДокументов();
	
	ПредставлениеДокумента = "";
	ПредставлениеВладельцаДокумента = "";
	
	Если ТипЗнч(ДокументСсылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ОписаниеДокумента = ДокументСсылка;
		
	ИначеЕсли ДокументСсылка <> Неопределено И НЕ ДокументСсылка.Пустая() Тогда
		
		ПредставленияДокументов.Свойство(ДокументСсылка.Метаданные().Имя, ПредставлениеДокумента);
		
		ОписаниеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='%1 №%2 от %3'"),
		?(ПредставлениеДокумента <> Неопределено, ПредставлениеДокумента, ""),
		?(ЗначениеЗаполнено(Номер), ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Номер), "_______"),
		?(ЗначениеЗаполнено(Дата), Формат(Дата, "ДЛФ=D") + " " + НСтр("ru='г.'"), "'  .  .    '"));
		
		ПредставленияВладельцевДокументов.Свойство(ДокументСсылка.Метаданные().Имя, ПредставлениеВладельцаДокумента);
		
		Если ЗначениеЗаполнено(ПредставлениеВладельцаДокумента) Тогда
			
			Если МассивДокументовКонтрагента.Найти(ДокументСсылка.Метаданные().Имя) <> Неопределено Тогда
				ВладелецДокумента = СтруктураПредставленийУчастников.КонтрагентНаименование;
			Иначе
				ВладелецДокумента = СтруктураПредставленийУчастников.ПредставлениеОрганизации;
			КонецЕсли;
			
			ОписаниеДокумента = ОписаниеДокумента + " (" + ПредставлениеВладельцаДокумента + " " + ВладелецДокумента + ")";
		КонецЕсли;
		
	Иначе
		
		ПредставлениеДебитора = "";
		Если ЭтоДолгПартнера <> Неопределено Тогда
			ПредставлениеДебитора = ?(ЭтоДолгПартнера,
			СтруктураПредставленийУчастников.ПредставлениеОрганизации,
			СтруктураПредставленийУчастников.КонтрагентНаименование);
		КонецЕсли;
		
		ОписаниеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Предоплата от %1'"), ПредставлениеДебитора);
		
	КонецЕсли;
	
	Возврат ОписаниеДокумента;
	
КонецФункции

&НаСервере
Функция ИменаМетаданныхВходящихДокументов()
	
	МассивДокументовКонтрагента = Новый Массив;
	
	МассивДокументовКонтрагента.Добавить("АвансовыйОтчет");
	МассивДокументовКонтрагента.Добавить("ВозвратТоваровОтКлиента");
	МассивДокументовКонтрагента.Добавить("ЗаказКлиента");
	МассивДокументовКонтрагента.Добавить("ЗаявкаНаВозвратТоваровОтКлиента");
	МассивДокументовКонтрагента.Добавить("КорректировкаПоступления");
	МассивДокументовКонтрагента.Добавить("ОтчетКомиссионера");
	МассивДокументовКонтрагента.Добавить("ОтчетКомиссионераОСписании");
	МассивДокументовКонтрагента.Добавить("ПоступлениеБезналичныхДенежныхСредств");
	МассивДокументовКонтрагента.Добавить("ПоступлениеТоваровУслуг");
	МассивДокументовКонтрагента.Добавить("ПоступлениеУслугПрочихАктивов");
	МассивДокументовКонтрагента.Добавить("СчетФактураПолученный");
	МассивДокументовКонтрагента.Добавить("ТаможеннаяДекларацияИмпорт");
	
	Возврат МассивДокументовКонтрагента; 
	
КонецФункции

&НаКлиенте
Процедура Команда2(Команда)
	
	МассивКА = ПолучитьКонтрагентов();
	Сч = 1;
	Для каждого стр из МассивКА цикл 
		УвеличитьВремяНа = Сч + 300;
		ОтправитьАктСверки(стр, УвеличитьВремяНа);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагентов()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|		ПО Контрагенты.Партнер = Партнеры.Ссылка
	|ГДЕ
	|	Партнеры.ЦС_АктСверки = ИСТИНА";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивКонтрагентов = Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивКонтрагентов.Добавить(ВыборкаДетальныеЗаписи.Ссылка); 
	КонецЦикла;
	
	Возврат МассивКонтрагентов; 
	
КонецФункции

