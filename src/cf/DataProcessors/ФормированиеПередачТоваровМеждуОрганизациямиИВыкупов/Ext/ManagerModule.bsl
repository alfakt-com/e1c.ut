#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьДокументыПередачи(Параметры, АдресВременногоХранилища) Экспорт
	
	Перем Результат;
	
	СозданныеДокументы = Параметры.СозданныеДокументы;
	
	ТекущийДень = Параметры.Период.ДатаНачала;
	Если Параметры.ОформлятьПередачи Тогда
		ДействиеСЦенамиПередачи = Параметры.ДействиеСЦенамиПередачи;
	Иначе
		ДействиеСЦенамиПередачи = "НеПроверять";
	КонецЕсли;
	
	ПараметрыЗапросаОтрицательныхОстатков = ПараметрыЗапросаОтрицательныхОстатков(Параметры);
	
	ТаблицаНоменклатурыСОтрицательнымиОстатками = КомпоновкаДанныхСервер.ВыгрузитьРезультатСКД(ПараметрыЗапросаОтрицательныхОстатков);
	ТаблицаНоменклатурыСОтрицательнымиОстатками.Индексы.Добавить("АналитикаУчетаНоменклатуры, НомерГТД, Период");	
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.НалогообложениеНДСВидаЗапасов КАК НалогообложениеНДСВидаЗапасов,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.ВладелецТовараВидаЗапасов КАК ВладелецТовараВидаЗапасов,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.Серия КАК Серия,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.Склад КАК Склад,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.Назначение КАК Назначение,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.НомерГТД КАК НомерГТД,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.КоличествоКПередаче КАК КоличествоКПередаче,
	|	ТаблицаНоменклатурыСОтрицательнымиОстатками.Период КАК Период
	|ПОМЕСТИТЬ ИмяВтОтрицательныеОстатки
	|ИЗ
	|	&ТаблицаНоменклатурыСОтрицательнымиОстатками КАК ТаблицаНоменклатурыСОтрицательнымиОстатками
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ТипЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтОтрицательныеОстатки.Период КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодовДляЗапроса
	|ИЗ
	|	ИмяВтОтрицательныеОстатки КАК ВтОтрицательныеОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПериодовДляЗапроса.Период КАК Период
	|ИЗ
	|	ТаблицаПериодовДляЗапроса КАК ТаблицаПериодовДляЗапроса
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|//%ТекстВТОтправителиДляЗапроса%
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВыбранныеОтправители.Отправитель) = ТИП(Справочник.Организации)
	|			ТОГДА ВыбранныеОтправители.Отправитель
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ВыбранныеОтправители.Отправитель) = ТИП(Справочник.Партнеры)
	|			ТОГДА ВыбранныеОтправители.Отправитель
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	КОНЕЦ КАК Поклажедатель,
	|	ВыбранныеОтправители.ВидЦен КАК ВидЦен,
	|	ВыбранныеОтправители.ТипЗапасов КАК ТипЗапасов,
	|	ВыбранныеОтправители.Договор КАК Договор,
	|	ВыбранныеОтправители.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВыбранныеОтправители.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ ВТОтправители
	|ИЗ
	|	ВТОтправителиДляЗапроса КАК ВыбранныеОтправители
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтправителиДляЗапроса
	|";
	
	Если Параметры.ДействиеСЦенамиПередачи <> "НеПроверять" Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтОтрицательныеОстатки.Номенклатура КАК Номенклатура,
		|	ВтОтрицательныеОстатки.Характеристика КАК Характеристика,
		|	ВТОтправители.ВидЦен
		|ПОМЕСТИТЬ ВтОтборыЦен
		|ИЗ
		|	ИмяВтОтрицательныеОстатки КАК ВтОтрицательныеОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтправители КАК ВТОтправители
		|		ПО (ТИПЗНАЧЕНИЯ(ВТОтправители.ВидЦен) = ТИП(Справочник.ВидыЦен))
		|ГДЕ
		|	&ОформлятьПередачи
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	ВидЦен";
	КонецЕсли;	
	
	Если ДействиеСЦенамиПередачи = "ИсключитьТоварыБезЦен" Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
	
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтОтборыЦен.Номенклатура КАК Номенклатура,
		|	ВтОтборыЦен.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ НеустановленныеЦены
		|ИЗ
		|	ВтОтборыЦен КАК ВтОтборыЦен
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				&НачалоПериода,
		|				&ОформлятьПередачи
		|					И (Номенклатура, Характеристика, ВидЦены) В
		|						(ВЫБРАТЬ
		|							ВтОтборыЦен.Номенклатура,
		|							ВтОтборыЦен.Характеристика,
		|							ВтОтборыЦен.ВидЦен
		|						ИЗ
		|							ВтОтборыЦен КАК ВтОтборыЦен)) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ВтОтборыЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ВтОтборыЦен.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И ВтОтборыЦен.ВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦены
		|ГДЕ
		|	&ОформлятьПередачи
		|	И ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) = 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтОтрицательныеОстаткиДляЗапроса.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВтОтрицательныеОстаткиДляЗапроса.НалогообложениеНДСВидаЗапасов КАК НалогообложениеНДСВидаЗапасов,
		|	ВтОтрицательныеОстаткиДляЗапроса.ВидЗапасов КАК ВидЗапасов,
		|	ВтОтрицательныеОстаткиДляЗапроса.ТипЗапасов КАК ТипЗапасов,
		|	ВтОтрицательныеОстаткиДляЗапроса.ВладелецТовараВидаЗапасов КАК ВладелецТовараВидаЗапасов,
		|	ВтОтрицательныеОстаткиДляЗапроса.Номенклатура КАК Номенклатура,
		|	ВтОтрицательныеОстаткиДляЗапроса.СтавкаНДС КАК СтавкаНДС,
		|	ВтОтрицательныеОстаткиДляЗапроса.Характеристика КАК Характеристика,
		|	ВтОтрицательныеОстаткиДляЗапроса.Серия КАК Серия,
		|	ВтОтрицательныеОстаткиДляЗапроса.Назначение КАК Назначение,
		|	ВтОтрицательныеОстаткиДляЗапроса.Склад КАК Склад,
		|	ВтОтрицательныеОстаткиДляЗапроса.НомерГТД КАК НомерГТД,
		|	ВтОтрицательныеОстаткиДляЗапроса.КоличествоКПередаче КАК КоличествоКПередаче,
		|	ВтОтрицательныеОстаткиДляЗапроса.Период КАК Период
		|ПОМЕСТИТЬ ВтОтрицательныеОстатки
		|ИЗ
		|	ВтОтрицательныеОстаткиДляЗапроса КАК ВтОтрицательныеОстаткиДляЗапроса
		|		ЛЕВОЕ СОЕДИНЕНИЕ НеустановленныеЦены КАК НеустановленныеЦены
		|		ПО ВтОтрицательныеОстаткиДляЗапроса.Номенклатура = НеустановленныеЦены.Номенклатура
		|			И ВтОтрицательныеОстаткиДляЗапроса.Характеристика = НеустановленныеЦены.Характеристика
		|ГДЕ
		|	НеустановленныеЦены.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтОтрицательныеОстаткиДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтОтборыЦен";
	ИначеЕсли ДействиеСЦенамиПередачи = "Проверить" Тогда
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ВтОтборыЦен.Номенклатура КАК Номенклатура,
		|	ВтОтборыЦен.Характеристика КАК Характеристика,
		|	ВтОтборыЦен.ВидЦен КАК ВидЦены
		|ИЗ
		|	ВтОтборыЦен КАК ВтОтборыЦен
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&НачалоПериода, ДЕНЬ),
		|				&ОформлятьПередачи
		|				И (Номенклатура, Характеристика, ВидЦены) В
		|					(ВЫБРАТЬ
		|						ВтОтборыЦен.Номенклатура,
		|						ВтОтборыЦен.Характеристика,
		|						ВтОтборыЦен.ВидЦен
		|					ИЗ
		|						ВтОтборыЦен КАК ВтОтборыЦен)) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ВтОтборыЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ВтОтборыЦен.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И ВтОтборыЦен.ВидЦен = ЦеныНоменклатурыСрезПоследних.ВидЦены
		|ГДЕ
		|	&ОформлятьПередачи
		|	И ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВтОтборыЦен.Номенклатура.Наименование,
		|	ВтОтборыЦен.Характеристика.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВтОтборыЦен";
	КонецЕсли;
	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОформлятьПередачи", Параметры.ОформлятьПередачи);
	Запрос.УстановитьПараметр("ОформлятьВыкупы", Параметры.ОформлятьВыкупы);
	Запрос.УстановитьПараметр("ТипЗапасов", Параметры.ТипЗапасов);
	
	Если Параметры.ВариантВыбораОтправителей = "ПоУказаннымПриоритетам" Тогда
		ТекстВТОтправителиДляЗапроса =
		"ВЫБРАТЬ
		|	ВыбранныеОтправители.Отправитель КАК Отправитель,
		|	ВыбранныеОтправители.ВидЦен КАК ВидЦен,
		|	ВыбранныеОтправители.Договор КАК Договор,
		|	ВыбранныеОтправители.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ВыбранныеОтправители.ТипЗапасов КАК ТипЗапасов,
		|	ВыбранныеОтправители.НомерСтроки КАК Приоритет
		|ПОМЕСТИТЬ ВТОтправителиДляЗапроса
		|ИЗ
		|	&ВыбранныеОтправители КАК ВыбранныеОтправители";
	Иначе
		ТекстВТОтправителиДляЗапроса = ТекстЗапросаОтправителиПоНастройкамПередачи(Запрос, "ВТОтправителиДляЗапроса");
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстВТОтправителиДляЗапроса%", ТекстВТОтправителиДляЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Если ДействиеСЦенамиПередачи = "ИсключитьТоварыБезЦен" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВтОтрицательныеОстатки", "ВтОтрицательныеОстаткиДляЗапроса");		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВтОтрицательныеОстатки", "ВтОтрицательныеОстатки");		
	КонецЕсли;	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВыбранныеОтправители", Параметры.ВыбранныеОтправители);
	Запрос.УстановитьПараметр("ТаблицаНоменклатурыСОтрицательнымиОстатками", ТаблицаНоменклатурыСОтрицательнымиОстатками);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Параметры.Период.ДатаНачала));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Параметры.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	
	РезультатыЗапроса   = Запрос.ВыполнитьПакет();
	
	Если ДействиеСЦенамиПередачи = "Проверить" Тогда
		НеустановленныеЦены = РезультатыЗапроса[РезультатыЗапроса.ВГраница()-1].Выгрузить();
		
		Если НеустановленныеЦены.Количество() > 0 Тогда
			ДобавитьТаблицуВРезультат(Результат, "НеустановленныеЦены", НеустановленныеЦены); 
			ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВыборкаПериодов = РезультатыЗапроса[2].Выбрать();
	
	Пока ВыборкаПериодов.Следующий() Цикл
		
		ВсеПроведено = 
			СоздатьДокументыПоПериоду(ВыборкаПериодов.Период,
				ТаблицаНоменклатурыСОтрицательнымиОстатками,
				МенеджерВременныхТаблиц,
				Параметры,
				СозданныеДокументы); 
		Если Не ВсеПроведено Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	ДобавитьТаблицуВРезультат(Результат, "СозданныеДокументы", ТаблицаСозданныхДокументов(Параметры, СозданныеДокументы)); 
	ЗаполнитьСписокПроблемныхОрганизаций(Параметры,, Результат, Истина);
	
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
	
КонецПроцедуры

Функция ТаблицаСозданныхДокументов(Параметры, СозданныеДокументы) Экспорт
	
	ТекстыЗапросаИнформацииПоСозданнымДокументам = Новый Массив;
	
	Если Параметры.ОформлятьПередачи Тогда
		ТекстЗапроса =	
		"ВЫБРАТЬ
		|	ПередачаТоваровМеждуОрганизациями.Ссылка КАК Ссылка,
		|	ПередачаТоваровМеждуОрганизациями.Проведен КАК Проведен,
		|	ПередачаТоваровМеждуОрганизациями.Номер КАК Номер,
		|	ПередачаТоваровМеждуОрганизациями.Дата КАК Дата,
		|	ПередачаТоваровМеждуОрганизациями.Склад КАК Склад,
		|	ПередачаТоваровМеждуОрганизациями.Склад.Представление КАК СкладПредставление,
		|	ПередачаТоваровМеждуОрганизациями.Организация КАК Отправитель,
		|	ПередачаТоваровМеждуОрганизациями.Организация.Представление КАК ОтправительПредставление,
		|	ПередачаТоваровМеждуОрганизациями.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА ПередачаТоваровМеждуОрганизациями.Проведен
		|			ТОГДА 0
		|		КОГДА ПередачаТоваровМеждуОрганизациями.ПометкаУдаления
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
		|ГДЕ
		|	ПередачаТоваровМеждуОрганизациями.Ссылка В(&СозданныеДокументы)";
		
		ТекстыЗапросаИнформацииПоСозданнымДокументам.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если Параметры.ОформлятьВыкупы Тогда
	КонецЕсли;	
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросаИнформацииПоСозданнымДокументам, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	СкладПредставление,
	|	ОтправительПредставление";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СозданныеДокументы", СозданныеДокументы);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СоздатьДокументыПоПериоду(ТекущийПериод, ТаблицаНоменклатурыСОтрицательнымиОстатками, МенеджерВременныхТаблиц, ПараметрыСоздания, СозданныеДокументы)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;                     
	Запрос.УстановитьПараметр("Получатель", ПараметрыСоздания.Организация);
	Запрос.УстановитьПараметр("Организация", ПараметрыСоздания.Организация);
	Запрос.УстановитьПараметр("ХозяйственныеОперацииВыкупа", ХозяйственныеОперацииВыкупа());
	Запрос.УстановитьПараметр("ОформлятьПередачи", ПараметрыСоздания.ОформлятьПередачи);
	Запрос.УстановитьПараметр("ОформлятьВыкупы", ПараметрыСоздания.ОформлятьВыкупы);
	Запрос.УстановитьПараметр("ТипЗапасов", ПараметрыСоздания.ТипЗапасов);
		
	Если ПараметрыСоздания.ПериодичностьФормированияДокументов = "ПоМесяцам" Тогда
		Запрос.УстановитьПараметр("ТекущийПериод", КонецМесяца(ТекущийПериод));
	Иначе
		Запрос.УстановитьПараметр("ТекущийПериод", КонецДня(ТекущийПериод));
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТОтправители.Организация КАК Организация,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТДоступныеВидыЗапасовДляПродажиВыкупа
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтправители КАК ВТОтправители
	|		ПО (ВТОтправители.Организация = ВидыЗапасов.Организация)
	|			И ВидыЗапасов.ТипЗапасов = ВТОтправители.ТипЗапасов
	|			И (ВЫБОР
	|				КОГДА ВТОтправители.ХозяйственнаяОперация В (&ХозяйственныеОперацииВыкупа)
	|					ТОГДА ВидыЗапасов.ВладелецТовара = ВТОтправители.Поклажедатель
	|							И ВидыЗапасов.Договор = ВТОтправители.Договор
	|				КОГДА ВТОтправители.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|ГДЕ
	|	&ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И (НЕ ВидыЗапасов.Организация В (&Получатель)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ВтОтрицательныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВтОтрицательныеОстатки.ВладелецТовараВидаЗапасов КАК Организация,
	|	ВтОтрицательныеОстатки.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВТОтборыОстатковОрганизаций
	|ИЗ
	|	ВтОтрицательныеОстатки КАК ВтОтрицательныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтОтрицательныеОстатки.ВладелецТовараВидаЗапасов = ВидыЗапасов.Организация
	|			И (ВЫБОР
	|				КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					ТОГДА ВидыЗапасов.НалогообложениеНДС = ВтОтрицательныеОстатки.НалогообложениеНДСВидаЗапасов
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВидыЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)))
	|ГДЕ
	|	&ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВтОтрицательныеОстатки.Период = &ТекущийПериод
	|	И ВтОтрицательныеОстатки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтОтрицательныеОстатки.АналитикаУчетаНоменклатуры,
	|	ВТДоступныеВидыЗапасовДляПродажиВыкупа.ВидЗапасов,
	|	ВТДоступныеВидыЗапасовДляПродажиВыкупа.Организация,
	|	ВтОтрицательныеОстатки.НомерГТД
	|ИЗ
	|	ВтОтрицательныеОстатки КАК ВтОтрицательныеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДоступныеВидыЗапасовДляПродажиВыкупа КАК ВТДоступныеВидыЗапасовДляПродажиВыкупа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВтОтрицательныеОстатки.Период = &ТекущийПериод
	|	И ВтОтрицательныеОстатки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|//%ТекстВТРезервыТоваровОрганизаций%
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Период КАК Период,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК Организация,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.ВидЗапасовОтправителя КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	СУММА(-РезервыТоваровОрганизаций.Количество) КАК Количество
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	ВТРезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.Период,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.ВидЗапасовОтправителя,
	|	РезервыТоваровОрганизаций.КорОрганизация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|//%ТекстВТОстаткиПоМесяцам%
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ СгруппированныеОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1, 1, 1) КАК Период,
	|		ОстаткиНаКонецПериода.Организация КАК Организация,
	|		ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ОстаткиНаКонецПериода.ВидЗапасов КАК ВидЗапасов,
	|		ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|		0 КАК СчетчикПериодов,
	|		0 КАК НомерПериода,
	|		ОстаткиНаКонецПериода.КоличествоОстаток КАК КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&ТекущийПериод,
	|				(Организация, АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД) В
	|					(ВЫБРАТЬ
	|						ВТОтборыОстатковОрганизаций.Организация КАК Организация,
	|						ВТОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|						ВТОтборыОстатковОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|						ВТОтборыОстатковОрганизаций.НомерГТД КАК НомерГТД
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ВТОтборыОстатковОрганизаций)) КАК ОстаткиНаКонецПериода
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|//%ТекстОстаткиПоМесяцам%) КАК СгруппированныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	СгруппированныеОстатки.Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(РезервыТоваровОрганизаций.Количество, 0)) КАК РезервПоПолучателю,
	|	ЕСТЬNULL(РезервыТоваровОрганизаций.Период, ДАТАВРЕМЯ(1, 1, 1)) = &КонецМесяцаТекущегоПериода КАК ЭтоРезервВТекущемПериоде,
	|	ЕСТЬNULL(ДатыПоступленияТоваровОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоследнегоПоступления,
	|	ВЫБОР
	|		КОГДА СгруппированныеОстатки.Организация = &Организация
	|			ТОГДА СгруппированныеОстатки.ВидЗапасов.ВладелецТовара
	|		ИНАЧЕ СгруппированныеОстатки.Организация
	|	КОНЕЦ КАК Отправитель,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.НалогообложениеНДС КАК НалогообложениеНДСВидаЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.Договор КАК ДоговорВидаЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.ВидЦены КАК ВидЦеныВидаЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.ВидЦены.Валюта КАК ВалютаВидЦеныВидаЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.Контрагент КАК КонтрагентВидаЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	СгруппированныеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ВТОтправителиВыкупа.Приоритет КАК ПриоритетОтправителяВыкупа
	|ПОМЕСТИТЬ СгруппированныеОстаткиСПроверкойРезерва
	|ИЗ
	|	СгруппированныеОстатки КАК СгруппированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|		ПО СгруппированныеОстатки.Организация = РезервыТоваровОрганизаций.КорОрганизация
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры = РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры
	|			И СгруппированныеОстатки.ВидЗапасов = РезервыТоваровОрганизаций.ВидЗапасовОтправителя
	|			И СгруппированныеОстатки.НомерГТД = РезервыТоваровОрганизаций.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО СгруппированныеОстатки.АналитикаУчетаНоменклатуры.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры.Серия = ДатыПоступленияТоваровОрганизаций.Серия
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение
	|			И СгруппированныеОстатки.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И СгруппированныеОстатки.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтправители КАК ВТОтправителиВыкупа
	|		ПО (&УчитыватьПриоритетОтправителя)
	|			И СгруппированныеОстатки.Организация = ВТОтправителиВыкупа.Организация
	|			И (ВТОтправителиВыкупа.ХозяйственнаяОперация В (&ХозяйственныеОперацииВыкупа))
	|			И СгруппированныеОстатки.ВидЗапасов.ВладелецТовара = ВТОтправителиВыкупа.Поклажедатель
	|			И СгруппированныеОстатки.ВидЗапасов.Договор = ВТОтправителиВыкупа.Договор
	|			И СгруппированныеОстатки.ВидЗапасов.ВидЦены = ВТОтправителиВыкупа.ВидЦен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СгруппированныеОстатки.Организация = &Организация
	|			ТОГДА СгруппированныеОстатки.ВидЗапасов.ВладелецТовара
	|		ИНАЧЕ СгруппированныеОстатки.Организация
	|	КОНЕЦ,
	|	СгруппированныеОстатки.Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД,
	|	СгруппированныеОстатки.КоличествоОстаток,
	|	СгруппированныеОстатки.ВидЗапасов.ТипЗапасов,
	|	СгруппированныеОстатки.ВидЗапасов.НалогообложениеНДС,
	|	СгруппированныеОстатки.ВидЗапасов.Договор,
	|	СгруппированныеОстатки.ВидЗапасов.ВидЦены,
	|	СгруппированныеОстатки.ВидЗапасов.Контрагент,
	|	СгруппированныеОстатки.ВидЗапасов.ВидЦены.Валюта,
	|	ВТОтправителиВыкупа.Приоритет,
	|	ЕСТЬNULL(ДатыПоступленияТоваровОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(РезервыТоваровОрганизаций.Период, ДАТАВРЕМЯ(1, 1, 1)) = &КонецМесяцаТекущегоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Организация КАК ОрганизацияОтправителя,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасовОтправителя,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	СгруппированныеОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	СгруппированныеОстатки КАК СгруппированныеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОтрицательныеОстатки.Период КАК Период,
	|	СгруппированныеОстаткиСПроверкойРезерва.Отправитель КАК Отправитель,
	|	&Организация КАК Получатель,
	|	СгруппированныеОстаткиСПроверкойРезерва.КонтрагентВидаЗапасов КАК Контрагент,
	|	ВтОтрицательныеОстатки.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ВтОтрицательныеОстатки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|		КОГДА СгруппированныеОстаткиСПроверкойРезерва.Организация = &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровХранящихсяНаСкладе)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВтОтрицательныеОстатки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ВтОтрицательныеОстатки.НалогообложениеНДСВидаЗапасов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА СгруппированныеОстаткиСПроверкойРезерва.Организация = &Организация
	|			ТОГДА СгруппированныеОстаткиСПроверкойРезерва.ДоговорВидаЗапасов
	|		ИНАЧЕ ВТОтправителиПередачи.Договор
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА СгруппированныеОстаткиСПроверкойРезерва.Организация = &Организация
	|			ТОГДА СгруппированныеОстаткиСПроверкойРезерва.ВидЦеныВидаЗапасов
	|		ИНАЧЕ ВТОтправителиПередачи.ВидЦен
	|	КОНЕЦ КАК ВидЦены,
	|	ВЫБОР
	|		КОГДА СгруппированныеОстаткиСПроверкойРезерва.Организация = &Организация
	|			ТОГДА СгруппированныеОстаткиСПроверкойРезерва.ВалютаВидЦеныВидаЗапасов
	|		ИНАЧЕ ЕСТЬNULL(ВидыЦенПередачи.ВалютаЦены, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВтОтрицательныеОстатки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА -1
	|		КОГДА &УчитыватьПриоритетОтправителя
	|			ТОГДА ЕСТЬNULL(СгруппированныеОстаткиСПроверкойРезерва.ПриоритетОтправителяВыкупа, ЕСТЬNULL(ВТОтправителиПередачи.Приоритет, 100000))
	|		КОГДА СгруппированныеОстаткиСПроверкойРезерва.Организация = &Организация
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ПриоритетПоХозяйственнойОперации,
	|	СгруппированныеОстаткиСПроверкойРезерва.ВидЗапасов КАК ВидЗапасовОтправителя,
	|	СгруппированныеОстаткиСПроверкойРезерва.Организация КАК ОрганизацияОтправителя,
	|	ВтОтрицательныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОтрицательныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ВтОтрицательныеОстатки.Номенклатура КАК Номенклатура,
	|	ВтОтрицательныеОстатки.СтавкаНДС КАК СтавкаНДС,
	|	ВтОтрицательныеОстатки.Характеристика КАК Характеристика,
	|	ВтОтрицательныеОстатки.Серия КАК Серия,
	|	ВтОтрицательныеОстатки.Назначение КАК Назначение,
	|	ВтОтрицательныеОстатки.НомерГТД КАК НомерГТД
	|ИЗ
	|	ВтОтрицательныеОстатки КАК ВтОтрицательныеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированныеОстаткиСПроверкойРезерва КАК СгруппированныеОстаткиСПроверкойРезерва
	|		ПО ВтОтрицательныеОстатки.АналитикаУчетаНоменклатуры = СгруппированныеОстаткиСПроверкойРезерва.АналитикаУчетаНоменклатуры
	|			И ВтОтрицательныеОстатки.НомерГТД = СгруппированныеОстаткиСПроверкойРезерва.НомерГТД
	|			И (ВЫБОР
	|				КОГДА ВтОтрицательныеОстатки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					ТОГДА ВтОтрицательныеОстатки.ВладелецТовараВидаЗапасов = СгруппированныеОстаткиСПроверкойРезерва.Организация
	|							И ВЫБОР
	|								КОГДА СгруппированныеОстаткиСПроверкойРезерва.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|									ТОГДА ВтОтрицательныеОстатки.НалогообложениеНДСВидаЗапасов = СгруппированныеОстаткиСПроверкойРезерва.НалогообложениеНДСВидаЗапасов
	|								ИНАЧЕ ИСТИНА
	|							КОНЕЦ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтправители КАК ВТОтправителиПередачи
	|		ПО (НЕ ВТОтправителиПередачи.ХозяйственнаяОперация В (&ХозяйственныеОперацииВыкупа))
	|			И (СгруппированныеОстаткиСПроверкойРезерва.ТипЗапасов = ВТОтправителиПередачи.ТипЗапасов)
	|			И (СгруппированныеОстаткиСПроверкойРезерва.Организация = ВТОтправителиПередачи.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦенПередачи
	|		ПО (ВТОтправителиПередачи.ВидЦен = ВидыЦенПередачи.Ссылка)
	|ГДЕ
	|	ВтОтрицательныеОстатки.Период = &ТекущийПериод
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетПоХозяйственнойОперации,
	|	СгруппированныеОстаткиСПроверкойРезерва.ЭтоРезервВТекущемПериоде УБЫВ,
	|	СгруппированныеОстаткиСПроверкойРезерва.РезервПоПолучателю УБЫВ,
	|	СгруппированныеОстаткиСПроверкойРезерва.ДатаПоследнегоПоступления,
	|	СгруппированныеОстаткиСПроверкойРезерва.КоличествоОстаток УБЫВ,
	|	Период,
	|	Отправитель,
	|	Получатель,
	|	Контрагент,
	|	Склад,
	|	ХозяйственнаяОперация,
	|	НалогообложениеНДС,
	|	Договор,
	|	ВидЦены,
	|	Валюта";

	
	ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц = ЗапасыСервер.ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц();
	ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц.ЕстьОтборПоНомеруГТД = Истина;
	
	ЗапасыСервер.ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос, ТекстЗапроса, ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц, ТекущийПериод);
	                            
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ТекущийПериод));	
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ЗапасыСервер.ДатаПоследнегоДвижения()));	
	Запрос.УстановитьПараметр("КонецМесяцаТекущегоПериода", КонецМесяца(ТекущийПериод));	
	ВТРезервыТоваровОрганизаций = ЗапасыСервер.ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос,"ВТПоНоменклатуре","ВТОтборыОстатковОрганизаций");
	ВТРезервыТоваровОрганизаций = ВТРезервыТоваровОрганизаций + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстВТРезервыТоваровОрганизаций%" ,ВТРезервыТоваровОрганизаций);
	
	Запрос.УстановитьПараметр("УчитыватьПриоритетОтправителя", ПараметрыСоздания.ВариантВыбораОтправителей <> "ПоНастройкамПередачи");
	
	Запрос.Текст = ТекстЗапроса;
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПоОтрицательнымОстаткам = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выбрать();
	
	ОстаткиВладельцев = РезультатыЗапроса[РезультатыЗапроса.ВГраница() - 1].Выгрузить();
	КлючиИндекса = "ОрганизацияОтправителя,АналитикаУчетаНоменклатуры,ВидЗапасовОтправителя,НомерГТД";
	ОстаткиВладельцев.Индексы.Добавить(КлючиИндекса);
	ОтборПоискаОстатковВладельцев = Новый Структура(КлючиИндекса);	

	ПоляШапки = ЗапасыСервер.ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();	
	СоздаваемыеДокументы = Новый ТаблицаЗначений;
	
	Для Каждого КлючЗначение из ПоляШапки Цикл
		СоздаваемыеДокументы.Колонки.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	СоздаваемыеДокументы.Колонки.Добавить("ДокументОбъект");
	
	ОтборПоискаОтрицательныхОстатков = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, Период");
	
	ДокументОбъект        = Неопределено;
	
	ТекстыЗапросовУничтоженияТаблиц = Новый Массив;
	СхемаЗапроса = Новый СхемаЗапроса();
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		
	Для Каждого ЗапросСхемы из СхемаЗапроса.ПакетЗапросов Цикл
		Если ТипЗнч(ЗапросСхемы) = Тип("ЗапросВыбораСхемыЗапроса")
			И ЗначениеЗаполнено(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			ТекстыЗапросовУничтоженияТаблиц.Добавить("УНИЧТОЖИТЬ " + ЗапросСхемы.ТаблицаДляПомещения);
		КонецЕсли;
	КонецЦикла;

	ЗапросУничтожения = Новый Запрос;
	ЗапросУничтожения.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросУничтожения.Текст = СтрСоединить(ТекстыЗапросовУничтоженияТаблиц, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	ЗапросУничтожения.Выполнить();
	
	Пока ВыборкаПоОтрицательнымОстаткам.Следующий() Цикл
		
		Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ПоляШапки, ВыборкаПоОтрицательнымОстаткам) Тогда
			
			ЗаполнитьЗначенияСвойств(ПоляШапки, ВыборкаПоОтрицательнымОстаткам);
			
			НайденныеСтроки = СоздаваемыеДокументы.НайтиСтроки(ПоляШапки);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
			
				Если ВыборкаПоОтрицательнымОстаткам.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию
					Или ВыборкаПоОтрицательнымОстаткам.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию Тогда
					ДокументОбъект = Документы.ПередачаТоваровМеждуОрганизациями.СоздатьДокумент();
					ИмяРеквизитаВидЗапасовПолучателя = "ВидЗапасовПолучателя";
					ЕстьНомерГТДВСтрокеТоваров = Истина;
				Иначе
					ТекстИсключения = НСтр("ru = 'По хозяйственной операции %ХозяйственнаяОперация% оформление документов не поддерживается.'");
					ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ХозяйственнаяОперация%", ВыборкаПоОтрицательнымОстаткам.ХозяйственнаяОперация);
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				НоваяСтрока = СоздаваемыеДокументы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПоляШапки);
				НоваяСтрока.ДокументОбъект = ДокументОбъект;
				
			Иначе
				ДокументОбъект = НайденныеСтроки[0].ДокументОбъект;
			КонецЕсли;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОтборПоискаОтрицательныхОстатков, ВыборкаПоОтрицательнымОстаткам);
		
		СтрокаКПередаче = ТаблицаНоменклатурыСОтрицательнымиОстатками.НайтиСтроки(ОтборПоискаОтрицательныхОстатков)[0];
		
		Если СтрокаКПередаче.КоличествоКПередаче = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОтборПоискаОстатковВладельцев, ВыборкаПоОтрицательнымОстаткам);
		
		СтрокаОстатков = ОстаткиВладельцев.НайтиСтроки(ОтборПоискаОстатковВладельцев)[0]; 
		
		Если СтрокаОстатков.КоличествоОстаток <=0 Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоКПередаче = Мин(СтрокаКПередаче.КоличествоКПередаче, СтрокаОстатков.КоличествоОстаток);
		
		СтрокаОстатков.КоличествоОстаток = СтрокаОстатков.КоличествоОстаток - КоличествоКПередаче; 
		СтрокаКПередаче.КоличествоКПередаче = СтрокаКПередаче.КоличествоКПередаче - КоличествоКПередаче;
		
		НоваяСтрока = ДокументОбъект.Товары.Добавить();
		
		Если ЕстьНомерГТДВСтрокеТоваров Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоОтрицательнымОстаткам,,"НомерГТД");
		Иначе
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоОтрицательнымОстаткам);
		КонецЕсли;
		
		НоваяСтрока.Количество         = КоличествоКПередаче;
		НоваяСтрока.КоличествоУпаковок = КоличествоКПередаче;
		
		НоваяСтрока = ДокументОбъект.ВидыЗапасов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоОтрицательнымОстаткам);
		НоваяСтрока.Количество           = КоличествоКПередаче;
		НоваяСтрока.КоличествоУпаковок   = КоличествоКПередаче;
		НоваяСтрока.ВидЗапасов           = ВыборкаПоОтрицательнымОстаткам.ВидЗапасовОтправителя;
		НоваяСтрока[ИмяРеквизитаВидЗапасовПолучателя] = ВыборкаПоОтрицательнымОстаткам.ВидЗапасов;
		
	КонецЦикла;
	
	ВсеПроведено = ЗаписатьДокументы(СоздаваемыеДокументы, СозданныеДокументы);
	
	Возврат ВсеПроведено;
	
КонецФункции

Функция ЗаписатьДокументы(СоздаваемыеДокументы, СозданныеДокументы)
	
	ВсеПроведено = Истина;
		
	ПоляШапки = ЗапасыСервер.ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();	
	Для Каждого СоздаваемыйДокумент из СоздаваемыеДокументы Цикл
		
		ДокументОбъект = СоздаваемыйДокумент.ДокументОбъект;
		
		Если ДокументОбъект = Неопределено Тогда
			Возврат ВсеПроведено;
		КонецЕсли;
		
		Если ДокументОбъект.Товары.Количество() = 0 Тогда
			Возврат ВсеПроведено;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ПоляШапки, СоздаваемыйДокумент); 
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ПоляШапки", ПоляШапки);
		
		ДокументОбъект.Заполнить(ДанныеЗаполнения);
		
		Если ДокументОбъект.ПроверитьЗаполнение() Тогда
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				// Не пишем в журанал регистрации т.к. пользователь потом будет вручную проводить
				// документы и увидит ошибки - разбираться с ними нужно пользователю, а не администратору
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
				ВсеПроведено = Ложь;	
			КонецПопытки;
		Иначе
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			ВсеПроведено = Ложь;	
		КонецЕсли;
		СозданныеДокументы.Добавить(ДокументОбъект.Ссылка);
	КонецЦикла;
	
	Возврат ВсеПроведено;
	
КонецФункции

Процедура ЗаполнитьСписокПроблемныхОрганизаций(Параметры, АдресВременногоХранилища = "", Результат = Неопределено, ПолучатьНастройки = Ложь) Экспорт
	ПараметрыЗапросаОтрицательныхОстатков = ПараметрыЗапросаОтрицательныхОстатков(Параметры);
	
	Если ПолучатьНастройки Тогда
		ПараметрыЗапросаОтрицательныхОстатков.НастройкиКомпоновки = 
			НастройкиКомпоновкиПоИмени(Параметры.НастройкиКомпоновки,
				"ПроблемныеОрганизации",
				Параметры.ИмяМакета,
				Параметры.Период,
				Параметры.ПериодичностьФормированияДокументов,
				Неопределено,
				Неопределено);
	КонецЕсли;
	
	ТаблицаРезультата = КомпоновкаДанныхСервер.ВыгрузитьРезультатСКД(ПараметрыЗапросаОтрицательныхОстатков);
	
	ДобавитьТаблицуВРезультат(Результат, "ПроблемныеОрганизации", ТаблицаРезультата); 
	
	Если ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда
		ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
	КонецЕсли;
КонецПроцедуры

Функция ПараметрыЗапросаОтрицательныхОстатков(Параметры)
	ПараметрыЗапросаОтрицательныхОстатков = КомпоновкаДанныхСервер.ПараметрыВыгрузитьРезультатСКД();
	
	Если Параметры.ПериодичностьФормированияДокументов = "ПоМесяцам" Тогда
		СхемаКомпоновкиДанных = КомпоновкаДанныхСервер.СхемаКомпоновкиПоПараметру(Параметры.ИмяМакета);
		
		ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.ЗаполнениеПоОтборам.Запрос;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ", ДЕНЬ)", ", МЕСЯЦ)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДЕНЬ,", "МЕСЯЦ,");
		СхемаКомпоновкиДанных.НаборыДанных.ЗаполнениеПоОтборам.Запрос = ТекстЗапроса;
		
		ПараметрыЗапросаОтрицательныхОстатков.СхемаКомпоновки = СхемаКомпоновкиДанных;
	Иначе	
		ПараметрыЗапросаОтрицательныхОстатков.СхемаКомпоновки = Параметры.ИмяМакета;
	КонецЕсли;	
	
	ПараметрыЗапросаОтрицательныхОстатков.НастройкиКомпоновки  = Параметры.НастройкиКомпоновки;
	
	ПараметрыЗапросаОтрицательныхОстатков.ВыполнятьВПривилегированномРежиме = Истина;
	
	ТаблицаКолонокОтключаемыхПоФО = Новый ТаблицаЗначений;
	ТаблицаКолонокОтключаемыхПоФО.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаКолонокОтключаемыхПоФО.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаКолонокОтключаемыхПоФО.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаКолонокОтключаемыхПоФО.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаКолонокОтключаемыхПоФО.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаКолонокОтключаемыхПоФО.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	
	ПараметрыЗапросаОтрицательныхОстатков.ОжидаемыеКолонки = ТаблицаКолонокОтключаемыхПоФО;
	
	Возврат  ПараметрыЗапросаОтрицательныхОстатков;
КонецФункции

Функция ТекстЗапросаОтправителиПоНастройкамПередачи(Запрос, ИмяВТ = "") Экспорт
	
	ТекстыВыборки = Новый Массив;
	
	Если Запрос.Параметры.ОформлятьПередачи Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец КАК Отправитель,
		|	ВЫБОР
		|		КОГДА НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
		|	КОНЕЦ КАК ХозяйственнаяОперация,
		|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
		|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦен,
		|	НастройкаПередачиТоваровМеждуОрганизациями.ТипЗапасов КАК ТипЗапасов,
		|	1 КАК Приоритет
		|//%ТекстИмяВТ%
		|ИЗ
		|	РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
		|ГДЕ
		|	НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = &Организация
		|	И ВЫБОР
		|			КОГДА &ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|				ТОГДА НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
		|			КОГДА &ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|				ТОГДА НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ";
		ТекстыВыборки.Добавить(ТекстЗапроса);
	КонецЕсли;
	
	Если Запрос.Параметры.ОформлятьВыкупы Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ //%ТекстРАЗРЕШЕННЫЕ%
		|	ВложенныйЗапрос.Владелец КАК Отправитель,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровХранящихсяНаСкладе) КАК ХозяйственнаяОперация,
		|	ВложенныйЗапрос.Договор КАК Договор,
		|	ВложенныйЗапрос.ВидЦены КАК ВидЦен,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) КАК ТипЗапасов,
		|	0 КАК Приоритет
		|//%ТекстИмяВТ%
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыПринятыеОстатки.Номенклатура КАК Номенклатура,
		|		ТоварыПринятыеОстатки.Характеристика КАК Характеристика,
		|		ТоварыПринятыеОстатки.Серия КАК Серия,
		|		ТоварыПринятыеОстатки.Назначение КАК Назначение,
		|		ТоварыПринятыеОстатки.НомерГТД КАК НомерГТД,
		|		ТоварыПринятыеОстатки.ВидЗапасов КАК ВидЗапасов,
		|		ТоварыПринятыеОстатки.Договор КАК Договор,
		|		ТоварыПринятыеОстатки.Владелец КАК Владелец,
		|		ТоварыПринятыеОстатки.ВидЗапасов.ВидЦены КАК ВидЦены
		|	ИЗ
		|		РегистрНакопления.ТоварыПринятые.Остатки(
		|				,
		|				&ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
		|					И ВидЗапасов.Организация = &Организация) КАК ТоварыПринятыеОстатки
		|	ГДЕ
		|		ТоварыПринятыеОстатки.ПолученоОстаток > 0) КАК ВложенныйЗапрос";
		
		Если Запрос.Параметры.ОформлятьПередачи > 0 Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстИмяВТ%", "");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстРАЗРЕШЕННЫЕ%", "");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстРАЗРЕШЕННЫЕ%", "РАЗРЕШЕННЫЕ");
		КонецЕсли;
		
		ТекстыВыборки.Добавить(ТекстЗапроса);
	КонецЕсли;	

	ТекстЗапроса = СтрСоединить(ТекстыВыборки, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	Если Не ПустаяСтрока(ИмяВТ) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстИмяВТ%", "ПОМЕСТИТЬ " + ИмяВТ);
	КонецЕсли;
		
	Возврат ТекстЗапроса;
КонецФункции

Процедура ДобавитьТаблицуВРезультат(Результат, ИмяТаблицы, Таблица)
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = Новый ТаблицаЗначений();
		Результат.Колонки.Добавить("ИмяТаблицы");
		Результат.Колонки.Добавить("Таблица");
	КонецЕсли;
	
	НоваяСтрока = Результат.Добавить();
	НоваяСтрока.Таблица = Таблица;
	НоваяСтрока.ИмяТаблицы = ИмяТаблицы;
	
КонецПроцедуры

Функция ХозяйственныеОперацииВыкупа() Экспорт
	
	Массив = Новый Массив();
	Массив.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровХранящихсяНаСкладе);
	Массив.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхВПроизводство);
	Массив.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереданныхПартнерам);
	
	Возврат Массив;
	
КонецФункции

Процедура ПометитьНаУдалениеСозданныеДокументы(Параметры, АдресВременногоХранилища) Экспорт
	
	Перем Результат;
	СозданныеДокументы = Параметры.СозданныеДокументы; 
	
	Индекс = СозданныеДокументы.Количество();
	
	Пока Индекс >0 Цикл
		Индекс = Индекс - 1;
		
		Попытка
			
			ДокументОбъект = СозданныеДокументы[Индекс].ПолучитьОбъект();
			Если Не ДокументОбъект.ПометкаУдаления Тогда 
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			КонецЕсли;
			
			СозданныеДокументы.Удалить(Индекс);
			
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации( НСтр("ru = 'Пакетное формирование документов'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				ДокументОбъект.Ссылка,
				ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	ДобавитьТаблицуВРезультат(Результат, "СозданныеДокументы", ТаблицаСозданныхДокументов(Параметры, СозданныеДокументы)); 
	ЗаполнитьСписокПроблемныхОрганизаций(Параметры,, Результат);
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);

КонецПроцедуры

Функция НастройкиКомпоновкиПоИмени(ИсходныеНастройки, ИмяНастройки, ИмяМакета, Период, ПериодичностьФормированияДокументов, ПоОрганизации, ПоТипуЗапасов) Экспорт
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	СхемаКомпоновки = ОбщегоНазначенияУТ.МакетПоИмени(ИмяМакета);
	
	КомпоновкаДанныхСервер.ИнициализироватьКомпоновщикНастроек(КомпоновщикНастроек, СхемаКомпоновки, ИмяНастройки);
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновкаДанныхКлиентСервер.СкопироватьОтборКомпоновкиДанных(СхемаКомпоновки, Настройки, ИсходныеНастройки);
	
	Если ЗначениеЗаполнено(ПоОрганизации) Тогда
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Настройки, "Организация", ПоОрганизации);
	Иначе
		КомпоновкаДанныхКлиентСервер.УдалитьОтбор(Настройки.Отбор, "Организация");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПоТипуЗапасов) Тогда
		КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Настройки, "ТипЗапасов", ПоТипуЗапасов);
	Иначе
		КомпоновкаДанныхКлиентСервер.УдалитьОтбор(Настройки.Отбор, "ТипЗапасов");
	КонецЕсли;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	СегментыСервер.ВключитьОтборПоСегментуНоменклатурыВСКД(КомпоновщикНастроек);
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
		
	Если ПериодичностьФормированияДокументов = "ПоМесяцам" Тогда
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "НачалоПериода", НачалоМесяца(Период.ДатаНачала));	
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "КонецПериода", КонецМесяца(Период.ДатаОкончания));	
	Иначе	
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "НачалоПериода", НачалоДня(Период.ДатаНачала));	
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "КонецПериода", КонецДня(Период.ДатаОкончания));	
	КонецЕсли;	
	
	Возврат Настройки;
КонецФункции

Процедура ОбновитьСозданныеДокументы(Параметры, АдресВременногоХранилища) Экспорт
	Перем Результат;
	
	ДобавитьТаблицуВРезультат(Результат, "СозданныеДокументы", ТаблицаСозданныхДокументов(Параметры, Параметры.СозданныеДокументы)); 
	ЗаполнитьСписокПроблемныхОрганизаций(Параметры,, Результат, Ложь);
	
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
КонецПроцедуры

Процедура ЗаполнитьКомитентов(Параметры, АдресВременногоХранилища) Экспорт
	
	Перем Результат;
	
	ПараметрыЗапросаОтрицательныхОстатков = ПараметрыЗапросаОтрицательныхОстатков(Параметры);
	ТаблицаКомитентов = КомпоновкаДанныхСервер.ВыгрузитьРезультатСКД(ПараметрыЗапросаОтрицательныхОстатков);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаКомитентов.ВладелецТовараВидаЗапасов КАК Отрправитель
	|ПОМЕСТИТЬ ВТКомитенты
	|ИЗ
	|	&ТаблицаКомитентов КАК ТаблицаКомитентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКомитенты.Отрправитель КАК Отправитель,
	|	НастройкаПередачиТоваровМеждуОрганизациями.Договор КАК Договор,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ВидЦены КАК ВидЦен,
	|	НастройкаПередачиТоваровМеждуОрганизациями.ТипЗапасов КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВТКомитенты КАК ВТКомитенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваровМеждуОрганизациями
	|		ПО ВТКомитенты.Отрправитель = НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияВладелец
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.ОрганизацияПродавец = &Организация)
	|			И (НастройкаПередачиТоваровМеждуОрганизациями.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию))";
	
	Запрос.УстановитьПараметр("ТаблицаКомитентов", ТаблицаКомитентов);
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	
	ДобавитьТаблицуВРезультат(Результат, "ОтправителиПоКомиссии", Запрос.Выполнить().Выгрузить()); 
	
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
	
КонецПроцедуры

Процедура ЗаполнитьОтправителей(Параметры, АдресВременногоХранилища) Экспорт
	
	Перем Результат;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("ОформлятьПередачи", Параметры.ОформлятьПередачи);
	Запрос.УстановитьПараметр("ОформлятьВыкупы", Параметры.ОформлятьВыкупы);
	Запрос.УстановитьПараметр("ТипЗапасов", Параметры.ТипЗапасов);
	
	Запрос.Текст = ТекстЗапросаОтправителиПоНастройкамПередачи(Запрос);
	
	ДобавитьТаблицуВРезультат(Результат, Параметры.ИмяТаблицы, Запрос.Выполнить().Выгрузить()); 
	
	ПоместитьВоВременноеХранилище(Результат, АдресВременногоХранилища);
	
КонецПроцедуры

Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры) Экспорт
	
	Если НЕ (ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыОрганизаций)
		 И	(ПравоДоступа("Добавление", Метаданные.Документы.ПередачаТоваровМеждуОрганизациями) 
				И ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями")
			)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не Параметры.Свойство("КлючНазначенияИспользования") Тогда
		КлючНазначенияИспользования = "";
	Иначе
		КлючНазначенияИспользования = Параметры.КлючНазначенияИспользования;
	КонецЕсли;
	
	ТекстГиперссылки = ЗаголовокИФормируемыеДокументыПоКлючуНазначенияИспользования(КлючНазначенияИспользования).Заголовок;
	
	Если Не ЗначениеЗаполнено(ТекстГиперссылки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяФормыРабочееМестоЗаказПоставщику = "Обработка.ФормированиеПередачТоваровМеждуОрганизациямиИВыкупов.Форма.Основная";
	Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,,
			ИмяФормыРабочееМестоЗаказПоставщику);
	
КонецФункции

Функция ЗаголовокИФормируемыеДокументыПоКлючуНазначенияИспользования(КлючНазначенияИспользования) Экспорт
	
	ФормируемыеДокументы = "";
	Заголовок = "";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки")
		И ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		
		Если Не ЗначениеЗаполнено(КлючНазначенияИспользования) Тогда
			ФормируемыеДокументы = "ПередачиМеждуОрганизациямиИВыкупыТоваровНаХранении";
			
		ИначеЕсли КлючНазначенияИспользования = "ДокуметыИнтеркампани"	
			Или КлючНазначенияИспользования = "ПередачаТоваровМеждуОрганизациями" Тогда	
			
			ФормируемыеДокументы = "ТолькоПередачиМеждуОрганизациями";
			
		ИначеЕсли КлючНазначенияИспользования = "ДокументыЗакупки" 	
			Или КлючНазначенияИспользования = "ВыкупПринятыхНаХранениеТоваров" Тогда	
			
			ФормируемыеДокументы = "ТолькоВыкупыТоваровНаХранении";
			
		КонецЕсли;
		
		Заголовок = НСтр("ru = 'Помощник формирования передач и выкупов'");
		
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями")  Тогда
		
		Если Не ЗначениеЗаполнено(КлючНазначенияИспользования)
			Или КлючНазначенияИспользования = "ДокуметыИнтеркампани"
			Или КлючНазначенияИспользования = "ПередачаТоваровМеждуОрганизациями" Тогда	
			
			ФормируемыеДокументы = "ТолькоПередачиМеждуОрганизациями";
			Заголовок = НСтр("ru = 'Помощник формирования передач'");
		
		КонецЕсли;
		
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранениеВПроцессеЗакупки") Тогда
		
		Если Не ЗначениеЗаполнено(КлючНазначенияИспользования)
			Или КлючНазначенияИспользования = "ДокументыЗакупки"
			Или КлючНазначенияИспользования = "ВыкупПринятыхНаХранениеТоваров" Тогда	
			
			ФормируемыеДокументы = "ТолькоВыкупыТоваровНаХранении";
			Заголовок = НСтр("ru = 'Помощник формирования выкупов'");
			
		КонецЕсли;
	КонецЕсли;
	
	Результат = Новый Структура("Заголовок,ФормируемыеДокументы",Заголовок,ФормируемыеДокументы);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
