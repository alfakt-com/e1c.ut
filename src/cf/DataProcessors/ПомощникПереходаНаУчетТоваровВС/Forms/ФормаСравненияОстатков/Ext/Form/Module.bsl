
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаОстатка 								= НачалоДня(Параметры.ДатаОстатка);
	СпособЗаполнения							= Параметры.СпособЗаполнения;
	СписокВыбранныхОрганизаций 					= Параметры.СписокОрганизация;
	СписокВыбранныхСтруктурныхПодразделений 	= Параметры.СписокСтруктурныхПодразделений;
	
	Если СписокВыбранныхОрганизаций.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;	
	
	Если СпособЗаполнения = "ТоварамОрганизацииБУ" Тогда 
		Элементы.СкладПоУмолчанию.Видимость = Ложь;	
	КонецЕсли;	
	СкладПоУмолчанию = ВССервер.ПолучитьСоответствиеСклада(ВССерверПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад"),  СписокВыбранныхОрганизаций[0].Значение);
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	СхемаКомпоновкиДанных = Обработки.ПомощникПереходаНаУчетТоваровВС.ПолучитьМакет("СхемаКомпановкиДанных");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивОрганизаций"				, СписокВыбранныхОрганизаций);
	Запрос.УстановитьПараметр("МассивСтруктурныхПодразделений"	, СписокВыбранныхСтруктурныхПодразделений);
	
	Запрос.УстановитьПараметр("ДатаОстатка"			, Новый Граница(КонецДня(ДатаОстатка), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("ПустоеПодразделение", ВСКлиентСерверПереопределяемый.ПолучитьПустуюСсылкуПодразделения());
	
	ИДКонфигурации = ЭСФСерверПереопределяемый.ИДКонфигурации();
	Если ИДКонфигурации = "УправлениеПредприятиемДляКазахстана" Тогда
		ТекстЗапроса = ВССерверПереопределяемый.ТекстЗапросаСверкаТоваровОрганизацийБУ_ТоварыНаВиртуальныхСкладах();
	Иначе	
		Если СпособЗаполнения = "ТоварамОрганизацииБУ" Тогда 
			ТекстЗапроса = ВССерверПереопределяемый.ТекстЗапросаСверкаТоваровОрганизацийБУ_ТоварыНаВиртуальныхСкладах();
		Иначе	
			ДополнительныеПараметрыЗапросаБУ = ВССерверПереопределяемый.ПолучитьДополнительныеПараметрыЗапросаБУ();
			Для Каждого ЭлементСтруктуры Из ДополнительныеПараметрыЗапросаБУ Цикл
				Запрос.УстановитьПараметр(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);	
			КонецЦикла;	
			ТекстЗапроса = ВССерверПереопределяемый.ТекстЗапросаСверкаДанныхБУ_ТоварыНаВиртуальныхСкладах(ДополнительныеПараметрыЗапросаБУ.ВестиСкладскойУчетБУ);
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СкладПоУмолчанию"	, СкладПоУмолчанию);
	Если СписокВыбранныхСтруктурныхПодразделений.Количество() = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"И СтруктурноеПодразделение В (&МассивСтруктурныхПодразделений)", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"(ВЫБОР КОГДА ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = &ПустоеПодразделение
												|			ТОГДА ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
												|			ИНАЧЕ ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)", "ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"(ВЫБОР КОГДА ДанныеБУ.СтруктурноеПодразделение = &ПустоеПодразделение
												|			ТОГДА ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
												|			ИНАЧЕ ДанныеБУ.СтруктурноеПодразделение = СоответствиеСкладовИВиртуальныхСкладов.Организация КОНЕЦ)", "ДанныеБУ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"ДанныеБУ.СтруктурноеПодразделение", "&ПустоеПодразделение");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"ТоварыВС.СтруктурноеПодразделение", "&ПустоеПодразделение");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"ТоварыОрганизацийБУОстатки.СтруктурноеПодразделение", "&ПустоеПодразделение");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса	,"ТоварыНаВиртуальныхСкладахОстатки.СтруктурноеПодразделение", "&ПустоеПодразделение");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("РезультатЗапроса", Запрос.Выполнить().Выгрузить());
	
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных);
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(Макет,ВнешниеНаборыДанных);
    ПроцессорКомпоновки.Сбросить();
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    Результат.Очистить();
	ПроцессорВывода.УстановитьДокумент(Результат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры	

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры
