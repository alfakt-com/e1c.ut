
&НаКлиенте
Процедура РаспечататьАнкетуКоманд(Команда)
	Объект.АнкетаРаспечатана = Ложь;
	ВсеОк = Истина;	
	Если СокрЛП(Объект.Фамилия) =  "" тогда
		Сообщить("Заполните Фамилия");
		ВсеОк = Ложь
	ИначеЕсли СокрЛП(Объект.Имя) =  ""  тогда
		Сообщить("Заполните Имя");
		ВсеОк = Ложь;		
	ИначеЕсли (Объект.ДатаРождения) =  '00010101'  тогда
		Сообщить("Заполните Дата Рождения");
		ВсеОк = Ложь;
	ИначеЕсли СокрЛП(Объект.Пол) =  ""  тогда
		Сообщить("Заполните Пол");
		ВсеОк = Ложь;
	КонецЕсли;
	
	СовпаденияПоФИО.Очистить();
	//ТаблицаСовпад = ЕстьСовпаденияПоФизЛицу(Объект.Фамилия);

	Если СовпаденияПоФИО.Количество() > 0 Тогда
		Элементы.СовпаденияПоФИО.Видимость 				= Истина;
		Элементы.НетСовпадений.Видимость 				= Истина;
		Элементы.ПрявязатьНомерККонтрагенту.Видимость 	= Истина;
		ВсеОк = Ложь;
	КонецЕсли;
	
	Если ВсеОк и ЗначениеЗаполнено(Объект.ОткудаВыОНасУзнали) Тогда 
		печатьАнкеты();
		Объект.АнкетаРаспечатана = Истина;
	КонецЕсли;
	
	Доступность();
КонецПроцедуры

&НаСервере
Функция ЕстьСовпаденияПоФизЛицу(Фамилия)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Партнеры.Ссылка КАК Ссылка,
	|	Партнеры.ДатаРождения КАК ДатаРождения,
	|	Партнеры.Пол КАК Пол
	|ПОМЕСТИТЬ ТабПартнера
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Наименование ПОДОБНО ""%"" + &Наименование + ""%""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка,
	|	ТабПартнера.ДатаРождения КАК ДатаРождения,
	|	ТабПартнера.Пол КАК Пол
	|ИЗ
	|	ТабПартнера КАК ТабПартнера
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ТабПартнера.Ссылка = Контрагенты.Партнер";
	Запрос.УстановитьПараметр("Наименование", Фамилия);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		Для Каждого Строка Из Результат Цикл  
			НовСтрока = ЭтотОбъект.СовпаденияПоФИО.Добавить();
			НовСтрока.Контрагент 	= Строка.Ссылка;
			НовСтрока.ДатаРождения  = Строка.ДатаРождения;
		КонецЦикла;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаСобытияЭлементаКИТелефон(Элемент, ВидКонтактнойИнформации, ИмяРеквизитаПредставление, ИмяРеквизитаЗначенияПолей, Событие, Тел)
	
	Если ЗначениеЗаполнено(Тел) Тогда
		НомерЗначе = Тел;	
	Иначе 
		НомерЗначе  = Элемент;
	КонецЕсли;
	
	Если Событие = "НачалоВыбора" Тогда
		ЭтаФорма[ИмяРеквизитаПредставление] = НомерЗначе;
	ИначеЕсли Событие = "Очистка" Тогда
		ЭтаФорма[ИмяРеквизитаПредставление] = "";
		ЭтаФорма[ИмяРеквизитаЗначенияПолей] = "";
	КонецЕсли;
	
	Если Событие = "ПриИзменении" Тогда
		
		ЗначенияПолейКонтактнойИнформацииСервер(ЭтаФорма[ИмяРеквизитаПредставление],
		                                        ЭтаФорма[ИмяРеквизитаЗначенияПолей],
		                                        ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
		
		Если НЕ КорректноВведенНомерТелефона(ЗначенияПолейВСписокЗначений(ЭтаФорма[ИмяРеквизитаЗначенияПолей])) Тогда
			ОткрытьФормуВыбораКонтактнойИнформации(ВидКонтактнойИнформации,
			                                       ИмяРеквизитаПредставление,
			                                       ИмяРеквизитаЗначенияПолей,
			                                       НСтр("ru='Уточните номер телефона.'"));
		Иначе
			ОтключитьОтметкуНезаполненного();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗначенияПолейКонтактнойИнформацииСервер(Знач Представление, ЗначенияПолей, Знач ВидКонтактнойИнформации)
	
	Комментарий = УправлениеКонтактнойИнформацией.КомментарийКонтактнойИнформации(ЗначенияПолей);
	
	// Создаем новый экземпляр по представлению
	ЗначенияПолей = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияXMLПоПредставлению(Представление, ВидКонтактнойИнформации);
	
КонецПроцедуры

&НаКлиенте
Функция КорректноВведенНомерТелефона(СписокЗначенияПолей)
	
	НомерТелефона = "";
	КодГорода = "";
	КодСтраны = "";
	
	Для каждого ЭлементСписка Из СписокЗначенияПолей Цикл
		Если ЭлементСписка.Представление = "НомерТелефона" Тогда
			НомерТелефона = ЭлементСписка.Значение;
		КонецЕсли;
		Если ЭлементСписка.Представление = "КодГорода" Тогда
			КодГорода = ЭлементСписка.Значение;
		КонецЕсли;
		Если ЭлементСписка.Представление = "КодСтраны" Тогда
			КодСтраны = ЭлементСписка.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(КодСтраны) Тогда
		КодСтраны = СокрЛП(КодСтраны);
		Если ЛЕВ(КодСтраны,1)= "+" Тогда
			КодСтраны = Прав(КодСтраны, СтрДлина(КодСтраны)-1);
		КонецЕсли;
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодСтраны) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(КодГорода) Тогда
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодГорода) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(НомерТелефона) Тогда
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(НомерТелефона) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначенияПолейВСписокЗначений(РеквизитЗначенияПолей)
	
	// Преобразует "новое", строковое значение служебного поля адреса в "старое", список значений.
	
	Если ПустаяСтрока(РеквизитЗначенияПолей) Тогда
		Возврат Новый СписокЗначений;
	КонецЕсли;
	
	Возврат УправлениеКонтактнойИнформациейСлужебный.КонтактнаяИнформацияВСтаруюСтруктуру(РеквизитЗначенияПолей).ЗначенияПолей;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуВыбораКонтактнойИнформации(ВидКонтактнойИнформации, ИмяРеквизитаПредставление, ИмяРеквизитаЗначенияПолей, Заголовок = "")
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ВидКонтактнойИнформации);
	ПараметрыОткрытия.Вставить("ЗначенияПолей",           ЭтаФорма[ИмяРеквизитаЗначенияПолей]);
	ПараметрыОткрытия.Вставить("Представление",           ЭтаФорма[ИмяРеквизитаПредставление]);
	ПараметрыОткрытия.Вставить("Страна",				  СтранаРК());
	
	Если НЕ ПустаяСтрока(Заголовок) Тогда
		ПараметрыОткрытия.Вставить("Заголовок", Заголовок);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРеквизитаПредставление", ИмяРеквизитаПредставление);
	ДополнительныеПараметры.Вставить("ИмяРеквизитаЗначенияПолей", ИмяРеквизитаЗначенияПолей);
	ОповещениеОкончанияРедактированияКИ = Новый ОписаниеОповещения("РедактированиеКонтактнойИнформацииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, ОповещениеОкончанияРедактированияКИ);
	
КонецПроцедуры

&НаСервере
Функция СтранаРК()
	
	Возврат Справочники.СтраныМира.Казахстан;

КонецФункции

&НаСервере
Процедура РедактироватьДанныеНаСервере(НомерКарты)
	
	Если Не ЗначениеЗаполнено(НомерКарты) тогда
		Сообщить("Укажите номер");
		Возврат
	КонецЕсли;
	
	НомОбъ = ПолучимНоменальныйОбъект(НомерКарты);
	
	Если Элементы.РедактироватьДанные.Заголовок <> "Записать" тогда	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	bon_НоминальныеОбъекты.Ссылка КАК Ссылка,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Период КАК Период,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Регистратор КАК Регистратор,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.НомерСтроки КАК НомерСтроки,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Активность КАК Активность,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Номер КАК Номер,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект КАК НоминальныйОбъект,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.ПериодДействияНачало КАК ПериодДействияНачало,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.ПериодДействияКонец КАК ПериодДействияКонец,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Держатель КАК Держатель,
		               |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Автор КАК Автор,
		               |	Партнеры.ДатаРождения КАК ДатаРождения
		               |ИЗ
		               |	Справочник.bon_НоминальныеОбъекты КАК bon_НоминальныеОбъекты
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.bon_СведенияОНоминальныхОбъектах.СрезПоследних КАК bon_СведенияОНоминальныхОбъектахСрезПоследних
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		               |			ПО bon_СведенияОНоминальныхОбъектахСрезПоследних.Держатель = Партнеры.Ссылка
		               |		ПО bon_НоминальныеОбъекты.Ссылка = bon_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект
		               |ГДЕ
		               |	bon_НоминальныеОбъекты.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Код",НомерКарты);
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() > 0 Тогда
			Если ЗначениеЗаполнено(рез[0].Регистратор) Тогда 
				Фамилия =Рез[0].Держатель.Фамилия;
				Элементы.Фамилия.Доступность = Истина;
				Имя = Рез[0].Держатель.Имя;
				Элементы.Имя.Доступность = Истина;
				Отчество =Рез[0].Держатель.Отчество;
				Элементы.Отчество.Доступность = Истина;
				Элементы.ДатаРождения.Доступность = Истина;				
				Пол = Рез[0].Держатель.Пол;
				Элементы.Пол.Доступность = Истина;
				Емаил = Рез[0].Держатель.EMail;
				Элементы.Емаил.Доступность = Истина;
				Элементы.ПроверитьБонусныйСчет.Видимость = Ложь;
				//Элементы.РаспечататьАнкетуКоманд.Видимость = Ложь;
				Элементы.РаспечататьАнкету1.Видимость = Ложь;
				Элементы.РаспечататьАнкетуКоманд.Видимость = Ложь;     
				Элементы.ОффлайнГалочка.Видимость = Ложь;
				Элементы.ДанныеСверены.Видимость = Ложь;
				Элементы.Надпись1.Видимость = Ложь;
				Элементы.Надпись2.Видимость = Ложь;
				Элементы.УведомлятьОПроведенииАкции.Видимость = Ложь;
			Иначе
				Сообщить("бонусный счет не Заригистрирован");
				Возврат
			КонецЕсли;
		Иначе
			Сообщить("Бонусный счет не найден");
			Возврат
		КонецЕсли;
		Элементы.Кнопка1.Заголовок = "Записать";
		Возврат;
	Иначе
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	bon_НоминальныеОбъекты.Ссылка КАК НомОбъект,
		|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Регистратор,
		|	bon_ДниРожденийДержателейБССрезПоследних.ДатаРождения КАК ДатаР
		|ИЗ
		|	Справочник.bon_НоминальныеОбъекты КАК bon_НоминальныеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.bon_СведенияОНоминальныхОбъектах.СрезПоследних КАК bon_СведенияОНоминальныхОбъектахСрезПоследних
		|		ПО bon_НоминальныеОбъекты.Ссылка = bon_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.bon_ДниРожденийДержателейБС.СрезПоследних КАК bon_ДниРожденийДержателейБССрезПоследних
		|		ПО bon_НоминальныеОбъекты.Держатель = bon_ДниРожденийДержателейБССрезПоследних.Держатель
		|ГДЕ
		|	bon_НоминальныеОбъекты.Код = &Код";
		Запрос.УстановитьПараметр("Код",НомерКарты);
		Рез1 = Запрос.Выполнить().Выгрузить();
		Спр = Рез1[(Рез1.Количество() - 1)].НомОбъект.ПолучитьОбъект();
		док = Рез1[(Рез1.Количество() - 1)].Регистратор.ПолучитьОбъект();
		НаборЗаписей = док.Движения.ма_СведенияОНоминальныхОбъектах;
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			//СпрДержатель =  Запись.Держатель.ПолучитьОбъект();
			//СпрДержатель.ДатаРождения = ДатаРождения;
			//СпрДержатель.Фамилия = Фамилия;
			//СпрДержатель.Имя = Имя;
			//СпрДержатель.Отчество = Отчество;   
			//СпрДержатель.EMail = Емаил;
			//СпрДержатель.Пол = Пол;
			//СпрДержатель.Наименование = ""+ Фамилия +" "+ Имя + " " + Отчество;
			//СпрДержатель.Записать();
			//Спр.Наименование = СпрДержатель.Наименование;
			//Спр.Записать();
			//Сообщить("Даные записаны");
			//Если Рез1[0].ДатаР <> ДатаРождения Тогда
			//	МенеджерЗаписи = РегистрыСведений.мчт_ДниРожденийДержателейБС.СоздатьМенеджерЗаписи();
			//	МенеджерЗаписи.ДатаРождения = ДатаРождения;
			//	МенеджерЗаписи.Держатель = Спр.Держатель;
			//	МенеджерЗаписи.Автор = ПараметрыСеанса.ТекущийПользователь;
			//	МенеджерЗаписи.Период = ТекущаяДата();
			//	МенеджерЗаписи.Записать();
			//КонецЕсли;
			//Прервать
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучимНоменальныйОбъект(НомерКарты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	bon_ТелефоныНомОбъектов.bon_НоминальныеОбъекты КАК bon_НоминальныеОбъекты
	|ИЗ
	|	РегистрСведений.bon_ТелефоныНомОбъектов КАК bon_ТелефоныНомОбъектов
	|ГДЕ
	|	bon_ТелефоныНомОбъектов.Сотовый = &Сотовый";
	Запрос.УстановитьПараметр("Сотовый", НомерКарты);
	Резул = Запрос.Выполнить().Выгрузить();
	
	Если Резул.Количество() > 0 Тогда
		Возврат Резул[0].bon_НоминальныеОбъекты;	
	Иначе 
		Возврат Неопределено;		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьФизЛицо(НомОбъ)	
	Возврат НомОбъ.Держатель;	
КонецФункции

&НаКлиенте
Процедура РедактироватьДанные(Команда)
	Номер = Объект.НомерКарты;
	РедактироватьДанныеНаСервере(Номер);
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеДанных(Физ)
	МассивСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Физ.НаименованиеПолное, " ");
	Если МассивСтроки.Количество() > 1 Тогда
		Объект.Фамилия = МассивСтроки[0];	
		Объект.Имя = МассивСтроки[1];
		Объект.Отчество = МассивСтроки[2];
	КонецЕсли;	
	Объект.ДатаРождения = Физ.ГоловнойКонтрагент.Партнер.ДатаРождения;
	Объект.Пол          = Физ.ГоловнойКонтрагент.Партнер.Пол;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Доступность();
	УведомлятьОПроведенииАкции = Истина;

	ТелефоныПоНоменальному.Параметры.УстановитьЗначениеПараметра("Сотовый",  0);
		
КонецПроцедуры

&НаСервере
Функция ПроверитьДанныеПоКарте(Структура)	
	
	Если Структура.ТолькоПроверка ТОгда
		//проверяем карту на наличие и отвечаем делаем для проверки карты на наличие без регисрации + не хотел рисовать новый сервис
		//делаем для того тчобы проверять карту на наличие при регистрации продажи в ИМ на карту
		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Номер КАК Номер,
		|	bon_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект КАК НоминальныйОбъект,
		|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Держатель КАК Держатель,
		|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.bon_СведенияОНоминальныхОбъектах.СрезПоследних(&ДатаКонец, ) КАК bon_СведенияОНоминальныхОбъектахСрезПоследних
		|ГДЕ
		|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Номер = &КодКарты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ");
		
		Если НЕ Структура.ЭтоБонусныйСчет Тогда
			КодКарты = ";"+Структура.НомерКарты+"?";
		Иначе
			КодКарты = Структура.НомерКарты;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДатаКонец",КонецДня(ТекущаяДата())); //Константинов АА 24 04 17
		Запрос.УстановитьПараметр("КодКарты",КодКарты);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() тогда
			Если ПустаяСтрока(Выборка.НоминальныйОбъект)  ТОгда
				Возврат ?(Структура.ЭтоБонусныйСчет, "Бонусный счет не существует", "Карта не существует");
			ИначеЕсли ПустаяСтрока(Выборка.Держатель)ТОгда
				Возврат  ?(Структура.ЭтоБонусныйСчет, "Бонусный счет не зарегистирирован", "Карта не зарегистирирована");
			Иначе
				Возврат ?(Структура.ЭтоБонусныйСчет, "Бонусный счет существует", "Карта существует");
			КонецЕсли;
		Иначе
			Возврат  ?(Структура.ЭтоБонусныйСчет, "Бонусный счет не найден", "Карта не найдена");
		КонецЕсли;
	КонецЕсли;
	
	Год = СтрЗаменить(Число(Сред(ТекущаяДата(),7,4)-18)," ","");
	Месяц = Сред(ТекущаяДата(),4,2);
	День = Лев(ТекущаяДата(),2);
	Дата18 = Дата(Год+Месяц+День);
	
	Если Дата(Структура.ДатаРождения) > Дата18 Тогда
		//меньшн 18 лет
		Возврат  "Некорректная дата рождения, Вам меньше 18 лет";
		
	ИначеЕсли ПустаяСтрока(Структура.ФИО) Тогда
		Возврат  "Не заполнено ФИО";
		
	ИначеЕсли ПустаяСтрока(Структура.МобильныйТелефон) Тогда 
		Возврат  "Не заполнен мобильный телефон";
		
	ИначеЕсли СокрЛП(Лев(Структура.МобильныйТелефон,3)) <> "+77" Тогда
		Возврат  "Не верно указан номер телефона";
		
	ИначеЕсли ПустаяСтрока(Структура.ДатаРождения)Тогда 
		Возврат  "Не заполнена дата рождения";
		
	ИначеЕсли ПустаяСтрока(Структура.Пол) Тогда 
		
		Возврат  "Не заполнен пол";
	ИначеЕсли ПустаяСтрока(Структура.НомерКарты) тогда
		Возврат  "Не заполнен номер карты/счета";
		
	КонецЕсли;
		
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Номер КАК Номер,
	|	bon_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект КАК НоминальныйОбъект,
	|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Держатель КАК Держатель,
	|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.bon_СведенияОНоминальныхОбъектах.СрезПоследних(&ДатаКонец, ) КАК bon_СведенияОНоминальныхОбъектахСрезПоследних
	|ГДЕ
	|	bon_СведенияОНоминальныхОбъектахСрезПоследних.Номер = &КодКарты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ");
	
	Если НЕ Структура.ЭтоБонусныйСчет Тогда
		КодКарты = ";"+Структура.НомерКарты+"?";
	Иначе
		КодКарты = Структура.НомерКарты;
	КонецЕсли;						  
	
	Запрос.УстановитьПараметр("КодКарты",КодКарты);
	Запрос.УстановитьПараметр("ДатаКонец",КонецДня(ТекущаяДата())); //Константинов АА 24 04 17
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если не Выборка.Следующий() тогда
		
		Возврат "Карта не найдена";
		
	КонецЕсли;
	Если Не ПустаяСтрока(Выборка.Держатель) Тогда
		
		Возврат "Карта уже зарегистирирована";
		
	ИначеЕсли ПустаяСтрока(Выборка.НоминальныйОбъект) Тогда
		
		Возврат "Карта не найдена";
		
	КонецЕсли;
	
	Попытка
		СписокСозданных = Новый СписокЗначений;
		СоздатьПартнера(СписокСозданных);
		ТекПольз = ПараметрыСеанса.ТекущийПользователь;
		ТекПодразд = ПараметрыСеанса.ТекущийПользователь.Подразделение;
		
		////Статистика рекламы +++
		МенеджерЗаписи = РегистрыСведений.bon_СтатистикаРекламы.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 				  	= ТекущаяДата();  		
		МенеджерЗаписи.bon_НоминальныеОбъекты	= Объект.НоменальныйОбъект;
		МенеджерЗаписи.Подразделение		 	= ТекПодразд;
		МенеджерЗаписи.ОткудаВыУзналиОНас		= Объект.ОткудаВыОНасУзнали;
		МенеджерЗаписи.Автор				 	= ТекПольз;
		МенеджерЗаписи.Записать();                                     
		////Статистика рекламы ---
		
		
		Если СозданиеВыполнено Тогда
			
			РеквизитыПартнера = Новый Структура;
			
			Для Каждого ЭлементСписка Из СписокСозданных Цикл
				Если ТипЗнч(ЭлементСписка.Значение) = Тип("СправочникСсылка.Партнеры") Тогда
					РеквизитыПартнера.Вставить("Наименование", ЭлементСписка.Представление);
					РеквизитыПартнера.Вставить("ОсновнойМенеджер", ТекПольз); 
				КонецЕсли;
				//ПоказатьОповещениеПользователя("Создание", ЭлементСписка.Значение, ЭлементСписка.Представление);
			КонецЦикла;
			
			Если РеквизитыПартнера.Количество() = 0 Тогда
				РеквизитыПартнера = ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(ПартнерВыбор, "ОсновнойМенеджер, Наименование");
			КонецЕсли;			
		КонецЕсли; 
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;	
	//вот теперь все удачно ))
	Возврат Истина;
КонецФункции

&НаСервере
Процедура СоздатьПартнера(СписокСозданных)

	НачатьТранзакцию();
	
	Попытка		
		bon_БонуснаяПрограммаСервер.ЗарегистрироватьБонусныйСчет(СписокСозданных, Объект, ПартнерВыбор, СозданиеВыполнено, ТелефонПартнераФизЛицо, ТелефонПартнераФизЛицоЗначенияПолей);	
		ЗафиксироватьТранзакцию();	
	Исключение	
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Создание нового партнера.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));	
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ПроверимДанныеПоКарте()
		СтрокиЗапроса = Новый Массив;
		СтрокиЗапроса.Добавить(Новый Структура("RegFone",  "true"));
		СтрокиЗапроса.Добавить(Новый Структура("FIO", СокрЛП(Объект.Фамилия + " " + Объект.Имя + " " + Объект.Отчество)));
		СтрокиЗапроса.Добавить(Новый Структура("Mobile", "+7" +Объект.НомерКарты));
		СтрокиЗапроса.Добавить(Новый Структура("DOB", Формат(Объект.ДатаРождения, "ДФ=ггггММдд")));
		СтрокиЗапроса.Добавить(Новый Структура("Sex", ?(Объект.Пол = Перечисления.ПолФизическогоЛица.Женский, "Женский", "Мужской")));
		СтрокиЗапроса.Добавить(Новый Структура("Email", Объект.Емаил));
		СтрокиЗапроса.Добавить(Новый Структура("NoticeOfTheAction", ?(Объект.УведомлятьОПроведенииАкции, "true", "false")));
		СтрокиЗапроса.Добавить(Новый Структура("Employee", "False"));
		СтрокиЗапроса.Добавить(Новый Структура("OnlyChecked", "true"));
		СтрокиЗапроса.Добавить(Новый Структура("Card", Объект.НомерКарты));
		
		Структура = Новый Структура;
		Структура.Вставить("ФИО",Строка(СтрокиЗапроса[1].FIO));
		Структура.Вставить("НомерКарты",Строка(СтрокиЗапроса[9].Card));
		Структура.Вставить("МобильныйТелефон",Строка(СтрокиЗапроса[2].Mobile));
		Структура.Вставить("ДатаРождения",Строка(СтрокиЗапроса[3].DOB));
		Структура.Вставить("УведомлятьОПроведенииАкции",Строка(СтрокиЗапроса[6].NoticeOfTheAction));
		Структура.Вставить("Пол",Строка(СтрокиЗапроса[4].Sex));
		Структура.Вставить("Емаил",Строка(СтрокиЗапроса[5].Email));
		Структура.Вставить("ТолькоПроверка",Строка(СтрокиЗапроса[8].OnlyChecked));
		Структура.Вставить("ЭтоБонусныйСчет",?(Строка(СтрокиЗапроса[0].RegFone)=нрег("True"),True,False));
		Структура.Вставить("ЭтоСотрудник",?(Строка(СтрокиЗапроса[7].Employee)=нрег("True"),True,False));
		Структура.Вставить("Онлайн",Ложь);
		Ответ = ПроверитьДанныеПоКарте(Структура);
		
		Если Лев(Ответ,СтрДлина("Бонусный счет существует")) = "Бонусный счет существует" Тогда 
			Объект.БонусныйСчетПроверен = Ложь;
			Элементы.Надпись1.Заголовок = "Бонусный счет уже зарегистрирован" ;
			//Предупреждение(Ответ);		
		ИначеЕсли Лев(Ответ,СтрДлина("Бонусный счет не найден")) = "Бонусный счет не найден" Тогда 
			Объект.БонусныйСчетПроверен = Ложь;
			Элементы.Надпись1.Заголовок = "Бонусный счет не найден(Создайте на кассе)" ;
			//Предупреждение(Ответ);
		ИначеЕсли Лев(Ответ,СтрДлина("Бонусный счет не зарегистирирован")) = "Бонусный счет не зарегистирирован" Тогда 
			Объект.БонусныйСчетПроверен = Истина;
			Элементы.Надпись1.Заголовок = "Бонусный Счет готов к регистрации" ;
		КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьБонусныйСчет(Команда)
	Объект.АнкетаРаспечатана = Ложь;
	Объект.БонусныйСчетПроверен = Ложь;

	ПроверимДанныеПоКарте();
	Доступность();
КонецПроцедуры

&НаКлиенте
Процедура Доступность(Статус = Неопределено)
	
	Если НЕ Объект.БонусныйСчетПроверен тогда 
		Элементы.ДатаРождения.Доступность = Ложь;
		Элементы.Фамилия.Доступность = Ложь;
		Элементы.Имя.Доступность = Ложь;
		Элементы.Отчество.Доступность = Ложь;
		Элементы.Пол.Доступность = Ложь;
		Элементы.Емаил.Доступность = Ложь;
		Элементы.УведомлятьОПроведенииАкции.Доступность = Ложь;
		Элементы.РаспечататьАнкетуКоманд.Доступность = Ложь;
	иначе	
		Элементы.ДатаРождения.Доступность = Истина;
		Элементы.Фамилия.Доступность = Истина;
		Элементы.Имя.Доступность = Истина;
		Элементы.Отчество.Доступность = Истина;
		Элементы.Пол.Доступность = Истина;
		Элементы.Емаил.Доступность = Истина;
		Элементы.УведомлятьОПроведенииАкции.Доступность = Истина;
		Элементы.РаспечататьАнкетуКоманд.Доступность = Истина;
		Элементы.ПроверитьБонусныйСчет.Доступность = Ложь;
	КонецЕсли;
		
	Если Объект.АнкетаРаспечатана тогда 
		Элементы.ДанныеСверены.Доступность = Истина;
	иначе
		Элементы.РаспечататьАнкету1.Доступность = Ложь;
		Элементы.ДанныеСверены.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДанныеСверены тогда 
		Элементы.РаспечататьАнкету1.Доступность = Истина;
		Элементы.РаспечататьАнкетуКоманд.Доступность = Ложь;
	иначе
		Элементы.РаспечататьАнкету1.Доступность = Ложь;
		Элементы.РаспечататьАнкетуКоманд.Доступность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура печатьАнкеты()
	
	ТаблицаДан = печатьАнкетыДан();
	ТаблицаДан.Показать();	

КонецПроцедуры

&НаСервере
Функция   печатьАнкетыДан()
	Подразд = ПараметрыСеанса.ТекущийПользователь.Подразделение;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Анкета");	
	ОбластьМакета = Макет.ПолучитьОбласть("Анкета");
	
	ОбластьМакета.Рисунки.ОткудаВыОНасУзнали.Текст		= СокрЛП(Объект.ОткудаВыОНасУзнали);
	ОбластьМакета.Рисунки.Магазин.Текст					= СокрЛП(Подразд);

	
	ОбластьМакета.Рисунки.Фамилия.Текст		= СокрЛП(Объект.Фамилия);
	ОбластьМакета.Рисунки.Имя.Текст			= СокрЛП(Объект.Имя);
	ОбластьМакета.Рисунки.Отчество.Текст	= СокрЛП(Объект.Отчество);
	ОбластьМакета.Рисунки.День.Текст		= сокрЛП(День(Объект.ДатаРождения));
	ОбластьМакета.Рисунки.Месяц.Текст		= СокрЛП(Формат(Объект.ДатаРождения, "ДФ=ММММ"));
	ОбластьМакета.Рисунки.Год.Текст			= СокрЛП(Год(Объект.ДатаРождения));
	Если Объект.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
		ОбластьМакета.Рисунки.Муж.Текст			= "V";
		ОбластьМакета.Рисунки.Жен.Текст			= "";
	Иначе 
		ОбластьМакета.Рисунки.Муж.Текст			= "";
		ОбластьМакета.Рисунки.Жен.Текст			= "V";		
	КонецЕсли;
	ОбластьМакета.Рисунки.Номер.Текст		= СокрЛП(Объект.НомерКарты);
	ОбластьМакета.Рисунки.Имэйл.Текст		= Объект.Емаил;
	ОбластьМакета.Рисунки.Город.Текст		= "";/////-----------
	//ОбластьМакета.Рисунки.Город.Текст		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПользователиИнформационнойБазы.ТекущийПользователь(), "ОсновноеПодразделениеОрганизации"); 
	
	ОбластьМакета.Рисунки.ДеньЗап.Текст		= сокрЛП(День(ТекущаяДата()));
	ОбластьМакета.Рисунки.МесЗап.Текст		= СокрЛП(Формат(ТекущаяДата(), "ДФ=ММММ"));
	ОбластьМакета.Рисунки.ГодЗап.Текст		= СокрЛП(Год(ТекущаяДата()));
	
	//ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.Вывести(ОбластьМакета);                    
	
	Возврат ТабДокумент;
	
КонецФункции

&НаКлиенте
Процедура ДанныеСвереныПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Фамилия) и Не ЗначениеЗаполнено(Объект.Значение) Тогда 
		Элементы.РаспечататьАнкету1.Доступность = Ложь;
		Объект.ДанныеСверены = Ложь;
		Сообщить("Заполните Город Контрагента!!!");
		Возврат;		
	КонецЕсли;

	Доступность();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБонусный(Команда)
	
	Элементы.Найти.Доступность = Ложь;
	
	Форма = ПолучитьФорму("Обработка.bon_РегистрацияБонусногоСчетаКлиента.Форма.ФормаСоздания");
	Форма.Объект.НомерКарты = Объект.НомерКарты;
    Форма.ОткрытьМодально();
	Ном = Форма.Объект.НомерКарты;
	Элементы.СоздатьБонусный.Видимость = Ложь;
	Элементы.СоздатьБонусный1.Видимость = Ложь;
	Если Элементы.СовпаденияПоФИО.Видимость = Истина Тогда
		Элементы.ПрявязатьНомерККонтрагенту.Видимость = Истина;	
	КонецЕсли;
	ОчиститьВсе();
	
	Объект.НомерКарты = Ном; 
	Объект.НоменальныйОбъект = Ном;	
	НомОбъ = ПолучимНоменальныйОбъект(Ном);
	Если ЗначениеЗаполнено(НомОбъ) Тогда
		Физ = ПолучитьФизЛицо(НомОбъ);
		Объект.НоменальныйОбъект = НомОбъ;
		Если ЗначениеЗаполнено(Физ) Тогда
			Объект.ФизическоеЛицо = Физ;
			ЗаполнениеДанных(Физ);
		Иначе 
			Элементы.Фамилия.Доступность = Истина;
			Элементы.Имя.Доступность = Истина;
			Элементы.Отчество.Доступность = Истина;
			Элементы.ДатаРождения.Доступность = Истина;
			Элементы.Пол.Доступность = Истина;
		КонецЕсли;
		Элементы.Найти.Доступность = Ложь;
		Элементы.ПроверитьБонусныйСчет.Доступность = Истина;
	Иначе 
		Элементы.Фамилия.Доступность 		= Ложь;
		Элементы.Имя.Доступность 			= Ложь;
		Элементы.Отчество.Доступность 		= Ложь;
		Элементы.ДатаРождения.Доступность 	= Ложь;
		Элементы.Пол.Доступность 		  	= Ложь;
		Элементы.ПроверитьПоФамилии.Видимость  = Истина;
		Объект.Фамилия = "";
		Объект.Имя = "";
		Объект.Отчество = "";
		Объект.ДатаРождения = '00010101';
		Объект.Пол = "";
		Объект.УведомлятьОПроведенииАкции = Ложь;
		Объект.Емаил = "";
		Объект.ФизическоеЛицо = "";
		Объект.НоменальныйОбъект = "";
		Элементы.Найти.Доступность = Истина;
		Элементы.ПроверитьБонусныйСчет.Доступность = Ложь;
	КонецЕсли;
	
	ТелефонПартнераФизЛицо = "";
	ТелефонПартнераФизЛицоЗначенияПолей = "";
	
	ТелефонПартнераФизЛицо = Ном;
	Элемент = Неопределено;
	ОбработкаСобытияЭлементаКИТелефон(Элемент,ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонПартнера"),
	"ТелефонПартнераФизЛицо",
	"ТелефонПартнераФизЛицоЗначенияПолей",
	"ПриИзменении", Ном);
	
	ТелефоныПоНоменальному.Параметры.УстановитьЗначениеПараметра("Сотовый",  Ном);
	
	
	//Закрыть();
КонецПроцедуры

&НаСервере
Процедура РаспечататьАнкету1НаСервере()
	
	Если Объект.БонусныйСчетПроверен тогда 		
		СтрокиЗапроса = Новый Массив;
		СтрокиЗапроса.Добавить(Новый Структура("RegFone",  "true"));
		СтрокиЗапроса.Добавить(Новый Структура("FIO", СокрЛП(Объект.Фамилия + " " + Объект.Имя + " " + Объект.Отчество)));
		СтрокиЗапроса.Добавить(Новый Структура("Mobile", "+7" +Объект.НомерКарты));
		СтрокиЗапроса.Добавить(Новый Структура("DOB", Формат(Объект.ДатаРождения, "ДФ=ггггММдд")));
		СтрокиЗапроса.Добавить(Новый Структура("Sex", ?(Объект.Пол = Перечисления.ПолФизическогоЛица.Женский, "Женский", "Мужской")));
		СтрокиЗапроса.Добавить(Новый Структура("Email", Объект.Емаил));
		СтрокиЗапроса.Добавить(Новый Структура("NoticeOfTheAction", ?(Объект.УведомлятьОПроведенииАкции, "true", "false")));
		СтрокиЗапроса.Добавить(Новый Структура("Employee", "False"));
		СтрокиЗапроса.Добавить(Новый Структура("OnlyChecked", "False"));
		СтрокиЗапроса.Добавить(Новый Структура("Card","" + Объект.НомерКарты));
	КонецЕсли;		
	
	Структура = Новый Структура;
	Структура.Вставить("ФИО",Строка(СтрокиЗапроса[1].FIO));	
	Структура.Вставить("НомерКарты",Строка(СтрокиЗапроса[9].Card));
	Структура.Вставить("МобильныйТелефон",Строка(СтрокиЗапроса[2].Mobile));
	Структура.Вставить("ДатаРождения",Строка(СтрокиЗапроса[3].DOB));
	Структура.Вставить("УведомлятьОПроведенииАкции",Строка(СтрокиЗапроса[6].NoticeOfTheAction));
	Структура.Вставить("Пол",Строка(СтрокиЗапроса[4].Sex));
	Структура.Вставить("Емаил",Строка(СтрокиЗапроса[5].Email));
	Структура.Вставить("ТолькоПроверка",Строка(СтрокиЗапроса[8].OnlyChecked));
	Структура.Вставить("ЭтоБонусныйСчет",?(Строка(СтрокиЗапроса[0].RegFone)=нрег("True"),True,False));
	Структура.Вставить("ЭтоСотрудник",?(Строка(СтрокиЗапроса[7].Employee)=нрег("True"),True,False));
	Структура.Вставить("Онлайн",Ложь);
	Ответ = ПроверитьДанныеПоКарте(Структура);	
	Попытка		
		Если Ответ Тогда 		
			Сообщить("Счет зарегистрирован");
			Элементы.Надпись1.Заголовок = "Счет зарегистрирован";
			ОтчисткаПослеРегистрации();
		Иначе 			
			Сообщить(Ответ);	
		КонецЕсли;
	Исключение
		Сообщить(Ответ);	
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьАнкету1(Команда)
	РаспечататьАнкету1НаСервере();
	Доступность();
	Закрыть();
КонецПроцедуры

&НаСервере
процедура отчисткаПослеРегистрации()
	
	Объект.ДатаРождения = 0;
	Объект.Фамилия = "";
	Объект.Имя = "";
	Объект.Отчество = "";
	Объект.Пол = "";
	Объект.Емаил = "";
	Объект.УведомлятьОПроведенииАкции = истина;
	Объект.ДанныеСверены = Ложь;
	Объект.БонусныйСчетПроверен = Ложь;	
	
КонецПроцедуры

&НаКлиенте
Процедура НетСовпадений(Команда)
	//печатьАнкеты();
	//Объект.АнкетаРаспечатана = Истина;
	Доступность();
	СовпаденияПоФИО.Очистить();
	Элементы.СовпаденияПоФИО.Видимость = Ложь;
	Элементы.НетСовпадений.Видимость = Ложь;
	Элементы.ПрявязатьНомерККонтрагенту.Видимость = Ложь;
	Элементы.СоздатьБонусный1.Видимость = Ложь;

	Если Не ЗначениеЗаполнено(Объект.НоменальныйОбъект) Тогда
		Элементы.СоздатьБонусный.Видимость  = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрявязатьНомерККонтрагентуНаСервере(Контрагент, ТелефонПартнераФизЛицо, ТелефонПартнераФизЛицоЗначенияПолей, ПривязалиКконтрагенту)
	
	НетуБон = Ложь;
	
	Запрос = Новый  Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	bon_ТелефоныНомОбъектов.bon_НоминальныеОбъекты КАК bon_НоминальныеОбъекты
	|ИЗ
	|	РегистрСведений.bon_ТелефоныНомОбъектов КАК bon_ТелефоныНомОбъектов
	|ГДЕ
	|	bon_ТелефоныНомОбъектов.Контрагенты = &Контрагенты
	|
	|СГРУППИРОВАТЬ ПО
	|	bon_ТелефоныНомОбъектов.bon_НоминальныеОбъекты";
	Запрос.УстановитьПараметр("Контрагенты", Контрагент);
	Резул = Запрос.Выполнить().Выгрузить();
	
	Если Резул.Количество() > 0 Тогда
		НетуБон = Истина;
		///Создаем Ввод в Оборот ///+++
		НовДокВВод = Документы.bon_ВводВОборотНоминальныхОбъектов.СоздатьДокумент();
		НовДокВВод.Дата = ТекущаяДата();
		НовДокВВод.ВидНоминальныхОбъектов = Справочники.bon_ВидыНоминальныхОбъектов.БонусныеСчета; 
			
		Стра = НовДокВВод.НоминальныеОбъекты.Добавить();
		Стра.Номер 				= ТелефонПартнераФизЛицо; 
		Стра.НоминальныйОбъект 	= Резул[0].bon_НоминальныеОбъекты;
		Стра.Держатель			= Контрагент;
		НовДокВВод.Записать();
		НовДокВВод.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		///Создаем Ввод в Оборот ///---
		
		///Создаем Регистрацию Бонусного ///+++
		НовДокРег = Документы.bon_РегистрацияНоминальныхОбъектов.СоздатьДокумент();
		НовДокРег.Дата = ТекущаяДата();
		НовДокРег.ВидНоминальногоОбъекта = Справочники.bon_ВидыНоминальныхОбъектов.БонусныеСчета; 
		
		Стра = НовДокРег.НоминальныеОбъекты.Добавить();
		Стра.Номер 				= ТелефонПартнераФизЛицо; 
		Стра.НоминальныйОбъект 	= Резул[0].bon_НоминальныеОбъекты;
		Стра.Держатель			= Контрагент;
		НовДокРег.Записать();
		НовДокРег.Записать(РежимЗаписиДокумента.Проведение);
		///Создаем Регистрацию Бонусного ///---
		
		///Телефон Контрагента добавляем
		Если НЕ ПустаяСтрока(ТелефонПартнераФизЛицо) Тогда		
			ОбъектПартнер = Контрагент.Партнер.ПолучитьОбъект();
			НоваяСтрокаКИ = ОбъектПартнер.КонтактнаяИнформация.Добавить();
			НоваяСтрокаКИ.Тип               	= Перечисления.ТипыКонтактнойИнформации.Телефон;
			НоваяСтрокаКИ.Вид               	= Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
			НоваяСтрокаКИ.Представление     	= ТелефонПартнераФизЛицо;
			НоваяСтрокаКИ.НомерТелефона 		= ТелефонПартнераФизЛицо;
			НоваяСтрокаКИ.НомерТелефонаБезКодов = ТелефонПартнераФизЛицо;
			НоваяСтрокаКИ.ЗначенияПолей     	= ТелефонПартнераФизЛицоЗначенияПолей;
			ОбъектПартнер.Записать();
			
			ОбъектКонтрагент = Контрагент.ПолучитьОбъект();
			НоваяСтрокаКИ = ОбъектКонтрагент.КонтактнаяИнформация.Добавить();
			НоваяСтрокаКИ.Тип           = Перечисления.ТипыКонтактнойИнформации.Телефон;
			НоваяСтрокаКИ.Вид           = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
			НоваяСтрокаКИ.Представление = ТелефонПартнераФизЛицо;
			НоваяСтрокаКИ.НомерТелефона = ТелефонПартнераФизЛицо;
			НоваяСтрокаКИ.НомерТелефонаБезКодов = ТелефонПартнераФизЛицо;
			НоваяСтрокаКИ.ЗначенияПолей = ТелефонПартнераФизЛицоЗначенияПолей;
			bon_БонуснаяПрограммаСервер.УбратьЗначениевДоопИнформацииКонтрагента(ОбъектКонтрагент);
			ОбъектКонтрагент.Записать();
		КонецЕсли;
		ПривязалиКконтрагенту = Истина;
	Иначе
		СтатусРег = Неопределено;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	bon_ТелефоныНомОбъектов.bon_НоминальныеОбъекты КАК bon_НоминальныеОбъекты
		               |ИЗ
		               |	РегистрСведений.bon_ТелефоныНомОбъектов КАК bon_ТелефоныНомОбъектов
		               |ГДЕ
		               |	bon_ТелефоныНомОбъектов.Сотовый = &Сотовый";
		Запрос.УстановитьПараметр("Сотовый", ТелефонПартнераФизЛицо);
		Рез = Запрос.Выполнить().Выгрузить();
		
		Если рез.Количество() > 0 Тогда
			НомОбъ = рез[0].bon_НоминальныеОбъекты;	
		Иначе 
			НомОбъ = Неопределено;	
		КонецЕсли;
		
		Если НомОбъ <> Неопределено Тогда
			ЗапросРег = Новый Запрос;
			ЗапросРег.Текст = "ВЫБРАТЬ
			                  |	bon_СведенияОНоминальныхОбъектахСрезПоследних.Регистратор.Ссылка КАК РегистраторСсылка
			                  |ИЗ
			                  |	РегистрСведений.bon_СведенияОНоминальныхОбъектах.СрезПоследних(&ТекДата, ) КАК bon_СведенияОНоминальныхОбъектахСрезПоследних
			                  |ГДЕ
			                  |	bon_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект = &НоминальныйОбъект";
			ЗапросРег.УстановитьПараметр("НоминальныйОбъект", НомОбъ);
			ЗапросРег.УстановитьПараметр("ТекДата", ТекущаяДата());
			РезРег = ЗапросРег.Выполнить().Выгрузить();
			
			Если РезРег.Количество() > 0 Тогда
				Если Строка(ТипЗнч(РезРег[0].РегистраторСсылка)) = Строка("Ввод в оборот номинальных объектов") Тогда
					СтатусРег = Строка("ВВеден");
				Иначе 
					СтатусРег = Неопределено;
					НетуБон = Ложь;	
				КонецЕсли;
			Иначе 
				СтатусРег = Неопределено;
				НетуБон = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если СтатусРег = Строка("ВВеден") Тогда
			НетуБон = Истина;
			///Создаем Ввод в Оборот ///+++
			НовДокВВод = Документы.bon_ВводВОборотНоминальныхОбъектов.СоздатьДокумент();
			НовДокВВод.Дата = ТекущаяДата();
			НовДокВВод.ВидНоминальныхОбъектов = Справочники.bon_ВидыНоминальныхОбъектов.БонусныеСчета; 
			
			Стра = НовДокВВод.НоминальныеОбъекты.Добавить();
			Стра.Номер 				= ТелефонПартнераФизЛицо; 
			Стра.НоминальныйОбъект 	= НомОбъ;
			Стра.Держатель			= Контрагент;
			НовДокВВод.Записать();
			НовДокВВод.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
			///Создаем Ввод в Оборот ///---
			
			///Создаем Регистрацию Бонусного ///+++
			НовДокРег = Документы.bon_РегистрацияНоминальныхОбъектов.СоздатьДокумент();
			НовДокРег.Дата = ТекущаяДата();
			НовДокРег.ВидНоминальногоОбъекта = Справочники.bon_ВидыНоминальныхОбъектов.БонусныеСчета; 
			
			Стра = НовДокРег.НоминальныеОбъекты.Добавить();
			Стра.Номер 				= ТелефонПартнераФизЛицо; 
			Стра.НоминальныйОбъект 	= НомОбъ;
			Стра.Держатель			= Контрагент;
			НовДокРег.Записать();
			НовДокРег.Записать(РежимЗаписиДокумента.Проведение);
			///Создаем Регистрацию Бонусного ///---

			
			///Телефон Контрагента добавляем
			Если НЕ ПустаяСтрока(ТелефонПартнераФизЛицо) Тогда		
				ОбъектПартнер = Контрагент.Партнер.ПолучитьОбъект();
				НоваяСтрокаКИ = ОбъектПартнер.КонтактнаяИнформация.Добавить();
				НоваяСтрокаКИ.Тип               	= Перечисления.ТипыКонтактнойИнформации.Телефон;
				НоваяСтрокаКИ.Вид               	= Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
				НоваяСтрокаКИ.Представление     	= ТелефонПартнераФизЛицо;
				НоваяСтрокаКИ.НомерТелефона 		= ТелефонПартнераФизЛицо;
				НоваяСтрокаКИ.НомерТелефонаБезКодов = ТелефонПартнераФизЛицо;
				НоваяСтрокаКИ.ЗначенияПолей     	= ТелефонПартнераФизЛицоЗначенияПолей;
				ОбъектПартнер.Записать();
				
				ОбъектКонтрагент = Контрагент.ПолучитьОбъект();
				НоваяСтрокаКИ = ОбъектКонтрагент.КонтактнаяИнформация.Добавить();
				НоваяСтрокаКИ.Тип           = Перечисления.ТипыКонтактнойИнформации.Телефон;
				НоваяСтрокаКИ.Вид           = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
				НоваяСтрокаКИ.Представление = ТелефонПартнераФизЛицо;
				НоваяСтрокаКИ.НомерТелефона = ТелефонПартнераФизЛицо;
				НоваяСтрокаКИ.НомерТелефонаБезКодов = ТелефонПартнераФизЛицо;
				НоваяСтрокаКИ.ЗначенияПолей = ТелефонПартнераФизЛицоЗначенияПолей;
				bon_БонуснаяПрограммаСервер.УбратьЗначениевДоопИнформацииКонтрагента(ОбъектКонтрагент);
				ОбъектКонтрагент.Записать();
			КонецЕсли;
			ПривязалиКконтрагенту = Истина;	
			
		КонецЕсли;
		
		
	КонецЕсли;	
	Если Не НетуБон Тогда
		Сообщить("Нету Бонусного Счета!!!");
		ПривязалиКконтрагенту = Ложь;
		Возврат;
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПрявязатьНомерККонтрагенту(Команда)
	
	ПривязалиКконтрагенту = Ложь;
	
	НетВыб = Ложь;
	Для Каждого Строк Из СовпаденияПоФИО Цикл 
		Если Строк.Выбрать = Истина Тогда
			НетВыб = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Если Не НетВыб Тогда 
		Предупреждение("Не выбрано ни одна из совпадающий позиций!!!");
		Возврат;
	КонецЕсли;
	
	                              
	Для Каждого Строк Из СовпаденияПоФИО Цикл 
		Если Строк.Выбрать = Истина Тогда
			ПрявязатьНомерККонтрагентуНаСервере(Строк.Контрагент, ТелефонПартнераФизЛицо, ТелефонПартнераФизЛицоЗначенияПолей, ПривязалиКконтрагенту);
		КонецЕсли;
	КонецЦикла;
	
	Если ПривязалиКконтрагенту Тогда
		Закрыть();
	Иначе 
		ОчиститьВсе();
		Элементы.СовпаденияПоФИО.Видимость = Ложь;
		Элементы.НетСовпадений.Видимость = Ложь;
		Элементы.ПрявязатьНомерККонтрагенту.Видимость = Ложь;
		СовпаденияПоФИО.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СовпаденияПоФИОВыбратьПриИзменении(Элемент)
	
	Если Элементы.СовпаденияПоФИО.ТекущиеДанные.Выбрать Тогда
		Для Каждого Стр Из СовпаденияПоФИО Цикл 
			Если Стр.Контрагент <> Элементы.СовпаденияПоФИО.ТекущиеДанные.Контрагент Тогда
				Стр.Выбрать = Ложь;	
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура ПроверитьПоФамилииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПоФамилии(Команда)
	
	Текст = "";
	Подсказка = "Введите Фамилию";
	Вып = ВвестиСтроку(Текст,Подсказка,0,Ложь);
	
	СовпаденияПоФИО.Очистить();
	Если Вып = Истина Тогда
		ТаблицаСовпад = ЕстьСовпаденияПоФизЛицу(Текст);
		
		Если СовпаденияПоФИО.Количество() > 0 Тогда
			Элементы.СоздатьБонусный.Видимость  = Ложь;
			Элементы.ПроверитьПоФамилии.Видимость  = Ложь;
			Элементы.СовпаденияПоФИО.Видимость = Истина;
			Элементы.НетСовпадений.Видимость = Истина;
			Если Не ЗначениеЗаполнено(Объект.НоменальныйОбъект) Тогда
				Элементы.СоздатьБонусный1.Видимость = Истина;
				Элементы.ПрявязатьНомерККонтрагенту.Видимость = Ложь;
			Иначе 
				Элементы.ПрявязатьНомерККонтрагенту.Видимость = Истина;	
			КонецЕсли;
		Иначе 
			Элементы.СоздатьБонусный.Видимость  = Истина;
			Элементы.ПроверитьПоФамилии.Видимость  = Ложь;
		КонецЕсли;
	Иначе 
		Если Не ЗначениеЗаполнено(Объект.НоменальныйОбъект) Тогда
			Элементы.СоздатьБонусный.Видимость  = Истина;
		КонецЕсли;
		Элементы.ПроверитьПоФамилии.Видимость  = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсе()
	Объект.НомерКарты = "";
	Объект.НоменальныйОбъект = "";
	Объект.Фамилия = "";
	Объект.Имя = "";
	Объект.Отчество = "";
	Объект.Пол = "";
	Объект.ДатаРождения = '00010101';	
	ТелефонПартнераФизЛицо = "";
	ТелефонПартнераФизЛицоЗначенияПолей = "";
	Объект.АнкетаРаспечатана = Ложь;
	Объект.ДанныеСверены = Ложь;
	Объект.БонусныйСчетПроверен = Ложь;
	Доступность();
КонецПроцедуры

&НаКлиенте
Процедура НайтиКоманда(Команда)
	
	Элементы.РедактироватьДанные.Заголовок = "Редактировать данные";
	///Проверка на первую цыфору чтобы бала "7"
	Ном = Объект.НомерКарты;

	Если  СтрДлина(Ном) < 10 Тогда
		Сообщить("Некорректный номер!");
		Объект.НомерКарты = "";
		Возврат;
	КонецЕсли;
	
	///Проверка чтобы были только "Цифры"
	Цифры = "0123456789";
	СтрКоличество = СтрДлина(Ном);
	Для Счетчик = 1 По СтрКоличество Цикл
		Если Найти(Цифры,Сред(Ном,Счетчик,1)) = 0 Тогда
			Сообщить("Некорректный номер!");
			Объект.НомерКарты = "";
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Если Число(Сред(Ном,1,1)) <> 7 Тогда
		Сообщить("Некорректный номер!");
		Объект.НомерКарты = "";
		Возврат;	
	КонецЕсли;
	
	НомОбъ = ПолучимНоменальныйОбъект(Ном);
	Если ЗначениеЗаполнено(НомОбъ) Тогда
		Элементы.ПроверитьБонусныйСчет.Доступность = Истина;
		Элементы.Найти.Доступность = Ложь;
		Физ = ПолучитьФизЛицо(НомОбъ);
		Объект.НоменальныйОбъект = НомОбъ;
		Если ЗначениеЗаполнено(Физ) Тогда
			Объект.ФизическоеЛицо = Физ;
			ЗаполнениеДанных(Физ);
		Иначе 
			Элементы.ПроверитьПоФамилии.Видимость = Истина;
			Элементы.Фамилия.Доступность = Истина;
			Элементы.Имя.Доступность = Истина;
			Элементы.Отчество.Доступность = Истина;
			Элементы.ДатаРождения.Доступность = Истина;
			Элементы.Пол.Доступность = Истина;
		КонецЕсли;
	Иначе
		Элементы.ПроверитьБонусныйСчет.Доступность = Ложь;
		Элементы.Фамилия.Доступность 		= Ложь;
		Элементы.Имя.Доступность 			= Ложь;
		Элементы.Отчество.Доступность 		= Ложь;
		Элементы.ДатаРождения.Доступность 	= Ложь;
		Элементы.Пол.Доступность 		  	= Ложь;
		//Элементы.СоздатьБонусный.Видимость  = Истина;
		Элементы.ПроверитьПоФамилии.Видимость  = Истина;
		Объект.Фамилия = "";
		Объект.Имя = "";
		Объект.Отчество = "";
		Объект.ДатаРождения = '00010101';
		Объект.Пол = "";
		Объект.УведомлятьОПроведенииАкции = Ложь;
		Объект.Емаил = "";
		Объект.ФизическоеЛицо = "";
		Объект.НоменальныйОбъект = "";
		
	КонецЕсли;
	
	ТелефонПартнераФизЛицо = "";
	ТелефонПартнераФизЛицоЗначенияПолей = "";
	
	ТелефонПартнераФизЛицо = Ном;
	Тел = "";
	ОбработкаСобытияЭлементаКИТелефон(
		Объект.НомерКарты,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонПартнера"),
		"ТелефонПартнераФизЛицо",
		"ТелефонПартнераФизЛицоЗначенияПолей",
		"ПриИзменении", Тел);
	
	ТелефоныПоНоменальному.Параметры.УстановитьЗначениеПараметра("Сотовый",  Ном);
	
КонецПроцедуры
