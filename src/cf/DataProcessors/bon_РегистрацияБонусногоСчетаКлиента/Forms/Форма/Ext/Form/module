Перем WSDL, Логин, Пароль;




Процедура Доступность(Статус = Неопределено)
	
	Если НЕ БонусныйСчетПроверен тогда 
		
		ЭлементыФормы.ДатаРождения.Доступность = Ложь;
		ЭлементыФормы.Фамилия.Доступность = Ложь;
		ЭлементыФормы.Имя.Доступность = Ложь;
		ЭлементыФормы.Отчество.Доступность = Ложь;
		ЭлементыФормы.Пол.Доступность = Ложь;
		ЭлементыФормы.Емаил.Доступность = Ложь;
		ЭлементыФормы.УведомлятьОПроведенииАкции.Доступность = Ложь;
		ЭлементыФормы.РаспечататьАнкету.Доступность = Ложь;
		
		
	иначе
		
		ЭлементыФормы.ДатаРождения.Доступность = Истина;
		ЭлементыФормы.Фамилия.Доступность = Истина;
		ЭлементыФормы.Имя.Доступность = Истина;
		ЭлементыФормы.Отчество.Доступность = Истина;
		ЭлементыФормы.Пол.Доступность = Истина;
		ЭлементыФормы.Емаил.Доступность = Истина;
		ЭлементыФормы.УведомлятьОПроведенииАкции.Доступность = Истина;
		ЭлементыФормы.РаспечататьАнкету.Доступность = Истина;
		
	КонецЕсли;
	
	
	Если АнкетаРаспечатана тогда 
		
		ЭлементыФормы.ДанныеСверены.Доступность = Истина;
		
		
	иначе
		
		ЭлементыФормы.РаспечататьАнкету1.Доступность = Ложь;
		ЭлементыФормы.ДанныеСверены.Доступность = Ложь;
		
	КонецЕсли;
	
	
	Если ДанныеСверены тогда 
		
		ЭлементыФормы.РаспечататьАнкету1.Доступность = Истина;
		
		
	иначе
		
		ЭлементыФормы.РаспечататьАнкету1.Доступность = Ложь;
		
	КонецЕсли;
	
	
	Если Статус <> Неопределено Тогда 
		
		Если Статус тогда 
			
			ЭлементыФормы.Надпись2.Заголовок = "online" ;
			
			
			
		иначе
			
			ЭлементыФормы.Надпись2.Заголовок = "offline" ;
			
			
		КонецЕсли;
		
		
		
	КонецЕсли;
	
	
	
КонецПроцедуры



Функция ПолучитьБазовыйХМЛЗапроса(СтрокиЗапроса = Неопределено) Экспорт
	
	Результат = Новый ЗаписьXML;
	
	Результат.УстановитьСтроку("UTF-8");
	
	Результат.ЗаписатьНачалоЭлемента("InformationCardRecord");
	
	Для каждого СтрокаЗапроса Из СтрокиЗапроса Цикл
		
		Для Каждого Параметр Из СтрокаЗапроса Цикл
			
			Результат.ЗаписатьНачалоЭлемента(Параметр.Ключ);
			Результат.ЗаписатьТекст(Параметр.Значение);				
			Результат.ЗаписатьКонецЭлемента();
			
		КонецЦикла;
		
	КонецЦикла;
	
	Результат.ЗаписатьКонецЭлемента();
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьКодОтвета(ДокументДОМ)
	
	Результат = "0";
	
	мКодОтвета = ДокументДОМ.ПолучитьЭлементыПоИмени("InformationCardReply");
	
	Если мКодОтвета.Количество() = 0 Тогда
		Возврат Результат;	
	КонецЕсли;
	
	элКодОтвета = мКодОтвета[0];
	
	Результат = элКодОтвета.ТекстовоеСодержимое;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьКодОтвета1(ДокументДОМ)
	
	Результат = "0";
	
	мКодОтвета = ДокументДОМ.ПолучитьЭлементыПоИмени("error");
	
	Если мКодОтвета.Количество() = 0 Тогда
		Возврат Результат;	
	КонецЕсли;
	
	элКодОтвета = мКодОтвета[0];
	
	Результат = элКодОтвета.ТекстовоеСодержимое;
	
	Возврат Результат;
	
КонецФункции

Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ПрочитатьФИО();
	
	ДатаРождения = Формат(ФизическоеЛицо.ДатаРождения, "ДФ=ггггММдд");
	Пол = ?(ФизическоеЛицо.Пол = Перечисления.ПолФизическихЛиц.Женский, "Женский", "Мужской");
	
КонецПроцедуры

Процедура ПрочитатьФИО()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ФизЛицо", ФизическоеЛицо);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Фамилия,
	|	Имя,
	|	Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(, ФизЛицо = &ФизЛицо)";
	
	ФИОСрез = Запрос.Выполнить().Выбрать();
	
	Если ФИОСрез.Следующий() Тогда
		Фамилия  = ФИОСрез.Фамилия;
		Имя      = ФИОСрез.Имя;
		Отчество = ФИОСрез.Отчество;
	КонецЕсли;
	
КонецПроцедуры // ПрочитатьФИО

Процедура ПриОткрытии()
	
	Доступность();
	УведомлятьОПроведенииАкции = Истина;
	
	Если РольДоступна("ПолныеПрава") Тогда 
		ЭлементыФормы.ОффлайнГалочка.Видимость = Истина;
	КонецЕсли;
	
	
	//ОффлайнГалочка = Истина;
	
КонецПроцедуры

Процедура ПроверитьСчет(Элемент)
	
	АнкетаРаспечатана = Ложь;
	
	БонусныйСчетПроверен = Ложь;
	
	Онлайн = Ложь; //Работаем Локально	
	
	Если Онлайн Тогда 
		Попытка
			
			ВебОпределение 			= Новый WSОпределения(WSDL + "RegisterStorageCard/?wsdl", Логин, Пароль);
			ВебСервис				= ВебОпределение.Services[0];
			ВебПрокси 				= Новый WSПрокси(ВебОпределение, ВебСервис.NamespaceURI, ВебСервис.Name, ВебСервис.Endpoints[0].Name);
			ВебПрокси.Пользователь 	= Логин;
			ВебПрокси.Пароль 		= Пароль;
			Онлайн = Истина;
			
			СтрокиЗапроса = Новый Массив;
			СтрокиЗапроса.Добавить(Новый Структура("RegFone",  "true"));
			СтрокиЗапроса.Добавить(Новый Структура("FIO", СокрЛП(Фамилия + " " + Имя + " " + Отчество)));
			СтрокиЗапроса.Добавить(Новый Структура("Mobile", "+7" +НомерКарты));
			СтрокиЗапроса.Добавить(Новый Структура("Fone", ДомашнийТелефон));
			СтрокиЗапроса.Добавить(Новый Структура("DOB", Формат(ДатаРождения, "ДФ=ггггММдд")));
			СтрокиЗапроса.Добавить(Новый Структура("Sex", ?(Пол = Перечисления.ПолФизическихЛиц.Женский, "Женский", "Мужской")));
			СтрокиЗапроса.Добавить(Новый Структура("Email", Емаил));
			СтрокиЗапроса.Добавить(Новый Структура("NoticeOfTheAction", ?(УведомлятьОПроведенииАкции, "true", "false")));
			СтрокиЗапроса.Добавить(Новый Структура("Employee", "False"));
			СтрокиЗапроса.Добавить(Новый Структура("OnlyChecked", "true"));
			СтрокиЗапроса.Добавить(Новый Структура("Card", НомерКарты));
			
			ЗаписьХМЛ = ПолучитьБазовыйХМЛЗапроса(СтрокиЗапроса);
			
			Ответ = ВебПрокси.RegisterStorageCard(ЗаписьХМЛ.Закрыть());
			//	Сообщить(Ответ);
			ЧтениеХМЛ = Новый ЧтениеXML;
			
			ЧтениеХМЛ.УстановитьСтроку(Ответ);
			ПостроительДОМ = Новый ПостроительDOM;
			ДокументДОМ = ПостроительДОМ.Прочитать(ЧтениеХМЛ);
			КодОтвета = ПолучитьКодОтвета1(ДокументДОМ);
			Если Лев(КодОтвета,СтрДлина("Бонусный счет существует")) = "Бонусный счет существует" Тогда 
				БонусныйСчетПроверен = Ложь;
				ЭлементыФормы.Надпись1.Заголовок = "Бонусный счет уже зарегистрирован" ;
				Предупреждение(КодОтвета);
			ИначеЕсли Лев(КодОтвета,СтрДлина("Бонусный счет не найден")) = "Бонусный счет не найден" Тогда 
				БонусныйСчетПроверен = Ложь;
				ЭлементыФормы.Надпись1.Заголовок = "Бонусный счет не найден(Создайте на кассе)" ;
				Предупреждение(КодОтвета);				
			ИначеЕсли Лев(КодОтвета,СтрДлина("Бонусный счет не зарегистирирован")) = "Бонусный счет не зарегистирирован" Тогда
				БонусныйСчетПроверен = Истина;
				ЭлементыФормы.Надпись1.Заголовок = "Бонусный Счет готов к регистрации" ;
			КонецЕсли;
		Исключение
			ОффлайнГалочка = Истина;
			Предупреждение("Нет связи, Работаем офлайн !");	
			ПроверимДанныеПоКарте();
		КонецПопытки;
	Иначе 
		//Предупреждение("Ошибка передачи данных на сервер!
		//|Информация о регистрации бонусного счета 
		//|станет доступна через 40 минут.", , "Внимание");
		ПроверимДанныеПоКарте();
	КонецЕсли;	
	Онлайн = НЕ ОффлайнГалочка;
	Доступность(Онлайн) ;
	
КонецПроцедуры

Процедура ПроверимДанныеПоКарте()
		СтрокиЗапроса = Новый Массив;
		СтрокиЗапроса.Добавить(Новый Структура("RegFone",  "true"));
		СтрокиЗапроса.Добавить(Новый Структура("FIO", СокрЛП(Фамилия + " " + Имя + " " + Отчество)));
		СтрокиЗапроса.Добавить(Новый Структура("Mobile", "+7" +НомерКарты));
		СтрокиЗапроса.Добавить(Новый Структура("Fone", ДомашнийТелефон));
		СтрокиЗапроса.Добавить(Новый Структура("DOB", Формат(ДатаРождения, "ДФ=ггггММдд")));
		СтрокиЗапроса.Добавить(Новый Структура("Sex", ?(Пол = Перечисления.ПолФизическихЛиц.Женский, "Женский", "Мужской")));
		СтрокиЗапроса.Добавить(Новый Структура("Email", Емаил));
		СтрокиЗапроса.Добавить(Новый Структура("NoticeOfTheAction", ?(УведомлятьОПроведенииАкции, "true", "false")));
		СтрокиЗапроса.Добавить(Новый Структура("Employee", "False"));
		СтрокиЗапроса.Добавить(Новый Структура("OnlyChecked", "true"));
		СтрокиЗапроса.Добавить(Новый Структура("Card", НомерКарты));
		
		Структура = Новый Структура;
		Структура.Вставить("ФИО",Строка(СтрокиЗапроса[1].FIO));
		Структура.Вставить("НомерКарты",Строка(СтрокиЗапроса[10].Card));
		Структура.Вставить("МобильныйТелефон",Строка(СтрокиЗапроса[2].Mobile));
		Структура.Вставить("ДомашнийТелефон",Строка(СтрокиЗапроса[3].Fone));
		Структура.Вставить("ДатаРождения",Строка(СтрокиЗапроса[4].DOB));
		Структура.Вставить("УведомлятьОПроведенииАкции",Строка(СтрокиЗапроса[7].NoticeOfTheAction));
		Структура.Вставить("Пол",Строка(СтрокиЗапроса[5].Sex));
		Структура.Вставить("Емаил",Строка(СтрокиЗапроса[6].Email));
		Структура.Вставить("ТолькоПроверка",Строка(СтрокиЗапроса[9].OnlyChecked));
		Структура.Вставить("ЭтоБонусныйСчет",?(Строка(СтрокиЗапроса[0].RegFone)=нрег("True"),True,False));
		Структура.Вставить("ЭтоСотрудник",?(Строка(СтрокиЗапроса[8].Employee)=нрег("True"),True,False));
		Структура.Вставить("Онлайн",Ложь);
		Ответ = ПроверитьДанныеПоКарте(Структура);
		
		Если Лев(Ответ,СтрДлина("Бонусный счет существует")) = "Бонусный счет существует" Тогда 
			БонусныйСчетПроверен = Ложь;
			ЭлементыФормы.Надпись1.Заголовок = "Бонусный счет уже зарегистрирован" ;
			Предупреждение(Ответ);		
		ИначеЕсли Лев(Ответ,СтрДлина("Бонусный счет не найден")) = "Бонусный счет не найден" Тогда 
			БонусныйСчетПроверен = Ложь;
			ЭлементыФормы.Надпись1.Заголовок = "Бонусный счет не найден(Создайте на кассе)" ;
			Предупреждение(Ответ);
		ИначеЕсли Лев(Ответ,СтрДлина("Бонусный счет не зарегистирирован")) = "Бонусный счет не зарегистирирован" Тогда 
			БонусныйСчетПроверен = Истина;
			ЭлементыФормы.Надпись1.Заголовок = "Бонусный Счет готов к регистрации" ;
		КонецЕсли;		
КонецПроцедуры

Процедура РаспечататьАнкетуНажатие(Элемент)
	
	
	АнкетаРаспечатана = Ложь;
	
	
	ВсеОк = Истина;
	
	Если СокрЛП(Фамилия) =  "" тогда
		
		
		Сообщить("Заполните Фамилия");
		ВсеОк = Ложь;
		
	ИначеЕсли СокрЛП(Имя) =  ""  тогда
		
		Сообщить("Заполните Имя");
		ВсеОк = Ложь;
		
		
	ИначеЕсли (ДатаРождения) =  '00010101'  тогда
		
		Сообщить("Заполните Дата Рождения");
		ВсеОк = Ложь;
		
	ИначеЕсли СокрЛП(Пол) =  ""  тогда
		
		Сообщить("Заполните Пол");
		ВсеОк = Ложь;
		
	КонецЕсли;
	
	
	Если ВсеОк Тогда 
		
		печатьАнкеты();
		
		
		АнкетаРаспечатана = Истина;
		
	КонецЕсли;
	Доступность();
	
	
КонецПроцедуры

Процедура  печатьАнкеты()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = ПолучитьМакет("Анкета");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Анкета");
	
	ОбластьМакета.Рисунки.Фамилия.Текст		= СокрЛП(Фамилия);
	ОбластьМакета.Рисунки.Имя.Текст			= СокрЛП(Имя);
	ОбластьМакета.Рисунки.Отчество.Текст	= СокрЛП(Отчество);
	ОбластьМакета.Рисунки.День.Текст		= сокрЛП(День(ДатаРождения));
	ОбластьМакета.Рисунки.Месяц.Текст		= СокрЛП(Формат(ДатаРождения, "ДФ=ММММ"));
	ОбластьМакета.Рисунки.Год.Текст			= СокрЛП(Год(ДатаРождения));
	Если Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		ОбластьМакета.Рисунки.Муж.Текст			= "V";
		ОбластьМакета.Рисунки.Жен.Текст			= "";
	Иначе 
		ОбластьМакета.Рисунки.Муж.Текст			= "";
		ОбластьМакета.Рисунки.Жен.Текст			= "V";		
	КонецЕсли;
	ОбластьМакета.Рисунки.Номер.Текст		=  СокрЛП(НомерКарты);
	ОбластьМакета.Рисунки.Имэйл.Текст		= Емаил;
	ОбластьМакета.Рисунки.Город.Текст		= "";
	//ОбластьМакета.Рисунки.Город.Текст		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПользователиИнформационнойБазы.ТекущийПользователь(), "ОсновноеПодразделениеОрганизации"); 
	
	ОбластьМакета.Рисунки.ДеньЗап.Текст		= сокрЛП(День(ТекущаяДата()));
	ОбластьМакета.Рисунки.МесЗап.Текст		= СокрЛП(Формат(ТекущаяДата(), "ДФ=ММММ"));
	ОбластьМакета.Рисунки.ГодЗап.Текст		= СокрЛП(Год(ТекущаяДата()));
	
	//ТабДокумент.АвтоМасштаб = Истина;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.Показать();
	
	
КонецПроцедуры



Процедура Зарегить(Элемент)
	
	Онлайн = Ложь; //Для обмена С Этой базы в Центр

	Если БонусныйСчетПроверен тогда 		
		СтрокиЗапроса = Новый Массив;
		СтрокиЗапроса.Добавить(Новый Структура("RegFone",  "true"));
		СтрокиЗапроса.Добавить(Новый Структура("FIO", СокрЛП(Фамилия + " " + Имя + " " + Отчество)));
		СтрокиЗапроса.Добавить(Новый Структура("Mobile", "+7" +НомерКарты));
		СтрокиЗапроса.Добавить(Новый Структура("Fone", ДомашнийТелефон));
		СтрокиЗапроса.Добавить(Новый Структура("DOB", Формат(ДатаРождения, "ДФ=ггггММдд")));
		СтрокиЗапроса.Добавить(Новый Структура("Sex", ?(Пол = Перечисления.ПолФизическихЛиц.Женский, "Женский", "Мужской")));
		СтрокиЗапроса.Добавить(Новый Структура("Email", Емаил));
		СтрокиЗапроса.Добавить(Новый Структура("NoticeOfTheAction", ?(УведомлятьОПроведенииАкции, "true", "false")));
		СтрокиЗапроса.Добавить(Новый Структура("Employee", "False"));
		СтрокиЗапроса.Добавить(Новый Структура("OnlyChecked", "False"));
		СтрокиЗапроса.Добавить(Новый Структура("Card","" + НомерКарты));
	КонецЕсли;		
	Если Онлайн тогда  	
		Попытка		
			ВебОпределение 			= Новый WSОпределения(WSDL + "RegisterStorageCard/?wsdl", Логин, Пароль);
			ВебСервис				= ВебОпределение.Services[0];
			ВебПрокси 				= Новый WSПрокси(ВебОпределение, ВебСервис.NamespaceURI, ВебСервис.Name, ВебСервис.Endpoints[0].Name);
			ВебПрокси.Пользователь 	= Логин;
			ВебПрокси.Пароль 		= Пароль;
			//	Онлайн = Истина;     //  Убираем онлайн так как будем один хрен толкать в центр
			ЗаписьХМЛ = ПолучитьБазовыйХМЛЗапроса(СтрокиЗапроса);
			Ответ = ВебПрокси.RegisterStorageCard(ЗаписьХМЛ.Закрыть());
			//Сообщить(Ответ);
			ЧтениеХМЛ = Новый ЧтениеXML;
			ЧтениеХМЛ.УстановитьСтроку(Ответ);
			ПостроительДОМ = Новый ПостроительDOM;
			ДокументДОМ = ПостроительДОМ.Прочитать(ЧтениеХМЛ);
			КодОтвета1 = ПолучитьКодОтвета1(ДокументДОМ);
			
			Если КодОтвета1 <> "0" Тогда 
				Сообщить(КодОтвета1);
			КонецЕсли;
			КодОтвета = ПолучитьКодОтвета(ДокументДОМ);
			Если КодОтвета = "true" тогда 
				Предупреждение("Счет Зарегистрирован");
				ЭлементыФормы.Надпись1.Заголовок = "Счет зарегистрирован";
				отчисткаПослеРегистрации();
			КонецЕсли;	
		Исключение
			ОффлайнГалочка = Истина;
			Предупреждение("Нет связи, попробуйте еще раз офлайн !");
		КонецПопытки;
	Иначе 
		Структура = Новый Структура;
		Структура.Вставить("ФИО",Строка(СтрокиЗапроса[1].FIO));	
		Структура.Вставить("НомерКарты",Строка(СтрокиЗапроса[10].Card));
		Структура.Вставить("МобильныйТелефон",Строка(СтрокиЗапроса[2].Mobile));
		Структура.Вставить("ДомашнийТелефон",Строка(СтрокиЗапроса[3].Fone));
		Структура.Вставить("ДатаРождения",Строка(СтрокиЗапроса[4].DOB));
		Структура.Вставить("УведомлятьОПроведенииАкции",Строка(СтрокиЗапроса[7].NoticeOfTheAction));
		Структура.Вставить("Пол",Строка(СтрокиЗапроса[5].Sex));
		Структура.Вставить("Емаил",Строка(СтрокиЗапроса[6].Email));
		Структура.Вставить("ТолькоПроверка",Строка(СтрокиЗапроса[9].OnlyChecked));
		Структура.Вставить("ЭтоБонусныйСчет",?(Строка(СтрокиЗапроса[0].RegFone)=нрег("True"),True,False));
		Структура.Вставить("ЭтоСотрудник",?(Строка(СтрокиЗапроса[8].Employee)=нрег("True"),True,False));
		Структура.Вставить("Онлайн",Ложь);
		Ответ = ПроверитьДанныеПоКарте(Структура);	
		Попытка		
			Если Ответ Тогда 		
				Предупреждение("Счет зарегистрирован");
				ЭлементыФормы.Надпись1.Заголовок = "Счет зарегистрирован";
				ОтчисткаПослеРегистрации();
			Иначе 			
				Предупреждение(Ответ);	
			КонецЕсли;
		Исключение
			Предупреждение(Ответ);	
		КонецПопытки;	
	КонецЕсли;	
	Доступность(Онлайн) ;	
КонецПроцедуры



процедура отчисткаПослеРегистрации()
	
	
	ДатаРождения = 0;
	Фамилия = "";
	Имя = "";
	Отчество = "";
	Пол = "";
	Емаил = "";
	УведомлятьОПроведенииАкции = истина;
	ДанныеСверены = Ложь;
	БонусныйСчетПроверен = Ложь;
	
	
КонецПроцедуры



Функция ПроверитьДанныеПоКарте(Структура)	
	Если Структура.ТолькоПроверка ТОгда
		//проверяем карту на наличие и отвечаем делаем для проверки карты на наличие без регисрации + не хотел рисовать новый сервис
		//делаем для того тчобы проверять карту на наличие при регистрации продажи в ИМ на карту
		
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Номер КАК Номер,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект КАК НоминальныйОбъект,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель КАК Держатель,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.ма_СведенияОНоминальныхОбъектах.СрезПоследних(&ДатаКонец, ) КАК ма_СведенияОНоминальныхОбъектахСрезПоследних
		|ГДЕ
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Номер = &КодКарты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ");
		
		Если НЕ Структура.ЭтоБонусныйСчет Тогда
			КодКарты = ";"+Структура.НомерКарты+"?";
		Иначе
			КодКарты = Структура.НомерКарты;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДатаКонец",КонецДня(ТекущаяДата())); //Константинов АА 24 04 17
		Запрос.УстановитьПараметр("КодКарты",КодКарты);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() тогда
			Если ПустаяСтрока(Выборка.НоминальныйОбъект)  ТОгда
				Возврат ?(Структура.ЭтоБонусныйСчет, "Бонусный счет не существует", "Карта не существует");
			ИначеЕсли ПустаяСтрока(Выборка.Держатель)ТОгда
				Возврат  ?(Структура.ЭтоБонусныйСчет, "Бонусный счет не зарегистирирован", "Карта не зарегистирирована");
			Иначе
				Возврат ?(Структура.ЭтоБонусныйСчет, "Бонусный счет существует", "Карта существует");
			КонецЕсли;
		Иначе
			Возврат  ?(Структура.ЭтоБонусныйСчет, "Бонусный счет не найден", "Карта не найдена");
		КонецЕсли;
	КонецЕсли;
	
	Год = СтрЗаменить(Число(Сред(ТекущаяДата(),7,4)-18)," ","");
	Месяц = Сред(ТекущаяДата(),4,2);
	День = Лев(ТекущаяДата(),2);
	Дата18 = Дата(Год+Месяц+День);
	
	Если Дата(Структура.ДатаРождения) > Дата18 Тогда
		//меньшн 18 лет
		Возврат  "Некорректная дата рождения, Вам меньше 18 лет";
		
	ИначеЕсли ПустаяСтрока(Структура.ФИО) Тогда
		Возврат  "Не заполнено ФИО";
		
	ИначеЕсли ПустаяСтрока(Структура.МобильныйТелефон) Тогда 
		Возврат  "Не заполнен мобильный телефон";
		
	ИначеЕсли СокрЛП(Лев(Структура.МобильныйТелефон,3)) <> "+77" Тогда
		Возврат  "Не верно указан номер телефона";
		
	ИначеЕсли ПустаяСтрока(Структура.ДатаРождения)Тогда 
		Возврат  "Не заполнена дата рождения";
		
	ИначеЕсли ПустаяСтрока(Структура.Пол) Тогда 
		
		Возврат  "Не заполнен пол";
	ИначеЕсли ПустаяСтрока(Структура.НомерКарты) тогда
		Возврат  "Не заполнен номер карты/счета";
		
	КонецЕсли;
	
	Если НачалоДня(ТекущаяДата()) >= Константы.ма_ДатаЗапускаРегистрацииБонусов.Получить() ТОгда
		
		//Проверяем что на номер мобильного телефона не зарегистрирована карта
		////20151104
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Номер КАК Номер,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект КАК НоминальныйОбъект,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель КАК Держатель,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель.ТелефонСотовый
		|ИЗ
		|	РегистрСведений.ма_СведенияОНоминальныхОбъектах.СрезПоследних(&ДатаКонец, ) КАК ма_СведенияОНоминальныхОбъектахСрезПоследних
		|ГДЕ
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель.ТелефонСотовый = &ТелефонСотовый");
		
		Запрос.УстановитьПараметр("ТелефонСотовый",Структура.МобильныйТелефон);
		Запрос.УстановитьПараметр("ДатаКонец",КонецДня(ТекущаяДата())); //Константинов АА 24 04 17
		
		ВЫборка = Запрос.Выполнить().Выбрать();
		Если ВЫборка.Следующий() Тогда
			///Возврат  "На этот номер мобильного телефона уже зарегистрирована карта";  ///Сергей 01.07.2019 Изменил "текст"
			Возврат  "На этот номер мобильного телефона уже зарегистрирован бонусный счет";
		КонецЕсли;	
		//КонецПроверки
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Номер КАК Номер,
	|	ма_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект КАК НоминальныйОбъект,
	|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель КАК Держатель,
	|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.ма_СведенияОНоминальныхОбъектах.СрезПоследних(&ДатаКонец, ) КАК ма_СведенияОНоминальныхОбъектахСрезПоследних
	|ГДЕ
	|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Номер = &КодКарты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ");
	
	Если НЕ Структура.ЭтоБонусныйСчет Тогда
		КодКарты = ";"+Структура.НомерКарты+"?";
	Иначе
		КодКарты = Структура.НомерКарты;
	КонецЕсли;						  
	
	Запрос.УстановитьПараметр("КодКарты",КодКарты);
	Запрос.УстановитьПараметр("ДатаКонец",КонецДня(ТекущаяДата())); //Константинов АА 24 04 17
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если не Выборка.Следующий() тогда
		
		Возврат "Карта не найдена";
		
	КонецЕсли;
	Если Не ПустаяСтрока(Выборка.Держатель) Тогда
		
		Возврат "Карта уже зарегистирирована";
		
	ИначеЕсли ПустаяСтрока(Выборка.НоминальныйОбъект) Тогда
		
		Возврат "Карта не найдена";
		
	КонецЕсли;
	
	Попытка
		МЧТ_МодульСПолнымиПравами.ЗарегистрироватьБонусныйСчет(Структура,КодКарты,Выборка.НоминальныйОбъект);   //Константинов АА 17 04 17
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;	
	//вот теперь все удачно ))
	Возврат Истина;
КонецФункции

Процедура ДанныеСвереныПриИзменении(Элемент)
	
	Доступность();
	
	
	
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	
	Если Не ЗначениеЗаполнено(НомерКарты) тогда
		Сообщить("Укажите номер");
		Возврат
	КонецЕсли;
	
	Если ЭлементыФормы.Кнопка1.Заголовок <> "Записать" тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ма_НоминальныеОбъекты.Ссылка,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Период,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Регистратор,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.НомерСтроки,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Активность,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Номер,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.ПериодДействияНачало,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.ПериодДействияКонец,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Автор,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.НакопительнаяПрограмма,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Держатель.ДатаРождения
		|ИЗ
		|	Справочник.ма_НоминальныеОбъекты КАК ма_НоминальныеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ма_СведенияОНоминальныхОбъектах.СрезПоследних КАК ма_СведенияОНоминальныхОбъектахСрезПоследних
		|		ПО ма_НоминальныеОбъекты.Ссылка = ма_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект
		|ГДЕ
		|	ма_НоминальныеОбъекты.Код = &Код";
		Запрос.УстановитьПараметр("Код",НомерКарты);
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() > 0 Тогда
			Если ЗначениеЗаполнено(рез[0].Регистратор) Тогда 
				Фамилия =Рез[0].Держатель.Фамилия;
				ЭлементыФормы.Фамилия.Доступность = Истина;
				Имя = Рез[0].Держатель.Имя;
				ЭлементыФормы.Имя.Доступность = Истина;
				Отчество =Рез[0].Держатель.Отчество;
				ЭлементыФормы.Отчество.Доступность = Истина;
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	мчт_ДниРожденийДержателейБС.Период,
				|	мчт_ДниРожденийДержателейБС.ДатаРождения
				|ИЗ
				|	РегистрСведений.мчт_ДниРожденийДержателейБС КАК мчт_ДниРожденийДержателейБС
				|ГДЕ
				|	мчт_ДниРожденийДержателейБС.Держатель = &Держатель
				|	И мчт_ДниРожденийДержателейБС.Период МЕЖДУ &Дата1 И &Дата2";
				Запрос.УстановитьПараметр("Держатель",Рез[0].Держатель);
				Запрос.УстановитьПараметр("Дата2",ТекущаяДата());
				Запрос.УстановитьПараметр("Дата1",ДобавитьМесяц(ТекущаяДата(),-12));
				Рез1 = Запрос.Выполнить().Выгрузить();
				ДатаРождения = Рез[0].Держатель.ДатаРождения;
				Если Рез1.Количество() <= 1 ИЛИ РольДоступна("ПолныеПрава") Тогда
					ЭлементыФормы.ДатаРождения.Доступность = Истина;
				Иначе
					ЭлементыФормы.ДатаРождения.Доступность = Ложь;
				КонецЕсли;
				Пол = Рез[0].Держатель.Пол;
				ЭлементыФормы.Пол.Доступность = Истина;
				Емаил = Рез[0].Держатель.EMail;
				ЭлементыФормы.Емаил.Доступность = Истина;
				ЭлементыФормы.ПроверитьБонусныйСчет.Видимость = Ложь;
				ЭлементыФормы.РаспечататьАнкету1.Видимость = Ложь;
				ЭлементыФормы.РаспечататьАнкету.Видимость = Ложь;     
				ЭлементыФормы.ОффлайнГалочка.Видимость = Ложь;
				ЭлементыФормы.ДанныеСверены.Видимость = Ложь;
				ЭлементыФормы.Надпись1.Видимость = Ложь;
				ЭлементыФормы.Надпись2.Видимость = Ложь;
				ЭлементыФормы.УведомлятьОПроведенииАкции.Видимость = Ложь;
			Иначе
				Сообщить("бонусный счет не Заригистрирован");
				Возврат
			КонецЕсли;
		Иначе
			Сообщить("Бонусный счет не найден");
			Возврат
		КонецЕсли;
		ЭлементыФормы.Кнопка1.Заголовок = "Записать";
		Возврат;
	Иначе
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ма_НоминальныеОбъекты.Ссылка КАК НомОбъект,
		|	ма_СведенияОНоминальныхОбъектахСрезПоследних.Регистратор,
		|	мчт_ДниРожденийДержателейБССрезПоследних.ДатаРождения КАК ДатаР
		|ИЗ
		|	Справочник.ма_НоминальныеОбъекты КАК ма_НоминальныеОбъекты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ма_СведенияОНоминальныхОбъектах.СрезПоследних КАК ма_СведенияОНоминальныхОбъектахСрезПоследних
		|		ПО ма_НоминальныеОбъекты.Ссылка = ма_СведенияОНоминальныхОбъектахСрезПоследних.НоминальныйОбъект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мчт_ДниРожденийДержателейБС.СрезПоследних КАК мчт_ДниРожденийДержателейБССрезПоследних
		|		ПО ма_НоминальныеОбъекты.Держатель = мчт_ДниРожденийДержателейБССрезПоследних.Держатель
		|ГДЕ
		|	ма_НоминальныеОбъекты.Код = &Код";
		Запрос.УстановитьПараметр("Код",НомерКарты);
		Рез1 = Запрос.Выполнить().Выгрузить();
		Спр = Рез1[(Рез1.Количество() - 1)].НомОбъект.ПолучитьОбъект();
		док = Рез1[(Рез1.Количество() - 1)].Регистратор.ПолучитьОбъект();
		НаборЗаписей = док.Движения.ма_СведенияОНоминальныхОбъектах;
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			СпрДержатель =  Запись.Держатель.ПолучитьОбъект();
			СпрДержатель.ДатаРождения = ДатаРождения;
			СпрДержатель.Фамилия = Фамилия;
			СпрДержатель.Имя = Имя;
			СпрДержатель.Отчество = Отчество;   
			СпрДержатель.EMail = Емаил;
			СпрДержатель.Пол = Пол;
			СпрДержатель.Наименование = ""+ Фамилия +" "+ Имя + " " + Отчество;
			СпрДержатель.Записать();
			Спр.Наименование = СпрДержатель.Наименование;
			Спр.Записать();
			Сообщить("Даные записаны");
			Если Рез1[0].ДатаР <> ДатаРождения Тогда
				МенеджерЗаписи = РегистрыСведений.мчт_ДниРожденийДержателейБС.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.ДатаРождения = ДатаРождения;
				МенеджерЗаписи.Держатель = Спр.Держатель;
				МенеджерЗаписи.Автор = ПараметрыСеанса.ТекущийПользователь;
				МенеджерЗаписи.Период = ТекущаяДата();
				МенеджерЗаписи.Записать();
			КонецЕсли;
			Прервать
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Процедура НомерКартыПриИзменении(Элемент)
	
	ЭлементыФормы.Кнопка1.Заголовок = "Редактировать данные";
	
	///07.06.2019 +++ Проверка на первую цыфору чтобы бала "7"
	Ном = ЭлементыФормы.НомерКарты.Значение;

	Если  СтрДлина(Ном) < 10 Тогда
		Сообщить("Некорректный номер!");
		ЭлементыФормы.НомерКарты.Значение = "";
		Возврат;
	КонецЕсли;
	
	///Проверка чтобы были только "Цифры"
	Цифры = "0123456789";
	СтрКоличество = СтрДлина(Ном);
	Для Счетчик = 1 По СтрКоличество Цикл
		Если Найти(Цифры,Сред(Ном,Счетчик,1)) = 0 Тогда
			Сообщить("Некорректный номер!");
			ЭлементыФормы.НомерКарты.Значение = "";
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Если Число(Сред(Ном,1,1)) <> 7 Тогда
		Сообщить("Некорректный номер!");
		ЭлементыФормы.НомерКарты.Значение = "";
		Возврат;	
	КонецЕсли;
	///Сергей 07.06.2019 ---

КонецПроцедуры

///Сергей 17.05.2019 +++ Запрет на регистрацию старше 105 лет
Процедура ДатаРожденияПриИзменении(Элемент)
	
	Лет = 0;
    Месяцев = 0;
    Дней = 0;
    ДатаР = ЭлементыФормы.ДатаРождения.Значение;
    Пока ДатаР <= ТекущаяДата() Цикл
        ДатаР = ДобавитьМесяц(ДатаР,1);
        Месяцев = Месяцев + 1;
    КонецЦикла;
    Месяцев = Месяцев-1;
    Лет = Цел(Месяцев/12);
    Месяцев = Месяцев-Лет*12;
    Дней = Цел((ТекущаяДата() - ДобавитьМесяц(ДатаР,-1))/(60*60*24));
	
	Если Лет > Число(105) Тогда
		Предупреждение("Неверно указана Дата Рождения!!! Клиенту "+Строка(Лет)+"-Лет. Измените дату Рождения!!!");
		ЭлементыФормы.РаспечататьАнкету.Доступность = Ложь;
	Иначе 
		ЭлементыФормы.РаспечататьАнкету.Доступность = Истина; 
	КонецЕсли;

КонецПроцедуры
///Сергей 17.05.2019 ---

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	мчт_УзлыИБ.Ссылка,
|	мчт_УзлыИБ.ВерсияДанных,
|	мчт_УзлыИБ.ПометкаУдаления,
|	мчт_УзлыИБ.Предопределенный,
|	мчт_УзлыИБ.Родитель,
|	мчт_УзлыИБ.Код,
|	мчт_УзлыИБ.Наименование,
|	мчт_УзлыИБ.Адрес,
|	мчт_УзлыИБ.WSDL,
|	мчт_УзлыИБ.WSLink,
|	мчт_УзлыИБ.User,
|	мчт_УзлыИБ.Password,
|	мчт_УзлыИБ.Комментарий,
|	мчт_УзлыИБ.БазоваяWSDL,
|	мчт_УзлыИБ.ЭтоЦентр,
|	мчт_УзлыИБ.БазоваяWSDLТорговля,
|	мчт_УзлыИБ.КодУзлаУриб
|ИЗ
|	Справочник.мчт_УзлыИБ КАК мчт_УзлыИБ
|ГДЕ
|	мчт_УзлыИБ.ЭтоЦентр = ИСТИНА";

РезультатЗапроса = Запрос.Выполнить();

ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();

Узел  = ВыборкаДетальныеЗаписи[0]; 

Логин = Узел.User;
Пароль = Узел.Password;
WSDL = Узел.БазоваяWSDL;



