////////////////////////////////////////////////////////////////////////////////
// Форма для выполнения методов declineInvoiceById, revokeInvoiceById, unrevokeInvoiceById и т.д.
//
// Параметры формы:
//  См. ЭСФКлиентСервер.ПустыеПараметрыФормыИзменениеСтатусовЭСФ().
//
// Возвращаемое значение формы:
//  Нет.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Действие = Параметры.Действие;
	
	Если ВозможноВыполнитьДействие() Тогда
		
		//СтруктурнаяЕдиница = Параметры.МассивСНТ[0].Организация;
		СтруктурнаяЕдиница = СНТСервер.СтруктурнаяЕдиницаСНТ(Параметры.МассивСНТ[0], Параметры.Действие);
		УстановитьПараметрыВыбораСНТ();
		ЗаполнитьСписокСНТ();
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
	УстановитьЗаголовокФормы();
	УстановитьЗаголовокКнопкиВыполнитьДействие();	
	УстановитьВидимостьПоляПричина();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Контейнер = СНТКлиентСервер.КонтейнерМетодов();	
	Контейнер.ПриОткрытииФормы(ЭтаФорма, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого СтрокаСписокСНТ Из СписокСНТ Цикл
		
		Если ПустаяСтрока(СтрокаСписокСНТ.Идентификатор) Тогда
			
			ИндексСтроки = СписокСНТ.Индекс(СтрокаСписокСНТ);
			НомерСтроки = ИндексСтроки + 1;
			
			Сообщение = Новый СообщениеПользователю;
			
			Сообщение.Текст = НСтр("ru = 'В строке %НомерСтроки% не заполнено поле ""Идентификатор"".'"); 
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%НомерСтроки%", Формат(НомерСтроки, "ЧГ="));
			
			Сообщение.Поле = "СписокСНТ[%ИндексСтроки%].Идентификатор";
			Сообщение.Поле = СтрЗаменить(Сообщение.Поле, "%ИндексСтроки%", Формат(ИндексСтроки, "ЧГ="));
			
			Сообщение.Сообщить();
			
			Отказ = Истина;	
			
		Иначе
			
			ТекстСообщения = "";
			
			Если НЕ СНТКлиентСервер.ИдентификаторКорректен(СтрокаСписокСНТ.Идентификатор, ТекстСообщения) Тогда 
				
				ИндексСтроки = СписокСНТ.Индекс(СтрокаСписокСНТ);
				НомерСтроки = ИндексСтроки + 1;
				
				Сообщение = Новый СообщениеПользователю;
				
				Сообщение.Текст = НСтр("ru = 'В строке %НомерСтроки% поле ""Идентификатор"" заполнено некорректно. Причина: %Причина%'"); 
				Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%НомерСтроки%", Формат(НомерСтроки, "ЧГ="));
				Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Причина%", ТекстСообщения);
				
				Сообщение.Поле = "СписокСНТ[%ИндексСтроки%].Идентификатор";
				Сообщение.Поле = СтрЗаменить(Сообщение.Поле, "%ИндексСтроки%", Формат(ИндексСтроки, "ЧГ="));
				
				Сообщение.Сообщить();
				
				Отказ = Истина;	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Действие <> СНТКлиентсервер.ДействиеПодтверждение() Тогда
		
		Если ПустаяСтрока(Причина) Тогда
			
			Сообщение = Новый СообщениеПользователю;
			
			Сообщение.Текст = НСтр("ru = 'Не заполнено поле причина.'"); 
			
			Сообщение.Поле = "Причина";
			
			Сообщение.Сообщить();
			
			Отказ = Истина;				
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = СНТКлиентСервер.ИмяСобытияЗаписьСНТ()
		И НЕ Параметр = Неопределено 
		И Источник = ЭтаФорма Тогда
		
		КоллекцияРезультатовИзмененияСтатусов = ПолучитьИзВременногоХранилища(Параметр.АдресХранилища);
		
		Если НЕ Тип("Соответствие") = ТипЗнч(КоллекцияРезультатовИзмененияСтатусов) Тогда
			Возврат
		КонецЕсли;
		
		// Обработать результаты действия.
		ОбработатьРезультатыИзмененияСтатусовНаСервере(КоллекцияРезультатовИзмененияСтатусов);
		
		// Обновить открытые формы.
		МассивСНТ = Новый Массив;
		Для Каждого СтрокаТаблицы Из СписокСНТ Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.СНТ) Тогда
				МассивСНТ.Добавить(СтрокаТаблицы.СНТ);
			КонецЕсли;
		КонецЦикла; 
		
		// Показать результат отзыва.
		Если ВсеСтатусыУспешноИзменены() Тогда
			
			ЗакрытьПослеОповещения = Новый ОписаниеОповещения("ЗакрытьФормуПослеОповещения", ЭтаФорма);
			ПоказатьПредупреждение(ЗакрытьПослеОповещения, НСтр("ru = 'Действие выполнено успешно.'"));
			
		Иначе
			
			ПоказатьПредупреждение(, НСтр("ru = 'Не удалось выполнить действие для всех сопроводительных накладных на товары.'"));
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "СНТ_ПроверятьОповещенияФоновогоЗадания"
		И ЭтаФорма.КлючУникальности = Источник Тогда
		
		СНТКлиентПереопределяемый.ОбработкаОповещенияСНТ_ПроверятьОповещенияФоновогоЗадания(ЭтаФорма, Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПослеОповещения(Результат) Экспорт
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ

&НаКлиенте
Процедура СписокСНТСНТПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокСНТ.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.СНТ) Тогда 
			ДанныеСНТ = ДанныеСНТ(ТекущиеДанные.СНТ);
			ТекущиеДанные.Идентификатор = ДанныеСНТ.Идентификатор;
			ТекущиеДанные.Статус = ДанныеСНТ.Статус;
		КонецЕсли;
		
		ТекущиеДанные.ОшибкаПредставление = "";
		ТекущиеДанные.ОшибкаРасшифровка = "";
		ТекущиеДанные.ОшибкаЕсть = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСНТИдентификаторПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокСНТ.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ТекущиеДанные.СНТ) Тогда 
			ТекущиеДанные.Статус = Неопределено;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСНТПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокСНТВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокСНТ.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.ОшибкаЕсть Тогда
			
			Если Поле.Имя = "СписокСНТОшибкаПредставление" Тогда
				СтандартнаяОбработка = Ложь;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ?(НЕ ПустаяСтрока(ТекущиеДанные.ОшибкаРасшифровка), ТекущиеДанные.ОшибкаРасшифровка, ТекущиеДанные.ОшибкаТекст);
				Сообщение.Поле = "СписокСНТ[" + Формат(СписокСНТ.Индекс(ТекущиеДанные), "ЧН=0; ЧГ=") + "].ОшибкаПредставление";
				Сообщение.Сообщить();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьСтатусСНТ (Команда)
	
	Контейнер = СНТКлиентСервер.КонтейнерМетодов();
	
	Если НЕ Контейнер.КриптопровайдерПодключается() Тогда
		Возврат;
	КонецЕсли;	
	
	// Проверить заполнение.
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат
	КонецЕсли;
	
	КоллекцияСгруппированныхСНТ = Новый Соответствие;
	КоллекцияСгруппированныхСНТ.Вставить(СтруктурнаяЕдиница, );
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("КоллекцияСгруппированныхСНТ", КоллекцияСгруппированныхСНТ);
	
	ИзменитьСтатусСНТЗавершение = Новый ОписаниеОповещения("ИзменитьСтатусСНТЗавершение", ЭтаФорма, ДополнительныеПараметры);
	ПараметрыФормы = Новый Структура("СписокСтруктурныхЕдиниц, ТребуетсяВыборСертификата", КоллекцияСгруппированныхСНТ, Истина);
	
	ЭСФКлиент.ОткрытьФормуВводаДанныхИСЭСФ(ИзменитьСтатусСНТЗавершение, ПараметрыФормы);	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусСНТЗавершение(ДанныеПрофилейИСЭСФ, ДополнительныеПараметры) Экспорт
	
	Если ДанныеПрофилейИСЭСФ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Форма изменения статуса работает только с одной структурной единицей
	ДанныеКлючаЭЦП = ДанныеПрофилейИСЭСФ.Получить(СтруктурнаяЕдиница);
	ДанныеПрофиляИСЭСФ = ЭСФВызовСервера.ДанныеПрофиляИСЭСФ(ДанныеКлючаЭЦП.ПрофильИСЭСФ);
	ДанныеПрофиляИСЭСФ.ТекущийПарольАутентификации = ДанныеКлючаЭЦП.ПарольИСЭСФ;
	
	// Сформировать коллекцию для выполнения действия.
	КоллецияДляИзмененияСтатусов = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из СписокСНТ Цикл
		ДанныеДляИзмененияСтатусовПоСНТ = Новый Структура;
		ДанныеДляИзмененияСтатусовПоСНТ.Вставить("ИД", СтрокаТаблицы.Идентификатор); 
		ДанныеДляИзмененияСтатусовПоСНТ.Вставить("ЭЦП", СтрокаТаблицы.ЭЦП);
		ДанныеДляИзмененияСтатусовПоСНТ.Вставить("Статус", СтрокаТаблицы.Статус);
		ДанныеДляИзмененияСтатусовПоСНТ.Вставить("Причина", Причина);
		
		КоллецияДляИзмененияСтатусов.Вставить(СтрокаТаблицы.Идентификатор, ДанныеДляИзмененияСтатусовПоСНТ);	
	КонецЦикла;
	
	// Выполнить действие.
	КоллекцияРезультатовИзмененияСтатусов = СНТКлиент.ИзменитьСтатусыСНТ(Действие, КоллецияДляИзмененияСтатусов, ДанныеПрофиляИСЭСФ, ДанныеКлючаЭЦП, УникальныйИдентификатор, Параметры.ЗапускатьФоновоеЗадание);		
	
	Если Параметры.ЗапускатьФоновоеЗадание Тогда
		
		Если ТипЗнч(КоллекцияРезультатовИзмененияСтатусов) = Тип("Структура") Тогда
			ТекстСообщения =  НСтр("ru = '%1 документов из ИС ЭСФ'");
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Действие);
			КоллекцияРезультатовИзмененияСтатусов.Вставить("ТекстСообщения", ТекстСообщения);
		КонецЕсли;
		
		СНТКлиент.ОповеститьФормы("СНТ_ПроверятьОповещенияФоновогоЗадания", КоллекцияРезультатовИзмененияСтатусов, КлючУникальности);
		
	Иначе
		
		// Обработать результаты действия.
		ОбработатьРезультатыИзмененияСтатусовНаСервере(КоллекцияРезультатовИзмененияСтатусов);
		
		АдресХранилища = ПоместитьВоВременноеХранилище(КоллекцияРезультатовИзмененияСтатусов);
		СНТКлиент.ОповеститьФормы(СНТКлиентСервер.ИмяСобытияЗаписьСНТ(), Новый Структура("АдресХранилища", АдресХранилища), ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатыИзмененияСтатусовНаСервере(Знач КоллекцияРезультатовИзмененияСтатусов)
	
	ОбработкаОбменСНТ = СНТСерверПовтИсп.ОбработкаОбменСНТ();	
	ОбработкаОбменСНТ.ОбработатьРезультатыИзмененияСтатусов(КоллекцияРезультатовИзмененияСтатусов, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


////////////////////////////////////////////////////////////////////////////////                       
// Проверка возможности выполнения действия

&НаСервере
Функция ВозможноВыполнитьДействие()
	
	Возможно = Истина;
	
	РезультатЗапроса = ДанныеДляПроверкиВозможностиВыполненияДействия();
	
	// Проверить количество ЭСФ.
	Если РезультатЗапроса.Пустой() Тогда
		
		Возможно = Ложь;
		ЭСФКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно выполнить действие, так как не выбраны СНТ, для которых необходимо выполнить действие.'"));
		
	КонецЕсли;
	
	// Проверить, что во всех ЭСФ указана одинаковая организация и подразделение организации. 
	Если Возможно Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		// Проверить, что во всех ЭСФ указана одинаковая организация.
		Выборка.Сбросить();
		Выборка.Следующий();
		ПерваяОрганизация = Выборка.Организация;
		ПервыйСтатус	  = Выборка.Статус;
		//У СНТ есть действия доступные для любого направления, так что берем направление первого СНТ
		НаправлениеПервогоСНТ = Выборка.Направление;
		ВидОперацииПервогоСНТ = Выборка.ВидОперации;
		СоответствиеВозможностиДействий = СНТСервер.РазрешенныеДействияПоСтатусамСНТ(НаправлениеПервогоСНТ, ВидОперацииПервогоСНТ, Выборка);
		Выборка.Сбросить();
		Если СоответствиеВозможностиДействий.Количество() > 0 Тогда 
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.Организация <> ПерваяОрганизация Тогда
					ОтзывВозможен = Ложь;
					ЭСФКлиентСервер.СообщитьПользователю(НСтр("ru = 'Все сопроводительные накладные на товары должны принадлежать одной организации.'"));
					Прервать;
				КонецЕсли;
				
				//+
				// Проверить, что во всех ЭСФ указано одинаковое подразделение организации.
				Если ЭСФКлиентСерверПереопределяемый.ИспользуютсяСтруктурныеПодразделения() Тогда
					Выборка.Сбросить();
					Выборка.Следующий();
					ПервоеПодразделение = Выборка.СтруктурноеПодразделение;
					Пока Выборка.Следующий() Цикл
						Если Выборка.СтруктурноеПодразделение <> ПервоеПодразделение Тогда
							ОтзывВозможен = Ложь;
							ЭСФКлиентСервер.СообщитьПользователю(НСтр("ru = 'Все сопроводительные накладные на товары должны принадлежать одному структурному подразделению.'"));
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				//-
				
				Если НЕ СоответствиеВозможностиДействий[Действие][Выборка.Статус] Тогда
					ОтзывВозможен = Ложь;
					ТекстСообщения = НСтр("ru = 'Для сопроводительных накладных на товары со статусом %1 не выполнимо действие""%2"".'");
					ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Статус, Действие); 
					ЭСФКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Прервать;				
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// Проверить, чтобы у всех СНТ было одинаковое направление, в зависимости от действия.
	ТребуемоеНаправление = НаправлениеДляДействия(Действие, НаправлениеПервогоСНТ, ВидОперацииПервогоСНТ);
	Если НЕ ВсеСНТИмеютНаправление(ТребуемоеНаправление, РезультатЗапроса, Истина) Тогда
		Возможно = Ложь;
	КонецЕсли;
	
	Возврат Возможно;
	
КонецФункции

&НаСервере
Функция НаправлениеДляДействия(Знач Действие, Знач НаправлениеСНТ = Неопределено, ВидОперации = Неопределено)
	
	Направление = Неопределено;
	
	Если Действие = СНТКлиентСервер.ДействиеОтзыв() Тогда
		
		Направление = Перечисления.НаправленияСНТ.Исходящий;
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеПодтверждение() Тогда
		
		Направление = Перечисления.НаправленияСНТ.Входящий;
		Если ВидОперации = Перечисления.ВидыОперацийСНТ.Ввоз Или ВидОперации = Перечисления.ВидыОперацийСНТ.Перемещение Или ВидОперации = Перечисления.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами Тогда
			Направление = Перечисления.НаправленияСНТ.Исходящий;
		КонецЕсли;	
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтклонение() Тогда
		
		Направление = Перечисления.НаправленияСНТ.Входящий;
		Если ВидОперации = Перечисления.ВидыОперацийСНТ.Ввоз Или ВидОперации = Перечисления.ВидыОперацийСНТ.Перемещение Или ВидОперации = Перечисления.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами Тогда
			Направление = Перечисления.НаправленияСНТ.Исходящий;
		КонецЕсли;	
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Внутренняя ошибка. Необработанное действие.'");
		
	КонецЕсли;
	
	Возврат Направление;
	
КонецФункции

&НаСервере
Функция ВсеСНТИмеютНаправление(Знач Направление, Знач РезультатЗапроса, Знач ПоказыватьСообщения)
	
	ВсеСНТИмеютНаправление = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();		
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Направление <> Направление Тогда
			
			ВсеСНТИмеютНаправление = Ложь;
			
			Если ПоказыватьСообщения Тогда 
				ТекстСообщения = НСтр("ru = 'Невозможно выполнить действие для документа ""%СНТ%"", так как он %Направление%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СНТ%", Выборка.СНТ);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Направление%", НРег(Направление));				
				ЭСФКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ВсеСНТИмеютНаправление;
	
КонецФункции

&НаСервере
Функция ДанныеДляПроверкиВозможностиВыполненияДействия()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Ссылка КАК СНТ,
	|	СНТ.Направление КАК Направление,
	|	СНТ.ВидОперации КАК ВидОперации,
	|	СНТ.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СНТ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Входящий)
	|				И ТИПЗНАЧЕНИЯ(СНТ.Получатель) = &ТипПодразделенияОрганизаций
	|			ТОГДА СНТ.Получатель
	|		КОГДА СНТ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Исходящий)
	|				И СНТ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Ввоз)
	|				И ТИПЗНАЧЕНИЯ(СНТ.Получатель) = &ТипПодразделенияОрганизаций
	|			ТОГДА СНТ.Получатель
	|		КОГДА СНТ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Исходящий)
	|				И ТИПЗНАЧЕНИЯ(СНТ.Поставщик) = &ТипПодразделенияОрганизаций
	|			ТОГДА СНТ.Поставщик
	|		ИНАЧЕ &ПустоеПодразделение
	|	КОНЕЦ КАК СтруктурноеПодразделение,
	|	СНТ.Статус КАК Статус,
	|	СНТ.ПолучательИдентификатор КАК ПолучательИдентификатор,
	|	СНТ.ПолучательРозничнаяРеализация КАК ПолучательРозничнаяРеализация,
	|	СНТ.ПолучательРозничныйРеализатор КАК ПолучательРозничныйРеализатор,
	|	СНТ.ПолучательФизическоеЛицо КАК ПолучательФизическоеЛицо,
	|	СНТ.КодОперацииG2 КАК КодОперацииG2,
	|	СНТ.КодОперацииG4 КАК КодОперацииG4,
	|	СНТ.КодОперацииG5 КАК КодОперацииG5,
	|	СНТ.КодОперацииG6 КАК КодОперацииG6,
	|	СНТ.КодОперацииG7 КАК КодОперацииG7,
	|	СНТ.ЕстьЭтиловыйСпирт КАК ЕстьЭтиловыйСпирт,
	|	СНТ.ЕстьВиноматериал КАК ЕстьВиноматериал,
	|	СНТ.ЕстьПивоПивныеНапитки КАК ЕстьПивоПивныеНапитки,
	|	СНТ.ЕстьАлкоголь КАК ЕстьАлкоголь,
	|	СНТ.ЕстьНефтепродукты КАК ЕстьНефтепродукты,
	|	СНТ.ЕстьБиотопливо КАК ЕстьБиотопливо,
	|	СНТ.ЕстьТабачныеИзделия КАК ЕстьТабачныеИзделия,
	|	СНТ.ЕстьДругиеТоварыЦифроваяМаркировка КАК ЕстьДругиеТоварыЦифроваяМаркировка,
	|	СНТ.ЕстьТоварыЭК КАК ЕстьТоварыЭК,
	|	ЕСТЬNULL(СНТТоварыВС.НомерСтроки, 0) <> 0 КАК ТоварыВС
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СНТ.ТоварыВС КАК СНТТоварыВС
	|		ПО (СНТТоварыВС.Ссылка = СНТ.Ссылка)
	|ГДЕ
	|	СНТ.Ссылка В(&МассивСНТ)";
	
	Запрос.УстановитьПараметр("МассивСНТ", Параметры.МассивСНТ);
	Запрос.УстановитьПараметр("ТипПодразделенияОрганизаций", СНТСерверПереопределяемый.ПолучитьТипПодразделенияОрганизаций());
	Запрос.УстановитьПараметр("ПустоеПодразделение", ВСКлиентСерверПереопределяемый.ПолучитьПустуюСсылкуПодразделения());

	Если НЕ ЭСФКлиентСерверПереопределяемый.ИспользуютсяСтруктурныеПодразделения() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СНТ.СтруктурноеПодразделение,", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Прочие служебные процедуры и функции

&НаКлиенте
Функция ВсеСтатусыУспешноИзменены()
	
	Успешно = Истина;
	
	Для Каждого СтрокаСписокСНТ Из СписокСНТ Цикл
		Если СтрокаСписокСНТ.ОшибкаЕсть Тогда
			Успешно = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Успешно;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокСНТ()	
	
	СписокСНТ.Очистить();
	
	Если Действие = СНТКлиентСервер.ДействиеПодтверждение() Тогда
		
		ЗаполнитьСписокСНТ_Отзыв();
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтклонение() Тогда
		
		ЗаполнитьСписокСНТ_Отзыв();
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтзыв() Тогда
		
		ЗаполнитьСписокСНТ_Отзыв();
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Внутренняя ошибка. Необработанное действие.'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСНТ_Отзыв()
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Ссылка КАК СНТ,
	|	СНТ.Идентификатор КАК Идентификатор,
	|	СНТ.Статус КАК Статус,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СНТ.ЭЦПЮрЛицаОтпуск КАК СТРОКА(10))) = """"
	|			ТОГДА СНТ.ЭЦПУполномоченногоПодписыватьСНТ
	|		ИНАЧЕ СНТ.ЭЦПЮрЛицаОтпуск
	|	КОНЕЦ КАК ЭЦП
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|ГДЕ
	|	СНТ.Ссылка В(&МассивОтзываемыхСНТ)";
	
	Запрос.УстановитьПараметр("МассивОтзываемыхСНТ", Параметры.МассивСНТ);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаСписокСНТ = СписокСНТ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСписокСНТ, Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСНТ_Отклонение()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Ссылка КАК СНТ,
	|	СНТ.Идентификатор КАК Идентификатор,
	|	СНТ.Статус КАК Статус
	|ИЗ
	|	Документ.ЭлектронныйАктВыполненныхРабот КАК СНТ
	|ГДЕ
	|	СНТ.Ссылка В(&МассивОтзываемыхСНТ)";
	
	
	Запрос.УстановитьПараметр("МассивСНТ", Параметры.МассивСНТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаСписокСНТ = СписокСНТ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСписокСНТ, Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораСНТ()
	
	Массив = Новый Массив;
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Направление", НаправлениеДляДействия(Действие, Параметры.МассивСНТ[0].Направление)); 
	Массив.Добавить(ПараметрВыбора);
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Организация", Параметры.МассивСНТ[0].Организация); 
	Массив.Добавить(ПараметрВыбора);	
	
	//Если ЭСФКлиентСерверПереопределяемый.ИспользуютсяСтруктурныеПодразделения() Тогда
	//	ПараметрВыбора = Новый ПараметрВыбора("Отбор.СтруктурноеПодразделение", Параметры.МассивСНТ[0].СтруктурноеПодразделение); 
	//	Массив.Добавить(ПараметрВыбора);		
	//КонецЕсли;
	
	Элементы.СписокСНТСНТ.ПараметрыВыбора = Новый ФиксированныйМассив(Массив);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеСНТ(СНТ)
	
	Данные = Новый Структура;
	Данные.Вставить("Идентификатор", "");
	Данные.Вставить("Статус", Перечисления.СтатусыЭСФ.ПустаяСсылка());
	//Данные.Вставить("Вид", Перечисления.ВидыЭСФ.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Идентификатор,
	|	СНТ.Статус
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|ГДЕ
	|	СНТ.Ссылка = &СНТ";	
	
	Запрос.УстановитьПараметр("СНТ", СНТ);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Данные.Идентификатор = Выборка.Идентификатор;
		Данные.Статус = Выборка.Статус;
		//Данные.Вид = Выборка.Вид;
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если Действие = СНТКлиентСервер.ДействиеПодтверждение() Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Подтверждение сопроводительных накладных на товары'");
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтклонение() Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Отклонение сопроводительных накладных на товары'");
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтзыв() Тогда
		
		ЭтаФорма.Заголовок = НСтр("ru = 'Отзыв сопроводительных накладных на товары'");
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Внутренняя ошибка. Необработанное действие.'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокКнопкиВыполнитьДействие()
	
	Если Действие = СНТКлиентСервер.ДействиеПодтверждение() Тогда
		
		Элементы.ФормаВыполнитьДействие.Заголовок = НСтр("ru = 'Подтвердить СНТ в ИС ЭСФ'");
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтклонение() Тогда
		
		Элементы.ФормаВыполнитьДействие.Заголовок = НСтр("ru = 'Отклонить СНТ в ИС ЭСФ'");	
		
	ИначеЕсли Действие = СНТКлиентСервер.ДействиеОтзыв() Тогда
		
		Элементы.ФормаВыполнитьДействие.Заголовок = НСтр("ru = 'Отозвать СНТ в ИС ЭСФ'");
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Внутренняя ошибка. Необработанное действие.'");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПоляПричина()
	Если Действие = СНТКлиентСервер.ДействиеПодтверждение() Тогда
		Элементы.Причина.Видимость = Ложь;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Функция ОтклонитьИсправленныеИлиДополнительныеИлиОтозванныеЭСФ(ДанныеПрофиляИСЭСФ, ДанныеКлючаЭЦП)
	
	/////////////////////////////////////////////////////////////////////////////
	// Выполнить отклонение отозванных ЭСФ.
	
	// Сформировать коллекцию для отклонения отозванных.
	КоллецияДляИзмененияСтатусов = Новый Соответствие;
	Для Каждого СтрокаТаблицы Из СписокСНТ Цикл
		Если СтрокаТаблицы.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЭСФ.Отозванный") Тогда
			КоллецияДляИзмененияСтатусов.Вставить(СтрокаТаблицы.Идентификатор, Причина);
		КонецЕсли;
	КонецЦикла;
	
	// Выполнить отклонение отозванных.
	Если КоллецияДляИзмененияСтатусов.Количество() <> 0 Тогда
		
		КоллекцияРезультатовОтклоненияОтозванных = ЭСФКлиент.ИзменитьСтатусыЭСФ(
		ЭСФКлиентСервер.ДействиеОтклонениеОтзыва(),
		КоллецияДляИзмененияСтатусов,
		ДанныеПрофиляИСЭСФ,
		ДанныеКлючаЭЦП,
		УникальныйИдентификатор,
		// всегда равно Ложь, т.к. действие требует выполнения нескольких запросов
		Ложь);
		
	Иначе
		
		КоллекцияРезультатовОтклоненияОтозванных = Новый Соответствие;
		
	КонецЕсли;
	
	
	
	/////////////////////////////////////////////////////////////////////////////
	// Выполнить отклонение исправленных или дополнительных ЭСФ.
	
	// Сформировать коллекцию для отклонения дополнительных и исправленных.
	КоллецияДляИзмененияСтатусов = Новый Соответствие;
	Для Каждого СтрокаТаблицы Из СписокСНТ Цикл
		Если СтрокаТаблицы.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЭСФ.Отозванный") Тогда
			// В данной проверке не проверяется "Дополнительный" или "Исправленный",
			// чтобы во второй запрос попали все ЭСФ, которые не являются отозванными.
			КоллецияДляИзмененияСтатусов.Вставить(СтрокаТаблицы.Идентификатор, Причина);
		КонецЕсли;
	КонецЦикла;
	
	// Выполнить отклонение дополнительных и исправленных.
	Если КоллецияДляИзмененияСтатусов.Количество() <> 0 Тогда
		
		КоллекцияРезультатовОтклоненияДополнительныхИлиИсправленных = ЭСФКлиент.ИзменитьСтатусыЭСФ(
		ЭСФКлиентСервер.ДействиеОтклонениеДополнительногоИлиИсправленного(), 
		КоллецияДляИзмененияСтатусов, 
		ДанныеПрофиляИСЭСФ, 
		ДанныеКлючаЭЦП,
		УникальныйИдентификатор,
		// всегда равено Ложь, тк действие требует выполнения нескольких запросов
		Ложь);
		
	Иначе
		
		КоллекцияРезультатовОтклоненияДополнительныхИлиИсправленных = Новый Соответствие;
		
	КонецЕсли;
	
	
	
	/////////////////////////////////////////////////////////////////////////////
	// Объединить результаты выполнения двух отклонений.
	
	КоллекцияРезультатовИзмененияСтатусов = Новый Соответствие;
	
	Для Каждого ЭлементКоллекции Из КоллекцияРезультатовОтклоненияОтозванных Цикл
		КоллекцияРезультатовИзмененияСтатусов.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
	КонецЦикла;
	
	Для Каждого ЭлементКоллекции Из КоллекцияРезультатовОтклоненияДополнительныхИлиИсправленных Цикл
		КоллекцияРезультатовИзмененияСтатусов.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
	КонецЦикла;
	
	
	
	/////////////////////////////////////////////////////////////////////////////
	// Возврат результата.
	
	Возврат КоллекцияРезультатовИзмененияСтатусов;
	
КонецФункции

