#Область ПоискУдаленияИсточников

&НаКлиенте
Процедура ПослеЗакрытияВопросаУдаленияИП(Результат, Параметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикОжиданияУдаления();

КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНаСервере()
	
	ТаблицаНеиспользуемыхИсточников.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыполнениеФоновогоЗадания(ФоновоеЗадание) Экспорт

	Если ФоновоеЗадание = Неопределено
		ИЛИ НЕ ТипЗнч(ФоновоеЗадание) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	РезультатРаботыЗадания = ФоновоеЗадание;
	
	МетодПродолжения = ?(ФоновоеЗадание.Свойство("МетодПродолжения"), ФоновоеЗадание.МетодПродолжения, Неопределено);
	Если МетодПродолжения <> Неопределено Тогда
		ОповещениеПродолжения = Новый ОписаниеОповещения(МетодПродолжения, ЭтаФорма);
	КонецЕсли;	
	
	Если РезультатРаботыЗадания.ЗаданиеВыполнено Тогда
		
		АдресСообщенияПользователю = ЭСФВызовСервера.СообщенияФоновогоЗадания(РезультатРаботыЗадания.ИдентификаторЗадания);
		СообщенияПользователю = ПолучитьИзВременногоХранилища(АдресСообщенияПользователю);
		Если СообщенияПользователю <> Неопределено Тогда
			Для каждого СообщениеФоновогоЗадания Из СообщенияПользователю Цикл
				СообщениеФоновогоЗадания.Сообщить();
			КонецЦикла;
		КонецЕсли;
				
		Если ОповещениеПродолжения <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОповещениеПродолжения, ФоновоеЗадание);
		КонецЕсли;		
		
	Иначе
	
		ПараметрыДлительнойОперации = Новый Структура;
		ПараметрыДлительнойОперации.Вставить("ИдентификаторЗадания");
		ПараметрыДлительнойОперации.Вставить("ВыводитьОкноОжидания", Истина);
		ПараметрыДлительнойОперации.Вставить("АдресРезультата", РезультатРаботыЗадания.АдресХранилища);
		ПараметрыДлительнойОперации.Вставить("ВыводитьСообщения", Истина);
		
		Если РезультатРаботыЗадания.Свойство("ТекстСообщения") Тогда
			ПараметрыДлительнойОперации.Вставить("ТекстСообщения", РезультатРаботыЗадания.ТекстСообщения);
		КонецЕсли;
		
		ПараметрыДлительнойОперации.ИдентификаторЗадания = РезультатРаботыЗадания.ИдентификаторЗадания;
		
		Если ОповещениеПродолжения <> Неопределено Тогда
			ОткрытьФорму("Обработка.ОбменЭСФ.Форма.ДлительнаяОперация", ПараметрыДлительнойОперации, ЭтаФорма,,,, ОповещениеПродолжения);
		Иначе
			ЭСФКлиентСервер.СообщитьПользователю("Ошибка");
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПослеВыполненияФоновогоПоиска(РезультатРаботыЗадания, Параметры) Экспорт
	
	ЗаполнитьТаблицуЭлементами(РезультатРаботыЗадания);
	
	УправлениеФормой(ЭтаФорма);
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПослеВыполненияФоновогоУдаления(РезультатРаботыЗадания, Параметры) Экспорт
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультатУдаления;
	Элементы.ДекорацияОжидание.Заголовок = НСтр("ru='Выполняется удаление неиспользуемых источников происхождения.
													|Пожалуйста, подождите...'");
	
	УправлениеФормой(ЭтаФорма);

	ЗаполнитьТаблицуЭлементами(РезультатРаботыЗадания);		
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЭлементами(РезультатРаботыЗадания)
	
	РезультатИзХранилища = ПолучитьИзВременногоХранилища(РезультатРаботыЗадания.АдресХранилища);
	Если ТипЗнч(РезультатИзХранилища) = Тип("Структура") Тогда	
		Для Каждого ЭлементКУдалению ИЗ РезультатИзХранилища.МассивПодчиненныхЭлементовКУдалению Цикл
			
			НоваяСтрока = ТаблицаНеиспользуемыхИсточников.Добавить();
			НоваяСтрока.ИсточникПроисхождения = ЭлементКУдалению;
			НоваяСтрока.Пометка = Истина;
		КонецЦикла;
		
		Для Каждого ЭлементКУдалению ИЗ РезультатИзХранилища.МассивЭлементовКУдалению Цикл
			НоваяСтрока = ТаблицаНеиспользуемыхИсточников.Добавить();
			НоваяСтрока.ИсточникПроисхождения = ЭлементКУдалению;
			НоваяСтрока.Пометка = Истина;
		КонецЦикла;
	Иначе
		ТаблицаНеиспользуемыхИсточников.Загрузить(РезультатИзХранилища);
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ТаблицаНеиспользуемыхИсточниковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ИсточникПроисхождения) Тогда
		
		СтандартнаяОбработка = Ложь;	
		
		ОткрытьФорму("Справочник.ИсточникиПроисхождения.ФормаОбъекта", Новый Структура("Ключ", ТекущиеДанные.ИсточникПроисхождения));
	
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРезервнаяКопияНажатие(Элемент)
	
	ВСКлиентПереопределяемый.ОткрытьФормуРезерверногоКопирование();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЖурналРегистрацииНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СобытиеЖурналаРегистрации", НСтр("ru='УдалениеНеиспользуемыхИсточниковПроисхождения'"));
	ПараметрыФормы.Вставить("ДатаНачала", ДатаЗапуска);

	ВСКлиентПереопределяемый.ОткрытьФормуЖурналаРегистрации(ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКоманд

&НаКлиенте
Процедура УдалитьНеиспользуемыеИсточникиПроисхождения(Команда)
	
	Если НЕ ПроверитьОтметкиВСписке() Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Не выбран ни один источник для удаления'"));
		Возврат;
	КонецЕсли;
		
	ТекстВопроса = НСтр("ru = 'Операция удаления неиспользуемых источников происхождения необратима. Продолжить?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВопросаУдаленияИП", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);	
		
КонецПроцедуры

&НаКлиенте
Процедура КнопкаНазад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультатУдаления Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультат;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультат Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПоискИсточников;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	    				
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	ИзменитьФлажки(Истина);
	 	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда) 	
	
	ИзменитьФлажки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПоискИсточников(Команда)
	
	ОбработчикОжиданияОбновления();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыиФункции

&НаКлиенте
Процедура ИзменитьФлажки(Пометка)
	
	Для Каждого СтрокаТаблицы Из ТаблицаНеиспользуемыхИсточников Цикл
		СтрокаТаблицы.Пометка = Пометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьОтметкиВСписке()
	
	Для Каждого СтрокаТаблицы Из ТаблицаНеиспользуемыхИсточников Цикл
		Если СтрокаТаблицы.Пометка Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОжиданияОбновления()
	
	ОбновитьДанныеНаСервере();
	
	ПараметрыВыполнения = ЭСФКлиентСерверПереопределяемый.ПараметрыВыполненияВФоне();
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Поиск неиспользуемых источников происхождения'");
 
    Результат = ЭСФВызовСервера.ВыполнитьВФоне("ВССервер.НайтиНеиспользуемыеЭлементыСправочникаВФоне",, ПараметрыВыполнения);
	
	МетодПродолжения = "ОбработкаПослеВыполненияФоновогоПоиска";
	Результат.Вставить("МетодПродолжения",МетодПродолжения); 
	
	ПроверитьВыполнениеФоновогоЗадания(Результат);

	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультат;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияУдаления()
	
	Результат = УдалитьНаСервереВФоне();	
	ПроверитьВыполнениеФоновогоЗадания(Результат);
	
КонецПроцедуры

&НаСервере
Функция УдалитьНаСервереВФоне()
	
	ПараметрыВыполнения = ЭСФКлиентСерверПереопределяемый.ПараметрыВыполненияВФоне();
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Удаление неиспользуемых источников происхождения'");
    Параметр = ДанныеФормыВЗначение(ТаблицаНеиспользуемыхИсточников,Тип("ТаблицаЗначений"));
			                                                                                  
	Результат = ЭСФВызовСервера.ВыполнитьВФоне("ВССервер.УдалитьНеиспользуемыеИсточникиПроисхожденияВФоне",Параметр ,ПараметрыВыполнения);
	
	МетодПродолжения = "ОбработкаПослеВыполненияФоновогоУдаления";
	Результат.Вставить("МетодПродолжения",МетодПродолжения); 
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаОжидание Тогда
		Элементы.ГруппаКоманд.Видимость = Ложь;
	Иначе		
		Элементы.ГруппаКоманд.Видимость = Истина;		
	КонецЕсли;
	        	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаРезультатУдаления 
		ИЛИ Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПоискИсточников Тогда
		Элементы.УдалитьНеиспользуемыеИсточникиПроисхождения.Видимость = Ложь;
	Иначе
		Если Форма.ТаблицаНеиспользуемыхИсточников.Количество() = 0 Тогда
			Элементы.ДекорацияОписания.Заголовок = НСтр("ru='Не найдены неиспользуемые источники происхождения'");
			Элементы.УдалитьНеиспользуемыеИсточникиПроисхождения.Видимость = Ложь;
		Иначе
			Элементы.ТаблицаНеиспользуемыхИсточников.Видимость = Истина;
			Элементы.УдалитьНеиспользуемыеИсточникиПроисхождения.Видимость = Истина;		
		КонецЕсли;
	КонецЕсли;    	
	
	Если НЕ Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаПоискИсточников Тогда
		Элементы.КнопкаНазад.Видимость = Истина;		
		Элементы.ВыполнитьПоискИсточников.Видимость = Ложь;	
		Элементы.УдалитьНеиспользуемыеИсточникиПроисхождения.КнопкаПоУмолчанию = Истина;
	Иначе
		Элементы.КнопкаНазад.Видимость = Ложь;	
		Элементы.ВыполнитьПоискИсточников.Видимость = Истина;		
		Элементы.ВыполнитьПоискИсточников.КнопкаПоУмолчанию = Истина;
	КонецЕсли;  
	    	
КонецПроцедуры

#КонецОбласти



