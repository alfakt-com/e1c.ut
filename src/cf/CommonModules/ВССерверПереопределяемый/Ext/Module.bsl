////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

#Область ОбщиеФункцииПоЗапросам

Функция ПолучитьТекстЗапросаКонтактнаяИнформация()
	
	ТекстЗапросаКонтактнаяИнформация = 
	"
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(450))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(450))
	|		ИНАЧЕ Организации.Наименование
	|	КОНЕЦ КАК Наименование,
	|	Организации.ИНН КАК ИдентификационныйНомер
	|ПОМЕСТИТЬ ОбъектыДляПоискаАдресов
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				вт_ДанныеДокумента.Организация
	|			ИЗ
	|				вт_ДанныеДокумента КАК вт_ДанныеДокумента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбъектыДляПоискаАдресов.Объект КАК Организация,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(400)) КАК АдресОрганизации,
	|	ОбъектыДляПоискаАдресов.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	ОбъектыДляПоискаАдресов.Наименование КАК Наименование
	|ПОМЕСТИТЬ вт_КонтактнаяИнформация
	|ИЗ
	|	ОбъектыДляПоискаАдресов КАК ОбъектыДляПоискаАдресов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И ОбъектыДляПоискаАдресов.Объект = КонтактнаяИнформация.Ссылка
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|			И (КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";

	Возврат ТекстЗапросаКонтактнаяИнформация;
	
КонецФункции	

Функция ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения)
	
	Если ПараметрыЗаполнения.Свойство("СпособЗаполненияЦены") Тогда
		СпособЗаполненияЦены 	= ПараметрыЗаполнения.СпособЗаполненияЦены;
	Иначе
		СпособЗаполненияЦены 	= Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("СебестоимостьПоСкладам") Тогда
		СебестоимостьПоСкладам 	= ПараметрыЗаполнения.СебестоимостьПоСкладам;
	Иначе
		СебестоимостьПоСкладам 	= Ложь;
	КонецЕсли;
		ВестиСкладскойУчетБУ 	= Ложь;
	
	Если ПараметрыЗаполнения.Свойство("ПоДвижениямДокумента") Тогда
		ПоДвижениямДокумента 	= ПараметрыЗаполнения.ПоДвижениямДокумента;
	Иначе
		ПоДвижениямДокумента 	= Ложь;
	КонецЕсли;
 	
	
	Если СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ФиксированнымЗначением ИЛИ Не ПараметрыЗаполнения.ЗаполнятьЦены Тогда
		ТекстЗапросаЦена = 
		"
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	вт_ДанныеДокумента.Товар КАК Номенклатура,
		|	вт_ДанныеДокумента.Характеристика КАК Характеристика,
		|	&ЗначениеЦены КАК ЦенаНоменклатуры
		|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
		|ИЗ
		|	вт_ДанныеДокумента КАК вт_ДанныеДокумента
		|ГДЕ
		|	вт_ДанныеДокумента.ТипФормы В(&ТипыФормЦены)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика";
	ИначеЕсли  СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ПоТипуЦены
		ИЛИ СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости Тогда
		
		// в УПК ПоСебестоимости не используется (в случае необходимости пользователь использует рассчитываемый вид цен Себестоимость)
		ТекстЗапросаЦена =
		"
		|;
		|ВЫБРАТЬ
		|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|	ЦеныНоменклатуры.Цена КАК ЦенаНоменклатуры
		|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ДатаСреза,
		|			(Номенклатура, Характеристика) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						вт_ДанныеДокумента.Товар,
		|						вт_ДанныеДокумента.Характеристика
		|					ИЗ
		|						вт_ДанныеДокумента КАК вт_ДанныеДокумента)
		|				И ВидЦены = &ТипЦены) КАК ЦеныНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика"
		
	КонецЕсли;	
	
	Возврат ТекстЗапросаЦена;
КонецФункции	

Функция ПолучитьТекстЗапросаДляМассива(МассивВидовДокумента)
	
	ТекстЗапроса = "";
	ЕстьЭСФ = Ложь;
	ЕстьСНТ = Ложь;
	
	Для Каждого ЭлементМассива Из МассивВидовДокумента Цикл
		ТекстЗапросаДокумента = "";
		
		Если ЭлементМассива = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаТаможеннаяДекларацияИмпорт(ТекстЗапроса = "");
		ИначеЕсли  ЭлементМассива = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаЗаявлениеОВвозеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаОприходованиеИзлишковТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПрочееОприходованиеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.СборкаТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаСборкаТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаВнутреннееПотреблениеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПеремещениеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПересортицаТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаСписаниеНедостачТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПорчаТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПорчаТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ЭСФ") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаЭСФ(ТекстЗапроса = "");
			ЕстьЭСФ = Истина;
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПриобретениеТоваровУслуг(ТекстЗапроса = "");
 		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ВводОстатков") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаВводОстатков(ТекстЗапроса = "");
			
		
		ИначеЕсли ЭлементМассива = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда
			ТекстЗапросаДокумента = СНТСерверПереопределяемый.ТекстЗапросаСНТ(ТекстЗапроса = "");
			ЕстьСНТ = Истина;	
		КонецЕсли;
		
		Если ТекстЗапроса <> "" И ТекстЗапросаДокумента <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|"  
		КонецЕсли;	
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДокумента;
		
	КонецЦикла;	
	
	ДопТекстЗапрос = "";
	Если ЕстьЭСФ Тогда
		ДопТекстЗапрос = ТекстЗапросаЭСФДокументОснование()
	ИначеЕсли ЕстьСНТ Тогда
		ДопТекстЗапрос = СНТСерверПереопределяемый.ТекстЗапросаВыбораСНТ();
	КонецЕсли;
	
	Возврат ДопТекстЗапрос + ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьТекстЗапросаДляЗаполненияЭДВС(ПараметрыЗаполнения) Экспорт
	
	ДокументыОснования 	 = ПараметрыЗаполнения.МассивДокументов;
	МассивВидовДокумента = ПараметрыЗаполнения.МассивВидовДокумента;

	Если ПараметрыЗаполнения.Свойство("НомерДетализируемойСтроки") Тогда
		НомерДетализируемойСтроки = ПараметрыЗаполнения.НомерДетализируемойСтроки;
	Иначе
		НомерДетализируемойСтроки = Неопределено;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ДетализироватьОС") Тогда
		ДетализироватьОС = ПараметрыЗаполнения.ДетализироватьОС;
	Иначе
		ДетализироватьОС = Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("ЭтоВводОстатковИзВходящегоЭСФ") Тогда
		ЭтоВводОстатковИзВходящегоЭСФ = ПараметрыЗаполнения.ЭтоВводОстатковИзВходящегоЭСФ;
	Иначе
		ЭтоВводОстатковИзВходящегоЭСФ = Ложь;
	КонецЕсли;

	ПроверятьСклад 	 = Ложь;
	
	ТекстЗапросаКурсыВалютДокументов = ПолучитьТекстЗапросаКурсовВалют(ПараметрыЗаполнения); 
	
	Если ТипЗнч(ДокументыОснования) = Тип("Массив") Тогда
			ТекстЗапроса 	= ПолучитьТекстЗапросаДляМассива(МассивВидовДокумента);
			Если ТекстЗапроса = "" Тогда
				Возврат Неопределено;	
			КонецЕсли;	
			ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") Тогда
		ТекстЗапроса = ТекстЗапросаТаможеннаяДекларацияИмпорт();
		ПроверятьСклад 	= Истина;
	ИначеЕсли  ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаЗаявлениеОВвозеТоваров();
		ПроверятьСклад 	= Истина;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаОприходованиеИзлишковТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаПрочееОприходованиеТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаСборкаТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаВнутреннееПотреблениеТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаПеремещениеТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаПересортицаТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаСписаниеНедостачТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПорчаТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаПорчаТоваров();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ЭСФ") Тогда
		Если ПараметрыЗаполнения.Свойство("ЭтоОформлениеКонвертацииЕИ") Тогда
			ТекстЗапроса 	= ТекстЗапросаЭСФКонвертацияЕдицицИзмерения();
		ИначеЕсли ЭтоВводОстатковИзВходящегоЭСФ = Истина Тогда
			ТекстЗапроса = ?(ДокументыОснования.Направление = Перечисления.НаправленияЭСФ.Исходящий, ТекстЗапросаЭСФИсходящийОстаткиЭДВС(), ТекстЗапросаЭСФДокументОснование() + ТекстЗапросаЭСФОстаткиЭДВС());
		Иначе
			ТекстЗапроса = ТекстЗапросаЭСФДокументОснование() + ТекстЗапросаЭСФ();
		КонецЕсли;
		
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		ТекстЗапроса = ТекстЗапросаПриобретениеТоваровУслуг();
		ПроверятьСклад 	= Ложь;
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ВводОстатков") Тогда
		ТекстЗапроса = ТекстЗапросаВводОстатков();
		ПроверятьСклад = Ложь;	
	ИначеЕсли ТипЗнч(ДокументыОснования) = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда
		ЭтоВводНаПеремещениеИзВходящегоСНТ = ?(ПараметрыЗаполнения.Свойство("ЭтоВводНаПеремещениеИзВходящегоСНТ"), ПараметрыЗаполнения.ЭтоВводНаПеремещениеИзВходящегоСНТ, Ложь);
		Если ПараметрыЗаполнения.Свойство("ЭтоОформлениеКонвертацииЕИ") Тогда
			ТекстЗапроса = СНТСерверПереопределяемый.ТекстЗапросаСНТКонвертацияЕдиницИзмерения();
		ИначеЕсли ЭтоВводНаПеремещениеИзВходящегоСНТ = Истина Тогда
			ТекстЗапроса = СНТСерверПереопределяемый.ТекстЗапросаНаПеремещениеИзВходящегоСНТ();
		Иначе
			ТекстЗапроса 	= СНТСерверПереопределяемый.ТекстЗапросаВыбораСНТ() + СНТСерверПереопределяемый.ТекстЗапросаСНТ();
			ПроверятьСклад 	= Истина;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СкладОтправитель";
	
	ПараметрыЗаполнения.Вставить("ПроверятьСклад",ПроверятьСклад);
	
	ТекстЗапроса =  ТекстЗапросаКурсыВалютДокументов + ТекстЗапроса + ПолучитьТекстЗапросаКонтактнаяИнформация() + ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения);
	Возврат ТекстЗапроса;
	
КонецФункции

//В процедуре происходит присоединение к основной таблице запроса временной таблицы вт_ЦеныНоменклатуры
//В разных типовых решениях может быть разным
//
Процедура ПрисоединитьВременнуюТаблицуЦеныНоменклатуры(ТекстЗапроса, ИмяТабличнойЧасти) Экспорт
	ТекстЗапроса = ТекстЗапроса + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЦеныНоменклатуры КАК вт_ЦеныНоменклатуры
		|		ПО вт_ДанныеДляЗаполнения.Товар = вт_ЦеныНоменклатуры.Номенклатура
		|			И вт_ДанныеДляЗаполнения.Характеристика = вт_ЦеныНоменклатуры.Характеристика
		|			И вт_ДанныеДляЗаполнения.ДокументОснование = вт_ЦеныНоменклатуры.Регистратор
		|			И вт_ДанныеДляЗаполнения.СкладОтправитель = вт_ЦеныНоменклатуры.Склад
	    |
		|ГДЕ
		|вт_ДанныеДляЗаполнения.ИмяТабличнойЧасти = """ + ИмяТабличнойЧасти + """"
		
КонецПроцедуры

//Функция добавляет к основным полям запроса дополнительные поля которые зависят от типового решения
//
Функция ПолучитьДополнительныеПереопределяемыеПоля() Экспорт
	ТекстЗапроса = ",
	|	ВЫБОР
	|		КОГДА вт_ДанныеДокумента.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДекларацияНаТовары)
	|			ТОГДА ЕСТЬNULL(ВиртуальныйСкладНераспределенныхТоваров.ИдентификаторСклада, 0)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(вт_ДанныеДокумента.СкладОтправитель) = ТИП(Справочник.ВиртуальныеСклады)
	|					ТОГДА вт_ДанныеДокумента.ВиртуальныйСкладОтправитель.ИдентификаторСклада
	|				ИНАЧЕ ЕСТЬNULL(СоответствиеСкладовДляОтправителя.ВиртуальныйСклад.ИдентификаторСклада, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК СкладОтправительИдентификатор,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(вт_ДанныеДокумента.СкладПолучатель) = ТИП(Справочник.ВиртуальныеСклады)
	|			ТОГДА вт_ДанныеДокумента.ВиртуальныйСкладПолучатель.ИдентификаторСклада
	|		ИНАЧЕ ЕСТЬNULL(СоответствиеСкладовДляПолучателя.ВиртуальныйСклад.ИдентификаторСклада, """")
	|	КОНЕЦ КАК СкладПолучательИдентификатор,
	|	вт_ДанныеДокумента.Характеристика
	|";

	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьОстаткиТоваровВС(СтруктураПараметров) Экспорт

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура,
	               |	ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения,
	               |	ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения,
	               |	ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки КАК ТоварыНаВиртуальныхСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	               |		ПО ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних КАК СведенияОНоменклатуреГСВССрезПоследних
	               |		ПО (ИсточникиПроисхождения.Ссылка = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
	               |ГДЕ
	               |	ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе = &ПризнакУчетаНаВиртуальномСкладе
	               |	И СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе = &ПризнакУчетаНаВиртуальномСкладе
	               |	И СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий = &ПризнакПеречняИзьятий";
	               
	
КонецФункции

Функция ПолучитьТекстЗапросаДокументаКурсыВалют(ИсточникВалюты, ПервыйЗапрос = Истина, ИмяРеквизитаВалюта = "Валюта")
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСсылок.Ссылка        КАК Ссылка,
	|	ТаблицаСсылок.Ссылка.Дата   КАК Дата,
	|	ТаблицаСсылок." + ИмяРеквизитаВалюта + " КАК Валюта
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	Документ." + ИсточникВалюты + " КАК ТаблицаСсылок
	|
	|ГДЕ
	|	ТаблицаСсылок.Ссылка В (&МассивДокументов)
	|";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ТаблицаСсылок", "");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаКурсовВалют(ПараметрыЗаполнения)	
	
	ДокументыОснования 		= ПараметрыЗаполнения.МассивДокументов;
	МассивВидовДокумента 	= ПараметрыЗаполнения.МассивВидовДокумента;

	ТекстЗапроса = "";
	
	Если ТипЗнч(ДокументыОснования) = Тип("Массив") Тогда
		
		Для Каждого ЭлементМассива Из МассивВидовДокумента Цикл
			ТекстЗапросаДокумента = "";
			Если ЭлементМассива = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
				ТекстЗапросаДокумента = ПолучитьТекстЗапросаДокументаКурсыВалют("ЗаявлениеОВвозеТоваров.Товары", ТекстЗапроса = "");
			ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
				ТекстЗапросаДокумента = ПолучитьТекстЗапросаДокументаКурсыВалют("ОприходованиеИзлишковТоваров", ТекстЗапроса = "");
			ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
				ТекстЗапросаДокумента = ПолучитьТекстЗапросаДокументаКурсыВалют("ПрочееОприходованиеТоваров", ТекстЗапроса = "");
			ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
				ТекстЗапросаДокумента = ПолучитьТекстЗапросаДокументаКурсыВалют("ПриобретениеТоваровУслуг", ТекстЗапроса = "");
			КонецЕсли;
			
			Если ТекстЗапроса <> "" И ТекстЗапросаДокумента <> "" Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|"  
			КонецЕсли;	
			
			Если НЕ ТекстЗапросаДокумента = "" Тогда
				ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДокумента;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		Если ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			ТекстЗапроса = ПолучитьТекстЗапросаДокументаКурсыВалют("ЗаявлениеОВвозеТоваров.Товары");
		ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
			ТекстЗапроса = ПолучитьТекстЗапросаДокументаКурсыВалют("ОприходованиеИзлишковТоваров");
		ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
			ТекстЗапроса = ПолучитьТекстЗапросаДокументаКурсыВалют("ПрочееОприходованиеТоваров");
		ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
			ТекстЗапроса = ПолучитьТекстЗапросаДокументаКурсыВалют("ПриобретениеТоваровУслуг");
		КонецЕсли;
	КонецЕсли;
	
	Если ТекстЗапроса <> "" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСсылок.Ссылка        КАК Ссылка,
		|	ТаблицаСсылок.Валюта        КАК Валюта,
		|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
		|ПОМЕСТИТЬ ДатыКурсовВалютыДокументов
		|ИЗ
		|	ТаблицаСсылок КАК ТаблицаСсылок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО ТаблицаСсылок.Валюта = КурсыВалют.Валюта
		|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСсылок.Ссылка,
		|	ТаблицаСсылок.Дата,
		|	ТаблицаСсылок.Валюта
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыКурсовВалютыДокументов.Ссылка КАК Ссылка,
		|	ДатыКурсовВалютыДокументов.Валюта КАК Валюта,
		|	КурсыВалют.Курс КАК КурсВалюты,
		|	КурсыВалют.Кратность КАК КратностьВалюты
		|ПОМЕСТИТЬ КурсыВалютДокументов
		|ИЗ
		|	ДатыКурсовВалютыДокументов КАК ДатыКурсовВалютыДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО ДатыКурсовВалютыДокументов.Валюта = КурсыВалют.Валюта
		|			И ДатыКурсовВалютыДокументов.ДатаКурса = КурсыВалют.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаСсылок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДатыКурсовВалютыДокументов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЗапросыПоПриходнымДокументам

Функция ТекстЗапросаВводаОстаток(ПараметрыЗаполнения) Экспорт
	
	МассивСкладов = ПараметрыЗаполнения.МассивСкладов;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	&ДатаДокумента КАК ДатаИсходногоДокумента,
	|	&ДатаДокумента КАК Дата,
	|	"""" КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	"""" КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	КлючиАналитикиУчетаНоменклатуры.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Товар,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ НомераГТД.НаименованиеТовара = """"
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") = """"
	|						ТОГДА ЕСТЬNULL(СправочникНоменклатура.Наименование, """")
	|					ИНАЧЕ ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """")
	|				КОНЕЦ
	|		ИНАЧЕ НомераГТД.НаименованиеТовара
	|	КОНЕЦ КАК ТоварНаименование,
	|	ЕСТЬNULL(НомераГТД.НаименованиеТовара, """") КАК ТоварНаименованиеВРамкахТС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НомераГТД.КодТНВЭД, """") = """"
	|				ИЛИ ТоварыОрганизаций.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """")
	|		ИНАЧЕ ЕСТЬNULL(НомераГТД.КодТНВЭД, """")
	|	КОНЕЦ КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА СправочникУпаковкиЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА СправочникУпаковкиЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ СправочникУпаковкиЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТоварыОрганизаций.КоличествоОстаток КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	ВЫБОР
	|		КОГДА НЕ НомераГТД.СтранаПроисхождения ЕСТЬ NULL
	|			ТОГДА НомераГТД.СтранаПроисхождения
	|		КОГДА НЕ СправочникВидыЗапасов.Контрагент ЕСТЬ NULL
	|			ТОГДА СправочникВидыЗапасов.Контрагент.СтранаРегистрации
	|	КОНЕЦ КАК СтранаПроисхожденияТовара,
	|	ВЫБОР
	|		КОГДА НЕ НомераГТД.СтранаПроисхождения ЕСТЬ NULL
	|			ТОГДА НомераГТД.СтранаПроисхождения.КодАльфа2
	|		КОГДА НЕ СправочникВидыЗапасов.Контрагент ЕСТЬ NULL
	|			ТОГДА СправочникВидыЗапасов.Контрагент.СтранаРегистрации.КодАльфа2
	|	КОНЕЦ КАК СтранаПроисхожденияТовараКод,
	|	ВЫБОР
	|		КОГДА НЕ НомераГТД.ПризнакПроисхождения ЕСТЬ NULL
	|			ТОГДА НомераГТД.ПризнакПроисхождения
	|		ИНАЧЕ ""5""
	|	КОНЕЦ КАК ПризнакПроисхождения,
	|	НомераГТД.Код КАК НомерЗаявленияВРамкахТС,
	|	НомераГТД.НомерСтрокиГТД КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВводОстатков"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ВЫБОР
	|		КОГДА НомераГТД.ПризнакПроисхождения ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено)
	|		КОГДА НомераГТД.ПризнакПроисхождения = ""1""
	|				ИЛИ НомераГТД.ПризнакПроисхождения = ""2""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт)
	|		КОГДА НомераГТД.ПризнакПроисхождения = ""3""
	|				ИЛИ НомераГТД.ПризнакПроисхождения = ""4""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено)
	|	КОНЕЦ КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций)) КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|			И (КлючиАналитикиУчетаНоменклатуры.Склад В (&МассивСкладов))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
	|		ПО ТоварыОрганизаций.ВидЗапасов = СправочникВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ТоварыОрганизаций.НомерГТД = НомераГТД.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (КлючиАналитикиУчетаНоменклатуры.Номенклатура = СправочникНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СправочникУпаковкиЕдиницыИзмерения
	|		ПО (СправочникНоменклатура.ЕдиницаИзмерения = СправочникУпаковкиЕдиницыИзмерения.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СкладОтправитель";
	
	Если МассивСкладов = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (КлючиАналитикиУчетаНоменклатуры.Склад В (&МассивСкладов))", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса  + ПолучитьТекстЗапросаКонтактнаяИнформация() + ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения);
КонецФункции

Функция ТекстЗапросаВводаОстатокПоДаннымБУ(ПараметрыЗаполнения) Экспорт
	
	// для УПК не предусмотрен данный способ
	Возврат "";
	
КонецФункции

Функция ТекстЗапросаЭСФКонвертацияЕдицицИзмерения() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Номер КАК Номер,
	|	Товары.Ссылка КАК ДокументОснование,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ВЫБОР
	|		КОГДА вт_ДокументОснования.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	|		ИНАЧЕ вт_ДокументОснования.ДокументОснование.Склад
	|	КОНЕЦ КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	ДанныеЕдиницыИзмерения.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО Товары.Товар = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА Товары.ЕдиницаИзмеренияХраненияОстатков = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ Товары.ЕдиницаИзмеренияХраненияОстатков
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	Товары.Комментарий КАК Комментарий,
	|	Товары.ДокументОснование КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ Товары.Сумма / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""ИсходныеТовары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	Товары.ТипПошлины КАК ТипПошлины,
	|	Товары.ТипПроисхождения КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	Товары.Комментарий,
	|	Товары.ДокументОснование,
	|	Товары.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	Товары.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	Товары.Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Товары.ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЦенаЕдиницаИзмеренияХраненияОстатков * Товары.КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	Товары.СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	""Товары"",
	|	""ЭСФ"",
	|	Товары.ТипПошлины,
	|	Товары.ТипПроисхождения,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары";
	
	Возврат ТекстЗапросаЭСФДокументОснование() + ТекстЗапроса;
	
КонецФункции

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаТаможеннаяДекларацияИмпорт(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаможеннаяДекларацияИмпорт.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ТаможеннаяДекларацияИмпорт.Дата КАК ДатаИсходногоДокумента,
	|	ТаможеннаяДекларацияИмпорт.Дата КАК Дата,
	|	ТаможеннаяДекларацияИмпорт.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДекларацияНаТовары) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ТаможеннаяДекларацияИмпорт.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ТаможеннаяДекларацияИмпорт.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	ТаможеннаяДекларацияИмпортТовары.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ТаможеннаяДекларацияИмпортТовары.Номенклатура КАК Товар,
	|	ТаможеннаяДекларацияИмпортТовары.Характеристика КАК Характеристика,
	|	ТаможеннаяДекларацияИмпортТовары.НаименованиеТовара КАК ТоварНаименование,
	|	ТаможеннаяДекларацияИмпортТовары.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ТаможеннаяДекларацияИмпортТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаможеннаяДекларацияИмпортТовары.КоличествоУпаковок КАК Количество,
	|	ТаможеннаяДекларацияИмпортТовары.ТаможеннаяСтоимость КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаможеннаяДекларацияИмпортТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаможеннаяДекларацияИмпортТовары.ТаможеннаяСтоимость / ТаможеннаяДекларацияИмпортТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаможеннаяДекларацияИмпортТовары.СтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	ТаможеннаяДекларацияИмпортТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ТаможеннаяДекларацияИмпорт.НомерДекларации КАК НомерЗаявленияВРамкахТС,
	|	ТаможеннаяДекларацияИмпортТовары.НомерРаздела КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ТаможеннаяДекларацияИмпорт"" КАК ИмяДокумента,
	|	ВЫБОР
	|		КОГДА ТаможеннаяДекларацияИмпортРазделы.ВидСтавкиПошлины = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ЕТТЕАЭС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕТТ)
	|		КОГДА ТаможеннаяДекларацияИмпортРазделы.ВидСтавкиПошлины = ЗНАЧЕНИЕ(Перечисление.СпособыПроисхожденияТоваров.ВТО)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ВТО)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено)
	|	КОНЕЦ КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТаможеннаяДекларацияИмпортТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Разделы КАК ТаможеннаяДекларацияИмпортРазделы
	|		ПО ТаможеннаяДекларацияИмпортТовары.НомерРаздела = ТаможеннаяДекларацияИмпортРазделы.НомерСтроки
	|			И ТаможеннаяДекларацияИмпортТовары.Ссылка = ТаможеннаяДекларацияИмпортРазделы.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
	|		ПО ТаможеннаяДекларацияИмпортТовары.Ссылка = ТаможеннаяДекларацияИмпорт.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ТаможеннаяДекларацияИмпортТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|		ПО ТаможеннаяДекларацияИмпортТовары.СтранаПроисхождения = ДанныеСтраныМира.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаможеннаяДекларацияИмпортТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ТаможеннаяДекларацияИмпортТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ТаможеннаяДекларацияИмпортТовары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаЗаявлениеОВвозеТоваров(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявлениеОВвозеТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ЗаявлениеОВвозеТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ЗаявлениеОВвозеТоваров.Дата КАК Дата,
	|	ЗаявлениеОВвозеТоваров.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ДекларацияНаТовары) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ЗаявлениеОВвозеТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ЗаявлениеОВвозеТоваров.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	ПриобретениеТоваровУслуг.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ЗаявлениеОВвозеТоваровТовары.Номенклатура КАК Товар,
	|	ЗаявлениеОВвозеТоваровТовары.Характеристика КАК Характеристика,
	|	ЗаявлениеОВвозеТоваровТовары.НаименованиеТовара КАК ТоварНаименование,
	|	ЗаявлениеОВвозеТоваровТовары.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	ЗаявлениеОВвозеТоваровТовары.КодТНВЭД.Код КАК КодТНВЭД,
	|	ЗаявлениеОВвозеТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ЗаявлениеОВвозеТоваровТовары.Количество КАК Количество,
	|	ЗаявлениеОВвозеТоваровТовары.НалоговаяБазаНДС КАК Сумма,
	|	ВЫБОР
	|		КОГДА ЗаявлениеОВвозеТоваровТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЗаявлениеОВвозеТоваровТовары.НалоговаяБазаНДС / ЗаявлениеОВвозеТоваровТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ДанныеКонтрагента.СтранаРегистрации КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	ЗаявлениеОВвозеТоваровТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ЗаявлениеОВвозеТоваров.НомерОтметкиОРегистрации КАК НомерЗаявленияВРамкахТС,
	|	ЗаявлениеОВвозеТоваровТовары.НомерСтроки КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЗаявлениеОВвозеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ЕАЭС) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.Импорт) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров.Товары КАК ЗаявлениеОВвозеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|		ПО ЗаявлениеОВвозеТоваровТовары.Ссылка = ЗаявлениеОВвозеТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ЗаявлениеОВвозеТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК ДанныеКонтрагента
	|		ПО (ЗаявлениеОВвозеТоваров.Контрагент = ДанныеКонтрагента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|		ПО (ДанныеКонтрагента.СтранаРегистрации = ДанныеСтраныМира.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютДокументов КАК КурсыВалютДокументов
	|		ПО ЗаявлениеОВвозеТоваровТовары.Ссылка = КурсыВалютДокументов.Ссылка
	|			И ЗаявлениеОВвозеТоваровТовары.Валюта = КурсыВалютДокументов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ЗаявлениеОВвозеТоваровТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ЗаявлениеОВвозеТоваровТовары.ЕдиницаИзмерения
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ЗаявлениеОВвозеТоваровТовары.ДокументПоступления = ПриобретениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ЗаявлениеОВвозеТоваровТовары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаОприходованиеИзлишковТоваров(ПервыйЗапрос = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОприходованиеИзлишковТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ОприходованиеИзлишковТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ОприходованиеИзлишковТоваров.Дата КАК Дата,
	|	ОприходованиеИзлишковТоваров.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ОприходованиеИзлишковТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ОприходованиеИзлишковТоваров.Ссылка КАК ДокументОснование,
	|	ОприходованиеИзлишковТоваров.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ОприходованиеИзлишковТоваровТовары.Номенклатура КАК Товар,
	|	ОприходованиеИзлишковТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ОприходованиеИзлишковТоваровТовары.Количество КАК Количество,
	|	ОприходованиеИзлишковТоваровТовары.Сумма * ЕСТЬNULL(КурсыВалютДокументов.КурсВалюты, 1) * ЕСТЬNULL(КурсыВалютДокументов.КратностьВалюты, 1) КАК Сумма,
	|	ОприходованиеИзлишковТоваровТовары.Цена * ЕСТЬNULL(КурсыВалютДокументов.КурсВалюты, 1) * ЕСТЬNULL(КурсыВалютДокументов.КратностьВалюты, 1) КАК Цена,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ОприходованиеИзлишковТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК ОприходованиеИзлишковТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОприходованиеИзлишковТоваров КАК ОприходованиеИзлишковТоваров
	|		ПО ОприходованиеИзлишковТоваровТовары.Ссылка = ОприходованиеИзлишковТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ОприходованиеИзлишковТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютДокументов КАК КурсыВалютДокументов
	|		ПО (ОприходованиеИзлишковТоваров.Ссылка = КурсыВалютДокументов.Ссылка)
	|			И (ОприходованиеИзлишковТоваров.Валюта = КурсыВалютДокументов.Валюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ДанныеНоменклатуры.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ОприходованиеИзлишковТоваровТовары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочееОприходованиеТоваров(ПервыйЗапрос = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПрочееОприходованиеТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПрочееОприходованиеТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ПрочееОприходованиеТоваров.Дата,
	|	ПрочееОприходованиеТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ПрочееОприходованиеТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ПрочееОприходованиеТоваров.Ссылка КАК ДокументОснование,
	|	ПрочееОприходованиеТоваров.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ПрочееОприходованиеТоваровТовары.Номенклатура КАК Товар,
	|	ПрочееОприходованиеТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ПрочееОприходованиеТоваровТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ПрочееОприходованиеТоваровТовары.КоличествоУпаковок КАК Количество,
	|	ПрочееОприходованиеТоваровТовары.Сумма * ЕСТЬNULL(КурсыВалютДокументов.КурсВалюты, 1) * ЕСТЬNULL(КурсыВалютДокументов.КратностьВалюты, 1) КАК Сумма,
	|	ПрочееОприходованиеТоваровТовары.Цена * ЕСТЬNULL(КурсыВалютДокументов.КурсВалюты, 1) * ЕСТЬNULL(КурсыВалютДокументов.КратностьВалюты, 1) КАК Цена,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПрочееОприходованиеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ПрочееОприходованиеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходованиеТоваров
	|		ПО ПрочееОприходованиеТоваровТовары.Ссылка = ПрочееОприходованиеТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПрочееОприходованиеТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютДокументов КАК КурсыВалютДокументов
	|		ПО ПрочееОприходованиеТоваров.Ссылка = КурсыВалютДокументов.Ссылка
	|			И ПрочееОприходованиеТоваров.Валюта = КурсыВалютДокументов.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ПрочееОприходованиеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ПрочееОприходованиеТоваровТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ПрочееОприходованиеТоваровТовары.Ссылка В(&МассивДокументов)
	// ВО ВозвратИзЭксплуатации не используем, списание будем производить по факту из документа СписаниеИзЭксплуатации 
	|	И НЕ ПрочееОприходованиеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСборкаТоваров(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СборкаТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	СборкаТоваров.Дата КАК ДатаИсходногоДокумента,
	|	СборкаТоваров.Дата КАК Дата,
	|	СборкаТоваров.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ВЫБОР
	|		КОГДА СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Комплектация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Разукомплектация)
	|	КОНЕЦ КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(СборкаТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	СборкаТоваров.Ссылка КАК ДокументОснование,
	|	СборкаТоваров.Склад КАК СкладОтправитель,
	|	СборкаТоваров.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	СборкаТоваровТовары.Номенклатура КАК Товар,
	|	СборкаТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	СборкаТоваровТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	СборкаТоваровТовары.КоличествоУпаковок КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	ВЫБОР
	|		КОГДА СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|			ТОГДА ""ИсходныеТовары""
	|		ИНАЧЕ ""Товары""
	|	КОНЕЦ КАК ИмяТабличнойЧасти,
	|	""СборкаТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ИСТИНА КАК ВозможенЭкспорт,
	|	ИСТИНА КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ИСТИНА КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|		ПО СборкаТоваровТовары.Ссылка = СборкаТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО СборкаТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА СборкаТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ СборкаТоваровТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	СборкаТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СборкаТоваров.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	СборкаТоваров.Дата,
	|	СборкаТоваров.Дата,
	|	СборкаТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ВЫБОР
	|		КОГДА СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Комплектация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Разукомплектация)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(СборкаТоваров.Комментарий КАК СТРОКА(400)),
	|	СборкаТоваров.Ссылка,
	|	СборкаТоваров.Склад,
	|	СборкаТоваров.Склад,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	СборкаТоваров.Номенклатура,
	|	СборкаТоваров.Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное,
	|	"""",
	|	ДанныеНоменклатуры.КодТНВЭД.Код,
	|	СборкаТоваров.Упаковка,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ,
	|	СборкаТоваров.КоличествоУпаковок,
	|	0,
	|	0,
	|	&КазахстанСсылкаСтранаПроисхождения,
	|	&КазахстанКодАльфа2,
	|	"""",
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	ВЫБОР
	|		КОГДА СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|			ТОГДА ""Товары""
	|		ИНАЧЕ ""ИсходныеТовары""
	|	КОНЕЦ,
	|	""СборкаТоваров"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено),
	|	ИСТИНА,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО СборкаТоваров.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА СборкаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ СборкаТоваров.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	СборкаТоваров.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПеремещениеТоваров(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.Организация КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПеремещениеТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ПеремещениеТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ПеремещениеТоваров.Ссылка КАК ДокументОснование,
	|	ПеремещениеТоваров.СкладОтправитель КАК СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Товар,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ПеремещениеТоваровТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ПеремещениеТоваровТовары.КоличествоУпаковок КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПеремещениеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО (ПеремещениеТоваров.Ссылка = ПеремещениеТоваровТовары.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПеремещениеТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ПеремещениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ПеремещениеТоваровТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)
	|	И ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Организация,
	|	ПеремещениеТоваров.ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПеремещениеТоваров.Дата,
	|	ПеремещениеТоваров.Дата,
	|	ПеремещениеТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПеремещениеМеждуФилиалами),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(ПеремещениеТоваров.Комментарий КАК СТРОКА(400)),
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное,
	|	"""",
	|	ДанныеНоменклатуры.КодТНВЭД.Код,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ,
	|	ПеремещениеТоваровТовары.Количество,
	|	0,
	|	0,
	|	&КазахстанСсылкаСтранаПроисхождения,
	|	&КазахстанКодАльфа2,
	|	"""",
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""Товары"",
	|	""ПеремещениеТоваров"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО (ПеремещениеТоваров.Ссылка = ПеремещениеТоваровТовары.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПеремещениеТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ПеремещениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ПеремещениеТоваровТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)
	|	И ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПересортицаТоваров(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПересортицаТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПересортицаТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ПересортицаТоваров.Дата,
	|	ПересортицаТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Пересортица) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ПересортицаТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ПересортицаТоваров.Ссылка КАК ДокументОснование,
	|	ПересортицаТоваров.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ПересортицаТоваровТовары.Номенклатура КАК Товар,
	|	ПересортицаТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ПересортицаТоваровТовары.Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|   &КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""ИсходныеТовары"" КАК ИмяТабличнойЧасти,
	|	""ПересортицаТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров КАК ПересортицаТоваров
	|		ПО ПересортицаТоваровТовары.Ссылка = ПересортицаТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПересортицаТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО ДанныеНоменклатуры.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ПересортицаТоваровТовары.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПересортицаТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПересортицаТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ПересортицаТоваров.Дата,
	|	ПересортицаТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Пересортица) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ПересортицаТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ПересортицаТоваров.Ссылка КАК ДокументОснование,
	|	ПересортицаТоваров.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ПересортицаТоваровТовары.НоменклатураОприходование КАК Товар,
	|	ПересортицаТоваровТовары.ХарактеристикаОприходование КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ПересортицаТоваровТовары.Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|   &КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПересортицаТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров КАК ПересортицаТоваров
	|		ПО ПересортицаТоваровТовары.Ссылка = ПересортицаТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПересортицаТоваровТовары.НоменклатураОприходование = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО ДанныеНоменклатуры.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ПересортицаТоваровТовары.Ссылка В(&МассивДокументов)
	|";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПриобретениеТоваровУслуг(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПриобретениеТоваровУслуг.Дата КАК ДатаИсходногоДокумента,
	|	ПриобретениеТоваровУслуг.Дата КАК Дата,
	|	ПриобретениеТоваровУслуг.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ПриобретениеТоваровУслуг.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ПриобретениеТоваровУслуг.Ссылка КАК ДокументОснование,
	|	ПриобретениеТоваровУслуг.Склад КАК СкладОтправитель,
	|	ПриобретениеТоваровУслуг.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Товар,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ПриобретениеТоваровУслугТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ПриобретениеТоваровУслугТовары.КоличествоУпаковок КАК Количество,
	|	ПриобретениеТоваровУслугТовары.Сумма * ЕСТЬNULL(КурсыВалютДокументов.КурсВалюты, 1) * ЕСТЬNULL(КурсыВалютДокументов.КратностьВалюты, 1) КАК Сумма,
	|	ПриобретениеТоваровУслугТовары.Цена * ЕСТЬNULL(КурсыВалютДокументов.КурсВалюты, 1) * ЕСТЬNULL(КурсыВалютДокументов.КратностьВалюты, 1) КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПриобретениеТоваровУслуг"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ПО ПриобретениеТоваровУслугТовары.Ссылка = ПриобретениеТоваровУслуг.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПриобретениеТоваровУслугТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалютДокументов КАК КурсыВалютДокументов
	|		ПО (ПриобретениеТоваровУслуг.Ссылка = КурсыВалютДокументов.Ссылка)
	|			И (ПриобретениеТоваровУслуг.Валюта = КурсыВалютДокументов.Валюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ПриобретениеТоваровУслугТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ПриобретениеТоваровУслугТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка В(&МассивДокументов)";

	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаВводОстатков(ПервыйЗапрос = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВводОстатков.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ВводОстатков.Дата КАК ДатаИсходногоДокумента,
	|	ВводОстатков.Дата КАК Дата,
	|	ВводОстатков.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	"""" КАК Статус,
	|	ВЫРАЗИТЬ(ВводОстатков.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ВводОстатков.Ссылка КАК ДокументОснование,
	|	ВводОстатков.Склад КАК СкладОтправитель,
	|	ВводОстатков.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ВводОстатковТовары.Номенклатура КАК Товар,
	|	ВводОстатковТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	НомераГТД.НаименованиеТовара КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ВводОстатковТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВводОстатковТовары.КоличествоУпаковок КАК Количество,
	|	ВводОстатковТовары.Сумма КАК Сумма,
	|	ВводОстатковТовары.Цена КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	НомераГТД.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	НомераГТД.Код КАК НомерЗаявленияВРамкахТС,
	|	НомераГТД.НомерСтрокиГТД КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВводОстатков"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПроисхождениеНеопределено) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ВводОстатковТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ВводОстатков
	|		ПО ВводОстатковТовары.Ссылка = ВводОстатков.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ВводОстатковТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ВводОстатковТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ВводОстатковТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
	|		ПО ВводОстатковТовары.НомерГТД = НомераГТД.Ссылка
	|ГДЕ
	|	ВводОстатковТовары.Ссылка В(&МассивДокументов)";
	//|	И ВводОстатков.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции


#КонецОбласти

#Область СверкаОстатков

Функция ТекстЗапросаСверкаТоваровОрганизацийБУ_ТоварыНаВиртуальныхСкладах() Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТоварыОрганизацийБУОстатки.Организация,
	|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Товар,
	|	СУММА(ТоварыОрганизацийБУОстатки.КоличествоОстаток) КАК ОстатокБУ,
	|	0 КАК ОстатокВС
	|ПОМЕСТИТЬ вт_ПромежуточныеДанные
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций)) КАК ТоварыОрганизацийБУОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТоварыОрганизацийБУОстатки.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|		ПО ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
	|			И КлючиАналитикиУчетаНоменклатуры.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
	|ГДЕ
	|	ТоварыОрганизацийБУОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)),
	|	ТоварыОрганизацийБУОстатки.Организация,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладахОстатки.Организация,
	|	ТоварыНаВиртуальныхСкладахОстатки.Склад,
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура,
	|	0,
	|	СУММА(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток)
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций)) КАК ТоварыНаВиртуальныхСкладахОстатки
	|ГДЕ
	|	ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаВиртуальныхСкладахОстатки.Организация,
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура,
	|	ТоварыНаВиртуальныхСкладахОстатки.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ПромежуточныеДанные.Организация,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	вт_ПромежуточныеДанные.Склад,
	|	вт_ПромежуточныеДанные.Товар,
	|	вт_ПромежуточныеДанные.ОстатокБУ,
	|	вт_ПромежуточныеДанные.ОстатокВС,
	|	вт_ПромежуточныеДанные.ОстатокБУ - вт_ПромежуточныеДанные.ОстатокВС КАК Отклонение
	|ИЗ
	|	вт_ПромежуточныеДанные КАК вт_ПромежуточныеДанные";
	
	Возврат ТекстЗапроса;
КонецФункции	

Функция ТекстЗапросаСверкаДанныхБУ_ТоварыНаВиртуальныхСкладах(ВестиСкладскойУчетБУ) Экспорт
	
	// не используется
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

#КонецОбласти

#Область ЗапросыПоРасходнымДокументам

Функция ТекстЗапросаЭСФДокументОснование()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.СчетФактура
	|ПОМЕСТИТЬ вт_СчетаФактуры
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.Ссылка В(&МассивДокументов)
	|	И ЭСФ.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|	И ЭСФ.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СчетаФактуры.ЭСФ КАК ЭСФ,
	|	ЕСТЬNULL(СчетФактураПолученный.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ДокументОснования
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_СФ.СчетФактура
	|			ИЗ
	|				вт_СчетаФактуры КАК вт_СФ)
	|	И СчетФактураПолученный.НомерСтроки = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстЗапроса;
КонецФункции

//Все Псевдонимы полей запроса должны соответствовать именам реквизитов документа.
//Во всех запросах должно быть одинаковое количество полей и они должны идти в одинаковой последовательности
//
Функция ТекстЗапросаЭСФ(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Организация КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Ссылка.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	ВЫБОР
	|		КОГДА вт_ДокументОснования.ДокументОснование = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ вт_ДокументОснования.ДокументОснование.Склад
	|	КОНЕЦ КАК СкладПолучатель,
	|	Товары.Ссылка.Склад КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.ПризнакПроисхождения <> ""6""";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

// Выборка товаров для формирования ЭДВС с типом "Остатки" на основании входящего ЭСФ
//
Функция ТекстЗапросаЭСФОстаткиЭДВС(ПервыйЗапрос = Истина)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Ссылка.ДатаОборота КАК ДатаОборота,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка.Склад КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков
	|			ТОГДА Товары.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ Товары.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА Товары.КоэффициентПересчета <> 1
	|			ТОГДА Товары.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ Товары.ЕдиницаИзмеренияКод
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА Товары.КоэффициентПересчета <> 1
	|			ТОГДА Товары.Количество * Товары.КоэффициентПересчета
	|		ИНАЧЕ Товары.Количество
	|	КОНЕЦ КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	ВЫБОР
	|		КОГДА (Товары.КоэффициентПересчета <> 1 ИЛИ Товары.КоэффициентПересчета <> 0)
	|					И Товары.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|		ИНАЧЕ Товары.Цена
	|	КОНЕЦ КАК Цена,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	Товары.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО Товары.Ссылка = вт_ДокументОснования.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОНоменклатуреГСВС.Период КАК Период,
	|	СведенияОНоменклатуреГСВС.НоменклатураГСВС.КодГСВС КАК КодГСВС
	|ПОМЕСТИТЬ вт_СведенияОНоменклатуреГСВС
	|ИЗ
	|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
	|			&ДатаОкончания,
	|			НоменклатураГСВС.КодГСВС В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Товары.КодТНВЭД
	|				ИЗ
	|					вт_ТоварыЭСФ КАК Товары)) КАК СведенияОНоменклатуреГСВС
	|ГДЕ
	|	//СведенияОНоменклатуреГСВС.ПризнакАктивности
	|	СведенияОНоменклатуреГСВС.ПризнакУчетаНаВиртуальномСкладе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Товары.Ссылка КАК Ссылка,
	|	вт_Товары.Организация КАК Организация,
	|	вт_Товары.Дата КАК Дата,
	|	вт_Товары.Номер КАК Номер,
	|	вт_Товары.Комментарий КАК Комментарий,
	|	вт_Товары.СкладОтправитель КАК СкладОтправитель,
	|	вт_Товары.Товар КАК Товар,
	|	вт_Товары.ТоварНаименование КАК ТоварНаименование,
	|	вт_Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	вт_Товары.КодТНВЭД КАК КодТНВЭД,
	|	вт_Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	вт_Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	вт_Товары.Количество КАК Количество,
	|	вт_Товары.Сумма КАК Сумма,
	|	вт_Товары.Цена КАК Цена,
	|	вт_Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	вт_Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	вт_Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	вт_Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	вт_Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	вт_Товары.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе
	|ПОМЕСТИТЬ вт_СведенияОНоменклатуреИТоварыЭСФ
	|ИЗ
	|	вт_ТоварыЭСФ КАК вт_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
	|		ПО (СведенияОНоменклатуреГСВС.Период > вт_Товары.ДатаОборота)
	|			И (СведенияОНоменклатуреГСВС.КодГСВС = вт_Товары.КодТНВЭД)
	|ГДЕ
	|	вт_Товары.ПризнакУчетаНаВиртуальномСкладе = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.Ссылка.Склад КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|ГДЕ
	|	Товары.ПризнакУчетаНаВиртуальномСкладе = ЛОЖЬ
	|	И Товары.ДатаОборота < &ДатаПереходаНаВиртСклад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)),
	|	Товары.Ссылка,
	|	Товары.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	Товары.Ссылка.Склад КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.Сумма,
	|	Товары.Цена,
	|	"""",
	|	"""",
	|	Товары.ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	""Товары"",
	|	""ЭСФ"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_СведенияОНоменклатуреИТоварыЭСФ КАК Товары ";

	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Выборка товаров для формирования ЭДВС с типом "Остатки" на основании исходящего ЭСФ, 
// только для вида Дополнительный
Функция ТекстЗапросаЭСФИсходящийОстаткиЭДВС(ПервыйЗапрос = Истина)

ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.Направление КАК Направление,
	|	ЭСФ.Организация КАК Организация,
	|	ЭСФ.Номер КАК Номер,
	|	ЭСФ.Дата КАК Дата,
	|	ЕСТЬNULL(ОсновнойЭСФ.ДатаОборота, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ОсновнойЭСФДатаОборота,
	|	ЭСФ.Склад КАК СкладОтправитель,
	|	ВЫРАЗИТЬ(ЭСФ.Комментарий КАК СТРОКА(400)) КАК Комментарий
	|ПОМЕСТИТЬ вт_ЭСФ
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭСФ Как ОсновнойЭСФ
	|			ПО ЭСФ.СвязанныйЭСФ = ОсновнойЭСФ.Ссылка
	|ГДЕ
	|	ЭСФ.Ссылка В(&МассивДокументов)
	|	И ЭСФ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Исходящий)
	|	И ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	вт_ЭСФ.ОсновнойЭСФДатаОборота КАК ОсновнойЭСФДатаОборота,
	|	вт_ЭСФ.Организация КАК Организация,
	|	вт_ЭСФ.Дата КАК Дата,
	|	вт_ЭСФ.Номер КАК Номер,
	|	вт_ЭСФ.Комментарий КАК Комментарий,
	|	вт_ЭСФ.СкладОтправитель КАК СкладОтправитель,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	-1 * Товары.Количество КАК Количество,
	|	-1 * Товары.СуммаБезНалогов КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество <> 0 
	|			ТОГДА ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество) КАК ЧИСЛО(17, 2))
	|		ИНАЧЕ Товары.Цена
	|	КОНЕЦ КАК Цена,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков КАК ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета КАК КоэффициентПересчета,
	|	Товары.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.ЭСФ.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЭСФ КАК вт_ЭСФ
	|		ПО Товары.Ссылка = вт_ЭСФ.ЭСФ
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|	И вт_ЭСФ.ОсновнойЭСФДатаОборота < &ДатаПереходаНаВиртСклад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата КАК Дата,
	|	Товары.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	"""" КАК СтранаПроисхожденияТовара,
	|	"""" КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ЭСФ"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.ПустаяСсылка) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|";
	
	//|ГДЕ
	//|	Товары.ОсновнойЭСФДатаОборота < &ДатаПереходаНаВиртСклад";

	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;	

КонецФункции 

Функция ТекстЗапросаВнутреннееПотреблениеТоваров(ПервыйЗапрос = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВнутреннееПотреблениеТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,	
	|	ВнутреннееПотреблениеТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ВнутреннееПотреблениеТоваров.Дата КАК Дата,
	|	ВнутреннееПотреблениеТоваров.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Производство) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК ДокументОснование,
	|	ВнутреннееПотреблениеТоваров.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура КАК Товар,
	|	ВнутреннееПотреблениеТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ВнутреннееПотреблениеТоваровТовары.Упаковка КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВнутреннееПотреблениеТоваровТовары.КоличествоУпаковок КАК Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВнутреннееПотреблениеТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ПО ВнутреннееПотреблениеТоваровТовары.Ссылка = ВнутреннееПотреблениеТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ВнутреннееПотреблениеТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ВнутреннееПотреблениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ВнутреннееПотреблениеТоваровТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка В(&МассивДокументов)
	|	И ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВнутреннееПотреблениеТоваров.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ВнутреннееПотреблениеТоваров.Дата,
	|	ВнутреннееПотреблениеТоваров.Дата,
	|	ВнутреннееПотреблениеТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Производство),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	ВЫРАЗИТЬ(ВнутреннееПотреблениеТоваров.Комментарий КАК СТРОКА(400)),
	|	ВнутреннееПотреблениеТоваров.Ссылка,
	|	ВнутреннееПотреблениеТоваров.Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка),
	|	ВнутреннееПотреблениеТоваровТовары.Номенклатура,
	|	ВнутреннееПотреблениеТоваровТовары.Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное,
	|	"""",
	|	ДанныеНоменклатуры.КодТНВЭД.Код,
	|	ВнутреннееПотреблениеТоваровТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ,
	|	ВнутреннееПотреблениеТоваровТовары.КоличествоУпаковок,
	|	0,
	|	0,
	|	&КазахстанСсылкаСтранаПроисхождения,
	|	&КазахстанКодАльфа2,
	|	"""",
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	""Товары"",
	|	""ВнутреннееПотреблениеТоваров"",
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено),
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВнутреннееПотреблениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ПО ВнутреннееПотреблениеТоваровТовары.Ссылка = ВнутреннееПотреблениеТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ВнутреннееПотреблениеТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ВнутреннееПотреблениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ДанныеНоменклатуры.ЕдиницаИзмерения
	|				ИНАЧЕ ВнутреннееПотреблениеТоваровТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
	|		ПО ВнутреннееПотреблениеТоваровТовары.КатегорияЭксплуатации = КатегорииЭксплуатации.Ссылка
	|ГДЕ
	|	ВнутреннееПотреблениеТоваровТовары.Ссылка В(&МассивДокументов)
	|	И ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
	|";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСписаниеНедостачТоваров(ПервыйЗапрос = Истина)

	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеНедостачТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	СписаниеНедостачТоваров.Дата КАК ДатаИсходногоДокумента,
	|	СписаниеНедостачТоваров.Дата,
	|	СписаниеНедостачТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Прочие) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(СписаниеНедостачТоваров.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	СписаниеНедостачТоваровТовары.Ссылка КАК ДокументОснование,
	|	СписаниеНедостачТоваровТовары.Ссылка.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	СписаниеНедостачТоваровТовары.Номенклатура КАК Товар,
	|	СписаниеНедостачТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	СписаниеНедостачТоваровТовары.Количество,
	|	0 КАК Сумма,
	|	0 КАК Цена,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""СписаниеНедостачТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК СписаниеНедостачТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНедостачТоваров КАК СписаниеНедостачТоваров
	|		ПО СписаниеНедостачТоваровТовары.Ссылка = СписаниеНедостачТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО СписаниеНедостачТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО ДанныеНоменклатуры.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	СписаниеНедостачТоваровТовары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПорчаТоваров(ПервыйЗапрос = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорчаТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	ПорчаТоваров.Дата КАК ДатаИсходногоДокумента,
	|	ПорчаТоваров.Дата,
	|	ПорчаТоваров.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Порча) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	ВЫРАЗИТЬ(ПорчаТоваровТовары.Ссылка.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	ПорчаТоваров.Ссылка КАК ДокументОснование,
	|	ПорчаТоваров.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ПорчаТоваровТовары.Номенклатура КАК Товар,
	|	ПорчаТоваровТовары.Характеристика КАК Характеристика,
	|	ДанныеНоменклатуры.НаименованиеПолное КАК ТоварНаименование,
	|	"""" КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеНоменклатуры.КодТНВЭД.Код КАК КодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
	|			ТОГДА ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ
	|		ИНАЧЕ ДанныеЕдиницыИзмерения.КодЭСФ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ПорчаТоваровТовары.Количество,
	|	0 КАК Сумма,
	|	ПорчаТоваровТовары.Цена КАК Цена,
	|	&КазахстанКодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	&КазахстанСсылкаСтранаПроисхождения КАК СтранаПроисхожденияТовара,
	|	"""" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПорчаТоваров"" КАК ИмяДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПошлинВС.НеУстановлено) КАК ТипПошлины,
	|	ЗНАЧЕНИЕ(Перечисление.ТипПроисхожденияТоваровВС.ПустаяСсылка) КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров КАК ПорчаТоваров
	|		ПО ПорчаТоваров.Ссылка = ПорчаТоваровТовары.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ДанныеНоменклатуры
	|		ПО ПорчаТоваровТовары.Номенклатура = ДанныеНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО ДанныеНоменклатуры.ЕдиницаИзмерения = ДанныеЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ПорчаТоваровТовары.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыФункции

Функция ПолучитьЗначениеПоУмолчанию(ИмяЗначения) Экспорт
	Возврат БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию(ИмяЗначения);
КонецФункции

Функция ПолучитьПустоеЗначениеИсточниковПроисхождения() Экспорт
	Возврат Справочники.ИсточникиПроисхождения.ПустаяСсылка();
КонецФункции

Функция ПолучитьВиртуальныйСклад(ДокументСсылка) Экспорт	
	ВиртуальныйСклад = Справочники.ВиртуальныеСклады.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		Если ЭСФСерверПереопределяемый.ЕстьРеквизитДокумента("Склад", ДокументСсылка.Метаданные()) Тогда
			
			СтруктураРезультата = ЭСФСерверПереопределяемый.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Склад, Организация");
			
			Склад 		= СтруктураРезультата.Склад;
			Организация = СтруктураРезультата.Организация;
			
			ВиртуальныйСклад = ВССервер.ПолучитьСоответствиеСклада(Склад, Организация);
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВиртуальныйСклад;
	
КонецФункции

Функция ПолучитьПрефиксВидаДокумента(ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "ТаможеннаяДекларацияИмпорт" Тогда
		ПрефиксНомера = "ДТ"
	ИначеЕсли ИмяДокумента = "ЗаявлениеОВвозеТоваров" Тогда
		ПрефиксНомера = "ЗВ"; 	
	ИначеЕсли ИмяДокумента = "ВыпускПродукции" Тогда
		ПрефиксНомера = "ВП";
	ИначеЕсли ИмяДокумента = "ПроизводствоБезЗаказа" Тогда
		ПрефиксНомера = "ПБЗ";
	ИначеЕсли ИмяДокумента = "ОприходованиеИзлишковТоваров" Тогда
		ПрефиксНомера = "ОИТ";
	ИначеЕсли ИмяДокумента = "ПрочееОприходованиеТоваров" Тогда
		ПрефиксНомера = "ПОТ";
	ИначеЕсли ИмяДокумента = "ВводОстатков" Тогда
		ПрефиксНомера = "ВО";
	ИначеЕсли ИмяДокумента = "ПоступлениеОтПереработчика" Тогда
		ПрефиксНомера = "ПП";
	ИначеЕсли ИмяДокумента = "ОтчетПереработчика" Тогда
		ПрефиксНомера = "ОП";
	ИначеЕсли ИмяДокумента = "СписаниеНедостачТоваров" Тогда
		ПрефиксНомера = "СНТ";
	ИначеЕсли ИмяДокумента = "СписаниеИзЭксплуатации" Тогда
		ПрефиксНомера = "СЭ";
	ИначеЕсли ИмяДокумента = "ПередачаМатериаловВПроизводство" Тогда
		ПрефиксНомера = "ПМП";
	ИначеЕсли ИмяДокумента = "ПересортицаТоваров" Тогда
		ПрефиксНомера = "ПРТ";
	ИначеЕсли ИмяДокумента = "СборкаТоваров" Тогда
		ПрефиксНомера = "СТ";
	ИначеЕсли ИмяДокумента = "ВнутреннееПотреблениеТоваров" Тогда
		ПрефиксНомера = "ВПТ";
	ИначеЕсли ИмяДокумента = "ПорчаТоваров" Тогда
		ПрефиксНомера = "ПЧТ";
	ИначеЕсли ИмяДокумента = "ПеремещениеТоваров" Тогда
		ПрефиксНомера = "ПТ";
	ИначеЕсли ИмяДокумента = "ЭСФ" Тогда
		ПрефиксНомера = "ЭСФ";
	ИначеЕсли ИмяДокумента = "ВозвратМатериаловИзПроизводства" Тогда
		ПрефиксНомера = "ВМП";
	ИначеЕсли ИмяДокумента = "ДвижениеПродукцииИМатериалов" Тогда
		ПрефиксНомера = "ДПМ";
	Иначе
		ПрефиксНомера = "";	
	КонецЕсли;	
	
	Возврат ПрефиксНомера;	
	
КонецФункции	

Функция ПроверитьСоответствиеСкладовИВиртуальныхСкладов(ПараметрыПроверки) Экспорт 
	
	Запрос 			= Новый Запрос;
	
	//Если ПараметрыПроверки.СпособЗаполнения = "ТоварамОрганизацииБУ" Тогда
		Запрос.Текст 	= 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КлючиАналитикиУчетаНоменклатуры.Склад,
		|	ТоварыОрганизацийБУОстатки.Организация,
		|   &ПустоеПодразделение КАК СтруктурноеПодразделение,
		|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ДатаОстатка, Организация В (&МассивОрганизаций)) КАК ТоварыОрганизацийБУОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ТоварыОрганизацийБУОстатки.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО ТоварыОрганизацийБУОстатки.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И КлючиАналитикиУчетаНоменклатуры.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|ГДЕ
		|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад ЕСТЬ NULL ";	
	//Иначе
	//	// СпособЗаполнения ПоДаннымБУ не предусмотрен в УПК
	//КонецЕсли;
	
	ДатаОстатка 	= КонецДня(НачалоДня(ПараметрыПроверки.ДатаПереходаНаУчетТоваровВС) - 1);
	Запрос.УстановитьПараметр("ДатаОстатка"			, Новый Граница(ДатаОстатка, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МассивОрганизаций"	, ПараметрыПроверки.МассивОрганизаций);
	Запрос.УстановитьПараметр("ПустоеПодразделение"	, ВСКлиентСерверПереопределяемый.ПолучитьПустуюСсылкуПодразделения());
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьКодЕдиницыИзмерения(ЕдиницаИзмерения, Товар) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КлассификаторЕдиницИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
		|       	ТОГДА КлассификаторЕдиницИзмерения.ЕдиницаИзмерения.КодЭСФ
		|       ИНАЧЕ КлассификаторЕдиницИзмерения.КодЭСФ
		|   КОНЕЦ КАК КодЭСФ
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
		|ГДЕ
		|	КлассификаторЕдиницИзмерения.Ссылка = &ЕдиницаИзмерения";
		
		Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА КлассификаторЕдиницИзмерения.Ссылка ЕСТЬ NULL 
		|       	ТОГДА """"
		|		КОГДА КлассификаторЕдиницИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка) 
		|       	ТОГДА КлассификаторЕдиницИзмерения.ЕдиницаИзмерения.КодЭСФ
		|       ИНАЧЕ КлассификаторЕдиницИзмерения.КодЭСФ
		|   КОНЕЦ КАК КодЭСФ
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
		|   	ПО Номенклатура.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
		|ГДЕ
		|	Номенклатура.Ссылка = &Номенклатура";
		
		Запрос.УстановитьПараметр("Номенклатура", Товар);
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЕдиницаИзмеренияКод = ВыборкаДетальныеЗаписи.КодЭСФ;	
		Возврат ЕдиницаИзмеренияКод;
	Иначе 
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКодСтраныПроисхожденияТовара(СтранаПроисхожденияТовара) Экспорт
	
	СтранаПроисхожденияТовараКод = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтранаПроисхожденияТовара,"КодАльфа2");
	
	Возврат СтранаПроисхожденияТовараКод;
	
КонецФункции

Функция ПолучитьПредопределеннуюСтрануКазахстан() Экспорт
	Возврат Справочники.СтраныМира.Казахстан;	
КонецФункции

Функция ОпределитьНомерПозицииВДекларацииИлиЗаявленииДляИсточникаПроисхождения(ИсточникПроисхождения) Экспорт
	
	Структура=Новый Структура;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
	|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС,
	|	ИсточникиПроисхождения.ДатаСертификатаПроисхожденияТовара,
	|	ИсточникиПроисхождения.МеткаТовара,
	|	ИсточникиПроисхождения.СтранаПроисхожденияТовара.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	ИсточникиПроисхождения.КодТНВЭД,
	|	ИсточникиПроисхождения.ГСВС,
	|	ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС,
	|	ИсточникиПроисхождения.ТипПошлины
	|ИЗ
	|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&Дата, ) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО ИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС
	|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
	|ГДЕ
	|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения";
	
	Запрос.УстановитьПараметр("ИсточникПроисхождения", ИсточникПроисхождения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Структура.Вставить("НомерПозицииВДекларацииИлиЗаявлении",ВыборкаДетальныеЗаписи.НомерПозицииВДекларацииИлиЗаявлении);
		Структура.Вставить("НомерЗаявленияВРамкахТС",ВыборкаДетальныеЗаписи.НомерЗаявленияВРамкахТС);
		Возврат Структура;
	Иначе 
		Возврат Новый Структура("НомерПозицииВДекларацииИлиЗаявлении,НомерЗаявленияВРамкахТС","","");
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеИсточникаПроисхождения(Дата,ИсточникПроисхождения,Склад = Неопределено, ДляДокументаЭСФ, ДляДокументаСНТ = Ложь) Экспорт
	
	Структура = Новый Структура("НомерПозицииВДекларацииИлиЗаявлении, НомерЗаявленияВРамкахТС, ФизическаяМетка, КодТНВЭД, ТоварНаименованиеВРамкахТС, ТипПроисхождения, ГСВС, ПризнакПроисхождения, ИдентификаторТовара, НомерГТД, ТипПошлины, СтранаПроисхожденияТовара, СтранаПроисхожденияТовараКод, ДатаСертификатаПроисхождения, ДополнительныйИдентификатор, СоставнойКодГСВС");
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
	|	ИсточникиПроисхождения.Номенклатура,
	|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ИсточникиПроисхождения.МеткаТовара КАК ФизическаяМетка,
	|	ИсточникиПроисхождения.КодТНВЭД,
	|	ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС,
	|	ИсточникиПроисхождения.ТипПроисхождения,
	|	ЕстьNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий, Ложь) КАК ГСВСВходитВПеречень,
	|	ИсточникиПроисхождения.ГСВС,
	|	ИсточникиПроисхождения.ТипПошлины,
	|	ИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ИсточникиПроисхождения.СтранаПроисхожденияТовара.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	ИсточникиПроисхождения.ДатаСертификатаПроисхожденияТовара КАК ДатаСертификатаПроисхождения,
	|	ИсточникиПроисхождения.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	|	ЕстьNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, Ложь) КАК ПризнакУчетаНаВиртуальномСкладеГСВС,
	|	ЕстьNULL(ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе, Ложь) КАК ПризнакУчетаНаВиртуальномСкладе,
	|	%ТекстПоляУслугаСпрНоменклатура
	|ИЗ
	|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(&Дата, ) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО ИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС
	|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ИсточникиПроисхождения.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ИсточникиПроисхождения.Ссылка = &ИсточникПроисхождения";
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ТекстПоляУслугаСпрНоменклатура", "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	
	Запрос.Текст = ТекстЗапроса;	
	Запрос.УстановитьПараметр("ИсточникПроисхождения", ИсточникПроисхождения);
	Запрос.УстановитьПараметр("Дата", Дата);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Структура,ВыборкаДетальныеЗаписи,,);
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ГСВС) Тогда
			Структура.СоставнойКодГСВС = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(ВыборкаДетальныеЗаписи.ГСВС, "Наименование");
		КонецЕсли;

		//Заполнение признака происхождения
		
		Если ВыборкаДетальныеЗаписи.Услуга Тогда
			Структура.ПризнакПроисхождения = "6";
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТипПроисхождения) ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень) Тогда
			
			Структура.ПризнакПроисхождения = "5";
			
			ТекстОшибки = НСтр(
			"ru = 'Для товара ""%1"" не указан Тип происхождения или отсутствуют данные по ГСВС в источнике происхождения.
			|По умолчанию графа ""Признак происхождения"" заполнена значением ""5"", так как данная графа обязательна к заполнению. 
			|Настоятельно рекомендуем проверить, при необходимости, скорректировать Признак.'");
			
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
			ТекстОшибки,
			ВыборкаДетальныеЗаписи.Номенклатура);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,, "Объект");	
			
			
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Импорт И ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "1";
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Импорт И НЕ ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "2";
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Производство И ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "3";
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипПроисхождения = Перечисления.ТипПроисхожденияТоваровВС.Производство И НЕ ВыборкаДетальныеЗаписи.ГСВСВходитВПеречень Тогда
			Структура.ПризнакПроисхождения = "4";
		Иначе
			Структура.ПризнакПроисхождения = "5";
		КонецЕсли;
		
		//заполнение ИдентификатораТовара
		Если ДляДокументаЭСФ Тогда
			
			Если ВыборкаДетальныеЗаписи.ПризнакУчетаНаВиртуальномСкладе Тогда
				КодГСВС = "";
				ФизическаяМетка = "";
				ИдентификаторСклада = "";
				КлючевыеПоляЗаполнены = Истина;
				СписокНезаполненныхПолей = "";
				ДополнительныйИдентификатор = "";
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ГСВС) Тогда
					КодГСВС = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(ВыборкаДетальныеЗаписи.ГСВС, "Наименование");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ФизическаяМетка) Тогда
					ФизическаяМетка = "[" + ВыборкаДетальныеЗаписи.ФизическаяМетка + "]";
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДополнительныйИдентификатор) Тогда
					ДополнительныйИдентификатор = "<" + Формат(ВыборкаДетальныеЗаписи.ДополнительныйИдентификатор,"ЧГ=") + ">";
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Склад) Тогда
					ИдентификаторСклада = Формат(ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(Склад, "ИдентификаторСклада"), "ЧГ=");
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(КодГСВС) Тогда
					КлючевыеПоляЗаполнены = Ложь;
					СписокНезаполненныхПолей = СписокНезаполненныхПолей + "Код ГСВС, ";
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ИдентификаторСклада) И НЕ ДляДокументаСНТ Тогда
					КлючевыеПоляЗаполнены = Ложь;
					СписокНезаполненныхПолей = СписокНезаполненныхПолей + "Идентификатор склада";
				КонецЕсли;
				
				Если КлючевыеПоляЗаполнены Тогда
					ИдентификаторТовара = ?(НЕ ДляДокументаСНТ,"%1%2%3(%4)", "%1%2%3");
					ИдентификаторТовара = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ИдентификаторТовара, КодГСВС, ФизическаяМетка, ДополнительныйИдентификатор, ИдентификаторСклада); 
					Структура.ИдентификаторТовара = ИдентификаторТовара;
				Иначе
					ИдентификаторТовара = "";
					ТекстОшибки = НСтр("ru='Не удалось заполнить поле ""Идентификатор товара"" по причине: не заполнены поля: %2.' ");
					ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, , СписокНезаполненныхПолей);
					ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки,,, "Объект");	
				КонецЕсли;
			Иначе
				ИдентификаторТовара = "1";
			КонецЕсли;
			
			Структура.ИдентификаторТовара = ИдентификаторТовара;

		КонецЕсли;
		
		Возврат Структура;
	Иначе Возврат Новый Структура("НомерПозицииВДекларацииИлиЗаявлении, НомерЗаявленияВРамкахТС, ФизическаяМетка, КодТНВЭД, ТоварНаименованиеВРамкахТС, ТипПроисхождения, ГСВС, ПризнакПроисхождения, ИдентификаторТовара, НомерГТД, ТипПошлины, СтранаПроисхожденияТовара, СтранаПроисхожденияТовараКод, ДатаСертификатаПроисхождения, ДополнительныйИдентификатор, СоставнойКодГСВС", "", "", "", "", "", Перечисления.ТипПроисхожденияТоваровВС.ПустаяСсылка(), Справочники.НоменклатураГСВС.ПустаяСсылка(), Неопределено, "", "", Перечисления.ТипыПошлинВС.ПустаяСсылка(), "", "", Дата(1,1,1), 0, "");
	КонецЕсли;

КонецФункции

Функция ПолучитьНаименованиеТовара(Товар) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(200))) <> """"
	|			ТОГДА Номенклатура.НаименованиеПолное
	|		ИНАЧЕ Номенклатура.Наименование
	|	КОНЕЦ КАК НаименованиеТовара
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Товар";
	
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НаименованиеТовара = "";
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		НаименованиеТовара = ВыборкаДетальныеЗаписи.НаименованиеТовара;	
		
	КонецЕсли;
	
	Возврат НаименованиеТовара;
		
КонецФункции

Функция НедопустимыйУчетныйДокумент(Объект) Экспорт
	
	ВозвращаемоеЗначение = Ложь;
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ЭСФ") И Объект.Направление = Перечисления.НаправленияЭСФ.Исходящий И
		Объект.Вид <> Перечисления.ВидыЭСФ.Дополнительный Тогда
		
		ТекстОшибки = НСтр("ru='Для исходящего ""%1"" не может быть введен Электронный документ ВС.'");
		ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект);
	
		ВозвращаемоеЗначение = Истина;
	ИначеЕсли  Типзнч(Объект) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") И 	
		Объект.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика Тогда
		
		ТекстОшибки = НСтр("ru='Для документа ""%1"" с хозяйственной операцией <%2> не может быть введен Электронный документ ВС.'");
		ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект, Объект.ХозяйственнаяОперация);
	
		ВозвращаемоеЗначение = Истина;
		
	КонецЕсли;
	
	Если ВозвращаемоеЗначение Тогда
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;	
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция НаличиеЭДВС(ДокументСсылка) Экспорт 
	
	НайденныеДокументыЭДВС 		= Новый Массив;
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда 
		Запрос = Новый Запрос;
		
		// Установим параметры запроса
		Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
		Запрос.УстановитьПараметр("ВидОперации"	  , Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		
		Запрос.Текст =   
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СчетФактураПолученныйДокументыОснования.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДокОснованияТЧ
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|ГДЕ
		|	СчетФактураПолученныйДокументыОснования.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПТУ.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ДокументыПТУ
		|ИЗ
		|	ВТ_ДокОснованияТЧ КАК ДокОснованияТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПТУ
		|		ПО ДокОснованияТЧ.ДокументОснование = ПТУ.Ссылка
		|ГДЕ
		|	ПТУ.ХозяйственнаяОперация = &ВидОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектронныйДокументВС.Ссылка КАК ЭДВС,
		|	ВТ_ДокументыПТУ.Ссылка КАК ПТУ
		|ИЗ
		|	ВТ_ДокументыПТУ КАК ВТ_ДокументыПТУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
		|		ПО ВТ_ДокументыПТУ.Ссылка = ЭлектронныйДокументВС.ДокументОснование
		|ГДЕ
		|	НЕ ЭлектронныйДокументВС.ДокументОснование ЕСТЬ NULL";
		
		
		ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаИзЗапроса.Следующий() Цикл
			НайденныеДокументыЭДВС.Добавить(ВыборкаИзЗапроса.ЭДВС);
		КонецЦикла;

	КонецЕсли;

	Возврат НайденныеДокументыЭДВС;	

КонецФункции

Функция НаличиеЭСФ(Объект) Экспорт
	
	ЕстьСвязанныеЭСФЭлектронные = Ложь;
	
	Если Типзнч(Объект) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаОснований.Ссылка КАК СчетФактур
		|ПОМЕСТИТЬ вт_СФ
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
		|ГДЕ
		|	ТаблицаОснований.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И ТаблицаОснований.ДокументОснование = &Основание
		|	И (ТаблицаОснований.Ссылка.Организация = &Организация
		|			ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	АктуальныеЭСФ.ЭСФ КАК ЭСФ
		|ИЗ
		|	РегистрСведений.АктуальныеЭСФ КАК АктуальныеЭСФ
		|ГДЕ
		|	АктуальныеЭСФ.СчетФактура В
		|			(ВЫБРАТЬ
		|				вт_СФ.СчетФактур КАК СчетФактур
		|			ИЗ
		|				вт_СФ КАК вт_СФ)";
		
		Запрос.УстановитьПараметр("Основание",   Объект);
		Запрос.УстановитьПараметр("Организация", ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(Объект,"Организация"));
		
		ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
		Если ВыборкаЗапроса.Следующий() Тогда
			ЕстьСвязанныеЭСФЭлектронные = Истина;
			
			ТекстОшибки = НСтр("ru='На основании документа ""%1"" уже введен электронный ""%2""'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, Объект, ВыборкаЗапроса.ЭСФ);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЕстьСвязанныеЭСФЭлектронные;

КонецФункции

Процедура СкорректироватьМассивДокументовОснований(ДокументыОснования) Экспорт
	
	//проверка на наличие документов "Поступление ТМЗ и услуг" с неподходящими видами операции
	Если ТипЗнч(ДокументыОснования) = Тип("Массив") Тогда
		
		МассивУдаляемыхДокументов = Новый Массив;
		
		Для Каждого ДокументОснование Из ДокументыОснования Цикл
			Если НедопустимыйУчетныйДокумент(ДокументОснование) ИЛИ НаличиеЭСФ(ДокументОснование)Тогда
				МассивУдаляемыхДокументов.Добавить(ДокументОснование);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ДокументОснование Из МассивУдаляемыхДокументов Цикл
			Индекс = ДокументыОснования.Найти(ДокументОснование);
			ДокументыОснования.Удалить(Индекс);
		КонецЦикла;
	КонецЕсли;
    
КонецПроцедуры

//Запоняет документ - основание документа ЭДВС 
Функция ЗаполнитьДокументОснованиеПоДокументуЭДВС(ОбъектЭДВС, ИмяДокумента) Экспорт
		
	ДанныеЭДВС = ВССервер.ПодготовитьДанныеДляЗаполненияПервичныхДокументовИзЭДВС(ОбъектЭДВС);
	
	НовыйДокумент = Документы[ИмяДокумента].СоздатьДокумент();
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Реквизиты"  	 , ДанныеЭДВС.ТаблицаРеквизиты);	
	Запрос.УстановитьПараметр("ТаблицаТовары", ДанныеЭДВС.ТаблицаТовары);

	СкладТабличнойЧасти = Неопределено;
	//ДекларацияНаТовары
	НоваяСтрокаРазделы 	= Неопределено;
	Если ИмяДокумента = "ТаможеннаяДекларацияИмпорт" Тогда
		Запрос.Текст 		 			= ДанныеДляЗаполненияТаможеннаяДекларацияИмпорт();
		ТабличнаяЧастьДокумента 		= НовыйДокумент.Товары;
		НоваяСтрокаРазделы 				= НовыйДокумент.Разделы.Добавить();
		НоваяСтрокаРазделы.НомерРаздела = 1;
		СкладТабличнойЧасти  			= ПолучитьОбычныйСклад(ОбъектЭДВС.СкладПолучатель, ОбъектЭДВС.Организация);
		
	ИначеЕсли ИмяДокумента = "ЗаявлениеОВвозеТоваров" Тогда
		Запрос.Текст 		 	= ДанныеДляЗаполненияЗаявлениеОВвозеТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		СкладТабличнойЧасти  	= ПолучитьОбычныйСклад(ОбъектЭДВС.СкладПолучатель, ОбъектЭДВС.Организация);
		
	//ПеремещениеТоваров	
	ИначеЕсли ИмяДокумента = "ПеремещениеТоваров" Тогда
		Запрос.Текст 		 	= ДанныеДляЗаполненияПеремещениеТоваров(ОбъектЭДВС.Организация = ОбъектЭДВС.ОрганизацияПолучатель);
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		
	//Детализация	
	ИначеЕсли ИмяДокумента = "ПересортицаТоваров" Тогда
		Запрос.Текст 		 	= ДанныеДляЗаполненияПересортицаТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		Запрос.УстановитьПараметр("ТаблицаИсходныеТовары", ДанныеЭДВС.ТаблицаИсходныеТовары);
		
	ИначеЕсли ИмяДокумента = "СборкаТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияСборкаТоваров();
		Если ОбъектЭДВС.ВидДетализации = Перечисления.ВидДетализации.Комплектация Тогда
			ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
			Запрос.УстановитьПараметр("ТаблицаКомплектующие", ДанныеЭДВС.ТаблицаИсходныеТовары);
			Запрос.УстановитьПараметр("ТаблицаТовар", ДанныеЭДВС.ТаблицаТовары);
		Иначе
			ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
			Запрос.УстановитьПараметр("ТаблицаКомплектующие", ДанныеЭДВС.ТаблицаТовары);
			Запрос.УстановитьПараметр("ТаблицаТовар", ДанныеЭДВС.ТаблицаИсходныеТовары);
		КонецЕсли;
		
	//Остатки	
	ИначеЕсли ИмяДокумента = "ОприходованиеИзлишковТоваров" Тогда
		Запрос.Текст 		 	= ДанныеДляЗаполненияОприходованиеИзлишковТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "ПрочееОприходованиеТоваров" Тогда
		Запрос.Текст 		 	= ДанныеДляЗаполненияПрочееОприходованиеТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		
	
	//Списание	
	ИначеЕсли ИмяДокумента = "СписаниеНедостачТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияСписаниеНедостачТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "ВнутреннееПотреблениеТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияВнутреннееПотреблениеТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;

	ИначеЕсли ИмяДокумента = "ПорчаТоваров" Тогда
		Запрос.Текст = ДанныеДляЗаполненияПорчаТоваров();
		ТабличнаяЧастьДокумента = НовыйДокумент.Товары;
		
	
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ЗаполнитьЗначенияСвойств(НовыйДокумент, Результат[Результат.Количество()-2].Выгрузить()[0]);
	ТаблицаТовары = Результат[Результат.Количество()-1].Выгрузить();
	
	Для Каждого Товар Из ТаблицаТовары Цикл
		СтрокаТабличнойЧасти = ТабличнаяЧастьДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Товар);
		Если СкладТабличнойЧасти <> Неопределено Тогда
			СтрокаТабличнойЧасти.Склад = СкладТабличнойЧасти;
		КонецЕсли;	
	КонецЦикла;
	
	Если НоваяСтрокаРазделы <> Неопределено Тогда
		НоваяСтрокаРазделы.ТаможеннаяСтоимость =  ТабличнаяЧастьДокумента.Итог("ТаможеннаяСтоимость");
	КонецЕсли;
	
	ЗаписатьДокумент(НовыйДокумент);
	
	НовыйДокумент.Записать();
	
	Возврат НовыйДокумент.Ссылка;
	
	Возврат Неопределено;
КонецФункции
	
Процедура ЗаписатьДокумент(ДокументОбъект)
	Попытка
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось создать документ!'");
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения)
	КонецПопытки;	
КонецПроцедуры

Функция ПолучитьПараметрыОбработкиТабличнойЧасти(ИмяТабличнойЧасти, СинонимТабличнойЧасти, Объект, Форма) Экспорт
	
	ПараметрыОбработки = Новый Структура;
	
	ПараметрыОбработки.Вставить("АдресХранилищаТабличнойЧасти", ПоместитьТабличнуюЧастьВоВременноеХранилищеНаСервере(ИмяТабличнойЧасти, Объект, Форма));
	ПараметрыОбработки.Вставить("ДокументСсылка"              , Объект.Ссылка);
	ПараметрыОбработки.Вставить("ДокументДата"                , Объект.Дата);
	ПараметрыОбработки.Вставить("ДокументВалюта"              , Справочники.Валюты.ПустаяСсылка());
	ПараметрыОбработки.Вставить("ДокументКурс"                , 1);
	ПараметрыОбработки.Вставить("ДокументКратность"           , 1);
	ПараметрыОбработки.Вставить("ДокументСуммаВключаетНДС"    , Ложь);
	ПараметрыОбработки.Вставить("ДокументУчитыватьНДС"        , Ложь);
	ПараметрыОбработки.Вставить("ДокументНДСВключенВСтоимость", Ложь);
	ПараметрыОбработки.Вставить("ИмяТаблицы"                  , ИмяТабличнойЧасти);
	ПараметрыОбработки.Вставить("Заголовок"                   , СинонимТабличнойЧасти);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ГСВС");
	СтруктураРеквизитов.Вставить("СоставнойКодГСВС");
	СтруктураРеквизитов.Вставить("ФизическаяМетка");
	СтруктураРеквизитов.Вставить("ПризнакПроисхождения");
	СтруктураРеквизитов.Вставить("СтранаПроисхожденияТовара");
	СтруктураРеквизитов.Вставить("СтранаПроисхожденияТовараКод");
	СтруктураРеквизитов.Вставить("КодТНВЭД");
	СтруктураРеквизитов.Вставить("ТипПошлины");
	СтруктураРеквизитов.Вставить("ТипПроисхождения");
	СтруктураРеквизитов.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитов.Вставить("ЕдиницаИзмеренияКод");
	СтруктураРеквизитов.Вставить("Количество");
	СтруктураРеквизитов.Вставить("Цена");
	СтруктураРеквизитов.Вставить("Сумма");
	СтруктураРеквизитов.Вставить("ВозможенЭкспорт");
	СтруктураРеквизитов.Вставить("НомерЗаявленияВРамкахТС");	
	
	СтруктураСвязанныхРеквизитов = Новый Структура;	
	
	ПараметрыОбработки.Вставить("СтруктураРеквизитов", СтруктураРеквизитов);
	ПараметрыОбработки.Вставить("СтруктураСвязанныхРеквизитов", СтруктураСвязанныхРеквизитов);
	
	ВидимыеКолонки = Новый Массив;
	ПолучитьВидимыеКолонкиТабличнойЧасти(Форма.Элементы[ИмяТабличнойЧасти], Форма.Элементы[ИмяТабличнойЧасти].ПутьКДанным + ".", ВидимыеКолонки);
	ПараметрыОбработки.Вставить("ВидимыеКолонки", ВидимыеКолонки);

	Возврат ПараметрыОбработки;
	
КонецФункции

Функция ПоместитьТабличнуюЧастьВоВременноеХранилищеНаСервере(ИмяТабличнойЧасти, Объект, Форма)
	
	Возврат ПоместитьВоВременноеХранилище(Объект[ИмяТабличнойЧасти].Выгрузить(), Форма.УникальныйИдентификатор);

КонецФункции

Функция ПолучитьВидимыеКолонкиТабличнойЧасти(ЭлементТабличнаяЧасть, ПутьКДаннымТаблицы, МассивКолонок)
	
	Для Каждого Элемент Из ЭлементТабличнаяЧасть.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			ПолучитьВидимыеКолонкиТабличнойЧасти(Элемент, ПутьКДаннымТаблицы, МассивКолонок);
		ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") И Элемент.Видимость Тогда
			МассивКолонок.Добавить(СтрЗаменить(Элемент.ПутьКДанным, ПутьКДаннымТаблицы, ""));
		КонецЕсли;
	КонецЦикла;

КонецФункции

Процедура ОбработкаОповещенияОбработкиТабличнойЧастиНаСервере(Объект, Форма, Параметры) Экспорт

	ТаблицаОбработки  = ПолучитьИзВременногоХранилища(Параметры.АдресОбработаннойТабличнойЧастиВХранилище);
	ИмяТабличнойЧасти = Параметры.ИмяТаблицы;
	Для Каждого Строка Из ТаблицаОбработки Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("НомерСтроки", Строка.НомерСтроки);
		СтрокаТаблицы = Объект[ИмяТабличнойЧасти].НайтиСтроки(ПараметрыОтбора);
		Если СтрокаТаблицы.Количество() <> 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы[0], Строка);
		Иначе
			СтрокаТаблицы = Объект[ИмяТабличнойЧасти].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Строка);
		КонецЕсли;	
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьЗначениеИзИП(Ссылка,ЭлементСтруктуры)
	
	Если ЭлементСтруктуры = "ДатаСертификатаПроисхождения" Тогда
		ЗначениеЭлемента =  Ссылка[ЭлементСтруктуры +"Товара"];
	ИначеЕсли ЭлементСтруктуры = "ФизическаяМетка" Тогда
		ЗначениеЭлемента =  Ссылка["МеткаТовара"];
	ИначеЕсли  ЭлементСтруктуры = "СтранаПроисхожденияТовараКод" Тогда
		ЗначениеЭлемента = Ссылка.СтранаПроисхожденияТовара.КодАльфа2;
	Иначе
		ЗначениеЭлемента =  Ссылка[ЭлементСтруктуры];
	КонецЕсли;	
	Возврат ЗначениеЭлемента
	
КонецФункции

Функция ПолучитьРеквизитыОрганизации(Организация, ОтправительПолучатель, СтруктурноеПодразделение = Неопределено) Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить(ОтправительПолучатель+"Наименование", "");
	СтруктураДанных.Вставить(ОтправительПолучатель+"Идентификатор", "");
	СтруктураДанных.Вставить(ОтправительПолучатель+"Адрес", "");

		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(450))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(450))
	|		ИНАЧЕ Организации.Наименование
	|	КОНЕЦ КАК Наименование,
	|	Организации.ИНН КАК ИдентификационныйНомер
	|ПОМЕСТИТЬ ОбъектыДляПоискаАдресов
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбъектыДляПоискаАдресов.Объект КАК Объект,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(400)) КАК Адрес,
	|	ОбъектыДляПоискаАдресов.ИдентификационныйНомер КАК Идентификатор,
	|	ОбъектыДляПоискаАдресов.Наименование КАК Наименование
	|ИЗ
	|	ОбъектыДляПоискаАдресов КАК ОбъектыДляПоискаАдресов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И ОбъектыДляПоискаАдресов.Объект = КонтактнаяИнформация.Ссылка
	|			И (КонтактнаяИнформация.Вид В (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации)))";
	
	РезультатЗапроса		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий()Тогда
		СтруктураДанных.Вставить(ОтправительПолучатель+"Наименование", ВыборкаДетальныеЗаписи.Наименование);
		СтруктураДанных.Вставить(ОтправительПолучатель+"Идентификатор", ВыборкаДетальныеЗаписи.Идентификатор);
		СтруктураДанных.Вставить(ОтправительПолучатель+"Адрес", ВыборкаДетальныеЗаписи.Адрес);
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ТипСправочникаДляПодбораПоУмолчанию() Экспорт
	Возврат Тип("СправочникСсылка.Номенклатура") 	
КонецФункции

Функция ТекстПоляУслуга() Экспорт
	
	Текст = "
	|   , 
	|	ВЫБОР 
	|		КОГДА ОстаткиГТД.Номенклатура ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ОстаткиГТД.Номенклатура.Услуга
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Услуга";
	
	Возврат Текст;
	
КонецФункции

Функция НайтиЭДВСИЗаполнитьСсылку(ОбъектСсылка, ЭлементыСсылкаНаЭДВС, СписокЭДВС) Экспорт
	
КонецФункции

Функция ПолучитьЕдиницуИзмеренияОтбора(СтрокаТЧ) Экспорт 
	
	Если СтрокаТЧ.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
		ЕдиницаИзмеренияОтбора = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Товар, "ЕдиницаИзмерения");
	ИначеЕсли ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ЕдиницаИзмерения, "ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
		ЕдиницаИзмеренияОтбора = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ЕдиницаИзмерения, "ЕдиницаИзмерения");
	Иначе
		ЕдиницаИзмеренияОтбора = СтрокаТЧ.ЕдиницаИзмерения;	
	КонецЕсли;	
	
	Возврат ЕдиницаИзмеренияОтбора;
	
КонецФункции

Функция ПолучитьДанныеЕдиницыИзмеренияТовара(Товар) Экспорт
	
	ДанныеЕдиницыИзмерения = Новый Структура("СсылкаЕИ, КодЭСФ", "", "");
	
	Если ЗначениеЗаполнено(Товар) И ТипЗнч(Товар) = Тип("СправочникСсылка.Номенклатура") Тогда
		ЕдиницаИзмерения = Товар.ЕдиницаИзмерения;
		ЕИ_Код = ЕдиницаИзмерения.КодЭСФ;
		
		ДанныеЕдиницыИзмерения.СсылкаЕИ = ЕдиницаИзмерения;
		ДанныеЕдиницыИзмерения.КодЭСФ = ЕИ_Код;
		
	КонецЕсли;
	
	Возврат ДанныеЕдиницыИзмерения; 
	
КонецФункции

Функция СпособЗаполненияЦеныЭДВСПоУмолчанию() Экспорт
	
	//в БК3
	//Возврат Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости;
	
	//ЕРП
	Возврат Перечисления.СпособЗаполненияЦеныЭДВС.ПоТипуЦены;
	
КонецФункции	

//Функция определяет, поддерживает ли конфигурация работу со структурными подразделениями
Функция ПолучитьПараметрРаботыСоСтруктурнымиПодразделениями() Экспорт
	//Возврат ПолучитьФункциональнуюОпцию("ПоддержкаРаботыСоСтруктурнымиПодразделениями");
	//для конфигураций без поддержки структурных подразделений возвращаем Ложь
	Возврат Ложь;
КонецФункции

// Процедура выполняет установку начального значения реквизита "СтруктурноеПодразделениеОрганизация" формы
Процедура УстановитьСвойстваЭлементаСтруктурноеПодразделение(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация, Элемент, ПоддержкаРаботыСоСтруктурнымиПодразделениями) Экспорт
	//РаботаСДиалогамиКлиентСервер.УстановитьВидимостьСтруктурногоПодразделения(Организация, СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	//РаботаСДиалогамиКлиентСервер.УстановитьСвойстваЭлементаСтруктурноеПодразделениеОрганизация(Элемент, СтруктурноеПодразделение, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	//для конфигураций без поддержки структурных подразделений никаких действий не нужны
КонецПроцедуры

Функция ПолучитьОбычныйСклад(ВиртуальныйСклад, Организация)
	Запрос 			= Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СоответствиеСкладовИВиртуальныхСкладов.Склад
	|ИЗ
	|	РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|ГДЕ
	|	СоответствиеСкладовИВиртуальныхСкладов.Организация = &Организация
	|	И СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад = &ВиртуальныйСклад";
	
	Запрос.УстановитьПараметр("Организация"		, Организация);
	Запрос.УстановитьПараметр("ВиртуальныйСклад", ВиртуальныйСклад);
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаЗапроса.Следующий() Тогда
		Возврат ВыборкаЗапроса.Склад;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции


Функция ПроверитьВидДвиженияПоВО(ДокументОснование) Экспорт
	
	Возврат "";
	
КонецФункции


Функция УдалитьЛидирующиеНулиИзНомераОбъекта(Знач НомерОбъекта) Экспорт
	
	Номер = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(НомерОбъекта);
	
	Возврат Номер;
	
КонецФункции

#КонецОбласти

#Область МетодыСвязанныеССНТ

Функция ПроверитьНаличиеСвязанногоСНТ(Основание) Экспорт
	
	СвязанныйСНТ = Неопределено;
	СвязанныйСНТ = СНТСервер.ПроверитьНаличиеСвязанногоСНТ(Основание);
	Возврат СвязанныйСНТ;

КонецФункции

Функция ЗаполнитьТаблицуНомеровСтрокСНТ(МассивСНТ) Экспорт
	
	ТаблицаНомеровСтрок = Новый ТаблицаЗначений;
	
	ТаблицаНомеровСтрок = СНТСервер.ЗаполнитьТаблицуНомеровСтрокСНТ(МассивСНТ);
	
	Возврат ТаблицаНомеровСтрок;
	
КонецФункции

Процедура СопоставитьДанныеЭСФИЗСНТ(СНТ, ОбъектЭСФ, РезультатПроверки) Экспорт
	
	СНТСервер.СопоставитьДанныеЭСФИЗСНТ(ОбъектЭСФ.СНТ, ОбъектЭСФ, РезультатПроверки);

КонецПроцедуры

Функция ТипДокументаСНТ() Экспорт
	//Возврат Тип("");
	Возврат Тип("ДокументСсылка.СНТ");
КонецФункции

Функция ИспользоватьСНТ()Экспорт
	
	//Возврат Ложь;
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеСНТ");
	
КонецФункции

Функция ПолучитьОбработкаОбменСНТ() Экспорт
	
	Возврат СНТСерверПовтИсп.ОбработкаОбменСНТ();
	
КонецФункции

Функция СоответствиеНомеровТаблицИНазванийСНТ() Экспорт
	
	Возврат СНТСервер.СоответствиеНомеровТаблицИНазванийСНТ();
	
КонецФункции

Функция КонечноеСостояниеОбработкиДокумента(СсылкаНаДокумент) Экспорт
		
	Если ТипЗнч(СсылкаНаДокумент) = Тип("ДокументСсылка.СНТ") Тогда
		Состояние = Перечисления.СостоянияСНТ.ПодтвержденПолучателем;
	Иначе 
		Состояние = Перечисления.СостоянияЭДВС.ОбработанНаСервере;
	КонецЕсли;

	Возврат Состояние;
	
КонецФункции

#КонецОбласти

#Область ПараметрыДляЗаполнениеЭДВС

Функция ТипыДокументовСПерезаполнениемЦены()  Экспорт 
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПеремещениеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПересортицаТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.СписаниеНедостачТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПорчаТоваров"));
	МассивТипов.Добавить(Тип("ДокументСсылка.СборкаТоваров"));
	МассивТипов.Добавить(Тип("Неопределено"));
	
	Возврат МассивТипов;

КонецФункции

Функция ТипФормыПоТипуДокумента(ТипДокумента) Экспорт
	Если ТипДокумента = Тип("ДокументСсылка.ПеремещениеТоваров") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ЭСФ") Тогда 
		Возврат Перечисления.ТипыФормВС.ВнутреннееПеремещение;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров")  Тогда 
		Возврат Перечисления.ТипыФормВС.ДекларацияНаТовары;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") 
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПрочееОприходованиеТоваров") Тогда
		Возврат Перечисления.ТипыФормВС.Остатки;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СписаниеНедостачТоваров") 
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров")  
			ИЛИ ТипДокумента = Тип("ДокументСсылка.ПорчаТоваров")  Тогда
			
		Возврат Перечисления.ТипыФормВС.Списание;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СборкаТоваров") 
		ИЛИ ТипДокумента = Тип("ДокументСсылка.ПересортицаТоваров") Тогда 
		Возврат Перечисления.ТипыФормВС.Детализация;
	ИначеЕсли ТипДокумента = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда
		Возврат Перечисления.ТипыФормВС.СписаниеТоваровНеВС;
	Иначе
		Возврат Перечисления.ТипыФормВС.ПустаяСсылка();
	КонецЕсли;	
КонецФункции

Функция ТипДокументаТаможеннойДекларации(ТипДокумента) Экспорт 
	
	ТипыДокументов = ТипыДокументовТаможеннойДекларации();
	
	Возврат ТипыДокументов.НайтиПоЗначению(ТипДокумента) <> Неопределено;
	
КонецФункции	

Функция ТипДокументаРеализацияСтруктурномуПодразделению(ТипДокумента) Экспорт 
	
	ТипыДокументов = ТипыДокументовРеализацияСтруктурномуПодразделению();
	
	Возврат ТипыДокументов.НайтиПоЗначению(ТипДокумента) <> Неопределено;
	
КонецФункции	

Функция ПолучитьДополнительныеПараметрыЗапросаБУ() Экспорт
	
	ПараметрыЗапроса = Новый Структура;
	
	
	Возврат ПараметрыЗапроса;
	
КонецФункции	

Функция ТипыФормЭДВСВКоторыхУстанавливаютсяЦены() Экспорт 
	
	ТипыФормЦены = Новый Массив;
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.Остатки);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.Списание);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.ВнутреннееПеремещение);
	ТипыФормЦены.Добавить(Перечисления.ТипыФормВС.Детализация);
	
	Возврат ТипыФормЦены;
	
КонецФункции	

Функция ТипыДокументовДетализации() Экспорт 
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.СборкаТоваров"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ПересортицаТоваров"));
	
	Возврат ТипыДокументов;
КонецФункции

Функция ТипыДокументовРеализацияСтруктурномуПодразделению() Экспорт 
	
	ТипыДокументов = Новый СписокЗначений;
	
	Возврат ТипыДокументов;
КонецФункции

Функция ТипыДокументовСоСкладомВТабличнойЧасти() Экспорт
	
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров"));
	
	Возврат ТипыДокументов;
	
КонецФункции

Функция ТипыДокументовТаможеннойДекларации() Экспорт 
	
	ТипыДокументов = Новый СписокЗначений;
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"));
	ТипыДокументов.Добавить(Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров"));
	
	Возврат ТипыДокументов;
	
КонецФункции	

Функция ПоддерживаетсяРаботаСоСтруктурнымиПодразделениями() Экспорт
	
	Возврат Ложь;
	
КонецФункции

Процедура ДополнитьТаблицыДанныхДляЗаполненияЭДВС(СтруктураЗаполненияЭДВС, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Дата КАК Дата,
	|	Товары.Товар КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВЫРАЗИТЬ(Товары.Товар КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВЫРАЗИТЬ(Товары.Товар КАК Справочник.Номенклатура).ВестиУчетСертификатовНоменклатуры КАК ВестиУчетСертификатовНоменклатуры
	|ПОМЕСТИТЬ ВТ_Сертификаты_Товары
	|ИЗ
	|	вт_ДанныеДокумента КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Дата,
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ОбластиДействияСертификатовНоменклатуры.Номенклатура КАК Номенклатура,
	|	ОбластиДействияСертификатовНоменклатуры.Характеристика КАК Характеристика,
	|	ОбластиДействияСертификатовНоменклатуры.Серия КАК Серия,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры КАК СертификатНоменклатуры,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Бессрочный КАК Бессрочный,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ДатаНачалаСрокаДействия КАК ДатаНачалаСрокаДействия,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ДатаОкончанияСрокаДействия КАК ДатаОкончанияСрокаДействия
	|ПОМЕСТИТЬ ВТ_Сертификаты
	|ИЗ
	|	РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатуры
	|ГДЕ
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ПометкаУдаления = ЛОЖЬ
	|	И ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСертификатовНоменклатуры.Действующий)
	|	И ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ТипСертификата = ""СТ-1(СТ-KZ)""
	|	И ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры В
	|			(ВЫБРАТЬ
	|				Т.ВидНоменклатуры
	|			ИЗ
	|				ВТ_Сертификаты_Товары КАК Т)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ВидНоменклатуры,
	|	Характеристика,
	|	Серия,
	|	ДатаНачалаСрокаДействия,
	|	ДатаОкончанияСрокаДействия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Сертификаты.СертификатНоменклатуры КАК СертификатНоменклатуры,
	|	ВЫБОР
	|		КОГДА Сертификаты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА 4
	|		КОГДА Товары.Номенклатура <> Сертификаты.Номенклатура
	|			ТОГДА 5
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Сертификаты.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА Сертификаты.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 3
	|							КОГДА Товары.Серия <> Сертификаты.Серия
	|								ТОГДА 5
	|							ИНАЧЕ 2
	|						КОНЕЦ
	|				КОГДА Товары.Характеристика <> Сертификаты.Характеристика
	|					ТОГДА 5
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Сертификаты.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|							ТОГДА 2
	|						КОГДА Товары.Серия <> Сертификаты.Серия
	|							ТОГДА 5
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ВТ_Сертификаты_Приоритеты
	|ИЗ
	|	ВТ_Сертификаты_Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Сертификаты КАК Сертификаты
	|		ПО (ВЫБОР
	|				КОГДА Товары.ВестиУчетСертификатовНоменклатуры
	|					ТОГДА Товары.ВидНоменклатуры = Сертификаты.ВидНоменклатуры
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|			И (НАЧАЛОПЕРИОДА(Сертификаты.ДатаНачалаСрокаДействия, ДЕНЬ) <= Товары.Дата)
	|			И (ВЫБОР
	|				КОГДА Сертификаты.Бессрочный
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ НАЧАЛОПЕРИОДА(Сертификаты.ДатаОкончанияСрокаДействия, ДЕНЬ) >= Товары.Дата
	|			КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Приоритеты.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(Приоритеты.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ ВТ_Сертификаты_ПриоритетыМинимум
	|ИЗ
	|	ВТ_Сертификаты_Приоритеты КАК Приоритеты
	|ГДЕ
	|	Приоритеты.Приоритет <> 5
	|
	|СГРУППИРОВАТЬ ПО
	|	Приоритеты.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Приоритеты.Номенклатура КАК Номенклатура,
	|	Приоритеты.СертификатНоменклатуры КАК СертификатНоменклатуры,
	|	Приоритеты.СертификатНоменклатуры.Номер КАК СертификатНоменклатурыНомер
	|ИЗ
	|	ВТ_Сертификаты_Приоритеты КАК Приоритеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Сертификаты_ПриоритетыМинимум КАК ПриоритетыМинимум
	|		ПО Приоритеты.Номенклатура = ПриоритетыМинимум.Номенклатура
	|			И Приоритеты.Приоритет = ПриоритетыМинимум.Приоритет";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	СтруктураЗаполненияЭДВС.Вставить("ТаблицаСертификаты", Результат);
	
КонецПроцедуры

Процедура ДополнитьДанныеДляЗаполненияЭДВС(МассивЗаполненияЭДВС, ТаблицыДанныхДляЗаполненияЭДВС) Экспорт
	
	ТаблицаСертификатов = Неопределено;
	
	Если ТаблицыДанныхДляЗаполненияЭДВС.Свойство("ТаблицаСертификаты",ТаблицаСертификатов) Тогда
		
		Если ТаблицаСертификатов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Для Каждого ЭлементМассива Из МассивЗаполненияЭДВС Цикл
			
			Если ЭлементМассива.Свойство("Товары") Тогда
				
				Для Каждого СтрокаТовары Из ЭлементМассива.Товары Цикл
					
					МассивСтрок = ТаблицаСертификатов.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТовары.Товар));
					Если МассивСтрок.Количество() <> 0 Тогда
						СтрокаТовары.НомерЗаявленияВРамкахТС = МассивСтрок[0].СертификатНоменклатурыНомер;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЭлементМассива.Свойство("ТоварыВС") Тогда
				
				Для Каждого СтрокаТовары Из ЭлементМассива.ТоварыВС Цикл
					
					МассивСтрок = ТаблицаСертификатов.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТовары.Товар));
					Если МассивСтрок.Количество() <> 0 Тогда
						СтрокаТовары.НомерЗаявленияВРамкахТС = МассивСтрок[0].СертификатНоменклатурыНомер;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТипДокументаГТДИмпорт() Экспорт
	
	Возврат Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт");
	
КонецФункции

#КонецОбласти

#Область Отчет_ДокументыПоступленияПоКоторымВведеныЭСФ_ЭДВС  

Функция ПолучитьТекстЗапросаОтчетаДокументыПоступленияПоКоторымВведеныЭСФ_ЭДВС() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварыНаВиртуальныхСкладахОбороты.Регистратор.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ вт_ТоварыВС
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Обороты({(&НачалоПериода)}, {(&КонецПериода)}, Регистратор, {(Организация).* КАК Организация}) КАК ТоварыНаВиртуальныхСкладахОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.СчетФактура КАК СчетФактура,
	|	ЭСФ.Организация КАК Организация
	|ПОМЕСТИТЬ вт_СчетаФактуры
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка)
	|	И ЭСФ.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ТоварыВС.Регистратор
	|			ИЗ
	|				вт_ТоварыВС КАК вт_ТоварыВС)
	|	И ЭСФ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	вт_СчетаФактуры.ЭСФ КАК ЭСФ,
	|	СчетФактураПолученный.ДокументОснование КАК ДокументПоступления,
	|	вт_СчетаФактуры.Организация КАК Организация
	|ПОМЕСТИТЬ вт_ЭСФДокументПоступления
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_СФ.СчетФактура
	|			ИЗ
	|				вт_СчетаФактуры КАК вт_СФ)
	|	И НЕ СчетФактураПолученный.ДокументОснование ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЭДВС.Ссылка КАК ЭДВС,
	|	ЭДВС.ДокументОснование КАК ДокументПоступления,
	|	ЭДВС.Организация КАК Организация
	|ПОМЕСТИТЬ вт_ЭДВСДокументПоступления
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭДВС
	|ГДЕ
	|	ЭДВС.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|	И ЭДВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ТоварыВС.Регистратор
	|			ИЗ
	|				вт_ТоварыВС КАК вт_ТоварыВС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ЭДВСДокументПоступления.ЭДВС КАК ЭДВС,
	|	вт_ЭСФДокументПоступления.ЭСФ КАК ЭСФ,
	|	вт_ЭДВСДокументПоступления.ДокументПоступления КАК ДокументПоступления,
	|	вт_ЭДВСДокументПоступления.Организация КАК Организация
	|ИЗ
	|	вт_ЭДВСДокументПоступления КАК вт_ЭДВСДокументПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ЭСФДокументПоступления КАК вт_ЭСФДокументПоступления
	|		ПО вт_ЭДВСДокументПоступления.ДокументПоступления = вт_ЭСФДокументПоступления.ДокументПоступления";
	
	
	Возврат ТекстЗапроса;
КонецФункции	

#КонецОбласти

#Область ОформлениеЭДВС

Процедура ИсключитьЭСФНеОтраженныеВУчете(МассивДокументовЭСФ, УдалятьЭлементМассива) Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЭСФ.Ссылка КАК ЭСФ,
	|	ЭСФ.СчетФактура КАК СчетФактура,
	|	ЭСФ.Направление КАК Направление
	|ПОМЕСТИТЬ вт_СчетаФактуры
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.Ссылка В(&МассивДокументовЭСФ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СчетаФактуры.ЭСФ КАК ЭСФ,
	|	ВЫБОР
	|		КОГДА вт_СчетаФактуры.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
	|			ТОГДА ЕСТЬNULL(СчетФактураПолученный.ДокументОснование, НЕОПРЕДЕЛЕНО)
	|		КОГДА вт_СчетаФактуры.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Исходящий)
	|			ТОГДА ЕСТЬNULL(СчетФактураВыданный.ДокументОснование, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ДокументОснования
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураПолученный.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ПО вт_СчетаФактуры.СчетФактура = СчетФактураВыданный.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДокументОснования.ЭСФ,
	|	вт_ДокументОснования.ДокументОснование,
	|	вт_СчетаФактуры.СчетФактура
	|ИЗ
	|	вт_СчетаФактуры КАК вт_СчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументОснования КАК вт_ДокументОснования
	|		ПО вт_СчетаФактуры.ЭСФ = вт_ДокументОснования.ЭСФ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивДокументовЭСФ",МассивДокументовЭСФ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ТекстНевозможностьФормирования = ?(УдалятьЭлементМассива, " ЭДВС не сформирован!", "");
		Если Не ЗначениеЗаполнено(ВыборкаЗапроса.СчетФактура) Тогда
			ТекстОшибки = НСтр("ru='Документ <%1> не отражен в учете.%2'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаЗапроса.ЭСФ, ТекстНевозможностьФормирования);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);						
		ИначеЕсли Не ЗначениеЗаполнено(ВыборкаЗапроса.ДокументОснование) Тогда
			ТекстОшибки = НСтр("ru='У счета-фактуры <%1> документа <%2> не заполнена табличная часть ""Документы основания"".%3'");
			ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, ВыборкаЗапроса.СчетФактура, ВыборкаЗапроса.ЭСФ, ТекстНевозможностьФормирования);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);						
		Иначе
			Продолжить;
		КонецЕсли;	
		Если УдалятьЭлементМассива Тогда
			ИндексЭСФ = МассивДокументовЭСФ.Найти(ВыборкаЗапроса.ЭСФ);
			Если ИндексЭСФ <> Неопределено Тогда
				МассивДокументовЭСФ.Удалить(ИндексЭСФ);	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры	

#КонецОбласти

#Область ФормированиеДвиженийПоРС_СтатусОформленияДокумента

Функция РазрешеноИзменятьСтатусОформленияДокумента(ДокументОснование, ТипФормы) Экспорт
	
	Если НЕ ЭСФСервер.ВедетсяУчетПоТоварамНаВС(ДокументОснование.Дата) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЭСФ") 
			И ТипФормы = Перечисления.ТипыФормВС.Детализация Тогда
		Возврат Ложь;			
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		Возврат Ложь;
	Иначе	
		Возврат Истина;		
	КонецЕсли;		
	
КонецФункции

Функция ТекстЗапросаСтатусыОформленияДокументовЭДВС(ДокументОснование) Экспорт
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Реквизиты.ОрганизацияПолучатель Как Организация,
		|	Реквизиты.ДокументОснование КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Реквизиты.ДокументОснование.Дата КАК ДатаДокумента,
		|	&Статус КАК Статус
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО Реквизиты.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И Реквизиты.ДокументОснование.СкладОтправитель = СоответствиеСкладовИВиртуальныхСкладов.Склад";		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Реквизиты.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
		|				И Реквизиты.ДокументОснование.Организация = Реквизиты.ОрганизацияПолучатель
		|			ТОГДА Реквизиты.ОрганизацияПолучатель
		|		ИНАЧЕ Реквизиты.Организация
		|	КОНЕЦ КАК Организация,
		|	Реквизиты.ДокументОснование КАК Документ,
		|	ВЫБОР
		|		КОГДА Реквизиты.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
		|				И Реквизиты.ОрганизацияПолучатель <> Реквизиты.Организация
		|				И Реквизиты.ДокументОснование.Организация = Реквизиты.ОрганизацияПолучатель
		|			ТОГДА Реквизиты.СкладПолучатель
		|		ИНАЧЕ Реквизиты.Склад
		|	КОНЕЦ КАК Склад,
		|	Реквизиты.ДокументОснование.Дата КАК ДатаДокумента,
		|	&Статус КАК Статус
		|ИЗ
		|	Реквизиты КАК Реквизиты";		
	КонецЕсли;	
	
	Возврат ТекстЗапроса;
КонецФункции	

Функция ПолучитьНаборЗаписейРегистраСведенийСтатусыОформленияДокументов(Источник, Статус = Неопределено) Экспорт 
	
	ТипИсточника = ТипЗнч(Источник.Ссылка);
	
	Если ТипИсточника = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") 
		ИЛИ ТипИсточника = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗаписи,
		|	СтатусыОформленияДокументов.Документ
		|ПОМЕСТИТЬ вт_Статусы
		|ИЗ
		|	РегистрСведений.СтатусыОформленияДокументов КАК СтатусыОформленияДокументов
		|ГДЕ
		|	СтатусыОформленияДокументов.Документ = &ДокументСсылка
		|	И СтатусыОформленияДокументов.Статус <> &СтатусКОформлению
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.Ссылка.Организация,
		|	Товары.Ссылка КАК Документ,
		|	Товары.ДокументПоступления.Склад КАК Склад,
		|	Товары.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_Документ
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Документ.Организация,
		|	вт_Документ.Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	вт_Документ.ДатаДокумента,
		|	ЕСТЬNULL(вт_Статусы.ЕстьЗаписи, ЛОЖЬ) КАК ЕстьЗаписи
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	вт_Документ КАК вт_Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО вт_Документ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И вт_Документ.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Статусы КАК вт_Статусы
		|		ПО вт_Документ.Документ = вт_Статусы.Документ
		|ГДЕ
		|	&ИспользоватьСНТ = Ложь";
		Если  ТипИсточника = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаможеннаяДекларацияИмпорт", "ЗаявлениеОВвозеТоваров");	
		КонецЕсли;
	ИначеЕсли ТипИсточника = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Документ.Организация КАК Организация,
		|	Документ.Ссылка КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовОтправителей.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Документ.Дата КАК ДатаДокумента,
		|	Документ.ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовОтправителей
		|		ПО Документ.Организация = СоответствиеСкладовОтправителей.Организация
		|			И Документ.СкладОтправитель = СоответствиеСкладовОтправителей.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовПолучателей
		|		ПО Документ.Организация = СоответствиеСкладовПолучателей.Организация
		|			И Документ.СкладПолучатель = СоответствиеСкладовПолучателей.Склад
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
		|	И ЕСТЬNULL(СоответствиеСкладовОтправителей.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) 
		|		<> ЕСТЬNULL(СоответствиеСкладовПолучателей.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка))";
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Документ.Склад КАК Склад,
		|	Документ.Ссылка КАК Документ,
		|	Документ.Организация КАК Организация,
		|	Документ.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_ВнутреннееПотреблениеТоваров
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Ссылка.Склад,
		|	Документ.Ссылка.Ссылка,
		|	Документ.Ссылка.Организация,
		|	Документ.Ссылка.Дата
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КатегорииЭксплуатации КАК КатегорииЭксплуатации
		|		ПО Документ.КатегорияЭксплуатации = КатегорииЭксплуатации.Ссылка
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВнутреннееПотреблениеТоваров.Организация КАК Организация,
		|	ВнутреннееПотреблениеТоваров.Документ КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	ВнутреннееПотреблениеТоваров.ДатаДокумента КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	вт_ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО ВнутреннееПотреблениеТоваров.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И ВнутреннееПотреблениеТоваров.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад";
    ИначеЕсли  ТипИсточника = Тип("ДокументСсылка.ЭСФ") Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Документ.Ссылка.Организация КАК Организация,
		|	Документ.Ссылка КАК Документ,
		|	Документ.Ссылка.Склад КАК Склад,
		|	Документ.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.ЭСФ.Товары КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВиртуальныеСклады КАК ВС
		|			ПО Документ.Ссылка.Склад = ВС.Ссылка
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияЭСФ.Входящий)
		|	И Документ.Ссылка.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Обычный)
		|	И Документ.ПризнакПроисхождения <> &ПризнакУслуги
		|	И ЕстьNULL(ВС.ПризнакОприходования, ЛОЖЬ) = ИСТИНА
		|";
	ИначеЕсли ВССервер.ИспользоватьСНТ() И ТипИсточника = ВССерверПереопределяемый.ТипДокументаСНТ() Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Документ.Ссылка.Организация КАК Организация,
		|	Документ.Ссылка КАК Документ,
		|	Документ.Ссылка.СкладПолучатель КАК Склад,
		|	Документ.Ссылка.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.СНТ.ТоварыВС КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК СправочникИсточникиПроисхождения
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних КАК СведенияОНоменклатуреГСВССрезПоследних
		|			ПО СправочникИсточникиПроисхождения.ГСВС.Ссылка = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС.Ссылка
		|		ПО Документ.ИсточникПроисхождения = СправочникИсточникиПроисхождения.Ссылка
		|			И Документ.Товар = СправочникИсточникиПроисхождения.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(, ДокументПартии = &ДокументСсылка) КАК ТоварыНаВиртуальныхСкладахОстатки
		|		ПО Документ.Товар = ТоварыНаВиртуальныхСкладахОстатки.Номенклатура
		|			И Документ.ИсточникПроисхождения = ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения
		|			И Документ.Ссылка.Организация = ТоварыНаВиртуальныхСкладахОстатки.Организация
		|			И Документ.Ссылка.СкладПолучатель = ТоварыНаВиртуальныхСкладахОстатки.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВиртуальногоСкладаВРезерве.Остатки(, ДокументПартии = &ДокументСсылка) КАК ТоварыВиртуальногоСкладаВРезерве
		|		ПО Документ.Ссылка.СкладПолучатель = ТоварыВиртуальногоСкладаВРезерве.Склад
		|			И Документ.Товар = ТоварыВиртуальногоСкладаВРезерве.Номенклатура
		|			И Документ.ИсточникПроисхождения = ТоварыВиртуальногоСкладаВРезерве.ИсточникПроисхождения
		|			И Документ.Ссылка.Организация = ТоварыВиртуальногоСкладаВРезерве.Организация
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка
		|	И Документ.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Ввоз)
		|	И Документ.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСНТ.Подтвержден)
		|	И НЕ ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ)
		|	И ЕСТЬNULL(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВиртуальногоСкладаВРезерве.КоличествоОстаток, 0) > 0
		|	И СправочникИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе"; 		
    Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Документ.Организация,
		|	Документ.Ссылка КАК Документ,
		|	ЕСТЬNULL(СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад, ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)) КАК Склад,
		|	Документ.Дата КАК ДатаДокумента
		|ПОМЕСТИТЬ вт_НаборЗаписей
		|ИЗ
		|	Документ.ПересортицаТоваров КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО Документ.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
		|			И Документ.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
		|ГДЕ
		|	Документ.Ссылка = &ДокументСсылка";		
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПересортицаТоваров", Источник.Метаданные().Имя);
		
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_НаборЗаписей.Организация,
	|	вт_НаборЗаписей.Документ,
	|	вт_НаборЗаписей.Склад КАК Склад,
	|	вт_НаборЗаписей.ДатаДокумента,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СтатусыОформленияДокументов.Статус, &СтатусКОформлению) = &СтатусКОформлению И Не вт_НаборЗаписей.ЕстьЗаписи
	|			ТОГДА &СтатусКОформлению
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СтатусыОформленияДокументов.Статус <> &СтатусКОформлению
	|						ИЛИ СтатусыОформленияДокументов.Склад <> вт_НаборЗаписей.Склад
	|						ИЛИ вт_НаборЗаписей.ЕстьЗаписи
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументов.КПереоформлению)
	|				ИНАЧЕ &СтатусКОформлению
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	вт_НаборЗаписей КАК вт_НаборЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОформленияДокументов КАК СтатусыОформленияДокументов
	|		ПО вт_НаборЗаписей.Организация = СтатусыОформленияДокументов.Организация
	|			И вт_НаборЗаписей.Документ = СтатусыОформленияДокументов.Документ";
	
	
	Если ТипыДокументовСоСкладомВТабличнойЧасти().НайтиПоЗначению(ТипИсточника) = Неопределено Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " И Не вт_НаборЗаписей.ЕстьЗаписи", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИЛИ вт_НаборЗаписей.ЕстьЗаписи", "");
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДокументСсылка"	 , Источник.Ссылка);
	Запрос.УстановитьПараметр("ПризнакУслуги"	 , "6");
	Запрос.УстановитьПараметр("СтатусКОформлению", Перечисления.СтатусыОформленияДокументов.КОформлению);
	Запрос.УстановитьПараметр("ИспользоватьСНТ", ВССервер.ИспользоватьСНТ());
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

#КонецОбласти

#Область ЗаполнениеСсылокЭДВС

Процедура ЗаполнитьСсылкиЕдиницИзмеренияЭДВС(МассивЭДВС) Экспорт
	
	// механизм заполнения ссылок на единицы измерения отключен
	// не хватает данных для корректной идентификации единицы измерения, в частности механизма заполнения ссылок на номенклатуру
	Возврат;
	
	МассивСсылокЭДВС = Новый Массив;
	Для Каждого Документ Из МассивЭДВС Цикл
		МассивСсылокЭДВС.Добавить(Документ.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭлектронныйДокументВСИсходныеТовары.ЕдиницаИзмеренияКод КАК Код,
		|	МАКСИМУМ(КлассификаторЕдиницИзмерения.Ссылка) КАК Ссылка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭлектронныйДокументВСИсходныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|		ПО ЭлектронныйДокументВСИсходныеТовары.ЕдиницаИзмеренияКод = КлассификаторЕдиницИзмерения.КодЭСФ
		|ГДЕ
		|	ЭлектронныйДокументВСИсходныеТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСИсходныеТовары.ЕдиницаИзмеренияКод
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронныйДокументВСТовары.ЕдиницаИзмеренияКод,
		|	МАКСИМУМ(КлассификаторЕдиницИзмерения.Ссылка)
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭлектронныйДокументВСТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК КлассификаторЕдиницИзмерения
		|		ПО ЭлектронныйДокументВСТовары.ЕдиницаИзмеренияКод = КлассификаторЕдиницИзмерения.КодЭСФ
		|ГДЕ
		|	ЭлектронныйДокументВСТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСТовары.ЕдиницаИзмеренияКод";
	Запрос.УстановитьПараметр("МассивЭДВС", МассивСсылокЭДВС);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СоответствиеЕдиницИзмерения = Новый Соответствие;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СоответствиеЕдиницИзмерения.Вставить(ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Для Каждого Документ из МассивЭДВС Цикл
		Для Каждого Строка Из Документ.ТоварыВС Цикл
			Строка.ЕдиницаИзмерения = СоответствиеЕдиницИзмерения[Строка.ЕдиницаИзмеренияКод];	
		КонецЦикла;
		Для Каждого Строка Из Документ.ИсходныеТоварыВС Цикл
			Строка.ЕдиницаИзмерения = СоответствиеЕдиницИзмерения[Строка.ЕдиницаИзмеренияКод];	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьСсылкиСтранПроисхожденияЭДВС(МассивЭДВС) Экспорт
	МассивСсылокЭДВС = Новый Массив;
	Для Каждого Документ Из МассивЭДВС Цикл
		МассивСсылокЭДВС.Добавить(Документ.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(КлассификаторСтранМира.Ссылка) КАК Ссылка,
		|	ЭлектронныйДокументВСИсходныеТовары.СтранаПроисхожденияТовараКод КАК Код
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭлектронныйДокументВСИсходныеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира
		|		ПО ЭлектронныйДокументВСИсходныеТовары.СтранаПроисхожденияТовараКод = КлассификаторСтранМира.КодАльфа2
		|ГДЕ
		|	ЭлектронныйДокументВСИсходныеТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСИсходныеТовары.СтранаПроисхожденияТовараКод
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(КлассификаторСтранМира.Ссылка),
		|	ЭлектронныйДокументВСТовары.СтранаПроисхожденияТовараКод
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭлектронныйДокументВСТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира
		|		ПО ЭлектронныйДокументВСТовары.СтранаПроисхожденияТовараКод = КлассификаторСтранМира.КодАльфа2
		|ГДЕ
		|	ЭлектронныйДокументВСТовары.Ссылка В(&МассивЭДВС)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭлектронныйДокументВСТовары.СтранаПроисхожденияТовараКод";
	Запрос.УстановитьПараметр("МассивЭДВС", МассивСсылокЭДВС);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СоответствиеСтранПроисхождения = Новый Соответствие;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СоответствиеСтранПроисхождения.Вставить(ВыборкаДетальныеЗаписи.Код, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Для Каждого Документ из МассивЭДВС Цикл
		Для Каждого Строка Из Документ.ТоварыВС Цикл
			Строка.СтранаПроисхожденияТовара = СоответствиеСтранПроисхождения[Строка.СтранаПроисхожденияТовараКод];	
		КонецЦикла;
		Для Каждого Строка Из Документ.ИсходныеТоварыВС Цикл
			Строка.СтранаПроисхожденияТовара = СоответствиеСтранПроисхождения[Строка.СтранаПроисхожденияТовараКод];	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФорм

Процедура ПриСозданииНаСервере(Форма) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьОбменВС") Тогда
		Возврат
	КонецЕсли;
	
	Если Не ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "Объект") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "Товары", "ТоварыГруппаЕИ", "ТоварыЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ТоварыВС", "ТоварыВСГруппаЕИ", "ТоварыВСЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ИсходныеТовары", "ИсходныеТоварыГруппаЕИ", "ИсходныеТоварыЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ИсходныеТоварыВС", "ИсходныеТоварыВСГруппаЕИ", "ИсходныеТоварыВСЕдиницаИзмерения");
	
	//В УПК нет обработки изменения табличной части
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(ТекущийОбъект, Форма) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
	
КонецПроцедуры

Процедура ПриСозданииНаСервереФормаПереоформлениеДокументов(Форма) Экспорт

	Элементы = Форма.Элементы;
	ЭлементГруппаРазмещения = Элементы.Вставить("ТоварыГруппаЕИ", Тип("ГруппаФормы"), Элементы.Товары, Элементы.ТоварыЕдиницаИзмерения);

	//ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "Товары", "ТоварыГруппаЕИ", "ТоварыЕдиницаИзмерения");
	//ЭлементГруппаРазмещения = Элементы[ГруппаРазмещения];
	
	ЭлементТоварыГруппаУпаковка = Элементы.Добавить("ТоварыГруппаУпаковка", Тип("ГруппаФормы"), ЭлементГруппаРазмещения);
	ЭлементТоварыГруппаУпаковка.Вид = ВидГруппыФормы.ГруппаКолонок;
	ЭлементТоварыГруппаУпаковка.Заголовок = "ТоварыГруппаУпаковка";
	ЭлементТоварыГруппаУпаковка.Группировка = ГруппировкаКолонок.ВЯчейке;
	ЭлементТоварыГруппаУпаковка.ОтображатьЗаголовок = Ложь;
	ЭлементТоварыГруппаУпаковка.Ширина = 10;

	ТоварыЕдиницаИзмерения = Элементы["ТоварыЕдиницаИзмерения"];
	ТоварыЕдиницаИзмерения.РежимРедактирования = РежимРедактированияКолонки.Вход;
	ТоварыЕдиницаИзмерения.КнопкаВыпадающегоСписка = Ложь;
	ТоварыЕдиницаИзмерения.КнопкаВыбора = Истина;
	ТоварыЕдиницаИзмерения.ОтображатьВШапке = Ложь;
	ТоварыЕдиницаИзмерения.АвтоОтметкаНезаполненного = Ложь;
	ТоварыЕдиницаИзмерения.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый СвязьПараметраВыбора("Номенклатура", "Элементы.Товары.ТекущиеДанные.Товар", РежимИзмененияСвязанногоЗначения.НеИзменять));
	ТоварыЕдиницаИзмерения.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивПараметров);
	Элементы.Переместить(ТоварыЕдиницаИзмерения, ЭлементТоварыГруппаУпаковка);
	
	ЭлементТоварыТоварЕдиницаИзмерения = Форма.Элементы.Добавить("ТоварыТоварЕдиницаИзмерения", Тип("ПолеФормы"), ЭлементТоварыГруппаУпаковка);
	ЭлементТоварыТоварЕдиницаИзмерения.Вид = ВидПоляФормы.ПолеНадписи;
	ЭлементТоварыТоварЕдиницаИзмерения.ПутьКДанным = "Товары.Товар.ЕдиницаИзмерения";
	
	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(Форма, "ТоварыТоварЕдиницаИзмерения", "Товары.ЕдиницаИзмерения");

КонецПроцедуры

#КонецОбласти

#Область Пользователи

Функция ЭтоПолноправныйПользователь() Экспорт
	
	Возврат Пользователи.ЭтоПолноправныйПользователь();
	
КонецФункции

#КонецОбласти

#Область ЗапросыДляЗаполненияУчетныхДокументовИзЭДВС

//ПеремещениеТоваров
Функция ДанныеДляЗаполненияПеремещениеТоваров(ПеремещениеТоваровМеждуФилиалами)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.СкладОтправитель КАК СкладОтправитель,
	|	Реквизиты.СкладПолучатель КАК СкладПолучатель
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.СкладОтправитель КАК СкладОтправитель,
	|	Реквизиты.СкладПолучатель КАК СкладПолучатель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация = Реквизиты.ОрганизацияПолучатель
	|			ТОГДА Значение(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
	|		ИНАЧЕ Значение(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК Упаковка
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	//Если ПеремещениеТоваровМеждуФилиалами Тогда
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КоличествоУпаковок", "Количество");
	//КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

//ДекларацияНаТовары
Функция ДанныеДляЗаполненияТаможеннаяДекларацияИмпорт()
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование КАК НаименованиеТовара,
	|	ТаблицаТовары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерРаздела,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхожденияТовара КАК СтранаПроисхождения,
	|	ТаблицаТовары.Сумма КАК ФактурнаяСтоимость
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.НаименованиеТовара,
	|	ТаблицаТовары.НомерРаздела,
	|	ТаблицаТовары.ПризнакПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения,
	|	ТаблицаТовары.ФактурнаяСтоимость КАК ТаможеннаяСтоимость	
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияЗаявлениеОВвозеТоваров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.ТоварНаименование КАК НаименованиеТовара,
	|	ТаблицаТовары.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|	КОГДА КлассификаторТНВЭД.ЕдиницаИзмерения = ТаблицаТовары.ЕдиницаИзмерения
	|		ТОГДА 1
	|	КОГДА ТаблицаТовары.ЕдиницаИзмерения.ЕдиницаИзмерения = КлассификаторТНВЭД.ЕдиницаИзмерения
	|			И ТаблицаТовары.ЕдиницаИзмерения.Знаменатель <> 0
	|		ТОГДА ТаблицаТовары.ЕдиницаИзмерения.Числитель / ТаблицаТовары.ЕдиницаИзмерения.Знаменатель
	|	КОГДА КлассификаторТНВЭД.ЕдиницаИзмерения.Числитель = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВЫБОР КлассификаторТНВЭД.ЕдиницаИзмерения.ТипИзмеряемойВеличины
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|				ТОГДА &ТекстЗапросаВес
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|				ТОГДА &ТекстЗапросаОбъем
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
	|				ТОГДА &ТекстЗапросаПлощадь
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|				ТОГДА &ТекстЗапросаДлина
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|				ТОГДА &ТекстЗапросаКоличествоШтук
	|			ИНАЧЕ 0
	|		КОНЕЦ * КлассификаторТНВЭД.ЕдиницаИзмерения.Знаменатель / КлассификаторТНВЭД.ЕдиницаИзмерения.Числитель
	|КОНЕЦ * ТаблицаТовары.Количество КАК КоличествоПоТНВЭД,
	|	ЕСТЬNULL(КлассификаторТНВЭД.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)) КАК КодТНВЭД,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.НаименованиеТовара КАК НаименованиеТовара,
	|	ТаблицаТовары.Сумма КАК ФактурнаяСтоимость
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|		ПО ТаблицаТовары.КодТНВЭД = КлассификаторТНВЭД.Код";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВес", 
					Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
						"ТаблицаТовары.ЕдиницаИзмерения", 
						"ТаблицаТовары.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОбъем", 
					Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
						"ТаблицаТовары.ЕдиницаИзмерения", 
						"ТаблицаТовары.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаПлощадь", 
					Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаПлощадьУпаковки(
						"ТаблицаТовары.ЕдиницаИзмерения", 
						"ТаблицаТовары.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаДлина", 
					Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаДлинаУпаковки(
						"ТаблицаТовары.ЕдиницаИзмерения", 
						"ТаблицаТовары.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоличествоШтук", 
					Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
						"ТаблицаТовары.ЕдиницаИзмерения", 
						"ТаблицаТовары.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Детализация
Функция ДанныеДляЗаполненияПересортицаТоваров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИсходныеТовары.Товар КАК Номенклатура,
	|	ТаблицаИсходныеТовары.Количество КАК Количество,
	|	ТаблицаИсходныеТовары.Цена КАК Цена
	|ПОМЕСТИТЬ ТаблицаИсходныеТовары
	|ИЗ
	|	&ТаблицаИсходныеТовары КАК ТаблицаИсходныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.Склад КАК Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК НоменклатураОприходование,
	|	Неопределено КАК Номенклатура, 
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Неопределено, 
	|	ТаблицаИсходныеТовары.Номенклатура,
	|	ТаблицаИсходныеТовары.Количество,
	|	ТаблицаИсходныеТовары.Цена
	|ИЗ
	|	ТаблицаИсходныеТовары КАК ТаблицаИсходныеТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияСборкаТоваров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидДетализации = ЗНАЧЕНИЕ(Перечисление.ВидДетализации.Комплектация)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКомплектующие.Товар КАК Номенклатура,
	|	ТаблицаКомплектующие.Количество КАК Количество,
	|	ТаблицаКомплектующие.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаКомплектующие
	|ИЗ
	|	&ТаблицаКомплектующие КАК ТаблицаКомплектующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовар.Товар КАК Товар,
	|	ТаблицаТовар.Количество КАК Количество,
	|	ТаблицаТовар.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаТовар
	|ИЗ
	|	&ТаблицаТовар КАК ТаблицаТовар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Реквизиты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ИЛИ Реквизиты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|			ТОГДА ТаблицаТовар.Товар
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Реквизиты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ИЛИ Реквизиты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|			ТОГДА ТаблицаТовар.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА Реквизиты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|				ИЛИ Реквизиты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|			ТОГДА ТаблицаТовар.ЕдиницаИзмерения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Упаковка
	|ИЗ
	|	Реквизиты КАК Реквизиты,
	|	ТаблицаТовар КАК ТаблицаТовар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКомплектующие.Номенклатура КАК Номенклатура,
	|	ТаблицаКомплектующие.Количество КАК КоличествоУпаковок,
	|	ТаблицаКомплектующие.ЕдиницаИзмерения КАК Упаковка
	|ИЗ
	|	ТаблицаКомплектующие КАК ТаблицаКомплектующие";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Остатки
Функция ДанныеДляЗаполненияОприходованиеИзлишковТоваров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Цена
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Цена
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияПрочееОприходованиеТоваров()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Цена
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеЗаСчетДоходов) КАК ХозяйственнаяОперация
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Цена
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции


//Списание	
Функция ДанныеДляЗаполненияСписаниеНедостачТоваров()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияВнутреннееПотреблениеТоваров()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДанныеДляЗаполненияПорчаТоваров()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.СкладОтправитель КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	&Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар КАК Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Цена
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Организация,
	|	Реквизиты.Дата,
	|	Реквизиты.Комментарий,
	|	Реквизиты.Склад
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Цена
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары";
	
	Возврат ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Заполняет список обработчиков обновления информационной базы.
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики, ЗавершениеОбновления = Ложь) Экспорт
	

	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаПроведения

Функция ТекстЗапросаТаблицаТоварыНаВС_ЭДВС(НомераТаблиц, Реквизиты, ПараметрыПроведения) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаТоварыНаВС", НомераТаблиц.Количество());
	
	Если Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ВнутреннееПеремещение Тогда
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭДВСТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	""Товары""
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.Детализация Тогда	
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель
		|		ИНАЧЕ ЭДВСТовары.ИсточникПроисхождения
		|	КОНЕЦ КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) 
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель.ДокументПартии
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель
		|		ИНАЧЕ ЭДВСТовары.ИсточникПроисхождения
		|	КОНЕЦ КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.ВидДетализации = Значение(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) 
		|			ТОГДА ЭДВСТовары.ИсточникПроисхожденияПолучатель.ДокументПартии
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.Списание Тогда		
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.СписаниеТоваровНеВС 
		Или Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ВводОстатковНаВС Тогда
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|	ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ФизическаяМетка Тогда	
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСИсходныеТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары КАК ЕдиницаИзмерения,
		|	ЭДВСИсходныеТовары.Количество,
		|	ЭДВСИсходныеТовары.Цена,
		|	ЭДВСИсходныеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСИсходныеТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""ИсходныеТовары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭДВСИсходныеТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСИсходныеТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСИсходныеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭДВСТовары.Ссылка КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭДВСТовары.Ссылка КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";	
		
	//+
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ПеремещениеМеждуФилиалами Тогда
		НомераТаблиц.Вставить("ТаблицаТоварыНаВСПриход", НомераТаблиц.Количество());
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭДВСТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
		|	""Товары""
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
		|	ИППолучатель.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИППолучатель
		|		ПО ЭДВСТовары.ИсточникПроисхожденияПолучатель = ИППолучатель.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
		|	ИППолучатель.ДокументПартии КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИППолучатель
		|		ПО ЭДВСТовары.ИсточникПроисхожденияПолучатель = ИППолучатель.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	//-
	ИначеЕсли Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ДетализацияИмпорта Тогда
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.СкладПолучатель КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Иначе	
		ПараметрыПроведения.Вставить("ТаблицаТоварыНаВСПриход", Неопределено);
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДВСТовары.Товар КАК Номенклатура,
		|	%ЭДВСТекстПоляЕдиницаИзмеренияТовары КАК ЕдиницаИзмерения,
		|	ЭДВСТовары.Количество,
		|	ЭДВСТовары.Цена,
		|	ЭДВСТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ВЫБОР 
		|		КОГДА Реквизиты.КорректировкаИП 
		|			ТОГДА ИсточникиПроисхождения.ДокументПартии 
		|		ИНАЧЕ ЭДВСТовары.Ссылка
		|	КОНЕЦ КАК ДокументПартии,
		|	ЭДВСТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭДВСТовары.Ссылка = Реквизиты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭДВСТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары", "");
	СоответсвиеПолейЗапросов.Вставить("%ЭДВСТекстПоляЕдиницаИзмеренияТовары"		, "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	Возврат ТекстЗапроса + ВСВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаТаблицаТоварыНаВССУчетомДатыОборотаДатыПризнакаВС(Знач ЭСФБезСНТ = Ложь, Знач ЭтоРозничнаяРеализацияВПределахДат = Ложь) Экспорт
	
	//В случае, когда NON SNT или ЭСФ выписана в розницу между датами 16.01.2021 до 05.05.2021, то движения по товарам ВС не делаем
	Если ЭСФБезСНТ Или ЭтоРозничнаяРеализацияВПределахДат Тогда
		 ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Ссылка КАК Ссылка,
		|	ЭСФТовары.КодТНВЭД КАК КодТНВЭД,
		|	Реквизиты.ДатаОборота КАК ДатаОборота,
		|	ЭСФТовары.Товар КАК Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество КАК Количество,
		|	ЭСФТовары.Цена КАК Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе,
		|	&ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ ВT_ЭСФТовары
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|;
		|ВЫБРАТЬ
		|	СведенияОНоменклатуреГСВС.Период КАК Период,
		|	СведенияОНоменклатуреГСВС.НоменклатураГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВT_СведенияОНоменклатуреГСВС
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&ДатаОкончания,
		|			НоменклатураГСВС.КодГСВС В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Товары.КодТНВЭД
		|				ИЗ
		|					ВT_ЭСФТовары КАК Товары)) КАК СведенияОНоменклатуреГСВС
		|ГДЕ
		|	СведенияОНоменклатуреГСВС.ПризнакУчетаНаВиртуальномСкладе
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭСФТовары.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	ЭСФТовары.Склад КАК Склад,
		|	ЭСФТовары.ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	ВT_ЭСФТовары КАК ЭСФТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВT_СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|			ПО ЭСФТовары.КодТНВЭД = СведенияОНоменклатуреГСВС.КодГСВС
		|ГДЕ
		|	(ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе = ЛОЖЬ И ЭСФТовары.ДатаОборота >= &ДатаПереходаНаВС)
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе
		|";
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Ссылка КАК Ссылка,
		|	ЭСФТовары.КодТНВЭД КАК КодТНВЭД,
		|	Реквизиты.ДатаОборота КАК ДатаОборота,
		|	ЭСФТовары.Товар КАК Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество КАК Количество,
		|	ЭСФТовары.Цена КАК Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.ПризнакПроисхождения КАК ПризнакПроисхождения,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе,
		|	&ВидДвижения КАК ВидДвижения
		|ПОМЕСТИТЬ ВT_ЭСФТовары
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|;
		|ВЫБРАТЬ
		|	СведенияОНоменклатуреГСВС.Период КАК Период,
		|	СведенияОНоменклатуреГСВС.НоменклатураГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВT_СведенияОНоменклатуреГСВС
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&ДатаОкончания,
		|			НоменклатураГСВС.КодГСВС В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Товары.КодТНВЭД
		|				ИЗ
		|					ВT_ЭСФТовары КАК Товары)) КАК СведенияОНоменклатуреГСВС
		|ГДЕ
		|	СведенияОНоменклатуреГСВС.ПризнакУчетаНаВиртуальномСкладе
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ЭСФТовары.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	ЭСФТовары.Склад КАК Склад,
		|	ЭСФТовары.ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	ВT_ЭСФТовары КАК ЭСФТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВT_СведенияОНоменклатуреГСВС КАК СведенияОНоменклатуреГСВС
		|			ПО ЭСФТовары.КодТНВЭД = СведенияОНоменклатуреГСВС.КодГСВС
		|ГДЕ
		|	(ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе = ЛОЖЬ И ЭСФТовары.ДатаОборота >= &ДатаПереходаНаВС) 
		|	ИЛИ
		|	(ЭСФТовары.ПризнакУчетаНаВиртуальномСкладе = ИСТИНА И СведенияОНоменклатуреГСВС.Период <= ЭСФТовары.ДатаОборота)
		|
		|//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|";
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ЭСФТекстПоляТипИзмеряемойВеличины"	, "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);

	Возврат ТекстЗапроса;       	
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаВС(Знач ЭСФБезСНТ = Ложь, Знач ЭтоРозничнаяРеализацияВПределахДат = Ложь) Экспорт
	
	//В случае, когда NON SNT или ЭСФ выписана в розницу между датами 16.01.2021 до 05.05.2021, то движения по товарам ВС не делаем
	Если ЭСФБезСНТ ИЛИ ЭтоРозничнаяРеализацияВПределахДат Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|	И НЕ ИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе
		|";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЭСФ.Ссылка,
		|	ЭСФ.Склад
		|ПОМЕСТИТЬ ВТ_СвязанныеЭСФ
		|
		|ИЗ
		|	Документ.ЭСФ КАК ЭСФ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФ.СвязанныйЭСФ = Реквизиты.СвязанныйЭСФ
		|ГДЕ
		|	ЭСФ.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Дополнительный)
		|	И ЭСФ.Ссылка <> Реквизиты.Ссылка
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|;
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар КАК Номенклатура,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
		|	ЭСФТовары.НомерСтроки КАК НомерСтроки,
		|	Реквизиты.Склад КАК Склад,
		|	&ВидДвижения КАК ВидДвижения,
		|	""Товары"" КАК ИмяСписка
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|
		//сторно-движения исправленного ЭСФ	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	Реквизиты.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ЭСФТовары.Ссылка = Реквизиты.СвязанныйЭСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|		ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И Реквизиты.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыЭСФ.Исправленный)
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|
		//сторно-движения (дополнительных ЭСФ) исправленного ЭСФ
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭСФТовары.Товар,
		|	%ЭСФТекстПоляТипИзмеряемойВеличины КАК ЕдиницаИзмерения,
		|	-ЭСФТовары.Количество,
		|	ЭСФТовары.Цена,
		|	ЭСФТовары.ИсточникПроисхождения,
		|	ИсточникиПроисхождения.ДокументПартии,
		|	ЭСФТовары.НомерСтроки,
		|	СвязанныеЭСФ.Склад,
		|	&ВидДвижения,
		|	""Товары""
		|ИЗ
		|	Документ.ЭСФ.Товары КАК ЭСФТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СвязанныеЭСФ КАК СвязанныеЭСФ
		|			ПО ЭСФТовары.Ссылка = СвязанныеЭСФ.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
		|			ПО ЭСФТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
		|ГДЕ
		|	ЭСФТовары.ПризнакПроисхождения <> &ЗначениеУслуги
		|	И ЭСФТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
		|	И ЭСФТовары.Количество <> 0
		|";
	КонецЕсли;
	
	СоответсвиеПолейЗапросов = Новый Соответствие;
	СоответсвиеПолейЗапросов.Вставить("%ЭСФТекстПоляТипИзмеряемойВеличины"	, "");
	
	ЭСФСерверПереопределяемый.ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеПолейЗапросов);
	
	ЭСФСервер.ЗаменитьИменаРеквизитовПолейЗапросов(ТекстЗапроса, СоответсвиеПолейЗапросов);
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Процедура ДокументЭДВС_ОбработкаПроверкиЗаполнения(ОбъектЭДВС, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт

	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.Списание Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПричинаСписания");   
	КонецЕсли;
	
	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.Детализация Тогда
	    МассивНепроверяемыхРеквизитов.Добавить("ВидДетализации");   
	КонецЕсли;
	
	Если ОбъектЭДВС.ТипФормы <> Перечисления.ТипыФормВС.ВнутреннееПеремещение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СкладПолучатель");   
		МассивНепроверяемыхРеквизитов.Добавить("ОрганизацияПолучатель");   
	КонецЕсли;
	
	// В УПК единица измерения может быть не заполнена
	МассивНепроверяемыхРеквизитов.Добавить("Товары.ЕдиницаИзмерения");
	МассивНепроверяемыхРеквизитов.Добавить("ТоварыВС.ЕдиницаИзмерения");
	МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТовары.ЕдиницаИзмерения");
	МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.ЕдиницаИзмерения");
	
	Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ДетализацияИмпорта Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.Товар");
		МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.ТоварНаименование");
		МассивНепроверяемыхРеквизитов.Добавить("ИсходныеТоварыВС.ЕдиницаИзмерения");
	КонецЕсли;
	 
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.Товары, "Товары", Отказ);
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.ТоварыВС, "ТоварыВС", Отказ);
	
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.ИсходныеТовары, "ИсходныеТовары", Отказ);
	ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ОбъектЭДВС.ИсходныеТоварыВС, "ИсходныеТоварыВС", Отказ);
	
КонецПроцедуры

Процедура ДокументЭДВС_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектЭДВС, ПроверяемаяТабличнаячасть, ИмяТабличнойЧасти, Отказ)
		
	Для Каждого СтрокаТабличнойЧасти Из ПроверяемаяТабличнаячасть Цикл
		
		ТекстСообщенияШаблон = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3""'");
		
		Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.Детализация И ОбъектЭДВС.ВидДетализации <> Перечисления.ВидДетализации.КонвертацияМеждуЕИ Тогда			
		
			Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ПризнакПроисхождения) Тогда
				ТипПроисхПоПризнакуПроисхождения = ВСКлиентСервер.ОпределитьТипПроисхожденияПоПризнакуПроисхождения(СтрокаТабличнойЧасти.ПризнакПроисхождения);
				Если ТипПроисхПоПризнакуПроисхождения <> СтрокаТабличнойЧасти.ТипПроисхождения Тогда				
					ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Значение в колонке ""ТипПроисхождения"" не соответствует указанному ""ПризнакуПроисхождения"" в строке %1 списка ""%2""'"), 
					Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
					ИмяТабличнойЧасти);
					
					Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ТипПроисхождения";
					ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;			
		
		Если ОбъектЭДВС.ТипФормы = Перечисления.ТипыФормВС.ФизическаяМетка Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ФизическаяМетка) 
				И (ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "ТоварыВС")Тогда
				//Товар
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
				"Физическая метка", 
				Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
				ИмяТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ФизическаяМетка";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
			ИначеЕсли ЗначениеЗаполнено(СтрокаТабличнойЧасти.ФизическаяМетка) 
				И (ИмяТабличнойЧасти = "ИсходныеТовары" ИЛИ ИмяТабличнойЧасти = "ИсходныеТоварыВС") Тогда
				ТекстСообщенияШаблон = НСтр("ru = 'Заполнена колонка ""%1"" в строке %2 списка ""%3""!'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
				"Физическая метка", 
				Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
				ИмяТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ФизическаяМетка";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.Количество <> 1 
				И (ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "ТоварыВС") Тогда
				ТекстСообщенияШаблон = НСтр("ru = 'В строке %1 списка ""%2"" количество не равно 1!'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
				Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
				ИмяТабличнойЧасти);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Количество";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектЭДВС, Поле, "Объект", Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

Функция МассивИсключаемыхСпособовЗаполненияЦен() Экспорт
	
	ИсключаемыеТипыЦен = Новый Массив;
	
	//добавить в массив типы цен, которые нужно исключить из выбора
	//например:
	ИсключаемыеТипыЦен.Добавить(Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости);
	
	Возврат ИсключаемыеТипыЦен;
	
КонецФункции

#КонецОбласти

#Область РаботаСоСкладами

Функция ПолучитьМассивОрганизацийБезВиртуальныхСкладов(МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка Как Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВиртуальныеСклады КАК ВиртуальныеСклады
	|		ПО (ВиртуальныеСклады.Организация = Организации.Ссылка)
	|ГДЕ
	|	Организации.Ссылка В(&МассивВыбранныхОрганизаций)
	|	И ВиртуальныеСклады.Ссылка ЕСТЬ NULL 
	|
	|";
	
	Запрос.УстановитьПараметр("МассивВыбранныхОрганизаций", МассивОрганизаций);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаРезультатаЗапроса = РезультатЗапроса.Выбрать();
	МассивОрганизацийБезСкладов = Новый Массив;
	
	Пока ВыборкаРезультатаЗапроса.Следующий() цикл
		МассивОрганизацийБезСкладов.Добавить(ВыборкаРезультатаЗапроса.Организация);
	КонецЦикла;
	
	Возврат МассивОрганизацийБезСкладов;
	
КонецФункции

Функция ТаблицаСтруктурныхЕдиницДляСопоставления(ВыбранныеСЕ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&ВыбранныеОрганизации)
	|
	|";
	
	Запрос.УстановитьПараметр("ВыбранныеОрганизации", ВыбранныеСЕ);
	
	ТаблицаСЕ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаСЕ;

КонецФункции	
	
#КонецОбласти

#Область Прочее

Процедура УстановитьПараметрыДинамическогоСпискаНоменклатуры(Строки) Экспорт
	
	Если Не ЭСФСервер.ВедетсяУчетПоТоварамНаВС(ТекущаяДатаСеанса()) Тогда
		Возврат;
	КонецЕсли;
	
	СписокНоменклатуры = Строки.ПолучитьКлючи();
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСведенияОНоменклатуреГСВССрезПоследних();
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПараметров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивПризнаков = Новый Массив;
	МассивПризнаков.Добавить("ПризнакУчетаНаВиртуальномСкладе");
	МассивПризнаков.Добавить("ПризнакУникальногоТовара");
	МассивПризнаков.Добавить("ПризнакПеречняИзьятий");
	
	Для Каждого Строка Из Строки Цикл
		НайтиИЗаполнитьПризнакВСтроке(Строка.Значение.Данные, ТаблицаПараметров, МассивПризнаков, "Ссылка");
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПризнакВиртуальногоСкладаДляТабличнойЧасти(Знач ТабличнаяЧасть, ТекущаяСтрока = Неопределено, Знач Дата) Экспорт
	
	Если ТекущаяСтрока = Неопределено Тогда
		МассивНоменклатуры = ТабличнаяЧасть.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура");
	Иначе
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ТекущаяСтрока.Номенклатура);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСведенияОНоменклатуреГСВССрезПоследних();
	
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("СписокНоменклатуры",МассивНоменклатуры);
	
	ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаПараметров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока = Неопределено Тогда
		
		Для Каждого Строка Из ТабличнаяЧасть Цикл
			НайтиИЗаполнитьПризнакВСтроке(Строка, ТаблицаПараметров,
				ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ПризнакУчетаНаВиртуальномСкладе"));
		КонецЦикла;
		
	Иначе
		НайтиИЗаполнитьПризнакВСтроке(ТекущаяСтрока, ТаблицаПараметров,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ПризнакУчетаНаВиртуальномСкладе"));
	КонецЕсли;
	
КонецПроцедуры

Процедура НайтиИЗаполнитьПризнакВСтроке(Строка, ТаблицаПоиска, МассивПризнаков, ИмяРеквизитаПоиска = "Номенклатура")
	
	МассивПоиска = ТаблицаПоиска.НайтиСтроки(Новый Структура("Ссылка", Строка[ИмяРеквизитаПоиска]));
	Если МассивПоиска.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Признак Из МассивПризнаков Цикл
		Если Строка.Свойство(Признак)Тогда
			Строка[Признак] = МассивПоиска[0][Признак];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаСведенияОНоменклатуреГСВССрезПоследних()
	
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КодТНВЭД.Код КАК Код,
		|	Номенклатура.Ссылка КАК Ссылка,
		|	Номенклатура.КодТНВЭД КАК КодТНВЭД
		|ПОМЕСТИТЬ ВТ_СписокНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&СписокНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НоменклатураГСВС.Ссылка КАК Ссылка,
		|	НоменклатураГСВС.КодГСВС КАК КодГСВС
		|ПОМЕСТИТЬ ВТ_СписокНоменклатурыГСВС
		|ИЗ
		|	Справочник.НоменклатураГСВС КАК НоменклатураГСВС
		|ГДЕ
		|	НоменклатураГСВС.КодГСВС В
		|			(ВЫБРАТЬ
		|				Т.Код
		|			ИЗ
		|				ВТ_СписокНоменклатуры КАК Т)
		|	И НоменклатураГСВС.ТипКодаГСВС = ЗНАЧЕНИЕ(Перечисление.ТипыКодовГСВС.ТНВЭД)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУникальногоТовара КАК ПризнакУникальногоТовара,
		|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий КАК ПризнакПеречняИзьятий,
		|	СписокНоменклатурыГСВС.КодГСВС КАК КодТНВЭД
		|ПОМЕСТИТЬ ВТ_СведенияОНоменклатуре
		|ИЗ
		|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
		|			&Дата,
		|			НоменклатураГСВС В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ВТ_СписокНоменклатурыГСВС КАК Т)) КАК СведенияОНоменклатуреГСВССрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СписокНоменклатурыГСВС КАК СписокНоменклатурыГСВС
		|		ПО СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС = СписокНоменклатурыГСВС.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КодТНВЭД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СписокНоменклатуры.Ссылка КАК Ссылка,
		|	ВТ_СведенияОНоменклатуре.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
		|	ВТ_СведенияОНоменклатуре.ПризнакУникальногоТовара КАК ПризнакУникальногоТовара,
		|	ВТ_СведенияОНоменклатуре.ПризнакПеречняИзьятий КАК ПризнакПеречняИзьятий
		|ИЗ
		|	ВТ_СписокНоменклатуры КАК ВТ_СписокНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияОНоменклатуре КАК ВТ_СведенияОНоменклатуре
		|		ПО ВТ_СписокНоменклатуры.Код = ВТ_СведенияОНоменклатуре.КодТНВЭД";
	
КонецФункции

Функция ДокументОбъектЗаявлениеОВвозеТоваров() Экспорт
	
	Возврат Тип("ДокументОбъект.ЗаявлениеОВвозеТоваров")
	
КонецФункции

#КонецОбласти

Процедура УстановитьЦеныПоТипу(УстанавливаемыйТипЦен, ОбъектЭДВС, ИмяТабличнойЧасти) Экспорт

	Если НЕ ЗначениеЗаполнено(УстанавливаемыйТипЦен) Тогда
		Возврат;
	КонецЕсли; 
	
	ВалютаРегламентированногоУчета 	= ЭСФСерверПереопределяемый.ВалютаРегламентированногоУчета();
	
	//	Получим цены нужного типа
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивНоменклатуры", 	ОбъектЭДВС[ИмяТабличнойЧасти].Выгрузить().ВыгрузитьКолонку("Товар"));
	Запрос.УстановитьПараметр("Организация", 			ОбъектЭДВС.Организация);
	Запрос.УстановитьПараметр("ТипЦен", 				УстанавливаемыйТипЦен);
	Запрос.УстановитьПараметр("ДатаЦен", 				ОбъектЭДВС.Дата);
	Запрос.УстановитьПараметр("ВалютаЦенПоУмолчанию", 	ВалютаРегламентированногоУчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Валюта, &ВалютаЦенПоУмолчанию) КАК Валюта,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаЦен,
	|				Номенклатура В (&МассивНоменклатуры)
	|					И ВидЦены = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = СправочникНоменклатура.Ссылка)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В(&МассивНоменклатуры)";
	
	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
	
	// Найдем у данной номенклатуры значение цены выбранного типа.
	Для каждого СтрокаТабличнойЧасти Из ОбъектЭДВС[ИмяТабличнойЧасти] Цикл
		
		// Сбросим выборку для последующего поиска.
			ВыборкаИзЗапроса.Сбросить();
			
			// Ищем в выборке номенклатуру.
			Если ВыборкаИзЗапроса.НайтиСледующий(СтрокаТабличнойЧасти.Товар, "Номенклатура") И ЗначениеЗаполнено(ВыборкаИзЗапроса.Цена) Тогда
				
				ЦенаБазовая = ВыборкаИзЗапроса.Цена;
				
			Иначе
				ЦенаБазовая = СтрокаТабличнойЧасти.Цена;
				
				ТекстОшибки = НСтр(
				"ru = 'Для товара ""%1"" цены не перезаполнены.'");
				
				ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТабличнойЧасти.Товар);
				
				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Цена";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки, ОбъектЭДВС.Ссылка, Поле, "Объект");	
				
			КонецЕсли;
			
			СтрокаТабличнойЧасти.Цена = ЦенаБазовая;
		
			СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
			
	КонецЦикла;
	
КонецПроцедуры  
