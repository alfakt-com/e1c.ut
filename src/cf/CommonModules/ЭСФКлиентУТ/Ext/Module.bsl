////////////////////////////////////////////////////////////////////////////////
// ЭСФКлиентУТ: переопределяемый интерфейс обмена с электронными счетами-фактурами с ИС ЭСФ в УТ/КА/УП
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обработчик нажатия на гиперссылку ЭСФ в форме счета-фактуры.
//
// Параметры:
//  Форма - Форма, УправляемаяФорма - Форма счета-фактуры, 
//   в которой была нажата гиперссылка ЭСФ.
//
Процедура СостояниеЭДНажатие(Форма, ПараметрыОткрытия, ТекстСостоянияЭД) Экспорт
	
	Ссылка = ?(ЭСФКлиентСервер.ЭтоОбычнаяФорма(Форма), Форма.Ссылка, Форма.Объект.Ссылка);
	ОбменЭСФОтключен = (ТекстСостоянияЭД = НСтр("ru = 'Настроить обмен электронными счетами-фактурами'"));
	
	Если ЗначениеЗаполнено(Форма.АктуальныйЭСФ) Тогда
		
		ПоказатьЗначение(, Форма.АктуальныйЭСФ);
		
	ИначеЕсли ОбменЭСФОтключен Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьСостояниеЭДПослеНастройкиОбменаЭСФ", ЭСФКлиентУТ);
		ОткрытьФорму("Обработка.ОбменЭСФ.Форма.НастройкиОбменаЭСФ", , , , , , ОписаниеОповещения);
		
	ИначеЕсли НЕ ОбменЭСФОтключен Тогда
		
		ПараметрыОповещения = Новый Структура("Форма", Форма);
		ОбработкаПродолжения = Новый ОписаниеОповещения("СостояниеЭДНажатиеПослеЗаписиДокумента", ЭСФКлиентУТ, ПараметрыОповещения);
		ВыполнитьПроверкуЗаписиДокументов(Форма, ОбработкаПродолжения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписьКнигиПокупокПослеЗаписи(Форма, ПараметрыЗаписи) Экспорт
	
	МассивИмениФормы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Форма.ИмяФормы, ".");
	
	Если НЕ МассивИмениФормы.Получить(0) = "Документ" 
		ИЛИ НЕ МассивИмениФормы.Получить(1) = "ЗаписьКнигиПокупок" Тогда
		Возврат;	
	КонецЕсли;	
	
	Оповестить("ОбновитьСостояниеЭД");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ВыполнитьПроверкуЗаписиДокументов(Форма, ОбработкаПродолжения) Экспорт
	
	ТекстВопроса = НСтр(
		"ru = 'Перед выполнением действия необходимо записать и провести документ.
		|Записать и провести документ?'");
	
	Ссылка = ?(ЭСФКлиентСервер.ЭтоОбычнаяФорма(Форма), Форма.Ссылка, Форма.Объект.Ссылка);
	Если Ссылка.Пустая() ИЛИ Форма.Модифицированность ИЛИ НЕ Форма.Объект.Проведен Тогда
		
		ПараметрыОповещения = Новый Структура("Форма, ОбработкаПродолжения", Форма, ОбработкаПродолжения);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПроверкуЗаписиДокументовПослеОтветаНаВопрос", ЭСФКлиентУТ, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОбработкаПродолжения, Истина);
	
КонецПроцедуры

Процедура ВыполнитьПроверкуЗаписиДокументовПослеОтветаНаВопрос(Ответ, Контекст) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьУспешна = Контекст.Форма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
	ВыполнитьОбработкуОповещения(Контекст.ОбработкаПродолжения, ЗаписьУспешна);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СостояниеЭДНажатиеПослеЗаписиДокумента(Результат, Контекст) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = ?(ЭСФКлиентСервер.ЭтоОбычнаяФорма(Контекст.Форма), Контекст.Форма.Ссылка, Контекст.Форма.Объект.Ссылка);
	
	Если ТипЗнч(Ссылка) = ЭСФКлиентСерверПереопределяемый.ТипДокументСсылкаСчетФактураВыданный() Тогда
		ЭСФКлиент.СоздатьЭСФ(Контекст.Форма);
	ИначеЕсли ЭСФКлиентСерверПереопределяемый.ЭтоДокументСсылкаСчетФактураПолученный(ТипЗнч(Ссылка)) Тогда
		НайденныеДокументыЭДВС = ЭСФВызовСервера.НаличиеЭДВС(Ссылка);

		Если НайденныеДокументыЭДВС.Количество() > 0 Тогда	
			
			Для Каждого НайденныйДокумент Из НайденныедокументыЭДВС Цикл
				ТекстОшибки = НСтр("ru='На основании учетного документа уже введен %1. Рекомендуем отвязать ЭДВС от документа ""Приобретение товаров и услуг"", в противном случае образуются некорректные остатки!!!'");
				ТекстОшибки = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстОшибки, НайденныйДокумент);
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстОшибки);
			КонецЦикла;
		Иначе
			
			ПараметрыФормы = Новый Структура;
			СтруктураОтборов = ЭСФВызовСервера.НовыйОтборФормыВыбораЭСФ(Ссылка);
			ПараметрыФормы.Вставить("Отбор", СтруктураОтборов.Отбор);
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", СтруктураОтборов.ПользовательскиеНастройки);
			ОткрытьФорму("Документ.ЭСФ.ФормаВыбора", ПараметрыФормы, Контекст.Форма);
			
		КонецЕсли;			
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСостояниеЭДПослеНастройкиОбменаЭСФ(Результат, Контекст) Экспорт
	
	Оповестить("ОбновитьСостояниеЭД");
	
КонецПроцедуры

#КонецОбласти
