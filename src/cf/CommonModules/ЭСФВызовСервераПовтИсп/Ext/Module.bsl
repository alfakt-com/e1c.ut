 ////////////////////////////////////////////////////////////////////////////////
 // СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
 
Функция ВыполнятьКриптографическиеОперацииНаКлиенте() Экспорт
	
	Если Константы.МестоВыполненияКриптографическихОпераций.Получить() = Перечисления.МестаВыполненияКриптографическихОпераций.НаКлиенте Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// См. ЭСФСервер.ПользователиИСЭСФ()
Функция ПользователиИСЭСФ(Знач ПользовательИБ) Экспорт 
	
	Возврат ЭСФСервер.ПользователиИСЭСФ(ПользовательИБ);
	
КонецФункции

// См. ЭСФСервер.ПрофилиИСЭСФ()
Функция ПрофилиИСЭСФ(Знач СтруктурнаяЕдиница, Знач ПользовательИСЭСФ = Неопределено, Знач ПользовательИБ = Неопределено) Экспорт
	
	Возврат ЭСФСервер.ПрофилиИСЭСФ(СтруктурнаяЕдиница, ПользовательИСЭСФ, ПользовательИБ);
	
КонецФункции

Функция ПарольАутентификации(Знач ПользовательИСЭСФ) Экспорт
	
	Возврат ПользовательИСЭСФ.ПарольАутентификации;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Получение имен реквизитов и имен таблиц

Функция ИмяТаблицыКонтрагентов(Знач НаправленияЭСФ) Экспорт
	
	Если НаправленияЭСФ = Перечисления.НаправленияЭСФ.Входящий Тогда
		Имя = "Поставщики";	
	ИначеЕсли НаправленияЭСФ = Перечисления.НаправленияЭСФ.Исходящий Тогда
		Имя = "Получатели";	
	Иначе
		ВызватьИсключение НСтр("ru = 'Параметр ""НаправленияЭСФ"" имеет некорректное значение.'");
	КонецЕсли;
	
	Возврат Имя;
	
КонецФункции

Функция ИмяРеквизитаКонтрагента(Знач НаправленияЭСФ) Экспорт
	
	Если НаправленияЭСФ = Перечисления.НаправленияЭСФ.Входящий Тогда
		Имя = "Поставщик";	
	ИначеЕсли НаправленияЭСФ = Перечисления.НаправленияЭСФ.Исходящий Тогда
		Имя = "Получатель";	
	Иначе
		ВызватьИсключение НСтр("ru = 'Параметр ""НаправленияЭСФ"" имеет некорректное значение.'");
	КонецЕсли;
	
	Возврат Имя;
	
КонецФункции

Функция ИмяТаблицыСтруктурныхЕдиниц(Знач НаправленияЭСФ) Экспорт  
	
	Если НаправленияЭСФ = Перечисления.НаправленияЭСФ.Входящий Тогда
		Имя = "Получатели";	
	ИначеЕсли НаправленияЭСФ = Перечисления.НаправленияЭСФ.Исходящий Тогда
		Имя = "Поставщики";	
	Иначе
		ВызватьИсключение НСтр("ru = 'Параметр ""НаправленияЭСФ"" имеет некорректное значение.'");
	КонецЕсли;
	
	Возврат Имя;
	
КонецФункции

Функция ИмяРеквизитаСтруктурнойЕдиницы(Знач НаправленияЭСФ) Экспорт
	
	Если НаправленияЭСФ = Перечисления.НаправленияЭСФ.Входящий Тогда
		Имя = "Получатель";	
	ИначеЕсли НаправленияЭСФ = Перечисления.НаправленияЭСФ.Исходящий Тогда
		Имя = "Поставщик";	
	Иначе
		ВызватьИсключение НСтр("ru = 'Параметр ""НаправленияЭСФ"" имеет некорректное значение.'");
	КонецЕсли;
	
	Возврат Имя;
	
КонецФункции

Функция ПолучитьПараметрыПодключенияКСерверуИСЭСФ() Экспорт
	
	НастройкиПрокси = ЭСФСервер.ПолучитьПараметрыПодключенияКСерверуИСЭСФ();
	
	Возврат НастройкиПрокси;	
КонецФункции

Функция ПолучитьТаймаутПодключенияИСЭСФ() Экспорт

	ПолучитьПараметрыПодключенияКСерверу = ЭСФСервер.ПолучитьПараметрыПодключенияКСерверуИСЭСФ();
	
	ТаймаутОжиданияСервера = ПолучитьПараметрыПодключенияКСерверу.СерверИСЭСФ_Таймаут;
	
	Если НЕ ЗначениеЗаполнено(ТаймаутОжиданияСервера) Тогда
		ТаймаутОжиданияСервера = 120;	
	КонецЕсли;
	
	Возврат ТаймаутОжиданияСервера;
	
КонецФункции

// Получает ограничение использования фоновоых заданий ЭСФ
// Фоновые задания в файловой ИБ работаю начиная с версии 8.3.3
Функция ИспользоватьФоновуюОтправкуЭСФ() Экспорт
	
	// ОбщегоНазначения.ИнформационнаяБазаФайловая
	СтрокаСоединенияИнформационнойБазы = "";
	
	Если ПустаяСтрока(СтрокаСоединенияИнформационнойБазы) Тогда
		СтрокаСоединенияИнформационнойБазы = СтрокаСоединенияИнформационнойБазы();
	КонецЕсли;
	
	ИБФайловая = Найти(Врег(СтрокаСоединенияИнформационнойБазы), "FILE=") = 1;

	Возврат ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().ИспользоватьФоновуюОтправкуЭСФ() 
		И (НЕ ИБФайловая ИЛИ (ИБФайловая И НЕ (Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_1
		ИЛИ Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_2_13
		ИЛИ Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_2_16
		ИЛИ Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_3_1
		ИЛИ Метаданные.РежимСовместимости = Метаданные.СвойстваОбъектов.РежимСовместимости.Версия8_3_2)));
	
КонецФункции
	
// Возвращает текущую версию ИС ЭСФ.
//
// Параметры:
//  ТекстОшибки - Строка - Содержит текст ошибки, если не удалось получить версию ИС ЭСФ.
//
// Возвращаемое значение:
//  Строка, Неопределено - Текушая версия ИС ЭСФ.
//   Строка, если удалось получить текущую версию ИС ЭСФ.
//   Неопределено в противном случае.
//
Функция ВерсияИСЭСФ(ТекстОшибки) Экспорт
	
	Возврат ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().ВерсияИСЭСФ(ТекстОшибки);
	
КонецФункции

Функция ПолучитьЭСФВерсияВнешнегоМодуля() Экспорт
	
	Возврат ЭСФСервер.ПолучитьЭСФВерсияВнешнегоМодуля();
	
КонецФункции

Функция ПолучитьПараметрыЭСФ() Экспорт 
	
	Возврат ЭСФСервер.ПолучитьПараметрыЭСФ();
	
КонецФункции

Функция ПолучитьПредопределенноеЗначениеСтавкиНДС(СтавкаБезНДС) Экспорт
	Возврат ЭСФСерверПереопределяемый.ПолучитьПредопределенноеЗначениеСтавкиНДС(СтавкаБезНДС);
КонецФункции

