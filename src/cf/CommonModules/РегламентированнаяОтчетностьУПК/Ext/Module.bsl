

#Область ПроцедурыИФункцииВыгрузки

#Область ВыгрузкаФормы328

Функция ПолучитьСведенияОбОрганизацииДляВыгрузкиФорма328(Знач Организация, Знач ДатаЗначения = Неопределено, Знач СписокПоказателей = Неопределено) Экспорт
	
	Перем ОргСведения;
	Перем Значение;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Структура, в которой будут возвращаться найденные значения.
	ОргСведения = Новый Структура;
	
	Если ДатаЗначения = Неопределено Тогда
		ДатаЗначения = ТекущаяДатаСеанса();
	КонецЕсли;
	ДатаЗначения = КонецДня(ДатаЗначения);
	
	ПустаяДата = '00010101000000';
	
	Организация = Организация.ПолучитьОбъект();
	Организация.Прочитать();

	ОргСведения.Вставить("ПБОЮЛ", НЕ Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	
	Если СписокПоказателей = Неопределено Тогда
		СписокПоказателей = Новый Массив;
		СписокПоказателей.Добавить("НаимНО");
		СписокПоказателей.Добавить("КодНО");
		СписокПоказателей.Добавить("ИННЮЛ");
		СписокПоказателей.Добавить("КППЮЛ");
		СписокПоказателей.Добавить("НаимЮЛПол");
		СписокПоказателей.Добавить("ИННФЛ");
		СписокПоказателей.Добавить("ФИО");
		СписокПоказателей.Добавить("ОснВидДеят");
		СписокПоказателей.Добавить("ОКВЭД");
		СписокПоказателей.Добавить("ОКАТО");
		СписокПоказателей.Добавить("ОКПО");
		СписокПоказателей.Добавить("ДатаРегистрации");
		СписокПоказателей.Добавить("СвидСН");
		СписокПоказателей.Добавить("СвидДВ");
		СписокПоказателей.Добавить("ФИОРук");
		СписокПоказателей.Добавить("ДолжнРук");
		СписокПоказателей.Добавить("ФИОБух");
		СписокПоказателей.Добавить("ИННРук");
		СписокПоказателей.Добавить("ИННБух");
	ИначеЕсли ТипЗнч(СписокПоказателей) = Тип("Строка") Тогда
		СписокПоказателей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СписокПоказателей, ",", Истина, Истина);
	КонецЕсли;
	
	Для Каждого Показатель Из СписокПоказателей Цикл

		Если Показатель = "НаимНО" Тогда
			
			Если ЗначениеЗаполнено(Организация.РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.РегистрацияВНалоговомОргане, "НаименованиеИФНС");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Значение) Тогда
				Значение = Организация.НаименованиеНалоговогоОргана;
			КонецЕсли;
			
		ИначеЕсли Показатель = "КодНО" Тогда
			
			Если ЗначениеЗаполнено(Организация.РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.РегистрацияВНалоговомОргане, "Код");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Значение) Тогда
				Значение = Организация.КодНалоговогоОргана;
			КонецЕсли;
			
		ИначеЕсли Показатель = "ИННЮЛ" Тогда
			
			Значение = Организация.ИНН;
			
		ИначеЕсли Показатель = "КППЮЛ" Тогда
			
			Значение = Организация.КПП;
			
		ИначеЕсли Показатель = "НаимЮЛПол" Тогда
			
			Значение = Организация.НаименованиеПолное;
			
		ИначеЕсли Показатель = "ИННФЛ" Тогда
			
			Если ОргСведения.ПБОЮЛ Тогда
				Значение = Организация.ИНН;
			КонецЕсли;
			
		ИначеЕсли Показатель = "ФИО" Тогда
			
			Если ОргСведения.ПБОЮЛ Тогда
				Если ЗначениеЗаполнено(Организация.ИндивидуальныйПредприниматель) Тогда
					Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.ИндивидуальныйПредприниматель, "Наименование");
				Иначе
					Значение = Организация.НаименованиеПолное;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли Показатель = "ОснВидДеят" Тогда
			
			Значение = Организация.НаименованиеОКВЭД;
			
		ИначеЕсли Показатель = "ОКВЭД" Тогда
			
			Значение = Организация.КодОКВЭД;
			
		ИначеЕсли Показатель = "ОКАТО" Тогда
			
			// Данный реквизит заполняется из регистрации в налоговом органе организации.
			
			Если ЗначениеЗаполнено(Организация.РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация.РегистрацияВНалоговомОргане, "КодПоОКАТО");
			КонецЕсли;
			
		ИначеЕсли Показатель = "ОКПО" Тогда
			
			Значение = Организация.КодПоОКПО;
			
		ИначеЕсли Показатель = "ДатаРегистрации" Тогда
			
			Значение = Организация.ДатаРегистрации;
			
		ИначеЕсли Показатель = "СвидСН" Тогда
			
			Значение = Организация.СерияСвидетельстваПоНДС + "/" + Организация.НомерСвидетельстваПоНДС;
			
		ИначеЕсли Показатель = "СвидДВ" Тогда
			
			Значение = Организация.ДатаСвидетельстваПоНДС;
			
		ИначеЕсли Показатель = "ФИОРук" Тогда
			
			СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация.Ссылка, ДатаЗначения);
			Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураОтветственных.Руководитель, "Наименование");
			
		ИначеЕсли Показатель = "ДолжнРук" Тогда
			
			СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация.Ссылка, ДатаЗначения);
			Значение = СтруктураОтветственных.РуководительДолжность;
			
		ИначеЕсли Показатель = "ФИОБух" Тогда
			
			СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация.Ссылка, ДатаЗначения);
			Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураОтветственных.ГлавныйБухгалтер, "Наименование");
			
		ИначеЕсли Показатель = "ИННРук" Тогда
			
			СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация.Ссылка, ДатаЗначения);
			Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураОтветственных.Руководитель, "ИНН");
			
		ИначеЕсли Показатель = "ИННБух" Тогда
			
			СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация.Ссылка, ДатаЗначения);
			Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураОтветственных.ГлавныйБухгалтер, "ИНН");
			
		КонецЕсли;
		
		ОргСведения.Вставить(Показатель, Значение);
		
	КонецЦикла;
	
	Возврат ОргСведения;
	
КонецФункции

// Выгружает данные отчета в формат XML.
//
// Параметры:
//   РевизияВыгрузки - ревизия выгрузки файла, определяет структуру файла
//
Функция ВыгрузитьОтчетВXMLДляСОНОФорма328(ЗНАЧ ДокументДляВыгрузки, ЗНАЧ ДанныеДляВыгрузки, ЗНАЧ РевизияВыгрузки) Экспорт
	
	Префикс  = РевизияВыгрузки;
	ИмяФайла = ПолучитьИмяВременногоФайла("xml");
	
	// Запишем общие атрибуты (code, version) и создадим элемент form.
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьФайл(ИмяФайла,"UTF-8");
	Запись.ЗаписатьОбъявлениеXML();
	
	// Запишем корневой элемент.
	Запись.ЗаписатьНачалоЭлемента("fno");
	
	МакетВыгрузки = Документы.ЗаявлениеОВвозеТоваров.ПолучитьМакет("ВыгрузкаВXML");
	
	ТаблОбщиеРеквизиты = Новый ТаблицаЗначений;
	ТаблОбщиеРеквизиты.Колонки.Добавить("ИмяАтрибута");
	ТаблОбщиеРеквизиты.Колонки.Добавить("ЗначениеАтрибута");
	
	ОбластьОбщихРеквизитов = МакетВыгрузки.Область("ОбщиеРеквизиты" + Префикс);
	Для Ном = ОбластьОбщихРеквизитов.Верх По ОбластьОбщихРеквизитов.Низ Цикл
		Строка = ТаблОбщиеРеквизиты.Добавить();
		Строка.ИмяАтрибута      = СокрП(МакетВыгрузки.Область(Ном, 1).Текст);
		Строка.ЗначениеАтрибута = СокрП(МакетВыгрузки.Область(Ном, 2).Текст);
	КонецЦикла;
	
	// Запишем атрибуты корневого элемента.
	Для Каждого Строка Из ТаблОбщиеРеквизиты Цикл
		Запись.ЗаписатьАтрибут(Строка.ИмяАтрибута, Строка.ЗначениеАтрибута);
	КонецЦикла;
	
	// Создадим таблицу для выгрузки.
	ТаблицаВыгрузки = Новый ТаблицаЗначений;
	ТаблицаВыгрузки.Колонки.Добавить("Форма");
	ТаблицаВыгрузки.Колонки.Добавить("Страница");
	ТаблицаВыгрузки.Колонки.Добавить("ИмяАтрибута");
	ТаблицаВыгрузки.Колонки.Добавить("ИмяЯчейки");
	ТаблицаВыгрузки.Колонки.Добавить("КоличествоROW");
	ТаблицаВыгрузки.Колонки.Добавить("ГруппаROW");
	ТаблицаВыгрузки.Колонки.Добавить("ИмяФормы");
	ТаблицаВыгрузки.Колонки.Добавить("ИмяЛиста");
	ТаблицаВыгрузки.Колонки.Добавить("Отображение");
	
	ТаблицаВыгрузки.Колонки.Добавить("КодФормы");
	ТаблицаВыгрузки.Колонки.Добавить("Выгружать");
	ТаблицаВыгрузки.Колонки.Добавить("Многострочность");
	ТаблицаВыгрузки.Колонки.Добавить("ЗаголовокФормы");
	ТаблицаВыгрузки.Колонки.Добавить("КоличествоНаЛисте");
	ТаблицаВыгрузки.Колонки.Добавить("Значение");
	
	ОбластьВыгрузки = МакетВыгрузки.Область("Выгрузка" + Префикс);
	ТекущееИмяФормы = Неопределено;
	Для Ном = ОбластьВыгрузки.Верх По ОбластьВыгрузки.Низ Цикл
		Строка = ТаблицаВыгрузки.Добавить();
		Строка.Форма           = СокрП(МакетВыгрузки.Область(Ном, 1).Текст);
		Строка.Страница        = СокрП(МакетВыгрузки.Область(Ном, 2).Текст);
		Строка.ИмяАтрибута     = СокрП(МакетВыгрузки.Область(Ном, 3).Текст);
		Строка.ИмяЯчейки       = СокрП(МакетВыгрузки.Область(Ном, 4).Текст);
		Строка.КоличествоROW   = СокрП(МакетВыгрузки.Область(Ном, 5).Текст);
		Строка.ИмяФормы        = СокрП(МакетВыгрузки.Область(Ном, 6).Текст);
		Строка.ИмяЛиста        = СокрП(МакетВыгрузки.Область(Ном, 7).Текст);
		Строка.Отображение     = СокрП(МакетВыгрузки.Область(Ном, 8).Текст);
		Строка.ГруппаROW       = СокрП(МакетВыгрузки.Область(Ном, 9).Текст);
		НовоеИмяФормы = Строка.ИмяФормы;
		Если НовоеИмяФормы <> ТекущееИмяФормы Тогда
			Попытка
				Макет = Документы.ЗаявлениеОВвозеТоваров.ПолучитьМакет("Показатели");
				Форма = Макет.ПолучитьОбласть(Строка.ИмяФормы +"_"+ Префикс);
			Исключение
				Форма = Неопределено;
			КонецПопытки;
		КонецЕсли;
		Если Форма <> Неопределено Тогда
			Строка.КодФормы          = СокрП(Форма.Область(1, 1).Текст);
			Строка.Выгружать         = Число(Форма.Область(1, 4).Текст);
			Строка.Многострочность   = Число(Форма.Область(1, 6).Текст);
			Строка.ЗаголовокФормы    = СокрП(Форма.Область(1, 9).Текст);
			Строка.КоличествоНаЛисте = Число(Форма.Область(1, 10).Текст);
			Строка.Значение          = "";
		КонецЕсли;
		ТекущееИмяФормы = Строка.ИмяФормы;
	КонецЦикла;
	
	// Выгрузка в XML.
	КоличествоСтрокВТаблице = ТаблицаВыгрузки.Количество();
	НомерСтроки = 0;
	
	ТекущаяФорма = Неопределено;
	ТекущаяСтраница = Неопределено;
	
	Пока Истина Цикл
		Если НомерСтроки >= КоличествоСтрокВТаблице Тогда
			Прервать;
		КонецЕсли;
		ВыгрузитьСтрокуВXMLФорма328(Запись, ТаблицаВыгрузки, КоличествоСтрокВТаблице, НомерСтроки, ДанныеДляВыгрузки, ТекущаяФорма, ТекущаяСтраница);
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Запись.ЗаписатьКонецЭлемента();		// </sheet>
	Запись.ЗаписатьКонецЭлемента();		// </sheetGroup>
	Запись.ЗаписатьКонецЭлемента();		// </form>
	
	Запись.ЗаписатьКонецЭлемента();     // fno
	
	Запись.Закрыть();
	
	// Данный текст модуля добавлен для совместимости с СОНО (в СОНО для UTF-8 нет BOM поля).
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ИмяФайла, "windows-1251");
	Строка = ТекстДок.ПолучитьСтроку(1);
	ТекстДок.ЗаменитьСтроку(1,Прав(Строка,СтрДлина(Строка)-3));
	ТекстДок.Записать(ИмяФайла, "windows-1251");
	
	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
	
	ФайлВременный = Новый Файл(ИмяФайла);
	Попытка
		ФайлВременный.УстановитьТолькоЧтение(Ложь);
		УдалитьФайлы(ИмяФайла);
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'ВыгрузкаВXMLЗаявленияОВвозеТоваров.Удаление файлов при выгрузке'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			ДокументДляВыгрузки,
			ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла);
	
КонецФункции

// Формирует построчно структуру XML файла из макета "ВыгрузкаВXML".
//
Процедура ВыгрузитьСтрокуВXMLФорма328(Запись, ТаблицаВыгрузки, КоличествоСтрокВТаблице, НомерСтроки, ДанныеДляВыгрузки, ТекущаяФорма = Неопределено, ТекущаяСтраница = Неопределено)
	
	СтрокаВыгрузки 	= ТаблицаВыгрузки.Получить(НомерСтроки);
	НоваяФорма 		= СтрокаВыгрузки.Форма;
	НоваяСтраница 	= СтрокаВыгрузки.Страница;
	Если ТекущаяФорма <> Неопределено И НоваяФорма <> ТекущаяФорма Тогда
		Запись.ЗаписатьКонецЭлемента();			// </sheet>
	КонецЕсли;
	Если НЕ НоваяФорма = ТекущаяФорма Тогда
		Если НЕ ТекущаяФорма = Неопределено Тогда
			Запись.ЗаписатьКонецЭлемента();			// </sheetGroup>
			Запись.ЗаписатьКонецЭлемента();			// </form>
		КонецЕсли;
		Запись.ЗаписатьНачалоЭлемента("form");
		Запись.ЗаписатьАтрибут("name",СтрокаВыгрузки.Форма);
		Запись.ЗаписатьНачалоЭлемента("sheetGroup");
	КонецЕсли;
	Если НЕ НоваяСтраница = ТекущаяСтраница Тогда
		Если ТекущаяФорма <> Неопределено И НоваяФорма <> ТекущаяФорма Тогда
			// Ничего не делаем.
		ИначеЕсли НЕ ТекущаяСтраница = Неопределено Тогда
			Запись.ЗаписатьКонецЭлемента();			// </sheet>
		КонецЕсли;
		Запись.ЗаписатьНачалоЭлемента("sheet");
		Запись.ЗаписатьАтрибут("name",СтрокаВыгрузки.Страница);
	КонецЕсли;
	
	Если СтрокаВыгрузки.Многострочность <> Неопределено И СтрокаВыгрузки.Многострочность = 1 Тогда 
		ВыгрузитьМногострочнуюФормуФорма328(Запись, ТаблицаВыгрузки, КоличествоСтрокВТаблице, НомерСтроки, ДанныеДляВыгрузки);
		// Проверим многострочное ли значение.
	ИначеЕсли ЗначениеЗаполнено(СтрокаВыгрузки.КоличествоROW) И СтрокаВыгрузки.КоличествоROW <> "0" Тогда  // Для обычных форм.
		// Если в обычной форме встретилась многострочность.
		КоличествоПовторений 	= Число(СтрокаВыгрузки.КоличествоROW);
		ГруппаRow 				= СтрокаВыгрузки.ГруппаROW;
		Для Н = 1 По КоличествоПовторений Цикл
			Запись.ЗаписатьНачалоЭлемента("row");
			СтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки);
			Если Н = 1 Тогда
				ТаблицаМногострочныхТегов = ТаблицаВыгрузки.СкопироватьКолонки();
				НоваяСтрока = ТаблицаМногострочныхТегов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыгрузки);
				КоличествоСтрокТаблицыВыгрузки = ТаблицаВыгрузки.Количество();
				// Проверим многострочная ли следующая строка.
				Если НомерСтроки < КоличествоСтрокТаблицыВыгрузки-1 Тогда 
					СледСтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки+1);
					Пока ЗначениеЗаполнено(СледСтрокаВыгрузки.КоличествоROW) И СледСтрокаВыгрузки.КоличествоROW <> "0" И (СледСтрокаВыгрузки.ГруппаRow = ГруппаRow) И (НомерСтроки < КоличествоСтрокТаблицыВыгрузки-1) Цикл
						НомерСтроки = НомерСтроки+1;
						НоваяСтрока = ТаблицаМногострочныхТегов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СледСтрокаВыгрузки);
						Если НомерСтроки < КоличествоСтрокТаблицыВыгрузки-1 Тогда
							СледСтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки+1);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			Для Каждого МногСтрока Из ТаблицаМногострочныхТегов Цикл
				ЗаписатьЗначениеЭлементаФорма328(Запись, МногСтрока, ДанныеДляВыгрузки);
			КонецЦикла;
			Запись.ЗаписатьКонецЭлемента();			// </row>
		КонецЦикла;
	Иначе
		ЗаписатьЗначениеЭлементаФорма328(Запись, СтрокаВыгрузки, ДанныеДляВыгрузки);
	КонецЕсли;
	
	ТекущаяФорма = НоваяФорма;
	ТекущаяСтраница = НоваяСтраница;
	
КонецПроцедуры

// Выгружает многострочные формы в XML.
//
Процедура ВыгрузитьМногострочнуюФормуФорма328(Запись, ТаблицаВыгрузки, КоличествоСтрокВТаблице, НомерСтроки, ДанныеДляВыгрузки)
	
	Перем СтруктураГруппы;
	
	СтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки);
	
	Если СтрокаВыгрузки.КоличествоНаЛисте = 1 Тогда  // форма многостраничная
		
		// для многострочной = одностраничной
		
		НачальнаяСтрока = НомерСтроки;
		КонечнаяСтрока = 0;
		
		ТекущаяФорма = СтрокаВыгрузки.Форма;
		СледСтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки+1);
		НоваяФорма = СледСтрокаВыгрузки.Форма;
		Пока НоваяФорма = ТекущаяФорма Цикл
			НомерСтроки = НомерСтроки + 1;
			
			ТекущаяФорма = СледСтрокаВыгрузки.Форма;
			Если НомерСтроки + 1 < КоличествоСтрокВТаблице Тогда
				СледСтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки+1);
				НоваяФорма = СледСтрокаВыгрузки.Форма;
				КонечнаяСтрока = НомерСтроки;
			Иначе
				НоваяФорма = Неопределено;
				КонечнаяСтрока = НомерСтроки;
			КонецЕсли;
		КонецЦикла;
		
		МногСтруктура = СтрокаВыгрузки.Значение[0].Данные;
		
		КоличествоЗаписей = 0;
		
		Для Каждого КлючИЗначение Из МногСтруктура Цикл
			ТаблицаСтрокГруппы = КлючИЗначение.Значение.Строки;
			КоличествоЗаписей =  ТаблицаСтрокГруппы.Количество();
			Прервать;
		КонецЦикла;
		
		ВсегоСтр = 0;
		
		Если КоличествоЗаписей <= 1 Тогда
			ВсегоСтр = 0;
		Иначе
			ВсегоСтр = КоличествоЗаписей - 1;
		КонецЕсли;
		
		ОдинШаг = Истина;
		НачальнаяСтрока = НачальнаяСтрока - 1;
		
		Для ШагФорм = 0 По ВсегоСтр Цикл
			
			Для Шаг = НачальнаяСтрока По КонечнаяСтрока Цикл
				
				Если Шаг = КонечнаяСтрока Тогда
					Прервать;
				КонецЕсли;
				
				СтрокаВыгрузкиТек = ТаблицаВыгрузки.Получить(Шаг);
				ТекущаяФорма 	  = СтрокаВыгрузкиТек.Форма; 
				ТекущаяСтраница   = СтрокаВыгрузкиТек.Страница;
				
				СтрокаВыгрузкиСлед = ТаблицаВыгрузки.Получить(Шаг + 1);
				
				НоваяФорма 		   = СтрокаВыгрузкиСлед.Форма;
				НоваяСтраница      = СтрокаВыгрузкиСлед.Страница;
				
				Если ОдинШаг Тогда 
					НомерЛиста = Новый Структура;
					НомерЛиста.Вставить("НомерЛиста",ШагФорм);
					ЗаписатьЗначениеЭлементаФорма328(Запись, СтрокаВыгрузкиСлед, ДанныеДляВыгрузки, НомерЛиста);
					ОдинШаг = Ложь;
					Продолжить;
				КонецЕсли;
				Если НоваяФорма <> ТекущаяФорма Тогда
					Запись.ЗаписатьКонецЭлемента();			// </sheet>
				КонецЕсли;
				Если НЕ НоваяФорма = ТекущаяФорма Тогда		
					Запись.ЗаписатьКонецЭлемента();			// </sheetGroup>
					Запись.ЗаписатьКонецЭлемента();			// </form>
					Запись.ЗаписатьНачалоЭлемента("form");
					Запись.ЗаписатьАтрибут("name",СтрокаВыгрузкиСлед.Форма);
					Запись.ЗаписатьНачалоЭлемента("sheetGroup");
				КонецЕсли;
				Если НЕ НоваяСтраница = ТекущаяСтраница Тогда
					Если НоваяФорма <> ТекущаяФорма Тогда
						// ничего не делаем
					Иначе
						Запись.ЗаписатьКонецЭлемента();			// </sheet>
					КонецЕсли;
					Запись.ЗаписатьНачалоЭлемента("sheet");
					Запись.ЗаписатьАтрибут("name",СтрокаВыгрузкиСлед.Страница);
				КонецЕсли;
				НомерЛиста = Новый Структура;
				НомерЛиста.Вставить("НомерЛиста",ШагФорм);
				ЗаписатьЗначениеЭлементаФорма328(Запись, СтрокаВыгрузкиСлед, ДанныеДляВыгрузки, НомерЛиста);
			КонецЦикла;
		КонецЦикла;
		
	Иначе // форма многострочная
		
		// Определяем одинаковое ли количество строк на всех страницах формы и создаем таблицу значений
		ОдинаковоеКоличествоСтрок = Истина;
		КоличествоСтрокНаЛисте = 0;
		
		ТаблицаМногострочнойФормы = ТаблицаВыгрузки.СкопироватьКолонки();
		НоваяСтрока = ТаблицаМногострочнойФормы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВыгрузки);
		
		ТекущаяФорма = СтрокаВыгрузки.Форма;
		СледСтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки+1);
		НоваяФорма = СледСтрокаВыгрузки.Форма;
		Пока НоваяФорма = ТекущаяФорма Цикл
			НомерСтроки = НомерСтроки+1;
			НоваяСтрока = ТаблицаМногострочнойФормы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СледСтрокаВыгрузки);
			Если ЗначениеЗаполнено(СледСтрокаВыгрузки.КоличествоROW) И СледСтрокаВыгрузки.КоличествоROW <> "0" Тогда
				ТекКоличествоСтрокНаЛисте = Число(СледСтрокаВыгрузки.КоличествоROW);
				Если КоличествоСтрокНаЛисте <> 0 И КоличествоСтрокНаЛисте <> ТекКоличествоСтрокНаЛисте Тогда
					ОдинаковоеКоличествоСтрок = Ложь;
				КонецЕсли;
				КоличествоСтрокНаЛисте = Число(СледСтрокаВыгрузки.КоличествоROW);
			КонецЕсли;
			ТекущаяФорма = СледСтрокаВыгрузки.Форма;
			Если НомерСтроки+1 < КоличествоСтрокВТаблице Тогда
				СледСтрокаВыгрузки = ТаблицаВыгрузки.Получить(НомерСтроки+1);
				НоваяФорма = СледСтрокаВыгрузки.Форма;
			Иначе
				НоваяФорма = Неопределено;
			КонецЕсли;
		КонецЦикла;
		
		//Выгружаем многострочные данные, у которых одинаковое количество строк
		//Если ОдинаковоеКоличествоСтрок Тогда 
		
		// Определим количество <sheetGroup>
		МногСтруктура = ДанныеДляВыгрузки.ТаблицаДанных;
		
		КоличествоЗаписей =  МногСтруктура.Количество();
		
		мКоличествоНаЛисте = СтрокаВыгрузки.КоличествоНаЛисте; // из макета Показатели
		Стр =  Цел(КоличествоЗаписей/мКоличествоНаЛисте);
		Если Стр = КоличествоЗаписей/мКоличествоНаЛисте Тогда
			ВсегоСтр = Стр;
		Иначе
			ВсегоСтр = Стр + 1;
		КонецЕсли;
		
		Если КоличествоЗаписей = 0 Тогда // форма не заполнена, то выгружаем пустые теги
			ВсегоСтр = 1;
		КонецЕсли;
		
		Для КолСтр = 1 По ВсегоСтр Цикл // sheetgroup
			Если КолСтр <> 1 Тогда
				Запись.ЗаписатьКонецЭлемента();		// </sheet>
				Запись.ЗаписатьКонецЭлемента();		// </sheetgroup>
				Запись.ЗаписатьНачалоЭлемента("sheetGroup");
				Запись.ЗаписатьНачалоЭлемента("sheet");
				Запись.ЗаписатьАтрибут("name", СтрокаВыгрузки.Страница);
			КонецЕсли;
			ТекущаяСтраница = СтрокаВыгрузки.Страница;
			Для Ном = 0 По ТаблицаМногострочнойФормы.Количество()-1 Цикл
				СтрокаТаблицы = ТаблицаМногострочнойФормы[Ном];
				НоваяСтраница = СтрокаТаблицы.Страница;
				// если перешли на новую страницу
				Если НоваяСтраница <> ТекущаяСтраница Тогда
					Запись.ЗаписатьКонецЭлемента();		// </sheet>
					Запись.ЗаписатьНачалоЭлемента("sheet");
					Запись.ЗаписатьАтрибут("name", СтрокаТаблицы.Страница);
				КонецЕсли;
				Если ЗначениеЗаполнено(СтрокаТаблицы.Отображение) И КолСтр <> Число(СтрокаТаблицы.Отображение) Тогда
					Продолжить;
				КонецЕсли;
				// проверим элемент это или нет
				Если Лев(СтрокаТаблицы.ИмяАтрибута,1) = "#" Тогда
					Атрибут = Сред(СтрокаТаблицы.ИмяАтрибута,2);
					// опеределим начальный или конечный элемент
					Если Лев(Атрибут,1) = "/" Тогда // это конечный элемент
						Запись.ЗаписатьКонецЭлемента();
					Иначе // это начальный
						Запись.ЗаписатьНачалоЭлемента(Атрибут);
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.КоличествоROW) И СтрокаТаблицы.КоличествоROW <> "0" Тогда
					КоличествоПовторений = Число(СтрокаТаблицы.КоличествоROW);
					Если КолСтр = ВсегоСтр И КолСтр <> 1  Тогда // рассчитаем сколько должно быть строк на последней странице, при этом на 1 стр - должно быть количество строк как в макете
						КоличествоПовторений = КоличествоЗаписей - КоличествоПовторений*(КолСтр-1);
					КонецЕсли;
					Для Н = 1 По КоличествоПовторений Цикл
						Запись.ЗаписатьНачалоЭлемента("row");
						Если Н = 1 Тогда
							ТаблицаМногострочныхТегов = ТаблицаМногострочнойФормы.СкопироватьКолонки();
							НоваяСтрока = ТаблицаМногострочныхТегов.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
							
							// Проверим многострочная ли следующая строка
							СледСтрокаВыгрузки = ТаблицаМногострочнойФормы.Получить(Ном+1);
							Пока ЗначениеЗаполнено(СледСтрокаВыгрузки.КоличествоROW) И СледСтрокаВыгрузки.КоличествоROW <> "0" Цикл
								Ном = Ном+1;
								НоваяСтрока = ТаблицаМногострочныхТегов.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СледСтрокаВыгрузки);
								Если Ном + 1 = ТаблицаМногострочнойФормы.Количество() Тогда
									Прервать;
								КонецЕсли;
								СледСтрокаВыгрузки = ТаблицаМногострочнойФормы.Получить(Ном+1);
							КонецЦикла;
						КонецЕсли;
						Для Каждого МногСтрока Из ТаблицаМногострочныхТегов Цикл
							СтруктураПараметров = Новый Структура;
							СтруктураПараметров.Вставить("КоличествоГруппСтраниц", КолСтр);
							СтруктураПараметров.Вставить("НомерЗаписи", Н);
							ЗаписатьЗначениеЭлементаФорма328(Запись, МногСтрока, ДанныеДляВыгрузки, СтруктураПараметров);
						КонецЦикла;
						
						Запись.ЗаписатьКонецЭлемента();			// </row>
					КонецЦикла;
				Иначе
					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("КоличествоГруппСтраниц", КолСтр);
					ЗаписатьЗначениеЭлементаФорма328(Запись, СтрокаТаблицы, ДанныеДляВыгрузки, СтруктураПараметров);
				КонецЕсли;
				СтрокаТаблицы = ТаблицаМногострочнойФормы[Ном];
				ТекущаяСтраница = СтрокаТаблицы.Страница;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Записываем значение в поле field из структуры хранения данных.
//
Процедура ЗаписатьЗначениеЭлементаФорма328(Запись, СтрокаВыгрузки, ДанныеДляВыгрузки, СтруктураПараметров = Неопределено)
	
	ДокументДляВыгрузки = ДанныеДляВыгрузки.ДокументСсылка;
	
	Запись.ЗаписатьНачалоЭлемента("field");
	Запись.ЗаписатьАтрибут("name",СтрокаВыгрузки.ИмяАтрибута);
	// Выгрузим значение ячейки, если оно есть в форме.
	ИмяЯчейки = СтрокаВыгрузки.ИмяЯчейки;
	Если ЗначениеЗаполнено(ИмяЯчейки) Тогда
		//получаем и записываем значение из отчета.
		Если СтрокаВыгрузки.Выгружать = 1 Тогда
			Если СтрокаВыгрузки.Многострочность Тогда
				// определим имя Листа по имени страницы
				ИмяЛиста = СтрокаВыгрузки.ИмяЛиста;
				СтруктураГруппы = Неопределено;
				Попытка
					Если СтруктураПараметров.Количество() = 1 Тогда 
						СтруктураГруппы = ДанныеДляВыгрузки[СтрокаВыгрузки.ИмяЯчейки];
					Иначе
						ИндексДляПоиска = СтруктураПараметров.КоличествоГруппСтраниц * СтрокаВыгрузки.КоличествоНаЛисте - СтрокаВыгрузки.КоличествоНаЛисте + СтруктураПараметров.НомерЗаписи - 1;
						СтруктураГруппы = ДанныеДляВыгрузки.ТаблицаДанных.Получить(ИндексДляПоиска)[СтрокаВыгрузки.ИмяЯчейки];
					КонецЕсли;
				Исключение
					СтруктураГруппы = Неопределено;
				КонецПопытки;
				
				Если ИмяЯчейки = "НомерСтраницы" Тогда
					КолСтр = Неопределено;
					СтруктураПараметров.Свойство("НомерЗаписи", КолСтр);
					Запись.ЗаписатьТекст(XMLСтрока(Формат(КолСтр,"ЧЦ=3; ЧВН=")));
					// заполнения многостроничных данных	
				ИначеЕсли СтрокаВыгрузки.КоличествоНаЛисте = 1 Тогда
					Если СтруктураГруппы <> Неопределено Тогда
						НомерЛиста = СтруктураПараметров.НомерЛиста;
						СтрокаЗначений = СтруктураГруппы.Строки[НомерЛиста];
						Попытка
							Строка = СтрокаЗначений[ИмяЯчейки];
						Исключение
							Строка = Неопределено;
						КонецПопытки;
						Если Строка <> Неопределено Тогда
							Значение = Строка;
							Значение = РегламентированнаяОтчетностьРК.ПривестиЗначениеКФорматуСОНО(Значение);
							Запись.ЗаписатьТекст(XMLСтрока(Значение));
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(СтрокаВыгрузки.КоличествоROW) И СтрокаВыгрузки.КоличествоROW <> "0" Тогда  // многострочная часть row
					КоличествоНаЛисте = Число(СтрокаВыгрузки.КоличествоROW);
					НомерЗаписиНаЛисте = Неопределено;
					СтруктураПараметров.Свойство("НомерЗаписи", НомерЗаписиНаЛисте);
					КолСтр = Неопределено;
					СтруктураПараметров.Свойство("КоличествоГруппСтраниц", КолСтр);
					Если СтруктураГруппы <> Неопределено Тогда
						Значение = СтруктураГруппы;
						Значение = РегламентированнаяОтчетностьРК.ПривестиЗначениеКФорматуСОНО(Значение);
						Запись.ЗаписатьТекст(XMLСтрока(Значение));
					КонецЕсли;
				Иначе // шапка или подвал
					Если СтруктураГруппы <> Неопределено Тогда
						Значение = СтруктураГруппы;
						Значение = РегламентированнаяОтчетностьРК.ПривестиЗначениеКФорматуСОНО(Значение);
						Запись.ЗаписатьТекст(XMLСтрока(Значение));
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(СтрокаВыгрузки.ИмяЯчейки) Тогда
					Попытка
						СтрокаОбласти = ДанныеДляВыгрузки[СтрокаВыгрузки.ИмяЯчейки];
						
					Исключение
						СтрокаОбласти = Неопределено;
					КонецПопытки;
				Иначе
					СтрокаОбласти = Неопределено;
				КонецЕсли;
				
				Если СтрокаОбласти <> Неопределено Тогда
					Значение = СтрокаОбласти;
					Значение = РегламентированнаяОтчетностьРК.ПривестиЗначениеКФорматуСОНО(Значение);
					Запись.ЗаписатьТекст(XMLСтрока(Значение));
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не найдена ячейка ""%1"" для выгрузки значения в XML.'"), ИмяЯчейки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					
					ЗаписьЖурналаРегистрации(
						НСтр("ru = 'ВыгрузкаВXMLЗаявленияОВвозеТоваров.Запись значений элементов'",
							ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
						УровеньЖурналаРегистрации.Предупреждение,
						,
						ДокументДляВыгрузки,
						ТекстСообщения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Запись.ЗаписатьКонецЭлемента();			// </field>
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


