#Область СлужебныеПроцедурыИФункции

// Функция формирует структуру, необходимую для установки индекса картинки 
// в таблице событий журнала регистрации.
//
Функция НомераКартинокСобытий152ФЗ() Экспорт
	
	НомераКартинок = Новый Соответствие;
	НомераКартинок.Вставить("_$Session$_.Authentication",		1);
	НомераКартинок.Вставить("_$Session$_.AuthenticationError",	2);
	НомераКартинок.Вставить("_$Session$_.Start",				3);
	НомераКартинок.Вставить("_$Session$_.Finish",				4);
	НомераКартинок.Вставить("_$Access$_.Access",				5);
	НомераКартинок.Вставить("_$Access$_.AccessDenied",			6);
	
	Возврат Новый ФиксированноеСоответствие(НомераКартинок);
	
КонецФункции

// Возвращает полные имена объектов метаданных содержащих персональные данные.
// Параметры:
//	Нет
//
// Возвращаемое значение
//	Массив - массив строк. Например: "РегистрСведений.ДокументыФизическихЛиц".
//
Функция ИменаИсточниковПерсональныхДанных() Экспорт
	
	ТаблицаСведений = ЗащитаПерсональныхДанных.СведенияОПерсональныхДанных();
	ТаблицаСведений.Сортировать("Объект");
	
	ИменаИсточников = ТаблицаСведений.ВыгрузитьКолонку("Объект");
	ИменаИсточников = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ИменаИсточников);
	
	Возврат Новый ФиксированныйМассив(ИменаИсточников);
	
КонецФункции

// Возвращает полные имена реквизитов объекта метаданных содержащего персональные данные по его полному имени.
// Параметры:
//	ИмяИсточника - Строка - полное имя источника метаданных. Например: "Справочник.ФизическиеЛица".
//
// Возвращаемое значение
//	Массив - массив строк. Например: "ФизическоеЛицо" или "ФизическиеЛица.ФизическоеЛицо".
//
Функция ИменаРеквизитовИсточникаСодержащихСубъект(ИмяИсточника) Экспорт
	
	ИменаРеквизитов = Новый Массив;
	МетаданныеИсточника = Метаданные.НайтиПоПолномуИмени(ИмяИсточника);
	
	ТипыСубъектов = Метаданные.ОпределяемыеТипы.СубъектПерсональныхДанных.Тип.Типы();
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ТипыСубъектов, Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных"));
	
	Если ОбщегоНазначения.ЭтоРегистр(МетаданныеИсточника) Тогда
		
		Для Каждого ТипСубъекта Из ТипыСубъектов Цикл
			
			ИменаИзмеренийТипа = ЗащитаПерсональныхДанных.ИменаИзмеренийРегистраПоТипу(МетаданныеИсточника, ТипСубъекта);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИменаРеквизитов, ИменаИзмеренийТипа);
			
			Если ИменаРеквизитов.Количество() > 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого ТипСубъекта Из ТипыСубъектов Цикл
			
			ТипыСсылкиИсточника = МетаданныеИсточника.СтандартныеРеквизиты.Ссылка.Тип.Типы();
			Если ТипыСсылкиИсточника.Найти(ТипСубъекта) = Неопределено Тогда
				
				ИменаРеквизитовТипа = ЗащитаПерсональныхДанных.ИменаРеквизитовПоТипу(МетаданныеИсточника, ТипСубъекта);
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИменаРеквизитов, ИменаРеквизитовТипа);
				
			Иначе
				ИменаРеквизитов.Добавить("Ссылка");
			КонецЕсли;
			
			Если ИменаРеквизитов.Количество() > 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ИменаРеквизитов.Количество() = 0 Тогда
			
			ТабличныеЧасти = МетаданныеИсточника.ТабличныеЧасти;
			
			Для Каждого ТипСубъекта Из ТипыСубъектов Цикл
				
				Если ИменаРеквизитов.Количество() > 0 Тогда
					Прервать;
				КонецЕсли;
				
				Для Каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
					
					ИменаРеквизитовТЧТипа = ЗащитаПерсональныхДанных.ИменаРеквизитовТЧОбъектаПоТипу(МетаданныеИсточника, ТабличнаяЧасть.Имя, ТипСубъекта, Истина);
					ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ИменаРеквизитов, ИменаРеквизитовТЧТипа);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Новый ФиксированныйМассив(ИменаРеквизитов);
	
КонецФункции

#КонецОбласти
