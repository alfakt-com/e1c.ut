#Область ПрограммныйИнтерфейс

// Определяет соответствие переданного документа типу "ЧекККМ".
//
// Параметры:
// * Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа.
//
Функция ЭтоЧекККМ(Контекст) Экспорт
	
	ЭтоЧек       = Ложь;
	ТипКонтекста = ТипЗнч(Контекст);
	
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, "Документ.ЧекККМ") Тогда
			ЭтоЧек = Истина;
		ИначеЕсли СтрНачинаетсяС(Контекст.ИмяФормы, "ОбщаяФорма.ПроверкаЗаполненияДокументов") Тогда
			Если ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.ЧекККМ") Тогда
				ЭтоЧек = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = Тип("ДокументСсылка.ЧекККМ") Тогда 
		ЭтоЧек = Истина;
	КонецЕсли;
	
	Возврат ЭтоЧек;
	
КонецФункции

// Определяет соответствие переданного документа типу "ЧекККМВозврат".
//
// Параметры:
// * Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа.
//
Функция ЭтоЧекККМВозврат(Контекст) Экспорт
	
	ЭтоЧекВозврат = Ложь;
	ТипКонтекста  = ТипЗнч(Контекст);
	
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, "Документ.ЧекККМВозврат") Тогда
			ЭтоЧекВозврат = Истина;
		ИначеЕсли СтрНачинаетсяС(Контекст.ИмяФормы, "ОбщаяФорма.ПроверкаЗаполненияДокументов") Тогда
			Если ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
				ЭтоЧекВозврат = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = Тип("ДокументСсылка.ЧекККМВозврат") Тогда 
		ЭтоЧекВозврат = Истина;
	КонецЕсли;
	
	Возврат ЭтоЧекВозврат;
	
КонецФункции

// Определяет соответствие переданного документа проверяемому типу.
//
// Параметры:
//  Контекст - УправляемаяФорма, ДокументСсылка - Контекст для определения типа документа.
//  Имя      - Строка - имя объекта метаданного документа.
//
Функция ЭтоДокументПоНаименованию(Контекст, Имя) Экспорт
	
	Результат = Ложь;
	ТипКонтекста = ТипЗнч(Контекст);
	ТипДокумента = Тип(СтрШаблон("ДокументСсылка.%1",Имя));
	Если ТипКонтекста = Тип("УправляемаяФорма") Тогда
		Если СтрНачинаетсяС(Контекст.ИмяФормы, СтрШаблон("Документ.%1",Имя)) Тогда
			Результат = Истина;
		ИначеЕсли СтрНачинаетсяС(Контекст.ИмяФормы, "ОбщаяФорма.ПроверкаЗаполненияДокументов") Тогда
			Если ТипЗнч(Контекст.Ссылка) = ТипДокумента Тогда
				Результат = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипКонтекста = ТипДокумента Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область Серии

// Подготовливает структуру, массив которых в дальнейшем будет передан в процедуру генерации серий.
// 
// Параметры:
// Возвращаемое значение:
// * Структура - Описание:
//		** Номенклатура - ОпределяемыйТип.Номенклатура - Номенклатура, для которой будет генерироваться серия.
//		** Серия        - ОпределяемыйТип.СерииНоменклатуры   - В данное значение будет записана сгенерированная серия.
//		** МРЦ          - Число - Максимальная розничная цена табачной продукции.
//		** ЕстьОшибка   - Булево - Будет установлено в Истина, если по каким то причинам серия сгенерирована не будет.
//		** ТекстОшибки  - Строка - причина, по которой серия не генерировалась.
Функция СтруктураДанныхДляГенерацииСерии() Экспорт
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Номенклатура", Неопределено);
	СтруктураДанных.Вставить("Серия",        Неопределено);
	СтруктураДанных.Вставить("МРЦ",          0);
	СтруктураДанных.Вставить("ЕстьОшибка",   Ложь);
	СтруктураДанных.Вставить("ТекстОшибки",  "");
	
	Возврат СтруктураДанных;

КонецФункции

#КонецОбласти

#КонецОбласти

