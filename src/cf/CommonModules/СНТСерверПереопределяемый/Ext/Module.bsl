////////////////////////////////////////////////////////////////////////////////
// Получение внешней или встроенной обработки "ОбменСНТ"

// См. СНТСерверПовтИсп.ИспользоватьВнешнююОбработку()
Функция ИспользоватьВнешнююОбработку() Экспорт
	
	Возврат ПравоДоступа("Чтение", Метаданные.Константы.СНТИспользоватьВнешнийМодульОбменаДанными)
		И ПравоДоступа("Чтение", Метаданные.Константы.СНТВнешнийМодульОбменаДанными)
		И Константы.СНТИспользоватьВнешнийМодульОбменаДанными.Получить();
	
КонецФункции
	
Функция ПодключитьВнешнююОбработку() Экспорт
		
	ДвоичныеДанныеОбработки = Константы.СНТВнешнийМодульОбменаДанными.Получить().Получить();
	ИмяОбработки_ОбменСНТ = Неопределено;
	Если ДвоичныеДанныеОбработки <> Неопределено Тогда
		
		Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеОбработки);
		Попытка
			ИмяОбработки_ОбменСНТ = ВнешниеОбработки.Подключить(Адрес, СНТКлиентСервер.ИмяВнешнейОбработкиОбменСНТ(), Ложь);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось загрузить внешний модуль для обмена СНТ:
				|" + ИнформацияОбОшибке().Описание + "
				|Будет использован модуль, встроенный в конфигурацию.");
		КонецПопытки;
	КонецЕсли;
	
	Возврат ИмяОбработки_ОбменСНТ;
	
КонецФункции

Функция СоздатьВнешнююОбработкуИзФайла() Экспорт

	Возврат Неопределено;
	
КонецФункции

// См. СНТСерверПовтИсп.ОбработкаОбменСНТ()
Функция ОбработкаОбменСНТ() Экспорт
	
	Если ИспользоватьВнешнююОбработку() Тогда
		Возврат НовыйЭкземплярВнешнейОбработкиОбменСНТ();	
	Иначе
		Возврат Обработки.ОбменСНТ.Создать();	
	КонецЕсли;
	
КонецФункции

// См. ЭСФСерверПовтИсп.НовыйЭкземплярВнешнейОбработкиОбменЭСФ()
Функция НовыйЭкземплярВнешнейОбработкиОбменСНТ() Экспорт
	
	ИмяВнешнейОбработки = ПодключитьВнешнююОбработку();
	ВнешняяОбработкаОбменСНТ = Неопределено;
	Если ИмяВнешнейОбработки <> Неопределено Тогда
		ВнешняяОбработкаОбменСНТ = ВнешниеОбработки.Создать(ИмяВнешнейОбработки);
	КонецЕсли;
	
	Возврат ВнешняяОбработкаОбменСНТ;
	
КонецФункции

Функция ВыполнитьВФоне(Знач ИмяЭкспортнойПроцедуры, Знач ПараметрыПроцедуры, Знач ПараметрыВыполнения) Экспорт
	
	// Код вынесен в переопределяемый модуль, процедуры запуска фонового задания должна передавать КлючЗадания - ПараметрыВыполнения.УникальныйИдентификатор
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, ПараметрыВыполнения.ИдентификаторФормы);
	НаименованиеЗадания = ПараметрыВыполнения.НаименованиеФоновогоЗадания;
	
	Если Не ЗначениеЗаполнено(НаименованиеЗадания) Тогда
		НаименованиеЗадания = ИмяЭкспортнойПроцедуры;
	КонецЕсли;
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив;
	ПараметрыЭкспортнойПроцедуры.Добавить(ПараметрыПроцедуры);
	ПараметрыЭкспортнойПроцедуры.Добавить(АдресХранилища);
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(ИмяЭкспортнойПроцедуры);
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	ПараметрыЗадания.Добавить(Неопределено);
	Задание = ФоновыеЗадания.Выполнить(ИмяЭкспортнойПроцедуры, ПараметрыЭкспортнойПроцедуры, ПараметрыВыполнения.КлючФоновогоЗадания, НаименованиеЗадания);
	Попытка
		Задание.ОжидатьЗавершения(ПараметрыВыполнения.ОжидатьЗавершение);
	Исключение		
		// Специальная обработка не требуется, возможно исключение вызвано истечением времени ожидания.
	КонецПопытки;
	
	Результат = Новый Структура;
	Результат.Вставить("АдресХранилища",       АдресХранилища);
	Результат.Вставить("ЗаданиеВыполнено",     ДлительныеОперации.ЗаданиеВыполнено(Задание.УникальныйИдентификатор));
	Результат.Вставить("ИдентификаторЗадания", Задание.УникальныйИдентификатор);
	
	Возврат Результат;
	
КонецФункции

#Область ЗапросыПоПриходнымРасходнымДокументам

//ввод СНТ импорт на основании ПТУ
Функция ТекстЗапросаПоступлениеТоваровУслугИмпорт(ПервыйЗапрос = Истина)
	
ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Упаковка,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Первичная) КАК ТипСНТ,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ПоступлениеТоваровУслуг.Организация КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Ввоз) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка) КАК ВидВывоза,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.Импорт)
	|	КОНЕЦ КАК ВидВвоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ПустаяСсылка) КАК ВидПеремещения,
	|	ПоступлениеТоваровУслуг.Организация КАК Получатель,
	|	ПоступлениеТоваровУслуг.Дата КАК ДатаОтгрузкиТовара,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	ПоступлениеТоваровУслуг.Валюта КАК Валюта,
	|	ПоступлениеТоваровУслуг.Валюта.Наименование КАК ВалютаКод,
	|	ПоступлениеТоваровУслуг.Курс КАК КурсВалюты,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	ПоступлениеТоваровУслуг.Склад КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ПоступлениеТоваровУслуг.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|									ТОГДА ТаблицаТовары.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|					ТОГДА ТаблицаТовары.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПриобретениеТоваровУслуг"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК ОборотПоРеализации,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНалогов,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПолучательИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПолучательНаименование,
	|	"""" КАК ПоставщикБИНСтруктурногоПодразделения,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПолучательНерезидент,
	|	ЛОЖЬ КАК ПолучательРозничнаяРеализация,
	|	""KZ"" КАК ПолучательКодСтраны,
	|	""KZ"" КАК ПолучательКодСтраныДоставки,
	|	ПоступлениеТоваровУслуг.Организация КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Организации.Наименование, """")
	|	КОНЕЦ КАК ГрузополучательНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузополучательИдентификатор,
	|	ЛОЖЬ КАК ГрузополучательНерезидент,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(200))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ Контрагенты.Наименование
	|	КОНЕЦ КАК ГрузоотправительНаименование,
	|	Контрагенты.ИНН КАК ГрузоотправительИдентификатор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ГрузоотправительНерезидент,
	|	""KZ"" КАК ГрузополучательКодСтраныОтправки,
	|	Контрагенты.ИНН КАК ПоставщикИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(200))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Контрагенты.НаименованиеПолное КАК СТРОКА(200))
	|		ИНАЧЕ Контрагенты.Наименование
	|	КОНЕЦ КАК ПоставщикНаименование,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПоставщикКодСтраны,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПоставщикКодСтраныОтправки,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ГрузоотправительКодСтраныОтправки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПоставщикНерезидент,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	"""" КАК АдресДоставки,
	|	"""" КАК АдресОтправки,
	|	ПоступлениеТоваровУслуг.Договор КАК ДоговорПоставки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") <> """"""""
	|				И ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезДоговора,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) КАК УчитыватьНДС,
	|	ПоступлениеТоваровУслуг.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК СуммаВключаетАкциз,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") КАК ДоговорПоставкиНомер,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДоговорПоставкиДата,
	|	"""" КАК ДоговорПоставкиУсловияОплаты,
	|	"""" КАК ДоговорПоставкиУсловияПоставки,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокументОснование,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.ЮрФизЛицо, ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоставщикФизическоеЛицо,
	|	ЛОЖЬ КАК ПолучательФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК НомерДоверенностиОтпуск,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|				ПО (ВЫБОР
	|						КОГДА Организации.ОбособленноеПодразделение
	|								И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|							ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|			ПО ПоступлениеТоваровУслуг.Организация = Организации.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО ПоступлениеТоваровУслуг.Контрагент = Контрагенты.Ссылка
	|		ПО ТаблицаТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира
	|		ПО (Контрагенты.СтранаРегистрации = КлассификаторСтранМира.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ПоступлениеТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДокументов)";

	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОбщиеФункцииПоЗапросам

Функция ПолучитьТекстЗапросаДляМассива(МассивВидовДокумента)
	
	ТекстЗапроса = "";
	ЕстьЭСФ = Ложь;
	Для Каждого ЭлементМассива Из МассивВидовДокумента Цикл
		ТекстЗапросаДокумента = "";
		Если ЭлементМассива = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаПеремещениеТоваров(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТекстЗапросаДокумента = ТекстЗапросаРеализацияТоваровУслуг(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.КорректировкаРеализации") Тогда 
			ТекстЗапросаДокумента = ТекстЗапросаКорректировкаРеализации(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			ТекстЗапроса = ТекстЗапросаВозвратТоваровПоставщику(ТекстЗапроса = "");
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			ТекстЗапроса = ТекстЗапросаОтчетОРозничныхПродажах(ТекстЗапроса = "");	
		ИначеЕсли ЭлементМассива = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
			ТекстЗапроса = ТекстЗапросаВозвратТоваровОтКлиента(ТекстЗапроса = "");
		КонецЕсли;
		
		Если ТекстЗапроса <> "" И ТекстЗапросаДокумента <> "" Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|"  
		КонецЕсли;	
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаДокумента;
		
	КонецЦикла;	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПодготовитьТекстЗапросаДляЗаполненияСНТ(ПараметрыЗаполнения) Экспорт
	
	ДокументыОснования = ПараметрыЗаполнения.МассивДокументов;
	МассивВидовДокумента = ПараметрыЗаполнения.МассивВидовДокумента;

	Если ТипЗнч(ДокументыОснования) = Тип("Массив") Тогда
		
		ТекстЗапроса = ПолучитьТекстЗапросаДляМассива(МассивВидовДокумента);
		
		Если ТекстЗапроса = "" Тогда
			Возврат Неопределено;
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ТекстЗапроса = ТекстЗапросаПеремещениеТоваров();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ТекстЗапроса = ТекстЗапросаРеализацияТоваровУслуг();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ТекстЗапроса = ТекстЗапросаКорректировкаРеализации();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ТекстЗапроса = ТекстЗапросаВозвратТоваровПоставщику();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		ТекстЗапроса = ТекстЗапросаВозвратТоваровОтКлиента();
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ТекстЗапроса = ТекстЗапросаОтчетОРозничныхПродажах();	
	ИначеЕсли ТипЗнч(ДокументыОснования) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		ТекстЗапроса = ТекстЗапросаПоступлениеТоваровУслугИмпорт();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СкладОтправитель";
		
	ТекстЗапроса =  ТекстЗапроса + ПолучитьТекстЗапросаКонтактнаяИнформация() + ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Функция возвращает текст запроса для получени контактной информации Организаций
//
Функция ПолучитьТекстЗапросаКонтактнаяИнформация()
	
	ТекстЗапросаКонтактнаяИнформация = 
	"
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(450))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Организации.НаименованиеПолное КАК СТРОКА(450))
	|		ИНАЧЕ Организации.Наименование
	|	КОНЕЦ КАК Наименование,
	|	Организации.ИНН КАК ИдентификационныйНомер
	|ПОМЕСТИТЬ ОбъектыДляПоискаАдресов
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				вт_ДанныеДокумента.Организация
	|			ИЗ
	|				вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|		
	//|			ОБЪЕДИНИТЬ ВСЕ
	//|		
	//|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|				вт_ДанныеДокумента.ОрганизацияПолучатель
	//|			ИЗ
	//|				вт_ДанныеДокумента КАК вт_ДанныеДокумента
	//|			ГДЕ
	//|				вт_ДанныеДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяССылка)
	|)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбъектыДляПоискаАдресов.Объект КАК Организация,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(400)) КАК АдресОрганизации,
	|	ОбъектыДляПоискаАдресов.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	ОбъектыДляПоискаАдресов.Наименование КАК Наименование
	|ПОМЕСТИТЬ вт_КонтактнаяИнформация
	|ИЗ
	|	ОбъектыДляПоискаАдресов КАК ОбъектыДляПоискаАдресов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И ОбъектыДляПоискаАдресов.Объект = КонтактнаяИнформация.Ссылка
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|			И (КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация"; 
	
	Возврат ТекстЗапросаКонтактнаяИнформация;
	
КонецФункции

Функция ПолучитьДополнительныеПереопределяемыеПоля() Экспорт
	
	ТекстЗапроса = ",
	|	ЕСТЬNULL(СоответствиеСкладовДляОтправителя.ВиртуальныйСклад.ИдентификаторСклада, 0) КАК СкладОтправкиИдентификатор,
	|	ЕСТЬNULL(СоответствиеСкладовДляОтправителя.ВиртуальныйСклад.Адрес, """") КАК АдресОтправки,
	|	ЕСТЬNULL(СоответствиеСкладовДляПолучателя.ВиртуальныйСклад.ИдентификаторСклада, """") СкладДоставкиИдентификатор,
	|	ЕСТЬNULL(СоответствиеСкладовДляПолучателя.ВиртуальныйСклад.Адрес, """") КАК АдресДоставки,
	|	вт_ДанныеДокумента.Характеристика
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьЕдиницуИзмеренияОтбора(СтрокаТЧ) Экспорт 
	
	Если СтрокаТЧ.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
		ЕдиницаИзмеренияОтбора = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Товар, "ЕдиницаИзмерения");
	ИначеЕсли ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ЕдиницаИзмерения, "ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
		ЕдиницаИзмеренияОтбора = ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ЕдиницаИзмерения, "ЕдиницаИзмерения");
	Иначе
		ЕдиницаИзмеренияОтбора = СтрокаТЧ.ЕдиницаИзмерения;	
	КонецЕсли;	
	
	Возврат ЕдиницаИзмеренияОтбора;
	
КонецФункции

Функция ПолучитьСтавкуАкциза(СтавкаАкциза) Экспорт 
	
	Возврат 0;
	
КонецФункции

Процедура ДополнитьСтавкуАкцизаИзСправочника(СтавкаАкцизаСсылка, СтавкаАкцизаЧисло) Экспорт
	
	//СтавкаАкцизаЧисло = ПолучитьСтавкуАкциза(СтавкаАкцизаСсылка);
	Возврат;
	
КонецПроцедуры

Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт 
	
	ЗначениеСтавки = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
	
	Возврат ?(ЗначениеСтавки = Неопределено, 0, ЗначениеСтавки);
	
КонецФункции

Функция ДополнитьТекстЗапросаДляЭСФ() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БанковскиеСчетаОрганизаций.Ссылка КАК Ссылка,
	|	БанковскиеСчетаОрганизаций.НомерСчета КАК НомерСчета,
	|	ЕСТЬNULL(КлассификаторБанков.Код, БанковскиеСчетаОрганизаций.БИКБанка) КАК БИКБанка,
	|	ЕСТЬNULL(КлассификаторБанков.Наименование, БанковскиеСчетаОрганизаций.НаименованиеБанка) КАК Наименование,
	|	БанковскиеСчетаОрганизаций.Владелец КАК Владелец
	|ПОМЕСТИТЬ вт_ДанныеБанковскогоСчета_ПоставщикПолучатель
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|			ПО БанковскиеСчетаОрганизаций.Банк = КлассификаторБанков.Ссылка
	|		ПО (ДанныеСНТ.Поставщик = БанковскиеСчетаОрганизаций.Владелец
	|				ИЛИ ДанныеСНТ.Получатель = БанковскиеСчетаОрганизаций.Владелец)
	|			И ДанныеСНТ.Валюта = БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств
	|ГДЕ
	|	БанковскиеСчетаОрганизаций.Закрыт = ЛОЖЬ
	|	И (БанковскиеСчетаОрганизаций.Владелец = ДанныеСНТ.Поставщик
	|			ИЛИ БанковскиеСчетаОрганизаций.Владелец = ДанныеСНТ.Получатель)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагентов.Ссылка,
	|	БанковскиеСчетаКонтрагентов.НомерСчета,
	|	ЕСТЬNULL(КлассификаторБанков.Код, БанковскиеСчетаКонтрагентов.БИКБанка),
	|	ЕСТЬNULL(КлассификаторБанков.Наименование, БанковскиеСчетаКонтрагентов.НаименованиеБанка),
	|	БанковскиеСчетаКонтрагентов.Владелец
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|			ПО БанковскиеСчетаКонтрагентов.Банк = КлассификаторБанков.Ссылка
	|		ПО (ДанныеСНТ.Поставщик = БанковскиеСчетаКонтрагентов.Владелец
	|				ИЛИ ДанныеСНТ.Получатель = БанковскиеСчетаКонтрагентов.Владелец)
	|			И ДанныеСНТ.Валюта = БанковскиеСчетаКонтрагентов.ВалютаДенежныхСредств
	|ГДЕ
	|	БанковскиеСчетаКонтрагентов.Закрыт = ЛОЖЬ
	|	И (БанковскиеСчетаКонтрагентов.Владелец = ДанныеСНТ.Поставщик
	|			ИЛИ БанковскиеСчетаКонтрагентов.Владелец = ДанныеСНТ.Получатель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БанковскиеСчетаОрганизаций.НомерСчета) КАК СчетКоличество,
	|	БанковскиеСчетаОрганизаций.Владелец КАК Владелец
	|ПОМЕСТИТЬ вт_ДанныеБанковскогоСчета_Количество
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|			ПО БанковскиеСчетаОрганизаций.Банк = КлассификаторБанков.Ссылка
	|		ПО (ДанныеСНТ.Поставщик = БанковскиеСчетаОрганизаций.Владелец
	|				ИЛИ ДанныеСНТ.Получатель = БанковскиеСчетаОрганизаций.Владелец)
	|			И ДанныеСНТ.Валюта = БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств
	|ГДЕ
	|	БанковскиеСчетаОрганизаций.Закрыт = ЛОЖЬ
	|	И (БанковскиеСчетаОрганизаций.Владелец = ДанныеСНТ.Поставщик
	|			ИЛИ БанковскиеСчетаОрганизаций.Владелец = ДанныеСНТ.Получатель)
	|
	|СГРУППИРОВАТЬ ПО
	|	БанковскиеСчетаОрганизаций.Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ БанковскиеСчетаКонтрагентов.НомерСчета),
	|	БанковскиеСчетаКонтрагентов.Владелец
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|			ПО БанковскиеСчетаКонтрагентов.Банк = КлассификаторБанков.Ссылка
	|		ПО (ДанныеСНТ.Поставщик = БанковскиеСчетаКонтрагентов.Владелец
	|				ИЛИ ДанныеСНТ.Получатель = БанковскиеСчетаКонтрагентов.Владелец)
	|			И ДанныеСНТ.Валюта = БанковскиеСчетаКонтрагентов.ВалютаДенежныхСредств
	|ГДЕ
	|	БанковскиеСчетаКонтрагентов.Закрыт = ЛОЖЬ
	|	И (БанковскиеСчетаКонтрагентов.Владелец = ДанныеСНТ.Поставщик
	|			ИЛИ БанковскиеСчетаКонтрагентов.Владелец = ДанныеСНТ.Получатель)
	|
	|СГРУППИРОВАТЬ ПО
	|	БанковскиеСчетаКонтрагентов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БанковскиеСчетаОрганизаций.НомерСчета КАК НомерСчета,
	|	ЕСТЬNULL(КлассификаторБанков.Код, БанковскиеСчетаОрганизаций.БИКБанка) КАК БИКБанка,
	|	ЕСТЬNULL(КлассификаторБанков.Наименование, БанковскиеСчетаОрганизаций.НаименованиеБанка) КАК Наименование,
	|	БанковскиеСчетаОрганизаций.Владелец КАК Владелец,
	|	ДанныеСНТ.ДокументОснование.БанковскийСчетОрганизации КАК СчетОрганизации
	|ПОМЕСТИТЬ вт_ДанныеБанковскогоСчета_ИзОснования
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|			ПО БанковскиеСчетаОрганизаций.Банк = КлассификаторБанков.Ссылка
	|		ПО ДанныеСНТ.ДокументОснование.БанковскийСчетОрганизации = БанковскиеСчетаОрганизаций.Ссылка
	|ГДЕ
	|	(БанковскиеСчетаОрганизаций.Владелец = ДанныеСНТ.Поставщик
	|			ИЛИ БанковскиеСчетаОрганизаций.Владелец = ДанныеСНТ.Получатель)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагентов.НомерСчета,
	|	ЕСТЬNULL(КлассификаторБанков.Код, БанковскиеСчетаКонтрагентов.БИКБанка),
	|	ЕСТЬNULL(КлассификаторБанков.Наименование, БанковскиеСчетаКонтрагентов.НаименованиеБанка),
	|	БанковскиеСчетаКонтрагентов.Владелец,
	|	ДанныеСНТ.ДокументОснование.БанковскийСчетОрганизации
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|			ПО БанковскиеСчетаКонтрагентов.Банк = КлассификаторБанков.Ссылка
	|		ПО ДанныеСНТ.ДокументОснование.БанковскийСчетОрганизации = БанковскиеСчетаКонтрагентов.Ссылка
	|ГДЕ
	|	(БанковскиеСчетаКонтрагентов.Владелец = ДанныеСНТ.Поставщик
	|			ИЛИ БанковскиеСчетаКонтрагентов.Владелец = ДанныеСНТ.Получатель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ДанныеСНТ.Поставщик ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеСНТ.Поставщик.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|						ТОГДА ДанныеСНТ.Поставщик.ИндивидуальныйПредприниматель
	|					ИНАЧЕ ДанныеСНТ.Поставщик
	|				  КОНЕЦ
	|		    ИНАЧЕ ДанныеСНТ.Поставщик
	|	КОНЕЦ КАК ОбъектДляПоискаАдреса,
	|	ДанныеСНТ.Поставщик.КБЕ КАК КБе,
	|	ВЫБОР
	|		КОГДА вт_ДанныеБанковскогоСчета_ИзОснования.СчетОрганизации <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеБанковскогоСчета_ИзОснования.Наименование
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_ДанныеБанковскогоСчета_Количество.СчетКоличество = 1
	|					ТОГДА ЕСТЬNULL(вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.Наименование, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР
	|		КОГДА вт_ДанныеБанковскогоСчета_ИзОснования.СчетОрганизации <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеБанковскогоСчета_ИзОснования.НомерСчета
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_ДанныеБанковскогоСчета_Количество.СчетКоличество = 1
	|					ТОГДА ЕСТЬNULL(вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.НомерСчета, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ИИК,
	|	ВЫБОР
	|		КОГДА вт_ДанныеБанковскогоСчета_ИзОснования.СчетОрганизации <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеБанковскогоСчета_ИзОснования.БИКБанка
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_ДанныеБанковскогоСчета_Количество.СчетКоличество = 1
	|					ТОГДА ЕСТЬNULL(вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.БИКБанка, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК БИК,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК ПоверенныйОператор
	|ПОМЕСТИТЬ ОбъектыДляАдресовБанковскихСчетов
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеБанковскогоСчета_ПоставщикПолучатель КАК вт_ДанныеБанковскогоСчета_ПоставщикПолучатель
	|		ПО ДанныеСНТ.Поставщик = вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеБанковскогоСчета_Количество КАК вт_ДанныеБанковскогоСчета_Количество
	|		ПО ДанныеСНТ.Поставщик = вт_ДанныеБанковскогоСчета_Количество.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеБанковскогоСчета_ИзОснования КАК вт_ДанныеБанковскогоСчета_ИзОснования
	|		ПО ДанныеСНТ.Поставщик = вт_ДанныеБанковскогоСчета_ИзОснования.Владелец
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеСНТ.Получатель,
	|	ДанныеСНТ.Получатель.КБЕ КАК КБе,
	|	ВЫБОР
	|		КОГДА вт_ДанныеБанковскогоСчета_ИзОснования.СчетОрганизации <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеБанковскогоСчета_ИзОснования.Наименование
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_ДанныеБанковскогоСчета_Количество.СчетКоличество = 1
	|					ТОГДА ЕСТЬNULL(вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.Наименование, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА вт_ДанныеБанковскогоСчета_ИзОснования.СчетОрганизации <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеБанковскогоСчета_ИзОснования.НомерСчета
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_ДанныеБанковскогоСчета_Количество.СчетКоличество = 1
	|					ТОГДА ЕСТЬNULL(вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.НомерСчета, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА вт_ДанныеБанковскогоСчета_ИзОснования.СчетОрганизации <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА вт_ДанныеБанковскогоСчета_ИзОснования.БИКБанка
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_ДанныеБанковскогоСчета_Количество.СчетКоличество = 1
	|					ТОГДА ЕСТЬNULL(вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.БИКБанка, """")
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеБанковскогоСчета_ПоставщикПолучатель КАК вт_ДанныеБанковскогоСчета_ПоставщикПолучатель
	|		ПО ДанныеСНТ.Получатель = вт_ДанныеБанковскогоСчета_ПоставщикПолучатель.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеБанковскогоСчета_Количество КАК вт_ДанныеБанковскогоСчета_Количество
	|		ПО ДанныеСНТ.Получатель = вт_ДанныеБанковскогоСчета_Количество.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеБанковскогоСчета_ИзОснования КАК вт_ДанныеБанковскогоСчета_ИзОснования
	|		ПО ДанныеСНТ.Получатель = вт_ДанныеБанковскогоСчета_ИзОснования.Владелец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектДляПоискаАдреса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбъектыДляПоискаАдресов.ОбъектДляПоискаАдреса КАК Объект,
	|	"""" КАК Адрес,
	|	ОбъектыДляПоискаАдресов.НаименованиеБанка КАК НаименованиеБанка,
	|	ОбъектыДляПоискаАдресов.ИИК КАК ИИК,
	|	ОбъектыДляПоискаАдресов.БИК КАК БИК,
	|	ОбъектыДляПоискаАдресов.КБе КАК КБе,
	|	ОбъектыДляПоискаАдресов.ПоверенныйОператор КАК ПоверенныйОператор,
	|	"""" КАК ПоверенныйОператорАдрес
	|ПОМЕСТИТЬ АдресаБанковскиеРеквизиты
	|ИЗ
	|	ОбъектыДляАдресовБанковскихСчетов КАК ОбъектыДляПоискаАдресов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|			ТОГДА ДанныеСНТ.Получатель
	|		ИНАЧЕ ДанныеСНТ.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|			ТОГДА ЕСТЬNULL(ДанныеСНТ.Получатель.НомерСвидетельстваПоНДС, """")
	|		ИНАЧЕ ЕСТЬNULL(ДанныеСНТ.Поставщик.НомерСвидетельстваПоНДС, """")
	|	КОНЕЦ КАК Поставщик_НомерСвидетельстваПоНДС,
	|	ВЫБОР
	|		КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|			ТОГДА ЕСТЬNULL(ДанныеСНТ.Получатель.СерияСвидетельстваПоНДС, """")
	|		ИНАЧЕ ЕСТЬNULL(ДанныеСНТ.Поставщик.СерияСвидетельстваПоНДС, """")
	|	КОНЕЦ КАК Поставщик_СерияСвидетельстваПоНДС,
	|	"""" КАК Поставщик_Адрес,
	|	АдресБанкПоставщика.КБе КАК Поставщик_КБе,
	|	АдресБанкПоставщика.ИИК КАК Поставщик_ИИК,
	|	АдресБанкПоставщика.БИК КАК Поставщик_БИК,
	|	АдресБанкПоставщика.НаименованиеБанка КАК Поставщик_НаименованиеБанка,
	|	ДанныеСНТ.ПоставщикРозничнаяРеализация КАК ПоставщикРозничнаяРеализация
	|ПОМЕСТИТЬ ДанныеПоПоставщику
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ АдресаБанковскиеРеквизиты КАК АдресБанкПоставщика
	|		ПО (ВЫБОР
	|				КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|					ТОГДА  ВЫБОР
	|							КОГДА ДанныеСНТ.Получатель ССЫЛКА Справочник.Организации
	|								ТОГДА ВЫБОР
	|										КОГДА ДанныеСНТ.Получатель.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|											ТОГДА ДанныеСНТ.Получатель.ИндивидуальныйПредприниматель = АдресБанкПоставщика.Объект
	|											ИНАЧЕ ДанныеСНТ.Получатель = АдресБанкПоставщика.Объект
	|									КОНЕЦ
	|							КОНЕЦ
	|				ИНАЧЕ  ВЫБОР
	|							КОГДА ДанныеСНТ.Поставщик ССЫЛКА Справочник.Организации
	|								ТОГДА ВЫБОР
	|										КОГДА ДанныеСНТ.Поставщик.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|											ТОГДА ДанныеСНТ.Поставщик.ИндивидуальныйПредприниматель = АдресБанкПоставщика.Объект
	|											ИНАЧЕ ДанныеСНТ.Поставщик = АдресБанкПоставщика.Объект
	|									КОНЕЦ
	|							КОНЕЦ
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|			ТОГДА ДанныеСНТ.Поставщик
	|		ИНАЧЕ ДанныеСНТ.Получатель
	|	КОНЕЦ КАК Получатель,
	|	ВЫБОР
	|		КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|			ТОГДА ЕСТЬNULL(ДанныеСНТ.Поставщик.ГосударственноеУчреждение, ЛОЖЬ)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеСНТ.Получатель.ГосударственноеУчреждение, ЛОЖЬ)
	|	КОНЕЦ КАК ГосударственноеУчреждение,
	|	"""" КАК Получатель_Адрес,
	|	АдресБанкПолучателя.ПоверенныйОператор КАК ПоверенныйОператор,
	|	АдресБанкПолучателя.ПоверенныйОператор.ИНН КАК ПоверенныйПокупателяБИН,
	|	"""" КАК ПоверенныйПокупателяАдресМестонахождения,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(АдресБанкПолучателя.ПоверенныйОператор.НаименованиеПолное КАК СТРОКА(400))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(АдресБанкПолучателя.ПоверенныйОператор.НаименованиеПолное КАК СТРОКА(400))
	|		ИНАЧЕ АдресБанкПолучателя.ПоверенныйОператор.Наименование
	|	КОНЕЦ КАК ПоверенныйПокупателяНаименование,
	|	ДанныеСНТ.ПолучательРозничнаяРеализация КАК ПолучательРозничнаяРеализация
	|ПОМЕСТИТЬ ДанныеПоПолучателю
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ АдресаБанковскиеРеквизиты КАК АдресБанкПолучателя
	|		ПО (ВЫБОР
	|				КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|					ТОГДА ДанныеСНТ.Поставщик = АдресБанкПолучателя.Объект
	|				ИНАЧЕ ДанныеСНТ.Получатель = АдресБанкПолучателя.Объект
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСНТ.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(СчетФактураВыданный.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)) КАК СчетФактура,
	|	ЕСТЬNULL(СчетФактураВыданный.Корректировочный, ЛОЖЬ) КАК Корректировочный,
	|	ЕСТЬNULL(СчетФактураВыданный.Исправление, ЛОЖЬ) КАК Исправление,
	|	ЕСТЬNULL(СчетФактураВыданный.СчетФактураОснование, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)) КАК ОсновнойСчетФактура,
	|	НАЧАЛОПЕРИОДА(СчетФактураВыданный.ДатаСовершенияОборотаПоРеализации, ДЕНЬ) КАК ДатаОборота,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение
	|ПОМЕСТИТЬ ДанныеПоСчетФактуре
	|ИЗ
	|	ДанныеСНТ КАК ДанныеСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО ДанныеСНТ.ДокументОснование = СчетФактураВыданный.ДокументОснование
	|		И СчетФактураВыданный.ПометкаУдаления = Ложь
	|		И ВЫБОР КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Исправленная)
	|					ТОГДА СчетФактураВыданный.Исправление = ИСТИНА
	|				КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Первичная)
	|					ТОГДА (СчетФактураВыданный.Корректировочный = ЛОЖЬ И СчетФактураВыданный.Исправление = ЛОЖЬ)
	|				КОГДА ДанныеСНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|					ТОГДА СчетФактураВыданный.Корректировочный = ИСТИНА
	|				КОНЕЦ
	|
	|ГДЕ
	|	ДанныеСНТ.ДокументОснование <> НЕОПРЕДЕЛЕНО
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоСчетФактуре.ДокументОснование,
	|	ЭСФ.Ссылка КАК ОсновнойЭСФ,
	|	ЭСФ.Номер КАК ОсновнойЭСФНомер,
	|	ЭСФ.Дата КАК ОсновнойЭСФДата,
	|	ЭСФ.РегистрационныйНомер КАК ОсновнойЭСФРегистрационныйНомер
	|ПОМЕСТИТЬ ДанныеПоОсновнымЭСФ
	|
	|ИЗ
	|	ДанныеПоСчетФактуре КАК ДанныеПоСчетФактуре
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭСФ КАК ЭСФ
	|		ПО ДанныеПоСчетФактуре.ОсновнойСчетФактура = ЭСФ.СчетФактура
	|			И (ЭСФ.СчетФактура <> НЕОПРЕДЕЛЕНО)
	|			И (ЭСФ.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.ПустаяСсылка))
	|			И (ЭСФ.СчетФактура <> ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка))
	|
	|ГДЕ
	|	ДанныеПоСчетФактуре.Корректировочный
	|	ИЛИ ДанныеПоСчетФактуре.Исправление
	|;";
	
	Возврат ТекстЗапроса;
		
КонецФункции

Процедура ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросов(СоответсвиеИменРеквизитовПолейЗапросов) Экспорт
	
	Для Каждого ЭлементСоответсвия Из СоответсвиеИменРеквизитовПолейЗапросов Цикл
		Значение = "";
		Если ЭлементСоответсвия.Ключ = "%СчетФактураДата" Тогда
			Значение = "Дата"
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ТекстПоляУслуга"	Тогда
			Значение = "Товары.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга) КАК Услуга";
											
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ТекстПоляУслугаСпрНоменклатура" Тогда
			Значение = "СпрНоменклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга) КАК Услуга";
											
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ТекстПоляТипИзмеряемойВеличины"	Тогда	
			Если ТипЗнч(ЭлементСоответсвия.Значение) = Тип("Структура")
				И ЭлементСоответсвия.Значение.Свойство("ЕдиницаИзмерения")
				И ЭлементСоответсвия.Значение.Свойство("Номенклатура") Тогда
					Значение = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
										"Ссылка",
										ЭлементСоответсвия.Значение.ЕдиницаИзмерения,
										ЭлементСоответсвия.Значение.Номенклатура);
			Иначе
				Значение = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
									"Ссылка",
									"ТаблицаТовары.ЕдиницаИзмерения",
									"ТаблицаТовары.Номенклатура");
			КонецЕсли;
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ДанныеДокументаЕдиницаИзмерения" Тогда	
			Значение = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
								"Ссылка",
								"вт_ДанныеДокумента.ЕдиницаИзмерения",
								"вт_ДанныеДокумента.Товар");
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭСФТекстПоляТипИзмеряемойВеличины"	Тогда	
			Значение = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
						"Ссылка",
						"ЭСФТовары.ЕдиницаИзмерения",
						"ЭСФТовары.Товар");
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭДВСТекстПоляЕдиницаИзмеренияИсходныеТовары" Тогда	
			Значение = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
						"Ссылка",
						"ЭДВСИсходныеТовары.ЕдиницаИзмерения",
						"ЭДВСИсходныеТовары.Товар");
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭДВСТекстПоляЕдиницаИзмеренияТовары" Тогда	
			Значение = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
						"Ссылка",
						"ЭДВСТовары.ЕдиницаИзмерения",
						"ЭДВСТовары.Товар");
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%СтруктурнаяЕдиницаИдентификационныйНомер"	Тогда	
			Значение = "ИНН";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%КонтрагентИНН"	Тогда	
			Значение = "ИНН";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ОрганизацияИНН"	Тогда	
			Значение = "ИНН";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%БуквенныйКодВалюты"	Тогда	
			Значение = "Наименование";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ИмяРеквизитаВладелецДоговора"	Тогда	
			Значение = "Контрагент";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ДоговорНомер"	Тогда	
			Значение = "Номер";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ДоговорДата"	Тогда	
			Значение = "Дата";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭСФДоговорПоставкиУчастникСРП"	Тогда	
			Значение = "Ложь ";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%УсловиеДоговорыКонтрагентовУчастникСРП"	Тогда	
			Значение = "";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%Получатель_УчастникСРП"	Тогда	
			Значение = "ЛОЖЬ";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭСФДоговорКонтрагентаУчастникСРП"	Тогда	
			Значение = "ЛОЖЬ";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭСФПоверенныйОператор"	Тогда	
			Значение = "Значение(Справочник.Контрагенты.ПустаяСсылка)";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭСФПоверенныйПокупателяБИН"	Тогда	
			Значение = "";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЭСФПоверенныйПокупателяНаименование"	Тогда	
			Значение = "";
			
		ИначеЕСли ЭлементСоответсвия.Ключ = "%ЭСФТоварыКоэффициент"	Тогда
			Значение = "1";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ЕдиницаИзмерения"	Тогда
			Значение = "ЕдиницаИзмерения";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%ИмяРеквизитаОрганизацияДоговора"	Тогда	
			Значение = "Организация";
			
		ИначеЕсли ЭлементСоответсвия.Ключ = "%КлассификаторЕдиницИзмерения"	Тогда	
			Значение = "Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка";
			
		КонецЕсли;
		
		СоответсвиеИменРеквизитовПолейЗапросов.Вставить(ЭлементСоответсвия.Ключ, Значение);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСоответсвиеИменРеквизитовПолейЗапросовКоличество(СоответсвиеИменРеквизитовПолейЗапросов, ИмяТабличнойЧасти) Экспорт
	
	Для Каждого ЭлементСоответсвия Из СоответсвиеИменРеквизитовПолейЗапросов Цикл
		
		Если ЭлементСоответсвия.Ключ = "%Количество" Тогда
			
			Значение = "Количество";
			
			СоответсвиеИменРеквизитовПолейЗапросов.Вставить(ЭлементСоответсвия.Ключ, Значение);
		КонецЕсли;	
		
		Если ЭлементСоответсвия.Ключ = "%ЕдиницаИзмеренияКод" Тогда
			
			Если ИмяТабличнойЧасти = "Товары" ИЛИ ИмяТабличнойЧасти = "ТоварыВС" Тогда
				
				Значение = "ТаблицаТовары.ЕдиницаИзмеренияКод";
			Иначе
				
				Значение = "0";
				
			КонецЕсли;
			СоответсвиеИменРеквизитовПолейЗапросов.Вставить(ЭлементСоответсвия.Ключ, Значение);		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьРеквизитыОрганизацииКонтрагента(Ссылка, Реквизит) Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить(Реквизит+"Наименование", "");
	СтруктураДанных.Вставить(Реквизит+"Идентификатор", "");
	СтруктураДанных.Вставить(Реквизит+"ЯвляетсяСП", "");
	СтруктураДанных.Вставить(Реквизит+"Нерезидент", "");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таблица.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Таблица.НаименованиеПолное КАК СТРОКА(450))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Таблица.НаименованиеПолное КАК СТРОКА(450))
	|		ИНАЧЕ Таблица.Наименование
	|	КОНЕЦ КАК Наименование,
	|	ЛОЖЬ КАК ЯвляетсяСП,
	|	ВЫБОР
	|		КОГДА КлассификаторСтранМира.КодАльфа2 <> ""KZ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Нерезидент,
	|	Таблица.ИНН КАК Идентификатор
	|ИЗ
	|	Справочник.Организации КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира // в УПК - Справочник.СтраныМира
	|		ПО Таблица.СтранаРегистрации = КлассификаторСтранМира.Ссылка
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Таблица.НаименованиеПолное КАК СТРОКА(450))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(Таблица.НаименованиеПолное КАК СТРОКА(450))
	|		ИНАЧЕ Таблица.Наименование
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА КлассификаторСтранМира.КодАльфа2 <> ""KZ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Таблица.ИНН // в УПК - ИНН 
	|ИЗ
	|	Справочник.Контрагенты КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира // в УПК - Справочник.СтраныМира
	|		ПО Таблица.СтранаРегистрации = КлассификаторСтранМира.Ссылка
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка";
	
	РезультатЗапроса		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий()Тогда 
		СтруктураДанных.Вставить(Реквизит+"Наименование", ВыборкаДетальныеЗаписи.Наименование);
		СтруктураДанных.Вставить(Реквизит+"Идентификатор", ВыборкаДетальныеЗаписи.Идентификатор);
		СтруктураДанных.Вставить(Реквизит+"ЯвляетсяСП", ВыборкаДетальныеЗаписи.ЯвляетсяСП);
		Если ВыборкаДетальныеЗаписи.Нерезидент Тогда
			СтруктураДанных.Вставить(Реквизит+"Нерезидент", Истина);
		Иначе 
			СтруктураДанных.Вставить(Реквизит+"Нерезидент", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПолучитьРеквизитыДоговора(Ссылка, Реквизит) Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить(Реквизит+"Номер", "");
	СтруктураДанных.Вставить(Реквизит+"Дата", "");
	СтруктураДанных.Вставить(Реквизит+"УсловияОплаты", "");
	СтруктураДанных.Вставить(Реквизит+"УсловияПоставки", "");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка КАК Объект,
	|	ДоговорыКонтрагентов.Номер КАК Номер,
	|	ДоговорыКонтрагентов.Дата КАК Дата
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	РезультатЗапроса		= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий()Тогда
		СтруктураДанных.Вставить(Реквизит+"Номер", ВыборкаДетальныеЗаписи.Номер);
		СтруктураДанных.Вставить(Реквизит+"Дата", ВыборкаДетальныеЗаписи.Дата);
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПолучитьОрганизациюПоПодразделению(СтруктурноеПодразделение) Экспорт
	
	Возврат Справочники.Организации.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьТипДокументаВозвратОтПокупателя ()Экспорт
	Возврат Тип("ДокументСсылка.ВозвратТоваровОтКлиента"); //УПК Тип("ДокументСсылка.ВозвратТоваровОтПокупателя");//БК
КонецФункции

Функция ПолучитьТипДокументаВозвратПоставщику()Экспорт
	Возврат Тип("ДокументСсылка.ВозвратТоваровПоставщику");//БК
КонецФункции

Функция ПолучитьТипПодразделенияОрганизаций()Экспорт
	Возврат Тип("СправочникСсылка.СтруктураПредприятия");
КонецФункции

Функция ПолучитьТипКонтрагенты()Экспорт
	Возврат Тип("СправочникСсылка.Контрагенты");
КонецФункции

Процедура ЗаполнитьСтруктурноеПодразделениеВПараметрах(Объект, Параметры) Экспорт
	
	СтруктурноеПодразделение =  Справочники.СтруктураПредприятия.ПустаяСсылка();
	Если НЕ ВССерверПереопределяемый.ПоддерживаетсяРаботаСоСтруктурнымиПодразделениями() Тогда
		Параметры.Вставить("СтруктурноеПодразделение", СтруктурноеПодразделение);
		Возврат;
	КонецЕсли;
	
	Если Объект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Входящий") ИЛИ Объект.ВидОперации = Перечисления.ВидыОперацийСНТ.Ввоз Тогда
		Если ТипЗнч(Объект.Получатель) =  Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			СтруктурноеПодразделение = Объект.Получатель;
		КонецЕсли;
	ИначеЕсли Объект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Исходящий") И НЕ Объект.ВидОперации = Перечисления.ВидыОперацийСНТ.Ввоз Тогда
		Если ТипЗнч(Объект.Поставщик) =  Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			СтруктурноеПодразделение = Объект.Поставщик;
		КонецЕсли;
	КонецЕсли;
	
	Параметры.Вставить("СтруктурноеПодразделение", СтруктурноеПодразделение);
	
КонецПроцедуры

Функция ПолучитьСтрануПроисхожденияТовараПоКодуАльфа(КодАльфа) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторСтранМира.Ссылка
	|ИЗ
	|	Справочник.СтраныМира КАК КлассификаторСтранМира
	|ГДЕ
	|	КлассификаторСтранМира.КодАльфа2 = &КодАльфа";
	
	Запрос.УстановитьПараметр("КодАльфа", КодАльфа);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СсылкаСтранаПроисхожденияТовара = Справочники.СтраныМира.ПустаяСсылка();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		СсылкаСтранаПроисхожденияТовара = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;
	
	Возврат СсылкаСтранаПроисхожденияТовара;
	
КонецФункции

Функция ТекстЗапросаРеализацияТоваровУслуг(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Упаковка,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ВЫБОР
	|		КОГДА &ЭтоИсправленнаяСНТ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Исправленная)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Первичная)
	|	КОНЕЦ КАК ТипСНТ,
	|	РеализацияТоваровУслуг.Организация КАК Поставщик,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Реализация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Вывоз)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.Экспорт)
	|	КОНЕЦ КАК ВидВывоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка) КАК ВидВвоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ПустаяСсылка) КАК ВидПеремещения,
	|	РеализацияТоваровУслуг.Контрагент КАК Получатель,
	|	РеализацияТоваровУслуг.Дата КАК ДатаОтгрузкиТовара,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	РеализацияТоваровУслуг.Валюта КАК Валюта,
	|	РеализацияТоваровУслуг.Валюта.Наименование КАК ВалютаКод,
	|	РеализацияТоваровУслуг.Курс КАК КурсВалюты,
	|	РеализацияТоваровУслуг.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И РеализацияТоваровУслуг.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок = ТаблицаТовары.Сумма
	|								ТОГДА ТаблицаТовары.Цена
	|							ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок
	|						КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок = ТаблицаТовары.Сумма
	|					ТОГДА ТаблицаТовары.Цена
	|				ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""РеализацияТоваровУслуг"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК ОборотПоРеализации,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНалогов,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПоставщикИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПоставщикНаименование,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПоставщикБИНСтруктурногоПодразделения,
	|	"""" КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПоставщикНерезидент,
	|	""KZ"" КАК ПоставщикКодСтраны,
	|	""KZ"" КАК ПоставщикКодСтраныОтправки,
	|	РеализацияТоваровУслуг.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Организации.Наименование, """")
	|	КОНЕЦ КАК ГрузоотправительНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузоотправительИдентификатор,
	|	ЛОЖЬ КАК ГрузоотправительНерезидент,
	|	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Грузополучатели.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Грузополучатели.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Грузополучатели.Наименование, """")
	|	КОНЕЦ КАК ГрузополучательНаименование,
	|	ЕСТЬNULL(Грузополучатели.ИНН, """") КАК ГрузополучательИдентификатор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") <> ""KZ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрузополучательНерезидент,
	|	""KZ"" КАК ГрузоотправительКодСтраныОтправки,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ПолучательИдентификатор,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|				ИЛИ РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель)
	|			ТОГДА ""Розничная реализация""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|					ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))
	|				ИНАЧЕ ЕСТЬNULL(Контрагенты.Наименование, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ПолучательНаименование,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПолучательКодСтраны,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПолучательКодСтраныДоставки,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ГрузополучательКодСтраныОтправки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") <> ""KZ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательНерезидент,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслуг.АдресДоставки КАК СТРОКА(400)) КАК АдресДоставки,
	|	"""" КАК АдресОтправки,
	|	РеализацияТоваровУслуг.Договор КАК ДоговорПоставки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") <> """"
	|				И ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезДоговора,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК УчитыватьНДС,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК СуммаВключаетАкциз,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") КАК ДоговорПоставкиНомер,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДоговорПоставкиДата,
	|	"""" КАК ДоговорПоставкиУсловияОплаты,
	|	РеализацияТоваровУслуг.УсловияПоставки КАК ДоговорПоставкиУсловияПоставки,
	|	ВЫБОР
	|		КОГДА &ЭтоИсправленнаяСНТ
	|			ТОГДА РеализацияТоваровУслуг.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПервичныйДокументОснование,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|				ИЛИ РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательРозничнаяРеализация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.ЮрФизЛицо, ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|				И НЕ(РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|						ИЛИ РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательФизическоеЛицо,
	|	ЛОЖЬ КАК ПоставщикФизическоеЛицо,
	|	РеализацияТоваровУслуг.ДоверенностьНомер КАК НомерДоверенностиОтпуск,
	|	РеализацияТоваровУслуг.ДоверенностьДата КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|				ПО (ВЫБОР
	|						КОГДА Организации.ОбособленноеПодразделение
	|								И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|							ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|			ПО РеализацияТоваровУслуг.Организация = Организации.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Грузополучатели
	|			ПО РеализацияТоваровУслуг.Грузополучатель = Грузополучатели.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО РеализацияТоваровУслуг.Контрагент = Контрагенты.Ссылка
	|		ПО ТаблицаТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира
	|		ПО (Контрагенты.СтранаРегистрации = КлассификаторСтранМира.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (РеализацияТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивДокументов)";

	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКорректировкаРеализации(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.Ссылка КАК ДокументКорректировки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Количество КАК Количество,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""КорректировкаРеализации"" КАК ИмяДокумента,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК ОборотПоРеализации,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНалогов,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма,
	|	КорректировкаРеализации.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ вт_ДанныеКорректировки
	|ИЗ
	|	Документ.КорректировкаРеализации.Расхождения КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ТаблицаТовары.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Товар,
	|	Характеристика,
	|	ЕдиницаИзмерения,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Исправленная) КАК ТипСНТ,
	|	РеализацияТоваровУслуг.Организация КАК Поставщик,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Реализация)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Вывоз)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.Экспорт)
	|	КОНЕЦ КАК ВидВывоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка) КАК ВидВвоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ПустаяСсылка) КАК ВидПеремещения,
	|	РеализацияТоваровУслуг.Контрагент КАК Получатель,
	|	РеализацияТоваровУслуг.Дата КАК ДатаОтгрузкиТовара,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	РеализацияТоваровУслуг.Валюта КАК Валюта,
	|	РеализацияТоваровУслуг.Валюта.Наименование КАК ВалютаКод,
	|	РеализацияТоваровУслуг.Курс КАК КурсВалюты,
	|	РеализацияТоваровУслуг.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И РеализацияТоваровУслуг.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|									ТОГДА ТаблицаТовары.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|					ТОГДА ТаблицаТовары.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.Количество КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""РеализацияТоваровУслуг"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК ОборотПоРеализации,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНалогов,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПоставщикИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПоставщикНаименование,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПоставщикБИНСтруктурногоПодразделения,
	|	"""" КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПоставщикНерезидент,
	|	""KZ"" КАК ПоставщикКодСтраны,
	|	""KZ"" КАК ПоставщикКодСтраныОтправки,
	|	РеализацияТоваровУслуг.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Организации.Наименование, """")
	|	КОНЕЦ КАК ГрузоотправительНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузоотправительИдентификатор,
	|	ЛОЖЬ КАК ГрузоотправительНерезидент,
	|	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Грузополучатели.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Грузополучатели.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Грузополучатели.Наименование, """")
	|	КОНЕЦ КАК ГрузополучательНаименование,
	|	ЕСТЬNULL(Грузополучатели.ИНН, """") КАК ГрузополучательИдентификатор,
	|	ЛОЖЬ КАК ГрузополучательНерезидент,
	|	""KZ"" КАК ГрузоотправительКодСтраныОтправки,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ПолучательИдентификатор,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|				ИЛИ РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель)
	|			ТОГДА ""Розничная реализация""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|					ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))
	|				ИНАЧЕ ЕСТЬNULL(Контрагенты.Наименование, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ПолучательНаименование,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПолучательКодСтраны,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПолучательКодСтраныДоставки,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ГрузополучательКодСтраныОтправки,
	|	ЛОЖЬ КАК ПолучательНерезидент,
	|	ВЫРАЗИТЬ(РеализацияТоваровУслуг.АдресДоставки КАК СТРОКА(400)) КАК АдресДоставки,
	|	"""" КАК АдресОтправки,
	|	РеализацияТоваровУслуг.Договор КАК ДоговорПоставки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") <> """"
	|				И ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезДоговора,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК УчитыватьНДС,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК СуммаВключаетАкциз,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") КАК ДоговорПоставкиНомер,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДоговорПоставкиДата,
	|	"""" КАК ДоговорПоставкиУсловияОплаты,
	|	РеализацияТоваровУслуг.УсловияПоставки КАК ДоговорПоставкиУсловияПоставки,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокументОснование,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|				ИЛИ РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательРозничнаяРеализация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.ЮрФизЛицо, ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|				И НЕ(РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|						ИЛИ РеализацияТоваровУслуг.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательФизическоеЛицо,
	|	ЛОЖЬ КАК ПоставщикФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК НомерДоверенностиОтпуск,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеРеализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|				ПО (ВЫБОР
	|						КОГДА Организации.ОбособленноеПодразделение
	|								И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|							ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|			ПО РеализацияТоваровУслуг.Организация = Организации.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Грузополучатели
	|			ПО РеализацияТоваровУслуг.Грузополучатель = Грузополучатели.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО РеализацияТоваровУслуг.Контрагент = Контрагенты.Ссылка
	|		ПО ТаблицаТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира
	|		ПО (Контрагенты.СтранаРегистрации = КлассификаторСтранМира.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (РеализацияТоваровУслуг.Договор = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.ДокументОснование
	|			ИЗ
	|				вт_ДанныеКорректировки КАК Т)
	|	И СправочникНоменклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Товар,
	|	Характеристика,
	|	ЕдиницаИзмерения,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДанныеРеализации.Организация КАК Организация,
	|	вт_ДанныеРеализации.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	вт_ДанныеРеализации.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	вт_ДанныеРеализации.СтруктурноеПодразделениеПолучатель КАК СтруктурноеПодразделениеПолучатель,
	|	вт_ДанныеРеализации.ТипСНТ КАК ТипСНТ,
	|	вт_ДанныеРеализации.Поставщик КАК Поставщик,
	|	вт_ДанныеРеализации.Контрагент КАК Контрагент,
	|	вт_ДанныеРеализации.ВидОперации КАК ВидОперации,
	|	вт_ДанныеРеализации.ВидВывоза КАК ВидВывоза,
	|	вт_ДанныеРеализации.ВидВвоза КАК ВидВвоза,
	|	вт_ДанныеРеализации.ВидПеремещения КАК ВидПеремещения,
	|	вт_ДанныеРеализации.Получатель КАК Получатель,
	|	вт_ДанныеРеализации.ДатаОтгрузкиТовара КАК ДатаОтгрузкиТовара,
	|	ЕСТЬNULL(вт_ДанныеКорректировки.ДокументКорректировки, ЗНАЧЕНИЕ(Документ.КорректировкаРеализации.ПустаяСсылка)) КАК ДокументОснование,
	|	вт_ДанныеРеализации.Валюта КАК Валюта,
	|	вт_ДанныеРеализации.ВалютаКод КАК ВалютаКод,
	|	вт_ДанныеРеализации.КурсВалюты КАК КурсВалюты,
	|	вт_ДанныеРеализации.СкладОтправитель КАК СкладОтправитель,
	|	вт_ДанныеРеализации.СкладПолучатель КАК СкладПолучатель,
	|	вт_ДанныеРеализации.Товар КАК Товар,
	|	вт_ДанныеРеализации.Характеристика КАК Характеристика,
	|	вт_ДанныеРеализации.ТоварНаименование КАК ТоварНаименование,
	|	вт_ДанныеРеализации.КодТНВЭД КАК КодТНВЭД,
	|	вт_ДанныеРеализации.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ДанныеРеализации.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	вт_ДанныеРеализации.Количество + ЕСТЬNULL(вт_ДанныеКорректировки.Количество, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(вт_ДанныеКорректировки.Количество, 0) <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА вт_ДанныеКорректировки.Сумма / вт_ДанныеКорректировки.Количество = вт_ДанныеРеализации.Цена
	|						ТОГДА (вт_ДанныеРеализации.Сумма - вт_ДанныеРеализации.СуммаНДС) / вт_ДанныеРеализации.Количество
	|					ИНАЧЕ (вт_ДанныеРеализации.Сумма + ЕСТЬNULL(вт_ДанныеКорректировки.Сумма, 0) - (вт_ДанныеРеализации.СуммаНДС + ЕСТЬNULL(вт_ДанныеКорректировки.СуммаНДС, 0))) / (вт_ДанныеРеализации.Количество + вт_ДанныеКорректировки.Количество)
	|				КОНЕЦ
	|		ИНАЧЕ (вт_ДанныеРеализации.Сумма + ЕСТЬNULL(вт_ДанныеКорректировки.Сумма, 0) - (вт_ДанныеРеализации.СуммаНДС + ЕСТЬNULL(вт_ДанныеКорректировки.СуммаНДС, 0))) / вт_ДанныеРеализации.Количество
	|	КОНЕЦ КАК Цена,
	|	вт_ДанныеРеализации.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	вт_ДанныеРеализации.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	вт_ДанныеРеализации.ИдентификаторТовара КАК ИдентификаторТовара,
	|	вт_ДанныеРеализации.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	вт_ДанныеРеализации.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	вт_ДанныеРеализации.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	вт_ДанныеРеализации.ИмяДокумента КАК ИмяДокумента,
	|	вт_ДанныеРеализации.ЗапрещеноРазбиватьДокумент КАК ЗапрещеноРазбиватьДокумент,
	|	вт_ДанныеРеализации.РаспределятьТоварыПоИП КАК РаспределятьТоварыПоИП,
	|	вт_ДанныеРеализации.ПрефиксВидаДокумента КАК ПрефиксВидаДокумента,
	|	вт_ДанныеРеализации.НомерУчетногоДокумента КАК НомерУчетногоДокумента,
	|	вт_ДанныеРеализации.НомерПакета КАК НомерПакета,
	|	вт_ДанныеРеализации.СтавкаАкциза КАК СтавкаАкциза,
	|	вт_ДанныеРеализации.СуммаАкциза КАК СуммаАкциза,
	|	вт_ДанныеРеализации.БезНДС КАК БезНДС,
	|	вт_ДанныеРеализации.СтавкаНДС КАК СтавкаНДС,
	|	вт_ДанныеРеализации.СуммаНДС + ЕСТЬNULL(вт_ДанныеКорректировки.СуммаНДС, 0) КАК СуммаНДС,
	|	вт_ДанныеРеализации.ОборотПоРеализации + ЕСТЬNULL(вт_ДанныеКорректировки.ОборотПоРеализации, 0) КАК ОборотПоРеализации,
	|	вт_ДанныеРеализации.СуммаБезНалогов + ЕСТЬNULL(вт_ДанныеКорректировки.СуммаБезНалогов, 0) КАК СуммаБезНалогов,
	|	вт_ДанныеРеализации.Сумма + ЕСТЬNULL(вт_ДанныеКорректировки.Сумма, 0) КАК Сумма,
	|	вт_ДанныеРеализации.ПоставщикИдентификатор КАК ПоставщикИдентификатор,
	|	вт_ДанныеРеализации.ПоставщикНаименование КАК ПоставщикНаименование,
	|	вт_ДанныеРеализации.ПоставщикБИНСтруктурногоПодразделения КАК ПоставщикБИНСтруктурногоПодразделения,
	|	вт_ДанныеРеализации.ПолучательБИНСтруктурногоПодразделения КАК ПолучательБИНСтруктурногоПодразделения,
	|	вт_ДанныеРеализации.ПоставщикНерезидент КАК ПоставщикНерезидент,
	|	вт_ДанныеРеализации.ПоставщикКодСтраны КАК ПоставщикКодСтраны,
	|	вт_ДанныеРеализации.ПоставщикКодСтраныОтправки КАК ПоставщикКодСтраныОтправки,
	|	вт_ДанныеРеализации.Грузоотправитель КАК Грузоотправитель,
	|	вт_ДанныеРеализации.ГрузоотправительНаименование КАК ГрузоотправительНаименование,
	|	вт_ДанныеРеализации.ГрузоотправительИдентификатор КАК ГрузоотправительИдентификатор,
	|	вт_ДанныеРеализации.ГрузоотправительНерезидент КАК ГрузоотправительНерезидент,
	|	вт_ДанныеРеализации.Грузополучатель КАК Грузополучатель,
	|	вт_ДанныеРеализации.ГрузополучательНаименование КАК ГрузополучательНаименование,
	|	вт_ДанныеРеализации.ГрузополучательИдентификатор КАК ГрузополучательИдентификатор,
	|	вт_ДанныеРеализации.ГрузополучательНерезидент КАК ГрузополучательНерезидент,
	|	вт_ДанныеРеализации.ГрузоотправительКодСтраныОтправки КАК ГрузоотправительКодСтраныОтправки,
	|	вт_ДанныеРеализации.ПолучательИдентификатор КАК ПолучательИдентификатор,
	|	вт_ДанныеРеализации.ПолучательНаименование КАК ПолучательНаименование,
	|	вт_ДанныеРеализации.ПолучательКодСтраны КАК ПолучательКодСтраны,
	|	вт_ДанныеРеализации.ПолучательКодСтраныДоставки КАК ПолучательКодСтраныДоставки,
	|	вт_ДанныеРеализации.ГрузополучательКодСтраныОтправки КАК ГрузополучательКодСтраныОтправки,
	|	вт_ДанныеРеализации.ПолучательНерезидент КАК ПолучательНерезидент,
	|	вт_ДанныеРеализации.АдресДоставки КАК АдресДоставки,
	|	вт_ДанныеРеализации.АдресОтправки КАК АдресОтправки,
	|	вт_ДанныеРеализации.ДоговорПоставки КАК ДоговорПоставки,
	|	вт_ДанныеРеализации.БезДоговора КАК БезДоговора,
	|	вт_ДанныеРеализации.УчитыватьАкциз КАК УчитыватьАкциз,
	|	вт_ДанныеРеализации.УчитыватьНДС КАК УчитыватьНДС,
	|	вт_ДанныеРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	вт_ДанныеРеализации.СуммаВключаетАкциз КАК СуммаВключаетАкциз,
	|	вт_ДанныеРеализации.ДоговорПоставкиНомер КАК ДоговорПоставкиНомер,
	|	вт_ДанныеРеализации.ДоговорПоставкиДата КАК ДоговорПоставкиДата,
	|	вт_ДанныеРеализации.ДоговорПоставкиУсловияОплаты КАК ДоговорПоставкиУсловияОплаты,
	|	вт_ДанныеРеализации.ДоговорПоставкиУсловияПоставки КАК ДоговорПоставкиУсловияПоставки,
	|	вт_ДанныеРеализации.ПервичныйДокументОснование КАК ПервичныйДокументОснование,
	|	вт_ДанныеРеализации.ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	вт_ДанныеРеализации.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	вт_ДанныеРеализации.СтавкаАкцизаЧисло КАК СтавкаАкцизаЧисло,
	|	вт_ДанныеРеализации.ПоставщикРозничнаяРеализация КАК ПоставщикРозничнаяРеализация,
	|	вт_ДанныеРеализации.ПолучательРозничнаяРеализация КАК ПолучательРозничнаяРеализация,
	|	вт_ДанныеРеализации.ПоставщикФизическоеЛицо КАК ПоставщикФизическоеЛицо,
	|	вт_ДанныеРеализации.ПолучательФизическоеЛицо КАК ПолучательФизическоеЛицо,
	|	вт_ДанныеРеализации.НомерДоверенностиОтпуск КАК НомерДоверенностиОтпуск,
	|	вт_ДанныеРеализации.ДатаДоверенностиОтпуск КАК ДатаДоверенностиОтпуск,
	|	вт_ДанныеРеализации.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ДанныеРеализации КАК вт_ДанныеРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеКорректировки КАК вт_ДанныеКорректировки
	|		ПО вт_ДанныеРеализации.ДокументОснование = вт_ДанныеКорректировки.ДокументОснование
	|			И вт_ДанныеРеализации.Товар = вт_ДанныеКорректировки.Товар
	|			И вт_ДанныеРеализации.Характеристика = вт_ДанныеКорректировки.Характеристика
	|			И вт_ДанныеРеализации.ЕдиницаИзмерения = вт_ДанныеКорректировки.ЕдиницаИзмерения
	|			И вт_ДанныеРеализации.СтавкаНДС = вт_ДанныеКорректировки.СтавкаНДС";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОтчетОРозничныхПродажах(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтчетОРозничныхПродажах.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Первичная) КАК ТипСНТ,
	|	ОтчетОРозничныхПродажах.Организация КАК Поставщик,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Реализация) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка) КАК ВидВывоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка) КАК ВидВвоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ПустаяСсылка) КАК ВидПеремещения,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель) КАК Получатель,
	|	ОтчетОРозничныхПродажах.Дата КАК ДатаОтгрузкиТовара,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	ОтчетОРозничныхПродажах.Валюта КАК Валюта,
	|	ОтчетОРозничныхПродажах.Валюта.Наименование КАК ВалютаКод,
	|	"""" КАК КурсВалюты,
	|	ОтчетОРозничныхПродажах.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ОтчетОРозничныхПродажах.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|									ТОГДА ТаблицаТовары.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|					ТОГДА ТаблицаТовары.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ОтчетОРозничныхПродажах"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ОтчетОРозничныхПродажах.ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ ТаблицаТовары.Сумма
	|	КОНЕЦ КАК ОборотПоРеализации,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ОтчетОРозничныхПродажах.ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ ТаблицаТовары.Сумма
	|	КОНЕЦ КАК СуммаБезНалогов,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ОтчетОРозничныхПродажах.ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|	КОНЕЦ КАК Сумма,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПоставщикИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПоставщикНаименование,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПоставщикБИНСтруктурногоПодразделения,
	|	"""" КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПоставщикНерезидент,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	""KZ"" КАК ПоставщикКодСтраны,
	|	""KZ"" КАК ПоставщикКодСтраныОтправки,
	|	ОтчетОРозничныхПродажах.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"""""
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Организации.Наименование, """")
	|	КОНЕЦ КАК ГрузоотправительНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузоотправительИдентификатор,
	|	ЛОЖЬ КАК ГрузоотправительНерезидент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель) КАК Грузополучатель,
	|	""Розничная реализация"" КАК ГрузополучательНаименование,
	|	"""" КАК ГрузополучательИдентификатор,
	|	ЛОЖЬ КАК ГрузополучательНерезидент,
	|	""KZ"" КАК ГрузоотправительКодСтраныОтправки,
	|	"""" КАК ПолучательИдентификатор,
	|	""Розничная реализация"" КАК ПолучательНаименование,
	|	""KZ"" КАК ПолучательКодСтраны,
	|	""KZ"" КАК ПолучательКодСтраныДоставки,
	|	""KZ"" КАК ГрузополучательКодСтраныОтправки,
	|	ЛОЖЬ КАК ПолучательНерезидент,
	|	ИСТИНА КАК ПолучательРозничнаяРеализация,
	|	"""" КАК АдресДоставки,
	|	"""" КАК АдресОтправки,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорПоставки,
	|	ИСТИНА КАК БезДоговора,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК УчитыватьНДС,
	|	ОтчетОРозничныхПродажах.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК СуммаВключаетАкциз,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиУсловияОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиУсловияПоставки,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокументОснование,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажах.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ЛОЖЬ КАК ПоставщикФизическоеЛицо,
	|	ЛОЖЬ КАК ПолучательФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК НомерДоверенностиОтпуск,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|				ПО (ВЫБОР
	|						КОГДА Организации.ОбособленноеПодразделение
	|								И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|							ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|			ПО ОтчетОРозничныхПродажах.Организация = Организации.Ссылка
	|		ПО ТаблицаТовары.Ссылка = ОтчетОРозничныхПродажах.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивДокументов)
	|	И СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)";
	
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаВозвратТоваровПоставщику(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратТоваровПоставщику.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ВозвратТоваровПоставщику.Организация КАК Поставщик,
	|	ВозвратТоваровПоставщику.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров) КАК ТипСНТ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Вывоз)
	|	КОНЕЦ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") = ""KZ""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.Экспорт)
	|	КОНЕЦ КАК ВидВывоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка) КАК ВидВвоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ПустаяСсылка) КАК ВидПеремещения,
	|	ВозвратТоваровПоставщику.Контрагент КАК Получатель,
	|	ВозвратТоваровПоставщику.Дата КАК ДатаОтгрузкиТовара,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	ВозвратТоваровПоставщику.Валюта КАК Валюта,
	|	ВозвратТоваровПоставщику.Валюта.Наименование КАК ВалютаКод,
	|	1 КАК КурсВалюты,
	|	ВозвратТоваровПоставщику.Склад КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ВозвратТоваровПоставщику.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|									ТОГДА ТаблицаТовары.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|					ТОГДА ТаблицаТовары.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВозвратТоваровПоставщику"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК ОборотПоРеализации,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНалогов,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПоставщикИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПоставщикНаименование,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПоставщикБИНСтруктурногоПодразделения,
	|	"""" КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПоставщикНерезидент,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	""KZ"" КАК ПоставщикКодСтраны,
	|	""KZ"" КАК ПоставщикКодСтраныОтправки,
	|	ВозвратТоваровПоставщику.Организация КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Организации.Наименование, """")
	|	КОНЕЦ КАК ГрузоотправительНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузоотправительИдентификатор,
	|	ЛОЖЬ КАК ГрузоотправительНерезидент,
	|	ВозвратТоваровПоставщику.Контрагент КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Контрагенты.Наименование, """")
	|	КОНЕЦ КАК ГрузополучательНаименование,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ГрузополучательИдентификатор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") <> ""KZ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрузополучательНерезидент,
	|	""KZ"" КАК ГрузоотправительКодСтраныОтправки,
	|	ЕСТЬNULL(Контрагенты.ИНН, """") КАК ПолучательИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Контрагенты.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Контрагенты.Наименование, """")
	|	КОНЕЦ КАК ПолучательНаименование,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПолучательКодСтраны,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ПолучательКодСтраныДоставки,
	|	ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") КАК ГрузополучательКодСтраныОтправки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КлассификаторСтранМира.КодАльфа2, """") <> ""KZ""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательНерезидент,
	|	ЛОЖЬ КАК ПолучательРозничнаяРеализация,
	|	"""" КАК АдресДоставки,
	|	"""" КАК АдресОтправки,
	|	ВозвратТоваровПоставщику.Договор КАК ДоговорПоставки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") <> """"
	|				И ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезДоговора,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК УчитыватьНДС,
	|	ВозвратТоваровПоставщику.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК СуммаВключаетАкциз,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Номер, """") КАК ДоговорПоставкиНомер,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДоговорПоставкиДата,
	|	"""" КАК ДоговорПоставкиУсловияОплаты,
	|	"""" КАК ДоговорПоставкиУсловияПоставки,
	|	ВозвратТоваровПоставщику.ДокументПоступления КАК ПервичныйДокументОснование,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.ЮрФизЛицо, ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПолучательФизическоеЛицо,
	|	ЛОЖЬ КАК ПоставщикФизическоеЛицо,
	|	НЕОПРЕДЕЛЕНО КАК НомерДоверенностиОтпуск,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|				ПО (ВЫБОР
	|						КОГДА Организации.ОбособленноеПодразделение
	|								И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|							ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|			ПО ВозвратТоваровПоставщику.Организация = Организации.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО ВозвратТоваровПоставщику.Контрагент = Контрагенты.Ссылка
	|		ПО ТаблицаТовары.Ссылка = ВозвратТоваровПоставщику.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК КлассификаторСтранМира
	|		ПО (Контрагенты.СтранаРегистрации = КлассификаторСтранМира.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ВозвратТоваровПоставщику.Договор = ДоговорыКонтрагентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВозвратТоваровОтКлиента(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратТоваровОтКлиента.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ВозвратТоваровОтКлиента.Контрагент КАК Поставщик,
	|	ВозвратТоваровОтКлиента.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров) КАК ТипСНТ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПустаяСсылка) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка) КАК ВидВывоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка) КАК ВидВвоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ПустаяСсылка) КАК ВидПеремещения,
	|	ВозвратТоваровОтКлиента.Организация КАК Получатель,
	|	ВозвратТоваровОтКлиента.Дата КАК ДатаОтгрузкиТовара,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	ВозвратТоваровОтКлиента.Валюта КАК Валюта,
	|	ВозвратТоваровОтКлиента.Валюта.Наименование КАК ВалютаКод,
	|	0 КАК КурсВалюты,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтправитель,
	|	ВозвратТоваровОтКлиента.Склад КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ВозвратТоваровОтКлиента.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|									ТОГДА ТаблицаТовары.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Цена * ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ТаблицаТовары.Сумма
	|					ТОГДА ТаблицаТовары.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.Сумма / ТаблицаТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ВозвратТоваровОтКлиента"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаТовары.СтавкаНДС <> ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.СтавкаНДС.ДляОсвобожденногоОборота
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК БезНДС,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК ОборотПоРеализации,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНалогов,
	|	ТаблицаТовары.СуммаСНДС КАК Сумма,
	|	"""" КАК ПоставщикИдентификатор,
	|	""Розничная реализация"" КАК ПоставщикНаименование,
	|	ЛОЖЬ КАК ПоставщикНерезидент,
	|	""KZ"" КАК ПоставщикКодСтраны,
	|	""KZ"" КАК ПоставщикКодСтраныОтправки,
	|	""KZ"" КАК ГрузоотправительКодСтраныОтправки,
	|	ВозвратТоваровОтКлиента.Контрагент КАК Грузоотправитель,
	|	"""" КАК ГрузоотправительНаименование,
	|	"""" КАК ГрузоотправительИдентификатор,
	|	ЛОЖЬ КАК ГрузоотправительНерезидент,
	|	ВозвратТоваровОтКлиента.Организация КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(Организации.Наименование, """")
	|	КОНЕЦ КАК ГрузополучательНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузополучательИдентификатор,
	|	ЛОЖЬ КАК ГрузополучательНерезидент,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПолучательИдентификатор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПолучательНаименование,
	|	""KZ"" КАК ПолучательКодСтраны,
	|	""KZ"" КАК ПолучательКодСтраныДоставки,
	|	""KZ"" КАК ГрузополучательКодСтраныОтправки,
	|	"""" КАК ПоставщикБИНСтруктурногоПодразделения,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПолучательНерезидент,
	|	"""" КАК АдресДоставки,
	|	"""" КАК АдресОтправки,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорПоставки,
	|	ИСТИНА КАК БезДоговора,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	ВозвратТоваровОтКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК УчитыватьНДС,
	|	ВозвратТоваровОтКлиента.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ЛОЖЬ КАК СуммаВключаетАкциз,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПоставкиУсловияОплаты,
	|	ВозвратТоваровОтКлиента.УсловияПоставки КАК ДоговорПоставкиУсловияПоставки,
	|	ВозвратТоваровОтКлиента.ДокументРеализации КАК ПервичныйДокументОснование,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтКлиента.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Контрагенты.ЮрФизЛицо, ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|				И НЕ(ВозвратТоваровОтКлиента.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|						ИЛИ ВозвратТоваровОтКлиента.Контрагент = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоставщикФизическоеЛицо,
	|	ЛОЖЬ КАК ПолучательФизическоеЛицо,
	|	ЛОЖЬ КАК ПолучательРозничнаяРеализация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтКлиента.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|				ИЛИ ВозвратТоваровОтКлиента.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоставщикРозничнаяРеализация,
	|	НЕОПРЕДЕЛЕНО КАК НомерДоверенностиОтпуск,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|				ПО (ВЫБОР
	|						КОГДА Организации.ОбособленноеПодразделение
	|								И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|							ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ)
	|			ПО ВозвратТоваровОтКлиента.Организация = Организации.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО ВозвратТоваровОтКлиента.Контрагент = Контрагенты.Ссылка
	|		ПО ТаблицаТовары.Ссылка = ВозвратТоваровОтКлиента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка В(&МассивДокументов)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать
// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СНТ";
	КомандаПечати.Представление = НСтр("ru = 'Сопроводительная накладная на товары'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюУПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 50;
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура ПечатьСНТ(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СНТ") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СНТ",
			НСтр("ru = 'Сопроводительная накладная на товары'"),
			Документы.СНТ.ПечатьСНТ(МассивОбъектов, ОбъектыПечати),
			,
			"Обработка.ОбменСНТ.ПФ_MXL_СНТ");
		КонецЕсли;
	
КонецПроцедуры
#КонецОбласти 

#Область ЗаполнениеПТУ

Функция ПолучитьТекстЗапросаДляМассиваПервичныхДокументов(МассивВидовДокумента)
	
	ТекстЗапроса = "";
	
			ТекстЗапроса = ТекстЗапросаПоступлениеТоваровУслуг(ТекстЗапроса = "");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоступлениеТоваровУслуг(ПервыйЗапрос = Истина)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СНТТовары.Ссылка КАК Ссылка,
	|	СНТТовары.Товар КАК Товар,
	|	СНТТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СНТТовары.Количество КАК Количество,
	|	1 КАК Коэффициент,
	|	СНТТовары.Цена КАК Цена,
	|	СНТТовары.СуммаБезНалогов КАК СуммаБезНалогов,
	|	СНТТовары.СтавкаНДС КАК СтавкаНДС,
	|	СНТТовары.СуммаНДС КАК СуммаНДС,
	|	СНТТовары.Сумма КАК Сумма,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	ВЫБОР
	|		КОГДА СНТТовары.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЕстьНДС,
	|	СНТТовары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	СНТТовары.СуммаАкциза КАК СуммаАкциза
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.СНТ.Товары КАК СНТТовары
	|ГДЕ
	|	СНТТовары.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТовары.Ссылка,
	|	СНТТовары.Товар,
	|	ВЫБОР
	|		КОГДА СНТТовары.ЕдиницаИзмерения <> СНТТовары.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТТовары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТТовары.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТТовары.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТовары.КоэффициентПересчета <> 1
	|				И СНТТовары.КоэффициентПересчета <> 0
	|			ТОГДА СНТТовары.Количество * СНТТовары.КоэффициентПересчета
	|		ИНАЧЕ СНТТовары.Количество
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТТовары.КоэффициентПересчета <> 1
	|				И СНТТовары.КоэффициентПересчета <> 0
	|				И СНТТовары.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТТовары.СуммаБезНалогов / (СНТТовары.Количество * СНТТовары.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТТовары.Цена
	|	КОНЕЦ,
	|	СНТТовары.СуммаБезНалогов,
	|	СНТТовары.СтавкаНДС,
	|	СНТТовары.СуммаНДС,
	|	СНТТовары.Сумма,
	|	""Товары"",
	|	ВЫБОР
	|		КОГДА СНТТовары.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТовары.КоэффициентПересчета <> 1
	|			ТОГДА СНТТовары.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ СНТТовары.ЕдиницаИзмеренияКод
	|	КОНЕЦ,
	|	СНТТовары.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК СНТТовары
	|ГДЕ
	|	СНТТовары.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТЭтиловыйСпирт.Ссылка,
	|	СНТЭтиловыйСпирт.Товар,
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения <> СНТЭтиловыйСпирт.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТЭтиловыйСпирт.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА СНТЭтиловыйСпирт.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТЭтиловыйСпирт.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.КоэффициентПересчета <> 1
	|				И СНТЭтиловыйСпирт.КоэффициентПересчета <> 0
	|			ТОГДА СНТЭтиловыйСпирт.Количество * СНТЭтиловыйСпирт.КоэффициентПересчета
	|		ИНАЧЕ СНТЭтиловыйСпирт.Количество
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.КоэффициентПересчета <> 1
	|				И СНТЭтиловыйСпирт.КоэффициентПересчета <> 0
	|				И СНТЭтиловыйСпирт.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТЭтиловыйСпирт.СуммаБезНалогов / (СНТЭтиловыйСпирт.Количество * СНТЭтиловыйСпирт.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТЭтиловыйСпирт.Цена
	|	КОНЕЦ,
	|	СНТЭтиловыйСпирт.СуммаБезНалогов,
	|	СНТЭтиловыйСпирт.СтавкаНДС,
	|	СНТЭтиловыйСпирт.СуммаНДС,
	|	СНТЭтиловыйСпирт.Сумма,
	|	""ЭтиловыйСпирт"",
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.КоэффициентПересчета <> 1
	|			ТОГДА СНТЭтиловыйСпирт.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ ""112""
	|	КОНЕЦ,
	|	СНТЭтиловыйСпирт.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК СНТЭтиловыйСпирт
	|ГДЕ
	|	СНТЭтиловыйСпирт.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТВиноматериал.Ссылка,
	|	СНТВиноматериал.Товар,
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.ЕдиницаИзмерения <> СНТВиноматериал.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТВиноматериал.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТВиноматериал.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТВиноматериал.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.КоэффициентПересчета <> 1
	|				И СНТВиноматериал.КоэффициентПересчета <> 0
	|			ТОГДА СНТВиноматериал.Количество * СНТВиноматериал.КоэффициентПересчета
	|		ИНАЧЕ СНТВиноматериал.Количество
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.КоэффициентПересчета <> 1
	|				И СНТВиноматериал.КоэффициентПересчета <> 0
	|				И СНТВиноматериал.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТВиноматериал.СуммаБезНалогов / (СНТВиноматериал.Количество * СНТВиноматериал.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТВиноматериал.Цена
	|	КОНЕЦ,
	|	СНТВиноматериал.СуммаБезНалогов,
	|	СНТВиноматериал.СтавкаНДС,
	|	СНТВиноматериал.СуммаНДС,
	|	СНТВиноматериал.Сумма,
	|	""Виноматериал"",
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.КоэффициентПересчета <> 1
	|			ТОГДА СНТВиноматериал.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ ""112""
	|	КОНЕЦ,
	|	СНТВиноматериал.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК СНТВиноматериал
	|ГДЕ
	|	СНТВиноматериал.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТПивоПивныеНапитки.Ссылка,
	|	СНТПивоПивныеНапитки.Товар,
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения <> СНТПивоПивныеНапитки.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТПивоПивныеНапитки.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТПивоПивныеНапитки.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТПивоПивныеНапитки.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.КоэффициентПересчета <> 1
	|				И СНТПивоПивныеНапитки.КоэффициентПересчета <> 0
	|			ТОГДА СНТПивоПивныеНапитки.КоличествоУпаковок * СНТПивоПивныеНапитки.КоэффициентПересчета
	|		ИНАЧЕ СНТПивоПивныеНапитки.КоличествоУпаковок
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.КоэффициентПересчета <> 1
	|				И СНТПивоПивныеНапитки.КоэффициентПересчета <> 0
	|				И СНТПивоПивныеНапитки.КоличествоУпаковок <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТПивоПивныеНапитки.СуммаБезНалогов / (СНТПивоПивныеНапитки.Количество * СНТПивоПивныеНапитки.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТПивоПивныеНапитки.Цена
	|	КОНЕЦ,
	|	СНТПивоПивныеНапитки.СуммаБезНалогов,
	|	СНТПивоПивныеНапитки.СтавкаНДС,
	|	СНТПивоПивныеНапитки.СуммаНДС,
	|	СНТПивоПивныеНапитки.Сумма,
	|	""ПивоПивныеНапитки"",
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.КоэффициентПересчета <> 1
	|			ТОГДА СНТПивоПивныеНапитки.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ ""112""
	|	КОНЕЦ,
	|	СНТПивоПивныеНапитки.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК СНТПивоПивныеНапитки
	|ГДЕ
	|	СНТПивоПивныеНапитки.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТАлкогольнаяпродукцияКромеПива.Ссылка,
	|	СНТАлкогольнаяпродукцияКромеПива.Товар,
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения <> СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета <> 1
	|				И СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета <> 0
	|			ТОГДА СНТАлкогольнаяпродукцияКромеПива.КоличествоБутылок * СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета
	|		ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.КоличествоБутылок
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета <> 1
	|				И СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета <> 0
	|				И СНТАлкогольнаяпродукцияКромеПива.КоличествоБутылок <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТАлкогольнаяпродукцияКромеПива.СуммаБезНалогов / (СНТАлкогольнаяпродукцияКромеПива.Количество * СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.Цена
	|	КОНЕЦ,
	|	СНТАлкогольнаяпродукцияКромеПива.СуммаБезНалогов,
	|	СНТАлкогольнаяпродукцияКромеПива.СтавкаНДС,
	|	СНТАлкогольнаяпродукцияКромеПива.СуммаНДС,
	|	СНТАлкогольнаяпродукцияКромеПива.Сумма,
	|	""АлкогольнаяпродукцияКромеПива"",
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяпродукцияКромеПива.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяпродукцияКромеПива.КоэффициентПересчета <> 1
	|			ТОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ ""112""
	|	КОНЕЦ,
	|	СНТАлкогольнаяпродукцияКромеПива.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК СНТАлкогольнаяпродукцияКромеПива
	|ГДЕ
	|	СНТАлкогольнаяпродукцияКромеПива.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоНефтепродуктам.Ссылка,
	|	СНТДанныеПоНефтепродуктам.Товар,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения <> СНТДанныеПоНефтепродуктам.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТДанныеПоНефтепродуктам.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.КоэффициентПересчета <> 1
	|				И СНТДанныеПоНефтепродуктам.КоэффициентПересчета <> 0
	|			ТОГДА СНТДанныеПоНефтепродуктам.Количество * СНТДанныеПоНефтепродуктам.КоэффициентПересчета
	|		ИНАЧЕ СНТДанныеПоНефтепродуктам.Количество
	|	КОНЕЦ,
	|	1,
	|	СНТДанныеПоНефтепродуктам.Цена,
	|	СНТДанныеПоНефтепродуктам.СуммаБезНалогов,
	|	СНТДанныеПоНефтепродуктам.СтавкаНДС,
	|	СНТДанныеПоНефтепродуктам.СуммаНДС,
	|	СНТДанныеПоНефтепродуктам.Сумма,
	|	""ДанныеПоНефтепродуктам"",
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.КоэффициентПересчета <> 1
	|			ТОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ ""168""
	|	КОНЕЦ,
	|	СНТДанныеПоНефтепродуктам.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК СНТДанныеПоНефтепродуктам
	|ГДЕ
	|	СНТДанныеПоНефтепродуктам.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоБиотопливу.Ссылка,
	|	СНТДанныеПоБиотопливу.Товар,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения <> СНТДанныеПоБиотопливу.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТДанныеПоБиотопливу.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТДанныеПоБиотопливу.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.КоэффициентПересчета <> 1
	|				И СНТДанныеПоБиотопливу.КоэффициентПересчета <> 0
	|			ТОГДА СНТДанныеПоБиотопливу.Количество * СНТДанныеПоБиотопливу.КоэффициентПересчета
	|		ИНАЧЕ СНТДанныеПоБиотопливу.Количество
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.КоэффициентПересчета <> 1
	|				И СНТДанныеПоБиотопливу.КоэффициентПересчета <> 0
	|				И СНТДанныеПоБиотопливу.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТДанныеПоБиотопливу.СуммаБезНалогов / (СНТДанныеПоБиотопливу.Количество * СНТДанныеПоБиотопливу.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТДанныеПоБиотопливу.Цена
	|	КОНЕЦ,
	|	СНТДанныеПоБиотопливу.СуммаБезНалогов,
	|	СНТДанныеПоБиотопливу.СтавкаНДС,
	|	СНТДанныеПоБиотопливу.СуммаНДС,
	|	СНТДанныеПоБиотопливу.Сумма,
	|	""ДанныеПоБиотопливу"",
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.КоэффициентПересчета <> 1
	|			ТОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ ""168""
	|	КОНЕЦ,
	|	СНТДанныеПоБиотопливу.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК СНТДанныеПоБиотопливу
	|ГДЕ
	|	СНТДанныеПоБиотопливу.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТабачнаяПродукция.Ссылка,
	|	СНТТабачнаяПродукция.Товар,
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения <> СНТТабачнаяПродукция.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТТабачнаяПродукция.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТТабачнаяПродукция.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТТабачнаяПродукция.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.КоэффициентПересчета <> 1
	|				И СНТТабачнаяПродукция.КоэффициентПересчета <> 0
	|			ТОГДА СНТТабачнаяПродукция.КоличествоПачек * СНТТабачнаяПродукция.КоэффициентПересчета
	|		ИНАЧЕ СНТТабачнаяПродукция.КоличествоПачек
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.КоэффициентПересчета <> 1
	|				И СНТТабачнаяПродукция.КоэффициентПересчета <> 0
	|				И СНТТабачнаяПродукция.КоличествоПачек <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТТабачнаяПродукция.СуммаБезНалогов / (СНТТабачнаяПродукция.Количество * СНТТабачнаяПродукция.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТТабачнаяПродукция.Цена
	|	КОНЕЦ,
	|	СНТТабачнаяПродукция.СуммаБезНалогов,
	|	СНТТабачнаяПродукция.СтавкаНДС,
	|	СНТТабачнаяПродукция.СуммаНДС,
	|	СНТТабачнаяПродукция.Сумма,
	|	""ТабачнаяПродукция"",
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.КоэффициентПересчета <> 1
	|			ТОГДА СНТТабачнаяПродукция.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ СНТТабачнаяПродукция.ЕдиницаИзмеренияКод
	|	КОНЕЦ,
	|	СНТТабачнаяПродукция.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК СНТТабачнаяПродукция
	|ГДЕ
	|	СНТТабачнаяПродукция.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДругиеТоварыЦифроваяМаркировка.Ссылка,
	|	СНТДругиеТоварыЦифроваяМаркировка.Товар,
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения <> СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета <> 1
	|				И СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета <> 0
	|			ТОГДА СНТДругиеТоварыЦифроваяМаркировка.Количество * СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета
	|		ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.Количество
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета <> 1
	|				И СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета <> 0
	|				И СНТДругиеТоварыЦифроваяМаркировка.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТДругиеТоварыЦифроваяМаркировка.СуммаБезНалогов / (СНТДругиеТоварыЦифроваяМаркировка.Количество * СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.Цена
	|	КОНЕЦ,
	|	СНТДругиеТоварыЦифроваяМаркировка.СуммаБезНалогов,
	|	СНТДругиеТоварыЦифроваяМаркировка.СтавкаНДС,
	|	СНТДругиеТоварыЦифроваяМаркировка.СуммаНДС,
	|	СНТДругиеТоварыЦифроваяМаркировка.Сумма,
	|	""ДругиеТоварыЦифроваяМаркировка"",
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.КоэффициентПересчета <> 1
	|			ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмеренияКод
	|	КОНЕЦ,
	|	СНТДругиеТоварыЦифроваяМаркировка.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК СНТДругиеТоварыЦифроваяМаркировка
	|ГДЕ
	|	СНТДругиеТоварыЦифроваяМаркировка.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТоварыЭкспортныйКонтроль.Ссылка,
	|	СНТТоварыЭкспортныйКонтроль.Товар,
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения <> СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмеренияХраненияОстатков
	|			И СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) 
	|			ТОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмеренияХраненияОстатков
	|		ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета <> 1
	|				И СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета <> 0
	|			ТОГДА СНТТоварыЭкспортныйКонтроль.Количество * СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета
	|		ИНАЧЕ СНТТоварыЭкспортныйКонтроль.Количество
	|	КОНЕЦ,
	|	1,
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета <> 1
	|				И СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета <> 0
	|				И СНТТоварыЭкспортныйКонтроль.Количество <> 0
	|			ТОГДА ВЫРАЗИТЬ(СНТТоварыЭкспортныйКонтроль.СуммаБезНалогов / (СНТТоварыЭкспортныйКонтроль.Количество * СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета) КАК ЧИСЛО(12, 2))
	|		ИНАЧЕ СНТТоварыЭкспортныйКонтроль.Цена
	|	КОНЕЦ,
	|	СНТТоварыЭкспортныйКонтроль.СуммаБезНалогов,
	|	СНТТоварыЭкспортныйКонтроль.СтавкаНДС,
	|	СНТТоварыЭкспортныйКонтроль.СуммаНДС,
	|	СНТТоварыЭкспортныйКонтроль.Сумма,
	|	""ТоварыЭкспортныйКонтроль"",
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.БезНДС
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.КоэффициентПересчета <> 1
	|			ТОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмеренияХраненияОстатков.Код
	|		ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмеренияКод
	|	КОНЕЦ,
	|	СНТТоварыЭкспортныйКонтроль.СуммаАкциза
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК СНТТоварыЭкспортныйКонтроль
	|ГДЕ
	|	СНТТоварыЭкспортныйКонтроль.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СНТ.Контрагент КАК Контрагент,
	|	Партнеры.Ссылка КАК Партнер
	|ПОМЕСТИТЬ вт_ДанныеПартнера
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО (Контрагенты.Партнер = Партнеры.Ссылка)
	|		ПО (СНТ.Контрагент = Контрагенты.Ссылка)
	|ГДЕ
	|	СНТ.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
	|	ДоговорыКонтрагентов.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ДоговорыКонтрагентов.ПорядокОплаты КАК ПорядокОплаты,
	|	ДоговорыКонтрагентов.НалогообложениеНДС КАК НалогообложениеНДС
	|ПОМЕСТИТЬ вт_ДанныеДоговор
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО СНТ.ДоговорПоставки = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	СНТ.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСНТ.Ссылка КАК Ссылка,
	|	ТоварыСНТ.Товар КАК Товар,
	|	ТоварыСНТ.Количество КАК Количество,
	|	ТоварыСНТ.Коэффициент КАК Коэффициент,
	|	ТоварыСНТ.Цена КАК Цена,
	|	ТоварыСНТ.СуммаБезНалогов КАК СуммаБезНалогов,
	|	ТоварыСНТ.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыСНТ.СуммаНДС КАК СуммаНДС,
	|	ТоварыСНТ.Сумма КАК Сумма,
	|	ТоварыСНТ.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	СНТ.Ссылка КАК ДокументОснование,
	|	СНТ.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА СНТ.КурсВалюты = 0
	|			ТОГДА 1
	|		ИНАЧЕ СНТ.КурсВалюты
	|	КОНЕЦ КАК КурсВалюты,
	|	СНТ.Дата КАК Дата,
	|	СНТ.Номер КАК Номер,
	|	СНТ.Организация КАК Организация,
	|	СНТ.Контрагент КАК Контрагент,
	|	СНТ.СкладПолучатель КАК СкладПолучатель,
	|	ВЫРАЗИТЬ(ТоварыСНТ.Товар КАК Справочник.Номенклатура).ТипНоменклатуры КАК ТипНоменклатуры,
	|	""СНТ"" КАК ВидВходящегоДокумента,
	|	СНТ.ДатаОтгрузкиТовара КАК ДатаОтгрузкиТовара,
	|	СНТ.ДоговорПоставки КАК ДоговорПоставки,
	|	СНТ.Автор КАК Ответственный,
	|	СНТ.Грузоотправитель КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА СНТ.ТипСНТ = ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.ВозвратТоваров)
	|				И СНТ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Входящий)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|		КОГДА СНТ.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Ввоз)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ТоварыСНТ.ЕстьНДС > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьНДС,
	|	ТоварыСНТ.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА ТоварыСНТ.ЕдиницаИзмерения <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТоварыСНТ.ЕдиницаИзмерения
	|		ИНАЧЕ КлассификаторЕдиницИзмерения.Ссылка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТоварыСНТ.СуммаАкциза КАК Акциз,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	ЛОЖЬ КАК ПолучательРозничнаяРеализация,
	|	вт_ДанныеПартнера.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	вт_ДанныеДоговор.НалогообложениеНДС КАК НалогообложениеНДС,
	|	вт_ДанныеДоговор.ПорядокОплаты КАК ПорядокОплаты,
	|	вт_ДанныеДоговор.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ЕСТЬNULL(СНТ.СвязанныйСНТ, НЕОПРЕДЕЛЕНО) КАК СвязанныйСНТ,
	|	СНТ.РегистрационныйНомерСвязанногоСНТ КАК РегистрационныйНомерСвязанногоСНТ,
	|	ЕСТЬNULL(СНТ.СвязанныйСНТ.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснованиеСвязанногоСНТ
	|ПОМЕСТИТЬ вт_ДанныеДокументаПромежуточный
	|ИЗ
	|	ВТ_Товары КАК ТоварыСНТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СНТ КАК СНТ
	|			ЛЕВОЕ СОЕДИНЕНИЕ вт_ДанныеДоговор КАК вт_ДанныеДоговор
	|			ПО СНТ.ДоговорПоставки = вт_ДанныеДоговор.Ссылка
	|		ПО ТоварыСНТ.Ссылка = СНТ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО ТоварыСНТ.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|			И (КлассификаторЕдиницИзмерения.ПометкаУдаления <> ИСТИНА),
	|	вт_ДанныеПартнера КАК вт_ДанныеПартнера
	|ГДЕ
	|	СНТ.Ссылка В(&МассивСНТДляСозданияПервичныхДокументов)
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДанныеДокументаПромежуточный.Ссылка КАК Ссылка,
	|	вт_ДанныеДокументаПромежуточный.Товар КАК Товар,
	|	вт_ДанныеДокументаПромежуточный.Количество КАК Количество,
	|	вт_ДанныеДокументаПромежуточный.Коэффициент КАК Коэффициент,
	|	вт_ДанныеДокументаПромежуточный.Цена КАК Цена,
	|	вт_ДанныеДокументаПромежуточный.СуммаБезНалогов КАК СуммаБезНалогов,
	|	вт_ДанныеДокументаПромежуточный.СтавкаНДС КАК СтавкаНДС,
	|	вт_ДанныеДокументаПромежуточный.СуммаНДС КАК СуммаНДС,
	|	вт_ДанныеДокументаПромежуточный.Сумма КАК Сумма,
	|	вт_ДанныеДокументаПромежуточный.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	вт_ДанныеДокументаПромежуточный.ДокументОснование КАК ДокументОснование,
	|	вт_ДанныеДокументаПромежуточный.Валюта КАК Валюта,
	|	вт_ДанныеДокументаПромежуточный.КурсВалюты КАК КурсВалюты,
	|	вт_ДанныеДокументаПромежуточный.Дата КАК Дата,
	|	вт_ДанныеДокументаПромежуточный.Номер КАК Номер,
	|	вт_ДанныеДокументаПромежуточный.Организация КАК Организация,
	|	вт_ДанныеДокументаПромежуточный.Контрагент КАК Контрагент,
	|	вт_ДанныеДокументаПромежуточный.СкладПолучатель КАК СкладПолучатель,
	|	вт_ДанныеДокументаПромежуточный.ТипНоменклатуры КАК ТипНоменклатуры,
	|	вт_ДанныеДокументаПромежуточный.ВидВходящегоДокумента КАК ВидВходящегоДокумента,
	|	вт_ДанныеДокументаПромежуточный.ДатаОтгрузкиТовара КАК ДатаОтгрузкиТовара,
	|	вт_ДанныеДокументаПромежуточный.ДоговорПоставки КАК ДоговорПоставки,
	|	вт_ДанныеДокументаПромежуточный.Ответственный КАК Ответственный,
	|	вт_ДанныеДокументаПромежуточный.Грузоотправитель КАК Грузоотправитель,
	|	вт_ДанныеДокументаПромежуточный.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	вт_ДанныеДокументаПромежуточный.ЕстьНДС КАК ЕстьНДС,
	|	вт_ДанныеДокументаПромежуточный.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	вт_ДанныеДокументаПромежуточный.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_ДанныеДокументаПромежуточный.Акциз КАК Акциз,
	|	вт_ДанныеДокументаПромежуточный.ПоставщикРозничнаяРеализация КАК ПоставщикРозничнаяРеализация,
	|	вт_ДанныеДокументаПромежуточный.ПолучательРозничнаяРеализация КАК ПолучательРозничнаяРеализация,
	|	вт_ДанныеДокументаПромежуточный.Партнер КАК Партнер,
	|	вт_ДанныеДокументаПромежуточный.Соглашение КАК Соглашение,
	|	вт_ДанныеДокументаПромежуточный.НалогообложениеНДС КАК НалогообложениеНДС,
	|	вт_ДанныеДокументаПромежуточный.ПорядокОплаты КАК ПорядокОплаты,
	|	вт_ДанныеДокументаПромежуточный.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	вт_ДанныеДокументаПромежуточный.СвязанныйСНТ КАК СвязанныйСНТ,
	|	вт_ДанныеДокументаПромежуточный.РегистрационныйНомерСвязанногоСНТ КАК РегистрационныйНомерСвязанногоСНТ,
	|	вт_ДанныеДокументаПромежуточный.ДокументОснованиеСвязанногоСНТ КАК ДокументОснованиеСвязанногоСНТ
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ДанныеДокументаПромежуточный КАК вт_ДанныеДокументаПромежуточный";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции	

Функция ПодготовитьТекстЗапросаДляЗаполненияПервичныхДокументов(ПараметрыЗаполнения) Экспорт
	
	ДокументыОснования 	 = ПараметрыЗаполнения.МассивСНТДляСозданияПервичныхДокументов;
	
	ТекстЗапроса = ТекстЗапросаПоступлениеТоваровУслуг();
		
	ТекстЗапроса = ТекстЗапроса + "
	|
	| ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|";
			
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДополнитьТекстЗапросЗаполненияПТУ(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|//так как для ВС может быть установлено несколько элементов спр. Склады, то возьмем только один из них
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СкладПолучатель КАК СкладПолучатель,
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеСкладовДляПолучателя.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК Склад
	|ПОМЕСТИТЬ вт_СоответствиеСкладов
	|
	|ИЗ
	|	вт_ДанныеДокумента КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовДляПолучателя
	|		ПО ДанныеДокумента.Организация = СоответствиеСкладовДляПолучателя.Организация
	|		И ДанныеДокумента.СкладПолучатель = СоответствиеСкладовДляПолучателя.ВиртуальныйСклад
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.СкладПолучатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ДанныеДокумента.Организация КАК Организация,
	|	вт_ДанныеДокумента.Контрагент КАК Контрагент,
	|	вт_ДанныеДокумента.Контрагент.Партнер КАК Партнер,
	|	вт_ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	вт_ДанныеДокумента.Валюта КАК Валюта,
	|	вт_ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	вт_ДанныеДокумента.КурсВалюты КАК КурсВзаиморасчетов,
	|	1 КАК КратностьВзаиморасчетов,
	|	вт_ДанныеДокумента.ЕстьНДС КАК УчитыватьНДС,
	|	ЛОЖЬ КАК СуммаВключаетНДС,
	|	вт_ДанныеДокумента.Дата КАК ДатаВходящегоДокумента,
	|	вт_ДанныеДокумента.Дата КАК Дата,
	|	вт_ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	вт_ДанныеДокумента.ДоговорПоставки КАК Договор,
	|	вт_ДанныеДокумента.Номер КАК НомерВходящегоДокумента,
	|	вт_ДанныеДокумента.ВидВходящегоДокумента КАК ВидВходящегоДокумента,
	|	ЕСТЬNULL(СоответствиеСкладов.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	|	вт_ДанныеДокумента.ДоговорПоставки,
	|	вт_ДанныеДокумента.Ответственный,
	|	вт_ДанныеДокумента.Грузоотправитель,
	|	вт_ДанныеДокумента.Товар КАК Номенклатура,
	|	вт_ДанныеДокумента.ТипНоменклатуры КАК ТипНоменклатуры,
	|	вт_ДанныеДокумента.ЕдиницаИзмерения КАК Упаковка,
	|	вт_ДанныеДокумента.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА вт_ДанныеДокумента.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки1
	|	КОНЕЦ КАК Коэффициент,
	|	вт_ДанныеДокумента.СуммаБезНалогов КАК Сумма,
	|	вт_ДанныеДокумента.Цена КАК Цена,
	|	вт_ДанныеДокумента.СтавкаНДС КАК СтавкаНДС,
	|	вт_ДанныеДокумента.СуммаНДС КАК СуммаНДС,
	|	вт_ДанныеДокумента.СуммаНДС + вт_ДанныеДокумента.СуммаБезНалогов КАК СуммаСНДС,
	|	вт_ДанныеДокумента.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	вт_ДанныеДокумента.Соглашение КАК Соглашение,
	|	вт_ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	вт_ДанныеДокумента.ПорядокОплаты КАК ПорядокОплаты,
	|	вт_ДанныеДокумента.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	вт_ДанныеДокумента.ДокументОснованиеСвязанногоСНТ КАК ДОСвязанногоСНТ
	|ПОМЕСТИТЬ вт_ДанныеДляЗаполнения
	|ИЗ
	|	вт_ДанныеДокумента КАК вт_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_СоответствиеСкладов КАК СоответствиеСкладов
	|		ПО вт_ДанныеДокумента.Организация = СоответствиеСкладов.Организация
	|			И вт_ДанныеДокумента.СкладПолучатель = СоответствиеСкладов.СкладПолучатель
	|ГДЕ
	|	вт_ДанныеДокумента.Количество > 0
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"вт_ДанныеДокумента.ЕдиницаИзмерения",
			"вт_ДанныеДокумента.Товар"));
	
	Возврат ТекстЗапроса + ПолучитьТекстПакетовЗапросаДляЗаполненияПервичныхДокументов();
КонецФункции

Функция ПолучитьТекстПакетовЗапросаДляЗаполненияПервичныхДокументов() Экспорт
	
	СтруктураДокумента 	= ПолучитьПустуюСтруктуруДокументаПТУ();
	
	ТекстЗапроса = "";
	Для Каждого ЭлементСтруктуры Из СтруктураДокумента Цикл 
			
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ" + ?(ЭлементСтруктуры.Ключ = "Реквизиты",  " РАЗЛИЧНЫЕ", "") + " 
		|";
		
		
		КолонкиТЧ 			= ЭлементСтруктуры.Значение.Колонки;
		НомерКолонки 		= 0;
		КоличествоКолонок 	= КолонкиТЧ.Количество();
		Для Каждого КолонкаТЧ Из КолонкиТЧ Цикл
			НомерКолонки = НомерКолонки + 1;
			ТекстЗапроса = ТекстЗапроса + "
					|вт_ДанныеДляЗаполнения." + КолонкаТЧ.Имя + ?(НомерКолонки = КоличествоКолонок, "", ",");
		КонецЦикла;	
		ТекстЗапроса = ТекстЗапроса + "
		    |
			|ИЗ вт_ДанныеДляЗаполнения КАК вт_ДанныеДляЗаполнения";
		
		
		ТекстЗапроса = ТекстЗапроса + "
			|					
			|	УПОРЯДОЧИТЬ ПО
			|		ДокументОснование";
			
			КонецЦикла;	
		Возврат ТекстЗапроса; 
КонецФункции

Функция ПолучитьПустуюСтруктуруДокументаПТУ() Экспорт
	
	СтруктураДокумента = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = "Организация," 
	+ "Контрагент,"
	+ "Партнер,"
	+ "ХозяйственнаяОперация,"
	+ "Соглашение,"
	+ "Договор,"
	+ "ВидВходящегоДокумента,"
	+ "ДатаВходящегоДокумента,"
	+ "Дата,"
	+ "ДокументОснование,"
	+ "Валюта,"
	+ "ВалютаВзаиморасчетов,"
	+ "КратностьВзаиморасчетов,"
	+ "Склад,"
	+ "НомерВходящегоДокумента,"
	+ "КурсВзаиморасчетов,"
	+ "СуммаВключаетНДС,"
	+ "УчитыватьНДС,"
	+ "Ответственный,"
	+ "Грузоотправитель,"
	+ "НалогообложениеНДС,"
	+ "ПорядокОплаты,"
	+ "ЗакупкаПодДеятельность,"
	+ "ДОСвязанногоСНТ"
	;
	
	СтруктураДокумента.Вставить("Реквизиты", ВСВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	
	СписокОбязательныхКолонок = 
	"Организация,"
	+ "УчитыватьНДС,"
	+ "СуммаВключаетНДС,"
	+ "Номенклатура,"
	+ "ТипНоменклатуры,"
	+ "ДокументОснование,"

	+ "Упаковка,"
	+ "Количество,"
	+ "Коэффициент,"
	+ "Сумма,"
	+ "Цена,"
	+ "СтавкаНДС,"
	+ "СуммаНДС,"
	+ "СуммаСНДС"
	;
	
	СтруктураДокумента.Вставить("Товары", ВСВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	//СтруктураДокумента.Вставить("ТоварыВС", ВСВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	//СтруктураДокумента.Вставить("ИсходныеТовары", ВСВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	//СтруктураДокумента.Вставить("ИсходныеТоварыВС", ВСВызовСервера.ПолучитьТаблицуПараметров(СписокОбязательныхКолонок));
	Возврат СтруктураДокумента;
	
КонецФункции	

Процедура ЗаполнитьМассивПервичныхДокументов(ПараметрыСоздания, МассивДанныхДляЗаполнения, СписокПервичныхДокументов, Отказ, ВидДвижения = "") Экспорт
	
	ПроводитьСозданныеДокументы	= ПараметрыСоздания.ПроводитьСозданныеДокументы;
	ФормироватьСписокДокументов = ПараметрыСоздания.ФормироватьСписокДокументов;
	
	Для каждого ЭлементМассива Из МассивДанныхДляЗаполнения Цикл
		ДокументСНТ = ЭлементМассива.Реквизиты[0].ДокументОснование;
		
		ПервичныйДокумент = ПолучитьПервичныйДокументДляЗаполнения(ДокументСНТ);
		
		ЭтоВозвратТоваровОтКлиента = ТипЗнч(ПервичныйДокумент) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента");
		ЭтоПриобретениеТоваровУслуг = ТипЗнч(ПервичныйДокумент) = Тип("ДокументОбъект.ПриобретениеТоваровУслуг");
		
		//Заполняем шапку документа
		ЗаполнитьЗначенияСвойств(ПервичныйДокумент, ЭлементМассива.Реквизиты[0]);
		
		ВариантПриемкиТоваров = Константы.ВариантПриемкиТоваров.Получить();
		ПервичныйДокумент.ВариантПриемкиТоваров = ВариантПриемкиТоваров;
		
		ЗаполнитьДанныеПервичногоДокумента(ПервичныйДокумент);
		
		Если Не ЗначениеЗаполнено(ПервичныйДокумент.НалогообложениеНДС) Тогда
			ПервичныйДокумент.НалогообложениеНДС = ЗначениеНастроекПовтИсп.НалогообложениеНДС(ПервичныйДокумент.Организация,
																									ПервичныйДокумент.Склад,
																									ПервичныйДокумент.Договор,
																									ПервичныйДокумент.НаправлениеДеятельности,
																									ПервичныйДокумент.Дата);
		КонецЕсли;
		
		СвязанныйСНТ = ДокументСНТ.СвязанныйСНТ;
		Если ЭтоВозвратТоваровОтКлиента Тогда
			ПервичныйДокумент.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(ПервичныйДокумент.Валюта,,ПервичныйДокумент.Валюта);
			Если ЗначениеЗаполнено(СвязанныйСНТ) Тогда
				ПервичныйДокумент.ДокументРеализации = СвязанныйСНТ.ДокументОснование;
			КонецЕсли;
		КонецЕсли;
		
		ПлательщикНДС = ПервичныйДокумент.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		Если НЕ ПлательщикНДС И ЭлементМассива.Реквизиты[0].УчитыватьНДС И НЕ ЭлементМассива.Реквизиты[0].СуммаВключаетНДС Тогда
			ПервичныйДокумент.ЦенаВключаетНДС = Истина;
			УчестьСуммуНДС = Истина;
		Иначе
			УчестьСуммуНДС = Ложь;
		КонецЕсли;
		
		Для Каждого СтрокаТЧ Из ЭлементМассива.Товары Цикл
			
			НоваяСтрокаТЧ = ПервичныйДокумент.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,СтрокаТЧ);
			
			НоваяСтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.Количество;
			// заполним Количество с учетом единиц измерения
			Если ЗначениеЗаполнено(СтрокаТЧ.Упаковка) Тогда
				ТекКоэффициент = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентУпаковки(СтрокаТЧ.Упаковка, СтрокаТЧ.Номенклатура);
			Иначе
				ТекКоэффициент = 1;
			КонецЕсли;
			
			НоваяСтрокаТЧ.Количество = НоваяСтрокаТЧ.КоличествоУпаковок * ТекКоэффициент;
			
			Если ЭтоПриобретениеТоваровУслуг 
				И (СтрокаТЧ.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
					ИЛИ СтрокаТЧ.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара) Тогда
				НоваяСтрокаТЧ.Склад = ПервичныйДокумент.Склад;
			ИначеЕсли ЭтоВозвратТоваровОтКлиента И ЗначениеЗаполнено(СвязанныйСНТ) Тогда
				НоваяСтрокаТЧ.ДокументРеализации = СвязанныйСНТ.ДокументОснование;
			КонецЕсли;
			
			Если УчестьСуммуНДС Тогда
				НоваяСтрокаТЧ.Сумма    = НоваяСтрокаТЧ.Сумма + НоваяСтрокаТЧ.СуммаНДС;
				НоваяСтрокаТЧ.СуммаНДС = 0;
				НоваяСтрокаТЧ.Цена = Окр(?(НоваяСтрокаТЧ.Количество = 0, НоваяСтрокаТЧ.Сумма, НоваяСтрокаТЧ.Сумма / НоваяСтрокаТЧ.Количество),2);
			КонецЕсли;
			
		КонецЦикла;
		
		Попытка
			ПервичныйДокумент.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			ТекстСообщения = НСтр("ru = 'При записи документа ""%1"" произошла ошибка: %2'");
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ПервичныйДокумент, ПодробноеПредставлениеОшибки);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		Если ПроводитьСозданныеДокументы Тогда
			
			Попытка
				ПервичныйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Отказ = Истина;
			КонецПопытки;
				
			Если Отказ Тогда
				ТекстСообщения = НСтр("ru = 'При проведении документа ""%1"" произошла ошибка. Выполнение ввода документов СНТ прервано'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ПервичныйДокумент);
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			Если ЗначениеЗаполнено(ДокументСНТ) Тогда
				
				СНТОбъект = ДокументСНТ.ПолучитьОбъект();
				
				СНТОбъект.ДокументОснование = ПервичныйДокумент.Ссылка;
				СНТОбъект.Записать();
				
			КонецЕсли;
		Исключение
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
			НСтр("ru='Ошибка при записи %1: %2.'"),
			ЭлементМассива.Реквизиты[0].ДокументОснование,
			ИнформацияОбОшибке().Описание);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Прервать;
		КонецПопытки;
		
		Если ФормироватьСписокДокументов Тогда
			СписокПервичныхДокументов.Добавить(ПервичныйДокумент.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИспользуетсяРазделениеДанных() Экспорт
	
	ИспользуетсяРазделениеДанных = Ложь;
	
	ИспользуетсяРазделениеДанных = ТехнологияСервисаИнтеграцияСБСП.ДоступноИспользованиеРазделенныхДанных()
		И ТехнологияСервисаИнтеграцияСБСП.РазделениеВключено();
		
	Возврат ИспользуетсяРазделениеДанных;
	
КонецФункции

//Функция возвращает текст запроса для получени цены для подстановки в СНТ с определенными видами операций
Функция ПолучитьТекстЗапросаЦена(ПараметрыЗаполнения)
	
	Если ПараметрыЗаполнения.Свойство("СпособЗаполненияЦены") Тогда
		СпособЗаполненияЦены 	= ПараметрыЗаполнения.СпособЗаполненияЦены;
	Иначе
		СпособЗаполненияЦены 	= Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.Свойство("СебестоимостьПоСкладам") Тогда
		СебестоимостьПоСкладам 	= ПараметрыЗаполнения.СебестоимостьПоСкладам;
	Иначе
		СебестоимостьПоСкладам 	= Ложь;
	КонецЕсли;
	
		ВестиСкладскойУчетБУ 	= Ложь;
	
	Если ПараметрыЗаполнения.Свойство("ПоДвижениямДокумента") Тогда
		ПоДвижениямДокумента 	= ПараметрыЗаполнения.ПоДвижениямДокумента;
	Иначе
		ПоДвижениямДокумента 	= Ложь;
	КонецЕсли;
	
	Если СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ФиксированнымЗначением ИЛИ Не ПараметрыЗаполнения.ЗаполнятьЦены Тогда
		ТекстЗапросаЦена = 
		"
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	вт_ДанныеДокумента.Товар КАК Номенклатура,
		|	вт_ДанныеДокумента.Характеристика КАК Характеристика,
		|	&ЗначениеЦены КАК ЦенаНоменклатуры
		|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
		|ИЗ
		|	вт_ДанныеДокумента КАК вт_ДанныеДокумента
		|ГДЕ
		|	вт_ДанныеДокумента.ВидОперации В(&ВидыОперацийЦены)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика";
	ИначеЕсли  СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ПоТипуЦены
		ИЛИ СпособЗаполненияЦены = Перечисления.СпособЗаполненияЦеныЭДВС.ПоСебестоимости Тогда
		
		// в УПК ПоСебестоимости не используется (в случае необходимости пользователь использует рассчитываемый вид цен Себестоимость)
		ТекстЗапросаЦена =
		"
		|;
		|ВЫБРАТЬ
		|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
		|	ЦеныНоменклатуры.Цена КАК ЦенаНоменклатуры
		|ПОМЕСТИТЬ вт_ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&ДатаСреза,
		|			(Номенклатура, Характеристика) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						вт_ДанныеДокумента.Товар,
		|						вт_ДанныеДокумента.Характеристика
		|					ИЗ
		|						вт_ДанныеДокумента КАК вт_ДанныеДокумента)
		|				И ВидЦены = &ТипЦены) КАК ЦеныНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика"
		
	КонецЕсли;
	
	Возврат ТекстЗапросаЦена;

КонецФункции

Функция ПроверитьТипИмпортДокументаПТУПОСсылке(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		Возврат ДокументОснование.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту")
				ИЛИ ДокументОснование.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС")
				ИЛИ ДокументОснование.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути")
				ИЛИ ДокументОснование.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки")
				ИЛИ ДокументОснование.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути");
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

Функция ПолучитьПервичныйДокументДляЗаполнения(ДокументСНТ)
	
	Если ДокументСНТ.ТипСНТ = Перечисления.ТипыСНТ.ВозвратТоваров
			И ДокументСНТ.Направление = Перечисления.НаправленияСНТ.Входящий Тогда
		Возврат Документы.ВозвратТоваровОтКлиента.СоздатьДокумент();
	Иначе
		Возврат Документы.ПриобретениеТоваровУслуг.СоздатьДокумент();
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьДанныеПервичногоДокумента(ПервичныйДокумент)
	
	Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументОбъект.ПриобретениеТоваровУслуг") Тогда
		
		//Данные по договору
		ХозяйственныеОперацииВвозИзЕАЭС = Новый Массив;
		ХозяйственныеОперацииВвозИзЕАЭС.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС"));
		ХозяйственныеОперацииВвозИзЕАЭС.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути"));
		ХозяйственныеОперацииВвозИзЕАЭС.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки"));
		
		ХозяйственныеОперацииИмпорта = Новый Массив;
		ХозяйственныеОперацииИмпорта.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту"));
		ХозяйственныеОперацииИмпорта.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути"));
		
		Если ЗначениеЗаполнено(ПервичныйДокумент.Договор) Тогда
			
			Если ХозяйственныеОперацииВвозИзЕАЭС.Найти(ПервичныйДокумент.ХозяйственнаяОперация) <> Неопределено
				ИЛИ ХозяйственныеОперацииИмпорта.Найти(ПервичныйДокумент.ХозяйственнаяОперация) <> Неопределено Тогда
				ПервичныйДокумент.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
			КонецЕсли;
			
			Если ПервичныйДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика
				ИЛИ ПервичныйДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути
				ИЛИ ПервичныйДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки
				ИЛИ ПервичныйДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет
				ИЛИ ХозяйственныеОперацииИмпорта.Найти(ПервичныйДокумент.ХозяйственнаяОперация) <> Неопределено
				ИЛИ ХозяйственныеОперацииВвозИзЕАЭС.Найти(ПервичныйДокумент.ХозяйственнаяОперация) <> Неопределено
				ИЛИ ПервичныйДокумент.ХозяйственнаяОперация =  Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо Тогда
				
				ПервичныйДокумент.ЗакупкаПодДеятельность = ЗначениеНастроекПовтИсп.ЗакупкаПодДеятельность(
					ПервичныйДокумент.Организация,
					ПервичныйДокумент.Склад,
					ПервичныйДокумент.Договор,
					ПервичныйДокумент.НаправлениеДеятельности,
					ПервичныйДокумент.Дата,
					ПервичныйДокумент.ХозяйственнаяОперация);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПеремещениеТоваров(ПервыйЗапрос = Истина)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ОрганизацияПолучателя.Ссылка КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ПеремещениеТоваров.СкладОтправитель КАК СкладОтправитель,
	|	ЕСТЬNULL(ПеремещениеТоваров.Организация, """") КАК Поставщик,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизации.НаименованиеПолное, ЕСТЬNULL(Организации.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизации.Наименование, ЕСТЬNULL(Организации.Наименование, """"))
	|	КОНЕЦ КАК ПоставщикНаименование,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизации.ИНН, ЕСТЬNULL(Организации.ИНН, """")) КАК ПоставщикИдентификатор,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизации.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(Организации.ИНН, """")
	|	КОНЕЦ КАК ПоставщикБИНСтруктурногоПодразделения,
	|	ВЫБОР
	|		КОГДА ДанныеГоловнойОрганизацииПолучателя.Ссылка ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(ОрганизацияПолучателя.ИНН, """")
	|	КОНЕЦ КАК ПолучательБИНСтруктурногоПодразделения,
	|	ЛОЖЬ КАК ПоставщикНерезидент,
	|	ЛОЖЬ КАК ПоставщикРозничнаяРеализация,
	|	""KZ"" КАК ПоставщикКодСтраны,
	|	""KZ"" КАК ПоставщикКодСтраныОтправки,
	|	ПеремещениеТоваров.СкладПолучатель КАК СкладПолучатель,
	|	ОрганизацияПолучателя.Ссылка КАК Получатель,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизацииПолучателя.НаименованиеПолное, ЕСТЬNULL(ОрганизацияПолучателя.НаименованиеПолное, """")) КАК СТРОКА(200))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ДанныеГоловнойОрганизацииПолучателя.НаименованиеПолное, ЕСТЬNULL(ОрганизацияПолучателя.НаименованиеПолное, """")) КАК СТРОКА(200))
	|		ИНАЧЕ ЕСТЬNULL(ДанныеГоловнойОрганизацииПолучателя.Наименование, ЕСТЬNULL(ОрганизацияПолучателя.Наименование, """"))
	|	КОНЕЦ КАК ПолучательНаименование,
	|	ЕСТЬNULL(ДанныеГоловнойОрганизацииПолучателя.ИНН, ЕСТЬNULL(ОрганизацияПолучателя.ИНН, """")) КАК ПолучательИдентификатор,
	|	ЛОЖЬ КАК ПолучательНерезидент,
	|	ЛОЖЬ КАК ПолучательРозничнаяРеализация,
	|	""KZ"" КАК ПолучательКодСтраны,
	|	""KZ"" КАК ПолучательКодСтраныДоставки,
	|	ПеремещениеТоваров.Дата КАК ДатаОтгрузкиТовара,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|	КОНЕЦ КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПеремещенияСНТ.ВПределахОдногоЛицаРК) КАК ВидПеремещения,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВывозаСНТ.ПустаяСсылка) КАК ВидВывоза,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыВвозаСНТ.ПустаяСсылка) КАК ВидВвоза,
	|	""KZ"" КАК ГрузоотправительКодСтраныОтправки,
	|	""KZ"" КАК ГрузополучательКодСтраныОтправки,
	|	ЕСТЬNULL(ПеремещениеТоваров.Организация, """") КАК Грузоотправитель,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ЕСТЬNULL(Организации.НаименованиеПолное, """") КАК СТРОКА(200)), """") КАК ГрузоотправительНаименование,
	|	ЕСТЬNULL(Организации.ИНН, """") КАК ГрузоотправительИдентификатор,
	|	ЛОЖЬ КАК ГрузоотправительНерезидент,
	|	ЕСТЬNULL(ОрганизацияПолучателя.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Грузополучатель,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ОрганизацияПолучателя.НаименованиеПолное КАК СТРОКА(200)), """") КАК ГрузополучательНаименование,
	|	ЕСТЬNULL(ОрганизацияПолучателя.ИНН, """") КАК ГрузополучательИдентификатор,
	|	ЛОЖЬ КАК ГрузополучательНерезидент,
	|	"""" КАК Контрагент,
	|	ИСТИНА КАК БезДоговора,
	|	"""" КАК ДоговорПоставкиНомер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДоговорПоставкиДата,
	|	"""" КАК ДоговорПоставкиУсловияОплаты,
	|	"""" КАК ДоговорПоставкиУсловияПоставки,
	|	&ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	НЕОПРЕДЕЛЕНО КАК ПервичныйДокументОснование
	|ПОМЕСТИТЬ вт_ДанныеДокПоставщикПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизации
	|			ПО (ВЫБОР
	|					КОГДА Организации.ОбособленноеПодразделение
	|							И Организации.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|						ТОГДА Организации.ГоловнаяОрганизация = ДанныеГоловнойОрганизации.Ссылка
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ)
	|		ПО ПеремещениеТоваров.Организация = Организации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучателя
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ДанныеГоловнойОрганизацииПолучателя
	|			ПО (ВЫБОР
	|					КОГДА ОрганизацияПолучателя.ОбособленноеПодразделение
	|							И ОрганизацияПолучателя.УказыватьРеквизитыГоловнойОрганизацииВСчетеФактуре
	|						ТОГДА ОрганизацияПолучателя.ГоловнаяОрганизация = ДанныеГоловнойОрганизацииПолучателя.Ссылка
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ)
	|		ПО (ВЫБОР
	|				КОГДА ПеремещениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|					ТОГДА ПеремещениеТоваров.ОрганизацияПолучатель
	|				ИНАЧЕ ПеремещениеТоваров.Организация
	|			КОНЕЦ = ОрганизацияПолучателя.Ссылка)
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""KZT"" КАК Валюта,
	|	""KZT"" КАК ВалютаКод,
	|	1 КАК КурсВалюты,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	ТаблицаТовары.Ссылка КАК ДокументОснование,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(СправочникНоменклатура.НаименованиеПолное, """") КАК ТоварНаименование,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|	0 КАК Цена,
	|	0 КАК Сумма,
	|	""5"" КАК ПризнакПроисхождения,
	|	"""" КАК НомерЗаявленияВРамкахТС,
	|	"""" КАК ИдентификаторТовара,
	|	"""" КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""ПеремещениеТоваровУслуг"" КАК ИмяДокумента,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ИСТИНА КАК РаспределятьТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ЛОЖЬ КАК УчитыватьАкциз,
	|	ЛОЖЬ КАК УчитыватьНДС,
	|	0 КАК СуммаВключаетНДС,
	|	0 КАК СуммаВключаетАкциз,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	ИСТИНА КАК БезНДС,
	|	0 КАК СуммаНДС,
	|	"""" КАК АдресОтправки,
	|	"""" КАК АдресДоставки,
	|	"""" КАК ДоговорПоставки,
	|	0 КАК СуммаБезНалогов,
	|	0 КАК ОборотПоРеализации,
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСНТ.Первичная) КАК ТипСНТ,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	ПеремещениеТоваров.СкладОтправитель КАК СкладОтправитель,
	|	ПеремещениеТоваров.Поставщик КАК Поставщик,
	|	ПеремещениеТоваров.ПоставщикНаименование КАК ПоставщикНаименование,
	|	ПеремещениеТоваров.ПоставщикИдентификатор КАК ПоставщикИдентификатор,
	|	ПеремещениеТоваров.ПоставщикНерезидент КАК ПоставщикНерезидент,
	|	ПеремещениеТоваров.ПоставщикРозничнаяРеализация КАК ПоставщикРозничнаяРеализация,
	|	ПеремещениеТоваров.ПоставщикКодСтраны КАК ПоставщикКодСтраны,
	|	ПеремещениеТоваров.ПоставщикКодСтраныОтправки КАК ПоставщикКодСтраныОтправки,
	|	ПеремещениеТоваров.СкладПолучатель КАК СкладПолучатель,
	|	ПеремещениеТоваров.Получатель КАК Получатель,
	|	ПеремещениеТоваров.ПолучательНаименование КАК ПолучательНаименование,
	|	ПеремещениеТоваров.ПолучательИдентификатор КАК ПолучательИдентификатор,
	|	ПеремещениеТоваров.ПолучательНерезидент КАК ПолучательНерезидент,
	|	ПеремещениеТоваров.ПолучательРозничнаяРеализация КАК ПолучательРозничнаяРеализация,
	|	ПеремещениеТоваров.ПолучательКодСтраны КАК ПолучательКодСтраны,
	|	ПеремещениеТоваров.ПолучательКодСтраныДоставки КАК ПолучательКодСтраныДоставки,
	|	ПеремещениеТоваров.ДатаОтгрузкиТовара КАК ДатаОтгрузкиТовара,
	|	ПеремещениеТоваров.ВидОперации КАК ВидОперации,
	|	ПеремещениеТоваров.ВидПеремещения КАК ВидПеремещения,
	|	ПеремещениеТоваров.ВидВывоза КАК ВидВывоза,
	|	ПеремещениеТоваров.ВидВвоза КАК ВидВвоза,
	|	ПеремещениеТоваров.ГрузоотправительКодСтраныОтправки КАК ГрузоотправительКодСтраныОтправки,
	|	ПеремещениеТоваров.ГрузополучательКодСтраныОтправки КАК ГрузополучательКодСтраныОтправки,
	|	ПеремещениеТоваров.Грузоотправитель КАК Грузоотправитель,
	|	ПеремещениеТоваров.ГрузоотправительНаименование КАК ГрузоотправительНаименование,
	|	ПеремещениеТоваров.ГрузоотправительИдентификатор КАК ГрузоотправительИдентификатор,
	|	ПеремещениеТоваров.ГрузоотправительНерезидент КАК ГрузоотправительНерезидент,
	|	ПеремещениеТоваров.Грузополучатель КАК Грузополучатель,
	|	ПеремещениеТоваров.ГрузополучательНаименование КАК ГрузополучательНаименование,
	|	ПеремещениеТоваров.ГрузополучательИдентификатор КАК ГрузополучательИдентификатор,
	|	ПеремещениеТоваров.ГрузополучательНерезидент КАК ГрузополучательНерезидент,
	|	ПеремещениеТоваров.Контрагент КАК Контрагент,
	|	ПеремещениеТоваров.БезДоговора КАК БезДоговора,
	|	ПеремещениеТоваров.ДоговорПоставкиНомер КАК ДоговорПоставкиНомер,
	|	ПеремещениеТоваров.ДоговорПоставкиДата КАК ДоговорПоставкиДата,
	|	ПеремещениеТоваров.ДоговорПоставкиУсловияОплаты КАК ДоговорПоставкиУсловияОплаты,
	|	ПеремещениеТоваров.ДоговорПоставкиУсловияПоставки КАК ДоговорПоставкиУсловияПоставки,
	|	ПеремещениеТоваров.ЭтоИсправленнаяСНТ КАК ЭтоИсправленнаяСНТ,
	|	ПеремещениеТоваров.ПервичныйДокументОснование КАК ПервичныйДокументОснование,
	|	0 КАК СтавкаНДСЧисло,
	|	0 КАК СтавкаАкцизаЧисло,
	|	ЛОЖЬ КАК ПолучательФизическоеЛицо,
	|	ЛОЖЬ КАК ПоставщикФизическоеЛицо,
	|	ПеремещениеТоваров.ПолучательБИНСтруктурногоПодразделения КАК ПолучательБИНСтруктурногоПодразделения,
	|	ПеремещениеТоваров.ПоставщикБИНСтруктурногоПодразделения КАК ПоставщикБИНСтруктурногоПодразделения,
	|	НЕОПРЕДЕЛЕНО КАК НомерДоверенностиОтпуск,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДоверенностиОтпуск,
	|	ТаблицаТовары.НомерСтроки
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ДанныеДокПоставщикПолучатель КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ПО (ТаблицаТовары.Ссылка = ПеремещениеТоваров.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ТаблицаТовары.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)";
	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");	
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

# Область ПараметрыДляЗаполнениеСНТ 
Функция ВидыОперацийСНТКоторыхУстанавливаютсяЦены() Экспорт 
	
	ВидыОперацийЦены = Новый Массив;
	ВидыОперацийЦены.Добавить(Перечисления.ВидыОперацийСНТ.Перемещение);
	
	Возврат ВидыОперацийЦены;
	
КонецФункции

Функция ТабличныеЧастиДокументаСНТ() Экспорт
	
	ТабличныеЧастиВыбора = Новый СписокЗначений;	
	ТабличныеЧастиВыбора.Добавить("Товары", "Товары");
	ТабличныеЧастиВыбора.Добавить("ТоварыВС", "Товары виртуального склада");
	ТабличныеЧастиВыбора.Добавить("ЭтиловыйСпирт", "Этиловый спирт");
	ТабличныеЧастиВыбора.Добавить("Виноматериал", "Виноматериал");
	ТабличныеЧастиВыбора.Добавить("ПивоПивныеНапитки", "Пиво и пивные напитки");
	ТабличныеЧастиВыбора.Добавить("АлкогольнаяПродукцияКромеПива", "Алкогольная продукция (кроме пива и пивных напитков)");
	ТабличныеЧастиВыбора.Добавить("ДанныеПоНефтепродуктам", "Нефтепродукты");
	ТабличныеЧастиВыбора.Добавить("ДанныеПоБиотопливу", "Биотопливо");
	ТабличныеЧастиВыбора.Добавить("ТабачнаяПродукция", "Данные по табачной продукции (исключая цифровую маркировку)");
	ТабличныеЧастиВыбора.Добавить("ДругиеТоварыЦифроваяМаркировка", "Данные по товарам, подлежащим маркировке средствами идентификации (цифровая маркировка)");
	
	Возврат ТабличныеЧастиВыбора;	
	
КонецФункции

#КонецОбласти

#Область ОбработкаПроведения

Функция ТекстЗапросаТаблицаТоварыНаВС_СНТ(НомераТаблиц, Реквизиты, ПараметрыПроведения) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаТоварыНаВС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СНТТовары.Товар КАК Номенклатура,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТовары.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТовары.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТовары.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТовары.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТовары.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТовары.Количество,
	|	СНТТовары.Цена,
	|	СНТТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
	|	СНТТовары.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.Склад КАК Склад,
	|	&ВидДвижения КАК ВидДвижения,
	|	""ТоварыВС"" КАК ИмяСписка
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК СНТТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТовары.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТТовары.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТЭтиловыйСпирт.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТЭтиловыйСпирт.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТЭтиловыйСпирт.Товар.ЕдиницаИзмерения
	|	КОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТЭтиловыйСпирт.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТЭтиловыйСпирт.Количество,
	|	СНТЭтиловыйСпирт.Цена,
	|	СНТЭтиловыйСпирт.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТЭтиловыйСпирт.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ЭтиловыйСпирт""
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК СНТЭтиловыйСпирт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТЭтиловыйСпирт.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТЭтиловыйСпирт.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТЭтиловыйСпирт.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТЭтиловыйСпирт.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТЭтиловыйСпирт.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТВиноматериал.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТВиноматериал.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТВиноматериал.Товар.ЕдиницаИзмерения
	|	КОГДА СНТВиноматериал.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТВиноматериал.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТВиноматериал.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТВиноматериал.Количество,
	|	СНТВиноматериал.Цена,
	|	СНТВиноматериал.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТВиноматериал.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""Виноматериал""
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК СНТВиноматериал
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТВиноматериал.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТВиноматериал.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТВиноматериал.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТВиноматериал.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТВиноматериал.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТПивоПивныеНапитки.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТПивоПивныеНапитки.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТПивоПивныеНапитки.Товар.ЕдиницаИзмерения
	|	КОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТПивоПивныеНапитки.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТПивоПивныеНапитки.КоличествоУпаковок,
	|	СНТПивоПивныеНапитки.Цена,
	|	СНТПивоПивныеНапитки.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТПивоПивныеНапитки.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ПивоПивныеНапитки""
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК СНТПивоПивныеНапитки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТПивоПивныеНапитки.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТПивоПивныеНапитки.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТПивоПивныеНапитки.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТПивоПивныеНапитки.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТПивоПивныеНапитки.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТАлкогольнаяпродукцияКромеПива.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТАлкогольнаяпродукцияКромеПива.Товар.ЕдиницаИзмерения
	|	КОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТАлкогольнаяпродукцияКромеПива.КоличествоБутылок,
	|	СНТАлкогольнаяпродукцияКромеПива.Цена,
	|	СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТАлкогольнаяпродукцияКромеПива.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""АлкогольнаяПродукцияКромеПива""
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК СНТАлкогольнаяпродукцияКромеПива
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТАлкогольнаяпродукцияКромеПива.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТАлкогольнаяпродукцияКромеПива.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТАлкогольнаяпродукцияКромеПива.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоНефтепродуктам.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДанныеПоНефтепродуктам.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДанныеПоНефтепродуктам.Количество,
	|	СНТДанныеПоНефтепродуктам.Цена,
	|	СНТДанныеПоНефтепродуктам.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДанныеПоНефтепродуктам.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ДанныеПоНефтепродуктам""
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК СНТДанныеПоНефтепродуктам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДанныеПоНефтепродуктам.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТДанныеПоНефтепродуктам.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТДанныеПоНефтепродуктам.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТДанныеПоНефтепродуктам.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДанныеПоНефтепродуктам.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоБиотопливу.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДанныеПоБиотопливу.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДанныеПоБиотопливу.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДанныеПоБиотопливу.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДанныеПоБиотопливу.Количество,
	|	СНТДанныеПоБиотопливу.Цена,
	|	СНТДанныеПоБиотопливу.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДанныеПоБиотопливу.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ДанныеПоБиотопливу""
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК СНТДанныеПоБиотопливу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДанныеПоБиотопливу.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТДанныеПоБиотопливу.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТДанныеПоБиотопливу.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТДанныеПоБиотопливу.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДанныеПоБиотопливу.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТабачнаяПродукция.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТабачнаяПродукция.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТабачнаяПродукция.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТабачнаяПродукция.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТабачнаяПродукция.КоличествоПачек,
	|	СНТТабачнаяПродукция.Цена,
	|	СНТТабачнаяПродукция.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТабачнаяПродукция.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ТабачнаяПродукция""
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК СНТТабачнаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТабачнаяПродукция.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТТабачнаяПродукция.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТТабачнаяПродукция.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТТабачнаяПродукция.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТабачнаяПродукция.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДругиеТоварыЦифроваяМаркировка.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДругиеТоварыЦифроваяМаркировка.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДругиеТоварыЦифроваяМаркировка.Количество,
	|	СНТДругиеТоварыЦифроваяМаркировка.Цена,
	|	СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДругиеТоварыЦифроваяМаркировка.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ДругиеТоварыЦифроваяМаркировка""
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК СНТДругиеТоварыЦифроваяМаркировка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДругиеТоварыЦифроваяМаркировка.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТДругиеТоварыЦифроваяМаркировка.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДругиеТоварыЦифроваяМаркировка.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТоварыЭкспортныйКонтроль.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТоварыЭкспортныйКонтроль.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТоварыЭкспортныйКонтроль.Количество,
	|	СНТТоварыЭкспортныйКонтроль.Цена,
	|	СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТоварыЭкспортныйКонтроль.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ТоварыЭкспортныйКонтроль""
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК СНТТоварыЭкспортныйКонтроль
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТоварыЭкспортныйКонтроль.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТТоварыЭкспортныйКонтроль.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТоварыЭкспортныйКонтроль.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТовары.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТовары.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТовары.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТовары.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТовары.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТовары.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	СНТТовары.Количество,
	|	СНТТовары.Цена,
	|	ВЫБОР
	|		КОГДА СНТТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТТовары.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТТовары.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТовары.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ТоварыВС""
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК СНТТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТовары.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТТовары.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТТовары.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТЭтиловыйСпирт.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТЭтиловыйСпирт.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТЭтиловыйСпирт.Товар.ЕдиницаИзмерения
	|	КОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТЭтиловыйСпирт.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТЭтиловыйСпирт.Количество,
	|	СНТЭтиловыйСпирт.Цена,
	|	ВЫБОР
	|	КОГДА СНТЭтиловыйСпирт.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|		ТОГДА СНТЭтиловыйСпирт.ИсточникПроисхожденияПолучатель
	|	ИНАЧЕ СНТЭтиловыйСпирт.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТЭтиловыйСпирт.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ЭтиловыйСпирт""
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК СНТЭтиловыйСпирт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТЭтиловыйСпирт.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТЭтиловыйСпирт.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТЭтиловыйСпирт.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТЭтиловыйСпирт.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТЭтиловыйСпирт.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТЭтиловыйСпирт.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТЭтиловыйСпирт.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТВиноматериал.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТВиноматериал.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТВиноматериал.Товар.ЕдиницаИзмерения
	|	КОГДА СНТВиноматериал.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТВиноматериал.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТВиноматериал.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТВиноматериал.Количество,
	|	СНТВиноматериал.Цена,
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТВиноматериал.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТВиноматериал.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТВиноматериал.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""Виноматериал""
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК СНТВиноматериал
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТВиноматериал.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТВиноматериал.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТВиноматериал.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТВиноматериал.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТВиноматериал.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТВиноматериал.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТВиноматериал.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТПивоПивныеНапитки.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТПивоПивныеНапитки.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТПивоПивныеНапитки.Товар.ЕдиницаИзмерения
	|	КОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТПивоПивныеНапитки.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТПивоПивныеНапитки.КоличествоУпаковок,
	|	СНТПивоПивныеНапитки.Цена,
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТПивоПивныеНапитки.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТПивоПивныеНапитки.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТПивоПивныеНапитки.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ПивоПивныеНапитки""
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК СНТПивоПивныеНапитки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТПивоПивныеНапитки.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТПивоПивныеНапитки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТПивоПивныеНапитки.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТПивоПивныеНапитки.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТПивоПивныеНапитки.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТПивоПивныеНапитки.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТПивоПивныеНапитки.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТАлкогольнаяпродукцияКромеПива.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТАлкогольнаяпродукцияКромеПива.Товар.ЕдиницаИзмерения
	|	КОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТАлкогольнаяпродукцияКромеПива.КоличествоБутылок,
	|	СНТАлкогольнаяпродукцияКромеПива.Цена,
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяпродукцияКромеПива.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТАлкогольнаяпродукцияКромеПива.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""АлкогольнаяПродукцияКромеПива""
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК СНТАлкогольнаяпродукцияКромеПива
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТАлкогольнаяпродукцияКромеПива.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТАлкогольнаяпродукцияКромеПива.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТАлкогольнаяпродукцияКромеПива.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТАлкогольнаяпродукцияКромеПива.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоНефтепродуктам.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДанныеПоНефтепродуктам.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДанныеПоНефтепродуктам.Количество,
	|	СНТДанныеПоНефтепродуктам.Цена,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТДанныеПоНефтепродуктам.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТДанныеПоНефтепродуктам.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДанныеПоНефтепродуктам.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ДанныеПоНефтепродуктам""
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК СНТДанныеПоНефтепродуктам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДанныеПоНефтепродуктам.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТДанныеПоНефтепродуктам.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТДанныеПоНефтепродуктам.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТДанныеПоНефтепродуктам.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТДанныеПоНефтепродуктам.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТДанныеПоНефтепродуктам.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДанныеПоНефтепродуктам.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоБиотопливу.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДанныеПоБиотопливу.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДанныеПоБиотопливу.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДанныеПоБиотопливу.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДанныеПоБиотопливу.Количество,
	|	СНТДанныеПоБиотопливу.Цена,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТДанныеПоБиотопливу.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТДанныеПоБиотопливу.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДанныеПоБиотопливу.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ДанныеПоБиотопливу""
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК СНТДанныеПоБиотопливу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДанныеПоБиотопливу.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТДанныеПоБиотопливу.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТДанныеПоБиотопливу.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТДанныеПоБиотопливу.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТДанныеПоБиотопливу.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТДанныеПоБиотопливу.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДанныеПоБиотопливу.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТабачнаяПродукция.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТабачнаяПродукция.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТабачнаяПродукция.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТабачнаяПродукция.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТабачнаяПродукция.КоличествоПачек,
	|	СНТТабачнаяПродукция.Цена,
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТТабачнаяПродукция.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТТабачнаяПродукция.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТабачнаяПродукция.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ТабачнаяПродукция""
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК СНТТабачнаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТабачнаяПродукция.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТТабачнаяПродукция.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТТабачнаяПродукция.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТТабачнаяПродукция.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТТабачнаяПродукция.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТТабачнаяПродукция.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТабачнаяПродукция.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДругиеТоварыЦифроваяМаркировка.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДругиеТоварыЦифроваяМаркировка.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДругиеТоварыЦифроваяМаркировка.Количество,
	|	СНТДругиеТоварыЦифроваяМаркировка.Цена,
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДругиеТоварыЦифроваяМаркировка.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ДругиеТоварыЦифроваяМаркировка""
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК СНТДругиеТоварыЦифроваяМаркировка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДругиеТоварыЦифроваяМаркировка.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТДругиеТоварыЦифроваяМаркировка.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТДругиеТоварыЦифроваяМаркировка.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДругиеТоварыЦифроваяМаркировка.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТоварыЭкспортныйКонтроль.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТоварыЭкспортныйКонтроль.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТоварыЭкспортныйКонтроль.Количество,
	|	СНТТоварыЭкспортныйКонтроль.Цена,
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|			ТОГДА СНТТоварыЭкспортныйКонтроль.ИсточникПроисхожденияПолучатель
	|		ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения
	|	КОНЕЦ,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТоварыЭкспортныйКонтроль.НомерСтроки,
	|	Реквизиты.СкладПолучатель,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	""ТоварыЭкспортныйКонтроль""
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК СНТТоварыЭкспортныйКонтроль
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТоварыЭкспортныйКонтроль.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО (ВЫБОР
	|				КОГДА СНТТоварыЭкспортныйКонтроль.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами)
	|					ТОГДА СНТТоварыЭкспортныйКонтроль.ИсточникПроисхожденияПолучатель = ИсточникиПроисхождения.Ссылка
	|				ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|			КОНЕЦ)
	|ГДЕ
	|	СНТТоварыЭкспортныйКонтроль.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И (Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Перемещение)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами))
	|	И СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТоварыЭкспортныйКонтроль.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	

	Возврат ТекстЗапроса + ВСВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаТаблицаТоварыНаВСВРезерве_СНТ(НомераТаблиц, Реквизиты, ПараметрыПроведения) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаТоварыНаВСВРезерве", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СНТТовары.Товар КАК Номенклатура,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТовары.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТовары.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТовары.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТовары.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТовары.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТовары.Количество,
	|	СНТТовары.Цена,
	|	СНТТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
	|	СНТТовары.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.Склад КАК Склад,
	|	&ВидДвижения КАК ВидДвижения,
	|	""ТоварыВС"" КАК ИмяСписка
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК СНТТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТовары.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТТовары.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТЭтиловыйСпирт.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТЭтиловыйСпирт.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТЭтиловыйСпирт.Товар.ЕдиницаИзмерения
	|	КОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТЭтиловыйСпирт.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТЭтиловыйСпирт.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТЭтиловыйСпирт.Количество,
	|	СНТЭтиловыйСпирт.Цена,
	|	СНТЭтиловыйСпирт.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТЭтиловыйСпирт.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ЭтиловыйСпирт""
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК СНТЭтиловыйСпирт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТЭтиловыйСпирт.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТЭтиловыйСпирт.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТЭтиловыйСпирт.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТЭтиловыйСпирт.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТЭтиловыйСпирт.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТВиноматериал.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТВиноматериал.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТВиноматериал.Товар.ЕдиницаИзмерения
	|	КОГДА СНТВиноматериал.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТВиноматериал.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТВиноматериал.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТВиноматериал.Количество,
	|	СНТВиноматериал.Цена,
	|	СНТВиноматериал.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТВиноматериал.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""Виноматериал""
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК СНТВиноматериал
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТВиноматериал.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТВиноматериал.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТВиноматериал.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТВиноматериал.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТВиноматериал.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТПивоПивныеНапитки.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТПивоПивныеНапитки.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТПивоПивныеНапитки.Товар.ЕдиницаИзмерения
	|	КОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТПивоПивныеНапитки.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТПивоПивныеНапитки.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТПивоПивныеНапитки.КоличествоУпаковок,
	|	СНТПивоПивныеНапитки.Цена,
	|	СНТПивоПивныеНапитки.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТПивоПивныеНапитки.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ПивоПивныеНапитки""
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК СНТПивоПивныеНапитки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТПивоПивныеНапитки.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТПивоПивныеНапитки.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТПивоПивныеНапитки.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТПивоПивныеНапитки.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТПивоПивныеНапитки.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТАлкогольнаяпродукцияКромеПива.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТАлкогольнаяпродукцияКромеПива.Товар.ЕдиницаИзмерения
	|	КОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТАлкогольнаяпродукцияКромеПива.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТАлкогольнаяпродукцияКромеПива.КоличествоБутылок,
	|	СНТАлкогольнаяпродукцияКромеПива.Цена,
	|	СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТАлкогольнаяпродукцияКромеПива.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""АлкогольнаяПродукцияКромеПива""
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК СНТАлкогольнаяпродукцияКромеПива
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТАлкогольнаяпродукцияКромеПива.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТАлкогольнаяпродукцияКромеПива.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТАлкогольнаяпродукцияКромеПива.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТАлкогольнаяпродукцияКромеПива.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоНефтепродуктам.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДанныеПоНефтепродуктам.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДанныеПоНефтепродуктам.Количество,
	|	СНТДанныеПоНефтепродуктам.Цена,
	|	СНТДанныеПоНефтепродуктам.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДанныеПоНефтепродуктам.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ДанныеПоНефтепродуктам""
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК СНТДанныеПоНефтепродуктам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДанныеПоНефтепродуктам.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТДанныеПоНефтепродуктам.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТДанныеПоНефтепродуктам.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТДанныеПоНефтепродуктам.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДанныеПоНефтепродуктам.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоБиотопливу.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДанныеПоБиотопливу.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДанныеПоБиотопливу.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДанныеПоБиотопливу.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДанныеПоБиотопливу.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДанныеПоБиотопливу.Количество,
	|	СНТДанныеПоБиотопливу.Цена,
	|	СНТДанныеПоБиотопливу.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДанныеПоБиотопливу.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ДанныеПоБиотопливу""
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК СНТДанныеПоБиотопливу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДанныеПоБиотопливу.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТДанныеПоБиотопливу.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТДанныеПоБиотопливу.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТДанныеПоБиотопливу.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДанныеПоБиотопливу.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТабачнаяПродукция.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТабачнаяПродукция.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТабачнаяПродукция.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТабачнаяПродукция.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТабачнаяПродукция.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТабачнаяПродукция.КоличествоПачек,
	|	СНТТабачнаяПродукция.Цена,
	|	СНТТабачнаяПродукция.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТабачнаяПродукция.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ТабачнаяПродукция""
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК СНТТабачнаяПродукция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТабачнаяПродукция.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТТабачнаяПродукция.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТТабачнаяПродукция.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТТабачнаяПродукция.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТабачнаяПродукция.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДругиеТоварыЦифроваяМаркировка.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТДругиеТоварыЦифроваяМаркировка.Товар.ЕдиницаИзмерения
	|	КОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТДругиеТоварыЦифроваяМаркировка.Количество,
	|	СНТДругиеТоварыЦифроваяМаркировка.Цена,
	|	СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТДругиеТоварыЦифроваяМаркировка.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ДругиеТоварыЦифроваяМаркировка""
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК СНТДругиеТоварыЦифроваяМаркировка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТДругиеТоварыЦифроваяМаркировка.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТДругиеТоварыЦифроваяМаркировка.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТДругиеТоварыЦифроваяМаркировка.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТДругиеТоварыЦифроваяМаркировка.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТоварыЭкспортныйКонтроль.Товар,
	|	ВЫБОР КОГДА ЕСТЬNULL(СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА СНТТоварыЭкспортныйКонтроль.Товар.ЕдиницаИзмерения
	|	КОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|		ТОГДА СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.ЕдиницаИзмерения
	|	ИНАЧЕ СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СНТТоварыЭкспортныйКонтроль.Количество,
	|	СНТТоварыЭкспортныйКонтроль.Цена,
	|	СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии,
	|	СНТТоварыЭкспортныйКонтроль.НомерСтроки,
	|	Реквизиты.Склад,
	|	&ВидДвижения,
	|	""ТоварыЭкспортныйКонтроль""
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК СНТТоварыЭкспортныйКонтроль
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СНТТоварыЭкспортныйКонтроль.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СНТТоварыЭкспортныйКонтроль.ПризнакПроисхождения <> &ЗначениеУслуги
	|	И СНТТоварыЭкспортныйКонтроль.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СНТТоварыЭкспортныйКонтроль.Количество <> 0
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	

	Возврат ТекстЗапроса + ВСВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Процедура ДокументСНТ_ОбработкаПроверкиЗаполнения(ОбъектСНТ, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	ЕстьТовары = Ложь;
	
	ПроверяемыеТабличныеЧасти = ТабличныеЧастиДокументаСНТ();
	
	//Если это не перемещение товаров, то отключим проверку ТЧ Товары
	Если Не ОбъектСНТ.ВидОперации = Перечисления.ВидыОперацийСНТ.Перемещение Тогда
		ПроверяемыеТабличныеЧасти.Удалить(ПроверяемыеТабличныеЧасти.НайтиПоЗначению("Товары"));
		РеквизитыТЧТовары = ОбъектСНТ["Товары"].ВыгрузитьКолонки().Колонки;
		Для Каждого РеквизитТЧ Из РеквизитыТЧТовары Цикл
			МассивНепроверяемыхРеквизитов.Добавить("Товары." + РеквизитТЧ.Имя);
		КонецЦикла;
	КонецЕсли;
	
	Для каждого ТабличнаяЧасть Из ПроверяемыеТабличныеЧасти Цикл
		Если ОбъектСНТ[ТабличнаяЧасть.Значение] <> Неопределено Тогда
			ДокументСНТ_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектСНТ, ОбъектСНТ[ТабличнаяЧасть.Значение], ТабличнаяЧасть.Значение, ТабличнаяЧасть.Представление, Отказ, ЕстьТовары);
		КонецЕсли;
	КонецЦикла; 
		
	Если ОбъектСНТ.Направление = Перечисления.НаправленияСНТ.Входящий Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СкладОтправитель");
	ИначеЕсли ОбъектСНТ.Направление = Перечисления.НаправленияСНТ.Исходящий Тогда	
		Если ОбъектСНТ.ТипСНТ <> Перечисления.ТипыСНТ.ВозвратТоваров Тогда
			МассивНепроверяемыхРеквизитов.Добавить("СкладПолучатель");
		КонецЕсли;
		Если ОбъектСНТ.ВидОперации = Перечисления.ВидыОперацийСНТ.Ввоз Тогда
			МассивНепроверяемыхРеквизитов.Добавить("СкладОтправитель");
		КонецЕсли;	
	КонецЕсли;
	
	//Если установлена отметка «Нерезидент», не обязательно для заполнения поле "ИИН/БИН Получателя".
	Если ОбъектСНТ.ПолучательНерезидент Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПолучательИдентификатор");
	КонецЕсли;
	
	//При установленной отметки категории «Розничная реализация» заполнение поля "ИИН/БИН Получателя" и "АдресДоставки" запрещен
	Если (ОбъектСНТ.ПолучательРозничнаяРеализация ИЛИ ОбъектСНТ.ПолучательФизическоеЛицо)
			И ОбъектСНТ.ТипСНТ <> Перечисления.ТипыСНТ.ВозвратТоваров Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПолучательИдентификатор");
		МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
	КонецЕсли;
	
	//При категории поставщика «Розничная реализация» заполнение полей "Склад отправитель" и "АдресОтправки" не проверяется, а склад получателя должен быть заполнен
	Если ОбъектСНТ.ПоставщикРозничнаяРеализация ИЛИ ОбъектСНТ.ПоставщикФизическоеЛицо Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СкладОтправитель");
		МассивНепроверяемыхРеквизитов.Добавить("АдресОтправки");
		Если МассивНепроверяемыхРеквизитов.Найти("СкладПолучатель") <> Неопределено Тогда
			МассивНепроверяемыхРеквизитов.Удалить(МассивНепроверяемыхРеквизитов.Найти("СкладПолучатель"));
		КонецЕсли;
	КонецЕсли;
		
	Если ОбъектСНТ.Статус = Перечисления.СтатусыСНТ.Подтвержден Тогда
		ПроверяемыеРеквизиты.Добавить("ДатаПриема");
	КонецЕсли; 
	
	Если ОбъектСНТ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Исходящий") Тогда
		
		Если ОбъектСНТ.ТипСНТ = ПредопределенноеЗначение("Перечисление.ТипыСНТ.ВозвратТоваров") И ОбъектСНТ.ПоставщикРозничнаяРеализация Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("Поставщик");
			МассивНепроверяемыхРеквизитов.Добавить("ПоставщикНаименование");
			МассивНепроверяемыхРеквизитов.Добавить("АдресОтправки");
			МассивНепроверяемыхРеквизитов.Добавить("СкладОтправитель");
			
		ИначеЕсли ОбъектСНТ.ТипСНТ = ПредопределенноеЗначение("Перечисление.ТипыСНТ.Первичная") И ОбъектСНТ.ПолучательРозничнаяРеализация Тогда
			
			МассивНепроверяемыхРеквизитов.Добавить("Получатель");
			МассивНепроверяемыхРеквизитов.Добавить("ПолучательНаименование");
			МассивНепроверяемыхРеквизитов.Добавить("ПолучательИдентификатор");
			МассивНепроверяемыхРеквизитов.Добавить("АдресДоставки");
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ДокументСНТ_ПроверитьЗаполнениеТабличнойЧастиПострочно(ОбъектСНТ, ПроверяемаяТабличнаячасть, ИмяТабличнойЧасти, ПредставлениеИмяТабличнойЧасти, Отказ, ЕстьТовары = Ложь)
	
	Для Каждого СтрокаТабличнойЧасти Из ПроверяемаяТабличнаячасть Цикл
		
		Если СтрокаТабличнойЧасти.ПризнакПроисхождения <> Строка(6) Тогда
			                                                                
			ЕстьТовары = Истина;
			ТекстСообщенияШаблон = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3""'");              
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Товар) Тогда
				//Товар
				ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
																			"Товар", 
																			Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
																			ПредставлениеИмяТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].Товар";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектСНТ, Поле, "Объект", Отказ);
			КонецЕсли;	
			
			// В УПК проверять заполнение единцы измерения не требуется
			//Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
			//	//ЕдиницаИзмерения
			//	ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
			//																"Единица измерения", 
			//																Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
			//																ПредставлениеИмяТабличнойЧасти);

			//	Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ЕдиницаИзмерения";
			//	ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектСНТ, Поле, "Объект", Отказ);
			//КонецЕсли;
			
			Если ОбъектСНТ.Направление = Перечисления.НаправленияСНТ.Входящий И Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ТоварНаименованиеВРамкахТС) 
				И (СтрокаТабличнойЧасти.ПризнакПроисхождения = "1" Или СтрокаТабличнойЧасти.ПризнакПроисхождения = "2") Тогда
				
				ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщенияШаблон, 
																			"Наименование по ДТ/ФНО 328.00", 
																			Формат(СтрокаТабличнойЧасти.НомерСтроки, "ЧН=0; ЧГ="), 
																			ПредставлениеИмяТабличнойЧасти);

				Поле = ИмяТабличнойЧасти + "[" + Формат(СтрокаТабличнойЧасти.НомерСтроки-1, "ЧН=0; ЧГ=") + "].ТоварНаименованиеВРамкахТС";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, ОбъектСНТ, Поле, "Объект", Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДокументСопоставлениеСНТиФНО_ОбработкаПроверкиЗаполнения(ОбъектСопоставление, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	СтруктураТабличныхЧастей = ТабличныеЧастиДокументаСопоставлениеСНТиФНО();
	
	ПроверитьТабличнуюЧастьДокументСопоставлениеСНТиФНО(
		ОбъектСопоставление,
		"ФНО",
		"ДокументЗаявлениеОВвозеТоваров",
		ОбъектСопоставление.Организация,
		СтруктураТабличныхЧастей,
		Отказ);
	
	ПроверитьТабличнуюЧастьДокументСопоставлениеСНТиФНО(
		ОбъектСопоставление,
		"СНТ",
		"ДокументСНТ",
		ОбъектСопоставление.Организация,
		СтруктураТабличныхЧастей,
		Отказ);
	
	ПроверитьСоответствиеРеквизитовТоваровВТабличныхЧастяхДокументаСопоставлениеСНТиФНО(ОбъектСопоставление, СтруктураТабличныхЧастей, Отказ);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыНаВС_Сопоставление(НомераТаблиц, Реквизиты, ПараметрыПроведения) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаТоварыНаВС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	//расходные движения по источнику происхождения до сопоставления
	"ВЫБРАТЬ
	|	СопоставлениеТовары.Товар КАК Номенклатура,
	|	СопоставлениеТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СопоставлениеТовары.КоличествоОстатков КАК Количество,
	|	СопоставлениеТовары.Цена,
	|	СопоставлениеТовары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	ИсточникиПроисхождения.ДокументПартии КАК ДокументПартии,
	|	СопоставлениеТовары.НомерСтроки КАК НомерСтроки,
	|	СопоставлениеТовары.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	""ТоварыВС"" КАК ИмяСписка
	|ИЗ
	|	Документ.СопоставлениеСНТиФНО.ТоварыСНТ КАК СопоставлениеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СопоставлениеТовары.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СопоставлениеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СопоставлениеТовары.КоличествоОстатков <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	//приходные движения по сопоставленному источнику происхождения
	|ВЫБРАТЬ
	|	СопоставлениеТовары.Товар КАК Номенклатура,
	|	СопоставлениеТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СопоставлениеТовары.КоличествоОстатков КАК Количество,
	|	СопоставлениеТовары.Цена,
	|	СопоставлениеТовары.ИсточникПроисхожденияПолучатель КАК ИсточникПроисхождения,
	|	Реквизиты.Ссылка КАК ДокументПартии,
	|	СопоставлениеТовары.НомерСтроки КАК НомерСтроки,
	|	СопоставлениеТовары.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	""ТоварыВС"" КАК ИмяСписка
	|ИЗ
	|	Документ.СопоставлениеСНТиФНО.ТоварыСНТ КАК СопоставлениеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО СопоставлениеТовары.Ссылка = Реквизиты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СопоставлениеТовары.ИсточникПроисхождения = ИсточникиПроисхождения.Ссылка
	|ГДЕ
	|	СопоставлениеТовары.ИсточникПроисхождения <> &ПустойИсточникПроисхождения
	|	И СопоставлениеТовары.КоличествоОстатков <> 0
	|";

	Возврат ТекстЗапроса + ВСВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

#КонецОбласти

#Область ОбщиеФункцииПоЗаполнениюСНТ

Процедура ЗаполнитьРеквизитыКонтрагента(Знач ОбъектСНТ, Знач Поставщик) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		ТекстКомментария = СНТКлиентСервер.ТекстКомментарияСозданПоДаннымСНТ(ОбъектСНТ.Ссылка);		
		ОбъектКонтрагент = Поставщик.ПолучитьОбъект();
		
		/////////////////////////////////////////////////////////////////////////////
		// Заполнить реквизиты контрагента.
		ОбъектКонтрагент.ИНН = ОбъектСНТ.ПоставщикИдентификатор;
		ОбъектКонтрагент.Наименование = ОбъектСНТ.ПоставщикНаименование;	
		ОбъектКонтрагент.НаименованиеПолное = ОбъектСНТ.ПоставщикНаименование;
		ОбъектКонтрагент.ДополнительнаяИнформация = ТекстКомментария;
		
		/////////////////////////////////////////////////////////////////////////////
		// Проверить, что такого договора контрагента нет.
		МассивДоговоров = НайтиДоговорыПоставкиПоДаннымСНТ(ОбъектСНТ, Поставщик);
		
		/////////////////////////////////////////////////////////////////////////////
		// Создать, заполнить и записать договор контрагента.
		Если МассивДоговоров.Количество() = 0 Тогда
			
			ОбъектДоговор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			
			ОбъектДоговор.Наименование = ЭСФКлиентСервер.НаименованиеДоговора(ОбъектСНТ);
			ОбъектДоговор.Контрагент = ОбъектКонтрагент.Ссылка;
			ОбъектДоговор.Партнер = ? (ЗначениеЗаполнено(ОбъектДоговор.Контрагент),
				ЭСФВызовСервера.ПолучитьЗначениеРеквизита(ОбъектДоговор.Контрагент, "Партнер"),
				Справочники.Партнеры.ПустаяСсылка());
			ОбъектДоговор.ВалютаВзаиморасчетов = ОбъектСНТ.Валюта;
			ОбъектДоговор.ПорядокРасчетов = ПредопределенноеЗначение("Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов");
			ОбъектДоговор.ПорядокОплаты = ПредопределенноеЗначение("Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях");
			ОбъектДоговор.Статус = ПредопределенноеЗначение("Перечисление.СтатусыДоговоровКонтрагентов.Действует");
			ОбъектДоговор.Комментарий = ТекстКомментария;
			ОбъектДоговор.Организация = ОбъектСНТ.Организация;
			ОбъектДоговор.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.СПоставщиком");
			ОбъектДоговор.Номер = ОбъектСНТ.ДоговорПоставкиНомер;
			ОбъектДоговор.Дата = ОбъектСНТ.ДоговорПоставкиДата;
			
			ОбъектДоговор.Записать();
			
		КонецЕсли;
		
		/////////////////////////////////////////////////////////////////////////////
		// Повторно записать контрагента и зафиксировать транзакцию.
		ОбъектКонтрагент.Записать();
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		
	КонецПопытки;
	
КонецПроцедуры

Функция НайтиДоговорыПоставкиПоДаннымСНТ(Знач ОбъектСНТ, Знач СтрокаКонтрагент) Экспорт
	
	МассивДоговоров = Новый Массив;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Номер = &НомерДоговора
	|	И ДоговорыКонтрагентов.Дата = &ДатаДоговора
	|	И ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
	|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("НомерДоговора", ОбъектСНТ.ДоговорПоставкиНомер);
	Запрос.УстановитьПараметр("ДатаДоговора", ОбъектСНТ.ДоговорПоставкиДата);
	
	Запрос.УстановитьПараметр("Контрагент", СтрокаКонтрагент);
	
	Запрос.УстановитьПараметр("Организация", ОбъектСНТ.Организация);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", ОбъектСНТ.Валюта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивДоговоров.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивДоговоров;
	
КонецФункции

Функция ПолучитьРеквизитыЗаявленияОВвозеТоваров(ЗаявлениеОВвозеТоваров) Экспорт
	
	//состав ключей структуры не менять!
	СтруктураРеквизитов = Новый Структура("РегистрационныйНомер, Дата, Сумма");
	
	//БК3
	//СтруктураРеквизитовФНО = ЭСФСерверПереопределяемый.ЗначенияРеквизитовОбъекта(ЗаявлениеОВвозеТоваров, "РегистрационныйНомер, Дата, СуммаДокумента");
	//УПК
	СтруктураРеквизитовФНО = ЭСФСерверПереопределяемый.ЗначенияРеквизитовОбъекта(ЗаявлениеОВвозеТоваров, "НомерОтметкиОРегистрации, Дата, СуммаДокумента");
	
	//БК
	//СтруктураРеквизитов.РегистрационныйНомер = СтруктураРеквизитовФНО.РегистрационныйНомер;
	//УПК
	СтруктураРеквизитов.РегистрационныйНомер = СтруктураРеквизитовФНО.НомерОтметкиОРегистрации;
	
	СтруктураРеквизитов.Дата				 = СтруктураРеквизитовФНО.Дата;
	СтруктураРеквизитов.Сумма				 = СтруктураРеквизитовФНО.СуммаДокумента;
	
	Возврат СтруктураРеквизитов;	
	
КонецФункции

Функция ПолучитьДокументыВозвратаОптовыхПродаж(МассивДокументов) Экспорт
	
	МассивДокументовОптовыеВозвраты = Новый Массив();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровОтКлиента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка В(&Основание)
	|	И ВозвратТоваровОтКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)";
	
	Запрос.УстановитьПараметр("Основание", МассивДокументов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивДокументовОптовыеВозвраты.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивДокументовОптовыеВозвраты;
	
КонецФункции

Функция ПолучитьДокументыПоступленияНеИмпорт(МассивДокументов) Экспорт
	
	МассивДокументовНеИмпорт = Новый Массив();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка В(&Основание)
	|	И НЕ (ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
	|		ИЛИ ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС)
	|		ИЛИ ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути)
	|		ИЛИ ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки)
	|		ИЛИ ПриобретениеТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути))";
	
	Запрос.УстановитьПараметр("Основание", МассивДокументов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивДокументовНеИмпорт.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат МассивДокументовНеИмпорт;
	
КонецФункции

Процедура ПолучательРозничныйПокупатель(ДокументСНТ) Экспорт 
	Если ДокументСНТ.Получатель = ПредопределенноеЗначение("Справочник.Контрагенты.РозничныйПокупатель")
		И (ТипЗнч(ДокументСНТ.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		ИЛИ ТипЗнч(ДокументСНТ.ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах")) Тогда
		ДокументСНТ.ПолучательФизическоеЛицо = Ложь;
		ДокументСНТ.ПолучательРозничнаяРеализация = Истина;
		ДокументСНТ.ГрузополучательИдентификатор = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ФормыДокументаСНТ

Функция КоэффициентАкцизаИзНоменклатуры(Номенклатура) Экспорт
	
	КоэффициентАкциза = 0;
	
	Возврат КоэффициентАкциза;
	
КонецФункции

Процедура ПриСозданииНаСервере(Форма) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	//Инициализация поля единицы измерения
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "Товары", "ТоварыГруппа6", "ТоварыЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ЭтиловыйСпирт", "ЭтиловыйСпирт", "ЭтиловыйСпиртЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "Виноматериал", "Виноматериал", "ВиноматериалЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ПивоПивныеНапитки", "ПивоПивныеНапиткиГруппа1", "ПивоПивныеНапиткиЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "АлкогольнаяПродукцияКромеПива", "АлкогольнаяПродукцияКромеПива", "АлкогольнаяПродукцияКромеПиваЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ДанныеПоНефтепродуктам", "ДанныеПоНефтепродуктамГруппа1", "ДанныеПоНефтепродуктамЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ДанныеПоБиотопливу", "ДанныеПоБиотопливуГруппа1", "ДанныеПоБиотопливуЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ТабачнаяПродукция", "ТабачнаяПродукцияГруппа1", "ТабачнаяПродукцияЕдиницаИзмерения");
	//ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ТабачнаяПродукцияЦифроваяМаркировка", "ТабачнаяПродукцияЦифроваяМаркировка", "ТабачнаяПродукцияЦифроваяМаркировкаЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ДругиеТоварыЦифроваяМаркировка", "ДругиеТоварыЦифроваяМаркировкаГруппа1", "ДругиеТоварыЦифроваяМаркировкаЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ТоварыЭкспортныйКонтроль", "ТоварыЭкспортныйКонтрольГруппа1", "ТоварыЭкспортныйКонтрольЕдиницаИзмерения");
	ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ТоварыВС", "ТоварыВСГруппа1", "ТоварыВСЕдиницаИзмерения");
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(ТекущийОбъект, Форма) Экспорт

	// СтандартныеПодсистемы.УправлениеДоступом
	//-------Раскомментировать после хранилища БК 3.0.35------------------------------
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
	//	МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
	//	МодульУправлениеДоступом.ПриЧтенииНаСервере(Форма, ТекущийОбъект);
	//КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
 	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(Форма, ТекущийОбъект);
 	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды   
	//-------Раскомментировать после хранилища БК 3.0.35------------------------------
	//ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(Форма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 

КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт

	// СтандартныеПодсистемы.УправлениеДоступом
	//-------Раскомментировать после хранилища БК 3.0.35------------------------------
	//Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
	//	МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
	//	МодульУправлениеДоступом.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);
	//КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

Функция ПолучитьСведенияОНоменклатуре(Номенклатура) Экспорт
	
	//ДанныеНоменклатуры = Новый Структура();
	//Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда		
	//	ДанныеНоменклатуры.Вставить("ТоварНаименование",   Номенклатура.Наименование);
	//	ДанныеНоменклатуры.Вставить("КодТНВЭД", 		   Номенклатура.КодТНВЭД);
	//	ДанныеНоменклатуры.Вставить("ЕдиницаИзмерения",    Номенклатура.БазоваяЕдиницаИзмерения);
	//	ДанныеНоменклатуры.Вставить("ЕдиницаИзмеренияКод", Номенклатура.БазоваяЕдиницаИзмерения.КодЭСФ);	
	//ИначеЕсли ТипЗнч(Номенклатура) = Тип("СправочникСсылка.ОсновныеСредства") ИЛИ ТипЗнч(Номенклатура) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
	//	ДанныеНоменклатуры.Вставить("ТоварНаименование",   Номенклатура.Наименование);
	//	ДанныеНоменклатуры.Вставить("КодТНВЭД", 		   "");
	//	ДанныеНоменклатуры.Вставить("ЕдиницаИзмерения",    Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт"));
	//	ДанныеНоменклатуры.Вставить("ЕдиницаИзмеренияКод", ДанныеНоменклатуры.ЕдиницаИзмерения.КодЭСФ);
	//Иначе	
	//	ДанныеНоменклатуры.Вставить("ТоварНаименование",   Номенклатура.Наименование);
	//	ДанныеНоменклатуры.Вставить("КодТНВЭД", 		   "");
	//	ДанныеНоменклатуры.Вставить("ЕдиницаИзмерения",    Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка());
	//	ДанныеНоменклатуры.Вставить("ЕдиницаИзмеренияКод", "");		
	//КонецЕсли;
	//
	//Возврат ДанныеНоменклатуры;
	
	ДанныеНоменклатуры = Новый Структура();
	Если ТипЗнч(Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда		
		ДанныеНоменклатуры.Вставить("ТоварНаименование",   Номенклатура.НаименованиеПолное);
		ДанныеНоменклатуры.Вставить("КодТНВЭД", 		   Номенклатура.КодТНВЭД.Код);
		//ДанныеНоменклатуры.Вставить("ЕдиницаИзмерения",    Номенклатура.ЕдиницаИзмерения);
		ДанныеНоменклатуры.Вставить("ЕдиницаИзмеренияКод", Номенклатура.ЕдиницаИзмерения.КодЭСФ);
	Иначе
		ДанныеНоменклатуры.Вставить("ТоварНаименование",   Номенклатура.НаименованиеПолное);
		ДанныеНоменклатуры.Вставить("КодТНВЭД", 		   "");
		//ДанныеНоменклатуры.Вставить("ЕдиницаИзмерения",    Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
		ДанныеНоменклатуры.Вставить("ЕдиницаИзмеренияКод", "");
	КонецЕсли;
	
	Возврат ДанныеНоменклатуры;
	
КонецФункции

Процедура ПриСозданииНаСервереДокументаСопоставления(Форма) Экспорт
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(Форма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	//ЭСФСерверПереопределяемый.ИнициализироватьЕдиницыИзмерения(Форма, "ТоварыСНТ", "ТоварыСНТГруппаЕИ", "ТоварыСНТЕдиницаИзмерения");
	
КонецПроцедуры

Функция ОпределитьТипПоставщикаПолучателя(ВидОперации) Экспорт
	
	//Определим типа поставщика получателя,для различных видов операций
	//В решении при встраивании определить свой набор типов
	Массив = Новый Массив(); 
	Массив.Добавить(Тип("СправочникСсылка.Организации"));
	
	Если Не ВидОперации = Перечисления.ВидыОперацийСНТ.ПеремещениеМеждуФилиалами Тогда 
		Массив.Добавить(Тип("СправочникСсылка.Контрагенты"));
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов(Массив);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее
Функция ПолучитьТипДокументаНаИмпорт ()Экспорт
	Возврат Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт"); //УПК Возврат Тип("ДокументСсылка.ГТДИмпорт");//БК
КонецФункции

Процедура ЗаполнитьПризнакСчетФактураВЭлектронномВиде(СчетФактураОбъект) Экспорт
	
	//СчетФактураОбъект.СпособВыставления = Перечисления.СпособыОбменаДокументами.Электронно;
	//
	Если ТипЗнч(СчетФактураОбъект) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
		// ++ УПК
		СчетФактураОбъект.ВыставленВЭлектронномВиде = Истина;
		// -- УПК
	ИначеЕсли ТипЗнч(СчетФактураОбъект) = Тип("ДокументОбъект.СчетФактураПолученный") Тогда
		// ++ УПК
		СчетФактураОбъект.ПолученВЭлектронномВиде = Истина;
		// -- УПК
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиПодчиненныйСчетФактуру(Основание, ТипДокумента) Экспорт
	
	Возврат НайтиСчетФактуру(Основание, ТипДокумента);
	
КонецФункции

Функция НайтиПодчиненныйЭСФ(Знач ДокументСсылка) Экспорт

	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НайденныйДокумент = Неопределено;

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭСФ.Ссылка,
	|	ЭСФ.Ссылка.Дата КАК ДатаЭСФ,
	|	ЭСФ.Ссылка.ПометкаУдаления КАК ПометкаУдаленияЭСФ
	|ИЗ
	|	Документ.ЭСФ КАК ЭСФ
	|ГДЕ
	|	ЭСФ.СчетФактура В (&ДокументСсылка)";
	
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭСФ.Ссылка.ПометкаУдаления,
	|	ЭСФ.Ссылка.Проведен УБЫВ,
	|	ЭСФ.Ссылка.Дата";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаЗапроса;
	
КонецФункции

// Заполняет реквизит ДоговорПоставки в документах СНТ.
//
// Параметры:
//  МассивЭСФ - Массив - Массив документов ЭСФ, в которых необходимо заполнить реквизит ДоговорПоставки.
//   Каждый элемент массива должен иметь тип ДокументОбъект.ЭСФ.
// 
Процедура ЗаполнитьСсылкиНаДоговорыПоставки(МассивСНТ) Экспорт
	
	// Очистить старые ссылки на договры поставки.
	Для Каждого ОбъектСНТ Из МассивСНТ Цикл
		ОбъектСНТ.ДоговорПоставки = Неопределено;
	КонецЦикла;
	
	// Сформировать пустые параметры поиска договоров поставки.
	ИменаРеквизитов = "Контрагент, Организация, Номер, Дата";
	ОбъектМетаданных = Метаданные.Справочники.ДоговорыКонтрагентов;
	ПараметрыПоискаДоговоровПоставки = ЭСФСервер.НовыеПараметрыПоискаСсылок(ИменаРеквизитов, ОбъектМетаданных);
	
	// Заполнить параметры поиска договоров поставки.
	Для Каждого ОбъектСНТ Из МассивСНТ Цикл
		
		//ИмяТаблицыКонтрагентов = ЭСФВызовСервераПовтИсп.ИмяТаблицыКонтрагентов(ОбъектЭСФ.Направление);	
		ИмяРеквизитаКонтрагента = СНТВызовСервераПовтИсп.ИмяРеквизитаКонтрагента(ОбъектСНТ.Направление);
		Контрагент = ОбъектСНТ[ИмяРеквизитаКонтрагента];
		
		Если ЗначениеЗаполнено(Контрагент)
			И ЗначениеЗаполнено(ОбъектСНТ.Организация)
			И ЗначениеЗаполнено(ОбъектСНТ.ДоговорПоставкиНомер) 
			И ЗначениеЗаполнено(ОбъектСНТ.ДоговорПоставкиДата) Тогда
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Контрагент", Контрагент);
			ПараметрыПоиска.Вставить("Организация", ОбъектСНТ.Организация);
			ПараметрыПоиска.Вставить("Номер", ОбъектСНТ.ДоговорПоставкиНомер);
			ПараметрыПоиска.Вставить("Дата", ОбъектСНТ.ДоговорПоставкиДата);
			
			МассивНайденныхСтрок = ПараметрыПоискаДоговоровПоставки.НайтиСтроки(ПараметрыПоиска);
			
			Если МассивНайденныхСтрок.Количество() = 0 Тогда	
				СтрокаПараметровПоиска = ПараметрыПоискаДоговоровПоставки.Добавить();
				СтрокаПараметровПоиска.Контрагент = Контрагент;
				СтрокаПараметровПоиска.Организация = ОбъектСНТ.Организация;
				СтрокаПараметровПоиска.Номер = СокрЛП(ОбъектСНТ.ДоговорПоставкиНомер);
				СтрокаПараметровПоиска.Дата = СокрЛП(ОбъектСНТ.ДоговорПоставкиДата);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Найти договора поставки.
	НайденныеСсылки = НайтиСсылкиПоЗначениямРеквизитов(ПараметрыПоискаДоговоровПоставки, ОбъектМетаданных);
	
	// Заполнить договоры поставки в МассивЭСФ.
	Для Каждого ОбъектСНТ Из МассивСНТ Цикл
		
		//ИмяТаблицыКонтрагентов = ЭСФВызовСервераПовтИсп.ИмяТаблицыКонтрагентов(ОбъектСНТ.Направление);	
		ИмяРеквизитаКонтрагента = СНТВызовСервераПовтИсп.ИмяРеквизитаКонтрагента(ОбъектСНТ.Направление);
		Контрагент = ОбъектСНТ[ИмяРеквизитаКонтрагента];
		
		Если ЗначениеЗаполнено(Контрагент)
			И ЗначениеЗаполнено(ОбъектСНТ.Организация)
			И ЗначениеЗаполнено(ОбъектСНТ.ДоговорПоставкиНомер) 
			И ЗначениеЗаполнено(ОбъектСНТ.ДоговорПоставкиДата) Тогда
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Контрагент", Контрагент);
			ПараметрыПоиска.Вставить("Организация", ОбъектСНТ.Организация);
			ПараметрыПоиска.Вставить("Номер", ОбъектСНТ.ДоговорПоставкиНомер);
			ПараметрыПоиска.Вставить("Дата", ОбъектСНТ.ДоговорПоставкиДата);
			
			МассивНайденныхСтрок = НайденныеСсылки.НайтиСтроки(ПараметрыПоиска);
			
			Если МассивНайденныхСтрок.Количество() = 1 Тогда
				ОбъектСНТ.ДоговорПоставки = МассивНайденныхСтрок[0].НайденнаяСсылка;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиСсылкиПоЗначениямРеквизитов(Знач ЗначенияРеквизитов, Знач ОбъектМетаданных, Знач ИдентификационныйНомер = Неопределено)
	
	ПолноеИмяОбъекта = ОбъектМетаданных.ПолноеИмя();
	ИмяВидаОбъекта = Лев(ПолноеИмяОбъекта, Найти(ПолноеИмяОбъекта, ".") - 1); // "Документ", "Справочник" и т.д.
	ИмяОбъекта = ОбъектМетаданных.Имя;
	
	// Сформировать массив имен реквизитов.
	МассивИменРеквизитов = Новый Массив;
	Для Каждого Колонка Из ЗначенияРеквизитов.Колонки Цикл
		МассивИменРеквизитов.Добавить(Колонка.Имя);	
	КонецЦикла;
	
	// Подготовить строку запроса %ИменаРеквизитов%.
	ИменаРеквизитов = "";
	Для Каждого ИмяРеквизита Из МассивИменРеквизитов Цикл
		ИменаРеквизитов = ИменаРеквизитов + "ЗначенияРеквизитов." + ИмяРеквизита + ", ";	
	КонецЦикла;
	Если Прав(ИменаРеквизитов, 2) = ", " Тогда
		ИменаРеквизитов = Сред(ИменаРеквизитов, 1, СтрДлина(ИменаРеквизитов) - 2);	
	КонецЕсли;
	
	// Подготовить строку запроса %УсловияСоединения%.
	УсловияСоединения = "";
	Для Каждого ИмяРеквизита Из МассивИменРеквизитов Цикл
		Условие = "(ЗначенияРеквизитов.%ИмяРеквизита% = %ИмяОбъекта%.%ИмяРеквизита%)";
		
		Если ИмяРеквизита = "Дата" Тогда
			Условие = "(ЗначенияРеквизитов.%ИмяРеквизита% = НАЧАЛОПЕРИОДА(%ИмяОбъекта%.%ИмяРеквизита%, День))";
		Иначе
			Условие = "(ЗначенияРеквизитов.%ИмяРеквизита% = %ИмяОбъекта%.%ИмяРеквизита%)";
		КонецЕсли;	
		
		Условие = СтрЗаменить(Условие, "%ИмяОбъекта%", ИмяОбъекта);
		Условие = СтрЗаменить(Условие, "%ИмяРеквизита%", ИмяРеквизита);
		УсловияСоединения = УсловияСоединения + Условие + " И ";	
	КонецЦикла;	
	Если Прав(УсловияСоединения, 3) = " И " Тогда
		УсловияСоединения = Сред(УсловияСоединения, 1, СтрДлина(УсловияСоединения) - 3);	
	КонецЕсли;
	
	// Сформировать текст запроса.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	%ИменаРеквизитов%
	|ПОМЕСТИТЬ ЗначенияРеквизитов
	|ИЗ
	|	&ЗначенияРеквизитов КАК ЗначенияРеквизитов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	%ИменаРеквизитов%,
	|	ЕСТЬNULL(%ИмяОбъекта%.Ссылка, ЗНАЧЕНИЕ(%ИмяВидаОбъекта%.%ИмяОбъекта%.ПустаяСсылка)) КАК НайденнаяСсылка
	|ИЗ
	|	ЗначенияРеквизитов КАК ЗначенияРеквизитов
	|		ЛЕВОЕ СОЕДИНЕНИЕ %ИмяВидаОбъекта%.%ИмяОбъекта% КАК %ИмяОбъекта%
	|		ПО (%УсловияСоединения%)";	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИменаРеквизитов%",   ИменаРеквизитов);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловияСоединения%", УсловияСоединения);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИмяОбъекта%",        ИмяОбъекта);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИмяВидаОбъекта%",    ИмяВидаОбъекта);	
	Запрос.УстановитьПараметр("ЗначенияРеквизитов", ЗначенияРеквизитов);
	
	РезультатПоиска = Запрос.Выполнить().Выгрузить();
	
	
	
	//////////////////////////////////////////////////////////////////////////////
	// Удалить из результатов поиска документы СНТ, которые не принадлежат указанной структурной единице.
	// Работает только для документов СНТ, для остальных объектов переменная ОтборПоСтруктурнойЕдинице должна быть Неопределено.
	
	Если ИдентификационныйНомер <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СНТ.Ссылка
		|ИЗ
		|	Документ.СНТ КАК СНТ
		|ГДЕ
		|	СНТ.Направление = &Исходящий
		|	И СНТ.Ссылка В(&МассивСНТ)
		|	И (СНТ.ПоставщикИдентификатор = &ИдентификационныйНомер
		|			ИЛИ СНТ.ПоставщикБИНСтруктурногоПодразделения = &ИдентификационныйНомер)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СНТ.Ссылка
		|ИЗ
		|	Документ.СНТ КАК СНТ
		|ГДЕ
		|	СНТ.Направление = &Входящий
		|	И СНТ.Ссылка В(&МассивСНТ)
		|	И (СНТ.ПолучательИдентификатор = &ИдентификационныйНомер
		|			ИЛИ СНТ.ПолучательБИНСтруктурногоПодразделения = &ИдентификационныйНомер)";
		
		
		Запрос.УстановитьПараметр("МассивСНТ", РезультатПоиска.ВыгрузитьКолонку("НайденнаяСсылка"));
		Запрос.УстановитьПараметр("Исходящий", Перечисления.НаправленияСНТ.Исходящий);
		Запрос.УстановитьПараметр("Входящий", Перечисления.НаправленияСНТ.Входящий);
		Запрос.УстановитьПараметр("ИдентификационныйНомер", ИдентификационныйНомер);
		
		ТаблицаСНТПринадлежащихСтруктурнойЕдинице = Запрос.Выполнить().Выгрузить();
		МассивСНТПринадлежащихСтруктурнойЕдинице = ТаблицаСНТПринадлежащихСтруктурнойЕдинице.ВыгрузитьКолонку("Ссылка");
		
		// Удалить из результатов поиска документы СНТ, которые не принадлежат указанной структурной единице.
		Для Каждого СтрокаРезультата Из РезультатПоиска Цикл
			Если МассивСНТПринадлежащихСтруктурнойЕдинице.Найти(СтрокаРезультата.НайденнаяСсылка) = Неопределено Тогда
				
				// Если Истина, значит СНТ не принадлежит указанной структурной единице,
				// поэтому ссылку на данный СНТ нужно очистить.
				СтрокаРезультата.НайденнаяСсылка = Документы.СНТ.ПустаяСсылка();
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат РезультатПоиска;
	
КонецФункции

// Возвращает номер документа на печать.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.<Имя> - Ссылка на документ, для которого необходимо получить номер на печать.
//
// Возвращаемое значение:
//  Строка - Номер документа, который может использоваться для печати.
//
Функция ПолучитьНомерНаПечать(ДокументСсылка) Экспорт
	
	Если ДокументСсылка.Направление = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Исходящий") Тогда
		Если СтрНайти(ДокументСсылка.Номер,"И-") > 0 Тогда
			Возврат ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрЗаменить(ДокументСсылка.Номер,"И-",""), Истина, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКодСтраныСНТ(Страна) Экспорт
	Возврат Страна.КодАльфа2;
КонецФункции

Функция ТекстЗапросаЗаполненияСпискаКонтрагентов() Экспорт

	Возврат "ВЫБРАТЬ
	|	Контрагенты.%КонтрагентИНН КАК ИдентификационныйКодЛичности,
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.%КонтрагентИНН <> """"
	|	И НЕ Контрагенты.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагенты.Наименование";

КонецФункции  

Функция ПолучитьОбъектМетаданныхДокументЗаявлениеОВвозеТоваров() Экспорт
	
	Возврат Метаданные.НайтиПоПолномуИмени("Документ.ЗаявлениеОВвозеТоваров");
	
КонецФункции

Функция ТабличныеЧастиДокументаСопоставлениеСНТиФНО()
	
	ТабличныеЧасти = Новый Структура;
	ТабличныеЧасти.Вставить("ФНО", "Список ФНО");
	ТабличныеЧасти.Вставить("СНТ", "Список СНТ");
	ТабличныеЧасти.Вставить("ТоварыФНО", "Товары из ФНО");
	ТабличныеЧасти.Вставить("ТоварыСНТ", "Товары из СНТ");
	
	Возврат ТабличныеЧасти;
	
КонецФункции

Процедура ПроверитьТабличнуюЧастьДокументСопоставлениеСНТиФНО(Объект, ИмяТабличнойЧасти, ИмяРеквизита, Организация, СтруктураТабличныхЧастей, Отказ)
	
	МассивДокументов = Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку(ИмяРеквизита);
	
	СоответствиеОрганизаций = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивДокументов, "Организация");
	
	МассивДублирующихсяДокументов = Новый Массив;
	
	Для Каждого Строка Из Объект[ИмяТабличнойЧасти] Цикл
		
		ПараметрыОтбора = Новый Структура;
		ТекущееЗначениеРеквизита = Строка[ИмяРеквизита];
		ПараметрыОтбора.Вставить(ИмяРеквизита, ТекущееЗначениеРеквизита);
		
		МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(ПараметрыОтбора);
		
		Если МассивСтрок.Количество() > 1 И МассивДублирующихсяДокументов.Найти(ТекущееЗначениеРеквизита) = Неопределено Тогда
			
			ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В табличной части ""%1"" в строке ""%2"" документ ""%3"" уже присутсвует в данной табличной части'"),
				СтруктураТабличныхЧастей[ИмяТабличнойЧасти],
				Формат(МассивСтрок[0].НомерСтроки, "ЧН=0; ЧГ="),
				МассивСтрок[0][ИмяРеквизита]);
				
			Поле = ИмяТабличнойЧасти + "[" + Формат(МассивСтрок[0].НомерСтроки - 1, "ЧН=0; ЧГ=") + "]."+ ИмяРеквизита;
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
			
			МассивДублирующихсяДокументов.Добавить(ТекущееЗначениеРеквизита);
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	Для Каждого Элемент Из СоответствиеОрганизаций Цикл
		
		Если Элемент.Значение.Организация <> Организация Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить(ИмяРеквизита,Элемент.Ключ);
			
			МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(ПараметрыОтбора);
			
			ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В табличной части ""%1"" значение организации документа ""%2"" в строке ""%3"" отлично от организации документа сопоставления'"),
				СтруктураТабличныхЧастей[ИмяТабличнойЧасти],
				Элемент.Ключ,
				Формат(МассивСтрок[0].НомерСтроки, "ЧН=0; ЧГ="));
				
			Поле = ИмяТабличнойЧасти + "[" + Формат(МассивСтрок[0].НомерСтроки - 1, "ЧН=0; ЧГ=") + "]."+ ИмяРеквизита;
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьСоответствиеРеквизитовТоваровВТабличныхЧастяхДокументаСопоставлениеСНТиФНО(Объект, СтруктураТабличныхЧастей, Отказ)
	
	Для Каждого СтрокаТоварыСНТ Из Объект.ТоварыСНТ Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТоварыСНТ.НомерЗаявленияВРамкахТС)
			 ИЛИ Не ЗначениеЗаполнено(СтрокаТоварыСНТ.НомерПозицииВЗаявлении) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура("РегистрационныйНомер", СтрокаТоварыСНТ.НомерЗаявленияВРамкахТС);
		
		МассивСтрокФНО = Объект.ФНО.НайтиСтроки(СтруктураОтбора);
		
		Если МассивСтрокФНО.Количество() = 0 Тогда
			
			ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В табличной части ""%1"" в строке ""%2"" реквизит ""№ заявления в рамках ТС, Декларации на товары или первичной СНТ, СТ-1 или СТ-KZ"" отсутсвует в табличной части ""%3""'"),
				СтруктураТабличныхЧастей.ТоварыСНТ,
				Формат(СтрокаТоварыСНТ.НомерСтроки, "ЧН=0; ЧГ="),
				СтруктураТабличныхЧастей.ФНО);
				
			Поле = "ТоварыСНТ[" + Формат(СтрокаТоварыСНТ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НомерЗаявленияВРамкахТС";
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
			
		Иначе
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("НомерРазделаФНО", МассивСтрокФНО[0].НомерСтроки);
			СтруктураОтбора.Вставить("НомерПозицииВЗаявлении", СтрокаТоварыСНТ.НомерПозицииВЗаявлении);
			
			МассивСтрокТоварыФНО = Объект.ТоварыФНО.НайтиСтроки(СтруктураОтбора);
			
			Если МассивСтрокТоварыФНО.Количество() = 0 Тогда
				
				ТекстСообщения = СНТКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В табличной части ""%1"" в строке ""%2"" реквизит ""Номер товарной позиции из заявления"" отсутсвует в табличной части ""%3""'"),
					СтруктураТабличныхЧастей.ТоварыСНТ,
					Формат(СтрокаТоварыСНТ.НомерСтроки, "ЧН=0; ЧГ="),
					СтруктураТабличныхЧастей.ТоварыФНО);
				
				Поле = "ТоварыСНТ[" + Формат(СтрокаТоварыСНТ.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].НомерПозицииВЗаявлении";
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения, Объект, Поле, "Объект", Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиПервичныйСНТ(Основание) Экспорт
	
	Если Не ЗначениеЗаполнено(Основание) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Основание);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Ссылка КАК Ссылка,
	|	СНТ.РегистрационныйНомерИСЭСФ КАК РегНомерИСЭСФ
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|ГДЕ
	|	СНТ.ДокументОснование = &ДокументСсылка";
		
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаЗапроса;
	
КонецФункции

Функция НайтиСчетФактуру(Знач ДокументСсылка, ВидДокумента = "СчетФактураВыданный", Отбор = Неопределено, МетаданныеОснования = Неопределено)

	Если не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	Иначе
		Если МетаданныеОснования = Неопределено Тогда
			МетаданныеОснования = ДокументСсылка.Метаданные();
		КонецЕсли; 		
		
	КонецЕсли;
	
	НайденныйДокумент = Неопределено;

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СФ.Ссылка,
	|	СФ.Ссылка.Дата КАК ДатаСчетаФактуры,
	|	СФ.Ссылка.ПометкаУдаления КАК ПометкаУдаленияСчетаФактуры
	//,
	//|	ВЫБОР КОГДА СФ.Ссылка.ВидСчетаФактуры = Значение(Перечисление.ВидыСчетовФактур.Исправленный) Тогда 1 Иначе 0 Конец КАК ПриоритетВидаСчетаФактуры
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФ
	|ГДЕ
	|	СФ.ДокументОснование = &ДокументСсылка";
	
	Если не ВидДокумента = "СчетФактураВыданный" Тогда
		Запрос.Текст = СтрЗаменитЬ(Запрос.Текст,"СчетФактураВыданный",ВидДокумента);
	КонецЕсли; 
		
	Если не Отбор = Неопределено Тогда
		Для каждого ЭлементОтбора Из Отбор Цикл
			Если ТипЗнч(ЭлементОтбора.Значение) = Тип("Булево") Тогда
			
				Запрос.Текст = Запрос.Текст + "
					|	И "+?(ЭлементОтбора.Значение," "," НЕ ")+" Ссылка."+ЭлементОтбора.Ключ;
			Иначе
				Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
				Запрос.Текст = Запрос.Текст + "
					|	И Ссылка."+ЭлементОтбора.Ключ+" = &"+ЭлементОтбора.Ключ;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	Запрос.Текст = Запрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	СФ.Ссылка.ПометкаУдаления,
	|	СФ.Ссылка.Проведен УБЫВ,
	|	СФ.Ссылка.Дата";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаЗапроса
	
КонецФункции

// Функция создает несколько ЭСФ И СФ на основании нескольких СНТ.
//
Функция СоздатьСписокИсходящихЭСФиСФИзСНТ(МассивСНТ) Экспорт
	
	СписокСозданныхСчетовФактурИЭСФ = Новый Массив;
	
	Для Каждого СНТ Из МассивСНТ Цикл
		
		СсылкаНаЭСФ = СНТСервер.АктуальныйЭСФДляСНТ(СНТ);
		
		Если ЗначениеЗаполнено(СсылкаНаЭСФ) Тогда
			// Если есть ЭСФ - ничего не делаем
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
			НСтр("ru='У СНТ %1 уже есть связанные документы ЭСФ и СФ.'"),
			СНТ);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		ИначеЕсли ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			ТекстСообщения = НСтр("ru='Для документа ""Перемещение товаров"" не нужно вводить ЭСФ и СФ.'");
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		ИначеЕсли СНТ.ВидОперации = Перечисления.ВидыОперацийСНТ.Ввоз Тогда
			
			ТекстСообщения = НСтр("ru='Для документов СНТ на импорт не нужно вводить ЭСФ и СФ.'");
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		Иначе
			
			Если ЗначениеЗаполнено(СНТ.ДокументОснование) Тогда
				// Проверяем наличие связанного СФ у документа-основания
				Если ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
					ИЛИ ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") 
					ИЛИ ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") 
					ИЛИ ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
					
					СвязанныйСФ = НайтиПодчиненныйСчетФактуру(СНТ.ДокументОснование, "СчетФактураВыданный");
				Иначе
					СвязанныйСФ = НайтиПодчиненныйСчетФактуру(СНТ.ДокументОснование, "СчетФактураПолученный");
				КонецЕсли;
				
				//удаляем из найденных СФ обычные и дополнительные, если СНТ исправленная
				Если СНТ.ТипСНТ = ПредопределенноеЗначение("Перечисление.ТипыСНТ.Исправленная") Тогда
					Сч = 0;
					Пока (Сч < СвязанныйСФ.Количество ()) Цикл
						Строка = СвязанныйСФ.Получить(Сч);
						Если ((ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(Строка.Ссылка, "Исправление") = Ложь И ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(Строка.Ссылка, "Корректировочный") = Ложь)
							ИЛИ ЭСФСерверПереопределяемый.ЗначениеРеквизитаОбъекта(Строка.Ссылка, "Корректировочный") = Истина) Тогда
							СуществующиеОбычныеСФЭСФ = Новый Структура;
							СуществующиеОбычныеСФЭСФ.Вставить("СФ", Строка.Ссылка);
							СвязанныйСФ.Удалить(Сч);
						Иначе
							Сч = Сч + 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если СвязанныйСФ.Количество() <> 0 Тогда
					
					// Если СФ есть, проверяем у него введенный ЭСФ.
					// Если ЭСФ есть, ничего не делаем, если нет, создаем только ЭСФ и связываем с СФ
					
					Если ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
						
						ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
						НСтр("ru='У документа %1 уже есть оформленный СФ. Новый ЭСФ для Возврата ТМЗ поставщику вводить не нужно.'"), СНТ.ДокументОснование);
						ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						
					Иначе
						
						СвязанныйЭСФ = НайтиПодчиненныйЭСФ(СвязанныйСФ);
						
						Если СвязанныйЭСФ.Количество() = 0 Тогда						
							Попытка
								
								НовыйДокументЭСФ = Документы.ЭСФ.СоздатьДокумент();
								НовыйДокументЭСФ.Заполнить(СНТ);
								
								СделатьАктуальным = ЭСФКлиентСервер.СделатьАктуальным();
								НовыйДокументЭСФ.ДополнительныеСвойства.Вставить(СделатьАктуальным, Истина);	
								НовыйДокументЭСФ.СчетФактура = СвязанныйСФ[0].Ссылка;
								
								НовыйДокументЭСФ.Организация = СНТ.Организация;
								НовыйДокументЭСФ.Валюта = СНТ.Валюта;
								НовыйДокументЭСФ.ВалютаКод = СНТ.Валюта.Наименование;
								НовыйДокументЭСФ.Контрагент = СНТ.Контрагент;
								НовыйДокументЭСФ.СНТ = СНТ;
								
								Если СНТ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Входящий") Тогда
									Если СНТ.ТипСНТ = ПредопределенноеЗначение("Перечисление.ТипыСНТ.ВозвратТоваров") Тогда
										НовыйДокументЭСФ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭСФ.Исходящий");
									Иначе
										НовыйДокументЭСФ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭСФ.Входящий");
									КонецЕсли;
									НовыйДокументЭСФ.Склад = СНТ.СкладПолучатель;
								Иначе
									НовыйДокументЭСФ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭСФ.Исходящий");
									НовыйДокументЭСФ.Склад = СНТ.СкладОтправитель;
								КонецЕсли;
								
								НовыйДокументЭСФ.ДоговорПоставки = СНТ.ДоговорПоставки;
	 	
								Если Не СвязанныйСФ[0].Ссылка.Исправление И Не СвязанныйСФ[0].Ссылка.Корректировочный Тогда	
									НовыйДокументЭСФ.Вид = ПредопределенноеЗначение("Перечисление.ВидыЭСФ.Обычный");
								ИначеЕсли СвязанныйСФ[0].Ссылка.Корректировочный Тогда 
									НовыйДокументЭСФ.Вид = ПредопределенноеЗначение("Перечисление.ВидыЭСФ.Дополнительный");
									Если ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
										СФРеализации = НайтиПодчиненныйСчетФактуру(СНТ.ДокументОснование.ДокументРеализации, "СчетФактураВыданный");
										Если СФРеализации <> Неопределено И СФРеализации.Количество() > 0 Тогда
											ЗаполнитьДанныеСвязанногоЭСФ(СФРеализации[0].Ссылка, НовыйДокументЭСФ);
										КонецЕсли;
									КонецЕсли;
								ИначеЕсли СвязанныйСФ[0].Ссылка.Исправление Тогда
									НовыйДокументЭСФ.Вид = ПредопределенноеЗначение("Перечисление.ВидыЭСФ.Исправленный");
									//для исправленного ЭСФ
									Если СуществующиеОбычныеСФЭСФ <> Неопределено И СуществующиеОбычныеСФЭСФ.Количество() > 0 Тогда
										ЗаполнитьДанныеСвязанногоЭСФ(СуществующиеОбычныеСФЭСФ.СФ, НовыйДокументЭСФ);
									КонецЕсли;
								КонецЕсли;
								
								НовыйДокументЭСФ.ДатаОборота = ТекущаяДата();
								НовыйДокументЭСФ.Дата = ТекущаяДата();
								
								НовыйДокументЭСФ.Записать();
								СписокСозданныхСчетовФактурИЭСФ.Добавить(НовыйДокументЭСФ.Ссылка);
								
							Исключение
								
								ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
								НСтр("ru='Ошибка при создании документа ЭСФ: %1.'"),
								ИнформацияОбОшибке().Описание);
								
								ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
								
							КонецПопытки;
							
						Иначе
							ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
							НСтр("ru='У документа-основания %1 уже есть связанные документы ЭСФ и СФ.'"),
							СНТ.ДокументОснование);
							
							ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						КонецЕсли;
						
					КонецЕсли;
					
				Иначе
					
					// Если связанного СФ нет, создаем и СФ, и ЭСФ, устанавливаем связь между ними
					Попытка
						
						Если ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
							НовыйДокументСчетФактура = Документы.СчетФактураПолученный.СоздатьДокумент();
						Иначе
							НовыйДокументСчетФактура = Документы.СчетФактураВыданный.СоздатьДокумент();
						КонецЕсли;
							
						СНТОснование = СНТ.ДокументОснование;         
						Валюта = ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("Валюта", СНТОснование.Метаданные()), СНТОснование.Валюта, СНТ.Валюта);
						Контрагент = ?(ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", СНТОснование.Метаданные()), СНТОснование.Контрагент, СНТ.Контрагент);
						
						СтруктураЗаполненияСФ = Новый Структура();
						СтруктураЗаполненияСФ.Вставить("ДокументОснование", СНТОснование);
						СтруктураЗаполненияСФ.Вставить("Валюта", Валюта);
						
						НовыйДокументСчетФактура.Заполнить(СтруктураЗаполненияСФ);
						
						НовыйДокументСчетФактура.Дата = ТекущаяДата();
						
						Если ТипЗнч(НовыйДокументСчетФактура) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
							//При оформлении СФ выданного проверяем заполненность банковских счетов организации: 
							//если счет не заполнен, пытаемся заполнить из регистра, если не получилось заполнить,
							//СФ провести не можем, выполняем запись без проведения.
							//Также не можем выполнять проведение СФ, если указан первычный СФ, т.е. если у документа-основания
							//введен СФ. Также выполняем только запись.
							
							//Заполнение счетов
							Если Не ЗначениеЗаполнено(НовыйДокументСчетФактура.БанковскийСчетОрганизации) Тогда
								НовыйДокументСчетФактура.БанковскийСчетОрганизации = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СНТОснование.Организация, Валюта); 
							КонецЕсли;
							
							Если Не ЗначениеЗаполнено(НовыйДокументСчетФактура.БанковскийСчетКонтрагента) Тогда
								НовыйДокументСчетФактура.БанковскийСчетКонтрагента = Справочники.БанковскиеСчетаКонтрагентов.ПолучитьБанковскийСчетПоУмолчанию(Контрагент, Валюта);
							КонецЕсли;
							
							//Проверка первичного СФ (для дополнительных СФ и для исправленных СФ у корректировки и возврата)
							ПервичныйСФ = НайтиПодчиненныйСчетФактуру(НовыйДокументСчетФактура.ДокументОснование, "СчетФактураВыданный");
							
							//для исправленного СФ
							Если СуществующиеОбычныеСФЭСФ <> Неопределено И СуществующиеОбычныеСФЭСФ.Количество() > 0 Тогда
								НовыйДокументСчетФактура.Исправление = Истина;
								НовыйДокументСчетФактура.ОсновнойСчетФактура = СуществующиеОбычныеСФЭСФ.СФ;
							КонецЕсли;
							
							//Запись СФ
							Если Не ЗначениеЗаполнено(НовыйДокументСчетФактура.БанковскийСчетОрганизации) Тогда
								НовыйДокументСчетФактура.Записать(РежимЗаписиДокумента.Запись);
							Иначе
								НовыйДокументСчетФактура.Записать(РежимЗаписиДокумента.Проведение);
							КонецЕсли;
							
						Иначе
							
							НовыйДокументСчетФактура.Записать(РежимЗаписиДокумента.Проведение);
							
						КонецЕсли;
												
						СписокСозданныхСчетовФактурИЭСФ.Добавить(НовыйДокументСчетФактура.Ссылка);
						
					Исключение
						
						ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
						НСтр("ru='Ошибка при создании документа Счет-фактура (выданный): %1.'"),
						ИнформацияОбОшибке().Описание);
						
						ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						
					КонецПопытки;
					
					Попытка
						
						Если Не ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
							
							НовыйДокументЭСФ = Документы.ЭСФ.СоздатьДокумент();
							НовыйДокументЭСФ.Заполнить(СНТ);
							
							СделатьАктуальным = ЭСФКлиентСервер.СделатьАктуальным();
							НовыйДокументЭСФ.ДополнительныеСвойства.Вставить(СделатьАктуальным, Истина);	
							
							НовыйДокументЭСФ.СчетФактура = НовыйДокументСчетФактура.Ссылка;
							НовыйДокументЭСФ.Организация = СНТ.Организация;
							НовыйДокументЭСФ.Валюта = СНТ.Валюта;
							НовыйДокументЭСФ.ВалютаКод = СНТ.Валюта.Наименование;
							НовыйДокументЭСФ.Контрагент = СНТ.Контрагент;
							НовыйДокументЭСФ.СНТ = СНТ;
							
							Если СНТ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Входящий") Тогда
								Если СНТ.ТипСНТ = ПредопределенноеЗначение("Перечисление.ТипыСНТ.ВозвратТоваров") Тогда
									НовыйДокументЭСФ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭСФ.Исходящий");
								Иначе
									НовыйДокументЭСФ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭСФ.Входящий");
								КонецЕсли;
								НовыйДокументЭСФ.Склад = СНТ.СкладПолучатель;
							Иначе
								НовыйДокументЭСФ.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭСФ.Исходящий");
								НовыйДокументЭСФ.Склад = СНТ.СкладОтправитель;
							КонецЕсли;
							
							НовыйДокументЭСФ.ДоговорПоставки = СНТ.ДоговорПоставки;
							
							Если Не НовыйДокументСчетФактура.Исправление И Не НовыйДокументСчетФактура.Корректировочный Тогда	
								НовыйДокументЭСФ.Вид = ПредопределенноеЗначение("Перечисление.ВидыЭСФ.Обычный");
							ИначеЕсли НовыйДокументСчетФактура.Корректировочный Тогда 
								НовыйДокументЭСФ.Вид = ПредопределенноеЗначение("Перечисление.ВидыЭСФ.Дополнительный");
								Если ТипЗнч(СНТ.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
									СФРеализации = НайтиПодчиненныйСчетФактуру(СНТ.ДокументОснование.ДокументРеализации, "СчетФактураВыданный");
									Если СФРеализации <> Неопределено И СФРеализации.Количество() > 0 Тогда
										ЗаполнитьДанныеСвязанногоЭСФ(СФРеализации[0].Ссылка, НовыйДокументЭСФ);
									КонецЕсли;
								КонецЕсли;
							ИначеЕсли НовыйДокументСчетФактура.Исправление Тогда
								НовыйДокументЭСФ.Вид = ПредопределенноеЗначение("Перечисление.ВидыЭСФ.Исправленный");
								//для исправленного ЭСФ
								Если СуществующиеОбычныеСФЭСФ <> Неопределено И СуществующиеОбычныеСФЭСФ.Количество() > 0 Тогда
									ЗаполнитьДанныеСвязанногоЭСФ(СуществующиеОбычныеСФЭСФ.СФ, НовыйДокументЭСФ);
								КонецЕсли;
							КонецЕсли;
							
							НовыйДокументЭСФ.ДатаОборота = ТекущаяДата();
							НовыйДокументЭСФ.Дата = ТекущаяДата();
							
							НовыйДокументЭСФ.Записать();
							СписокСозданныхСчетовФактурИЭСФ.Добавить(НовыйДокументЭСФ.Ссылка);
							
						КонецЕсли;
						
					Исключение
						
						ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
						НСтр("ru='Ошибка при создании документа ЭСФ: %1.'"),
						ИнформацияОбОшибке().Описание);
						
						ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
						
					КонецПопытки;
					
				КонецЕсли;
			Иначе
				ТекстСообщения = НСтр("ru='Не удалось создать документ Счет-фактура (выданный): Отсутствует учетный документ СНТ.'");
				
				ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		КонецЕсли;
		
		Попытка
			
			Если (НовыйДокументЭСФ <> Неопределено И ЗначениеЗаполнено(НовыйДокументЭСФ.СчетФактура))
				ИЛИ (СсылкаНаЭСФ <> Неопределено И ЗначениеЗаполнено(СсылкаНаЭСФ.СчетФактура)) Тогда
				
				ДокументЭСФ = ?(НовыйДокументЭСФ <> Неопределено, НовыйДокументЭСФ, СсылкаНаЭСФ);
				СчетФактураОбъект = ДокументЭСФ.СчетФактура.ПолучитьОбъект();
				
				Если ТипЗнч(СчетФактураОбъект) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
					// ++ УПК
					СчетФактураОбъект.ВыставленВЭлектронномВиде = Истина;
					// -- УПК
				ИначеЕсли ТипЗнч(СчетФактураОбъект) = Тип("ДокументОбъект.СчетФактураПолученный") Тогда
					// ++ УПК
					СчетФактураОбъект.ПолученВЭлектронномВиде = Истина;
					// -- УПК
				КонецЕсли;
				
				СчетФактураОбъект.Записать();
				
			КонецЕсли;
			
		Исключение
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(
			НСтр("ru='Ошибка при записи %1: %2.'"),
			ДокументЭСФ.СчетФактура,
			ИнформацияОбОшибке().Описание);
			
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат СписокСозданныхСчетовФактурИЭСФ;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СопоставлениеСНТиФНО

Функция ПолучитьИдентификаторОрганизации(Организация) Экспорт
	
	Возврат Организация.ИНН;

КонецФункции

Функция ПолучитьДанныеТЧИзФНО(ДокументФНО) Экспорт
	
	ДанныеДокументаФНО = Новый Массив();
	
	// Заполнение по данным ТЧ Товары 
	Для Каждого СтрокаТовар Из ДокументФНО.Товары Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Номенклатура);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 				  СтрокаТовар.Номенклатура);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование", 	  СтрокаТовар.НаименованиеТовара);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 			  СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения", 	  СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", 	  КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 			  СтрокаТовар.Количество);
		
		// В ЕРП в документе "ЗаявлениеОВвозеТоваров" в ТЧ Товары отсутсвует поле "Цена"
		ДанныеСтрокиТовары.Вставить("Цена",?(СтрокаТовар.Количество = 0, 0, СтрокаТовар.ФактурнаяСтоимость / СтрокаТовар.Количество));
		
		ДанныеСтрокиТовары.Вставить("НомерПозицииВЗаявлении", СтрокаТовар.НомерСтроки);
		
		ДанныеДокументаФНО.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	Возврат ДанныеДокументаФНО;
	
КонецФункции

Функция ПолучитьДанныеТЧИзСНТ(ДокументСНТ) Экспорт
	
	ДанныеДокументаСНТ = Новый Массив();
	
	// Заполнение по данным ТЧ Товары ВС (Разздел G1)
	Для Каждого СтрокаТовар Из ДокументСНТ.ТоварыВС Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "1/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		Если Не ЗначениеЗаполнено(СтрокаТовар.ЕдиницаИзмерения) Тогда
			ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.Товар.ЕдиницаИзмерения);
		КонецЕсли;
			
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
		// Заполнение по данным ТЧ ЭтиловыйСпирт (Разздел G2)
	Для Каждого СтрокаТовар Из ДокументСНТ.ЭтиловыйСпирт Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "2/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;

	// Заполнение по данным ТЧ Виноматериал (Разздел G3)
	Для Каждого СтрокаТовар Из ДокументСНТ.Виноматериал Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "3/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	// Заполнение по данным ТЧ ПивоПивныеНапитки (Разздел G4)
	Для Каждого СтрокаТовар Из ДокументСНТ.ПивоПивныеНапитки Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.КоличествоУпаковок);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "4/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	// Заполнение по данным ТЧ АлкогольнаяПродукцияКромеПива (Разздел G5)
	Для Каждого СтрокаТовар Из ДокументСНТ.АлкогольнаяПродукцияКромеПива Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.КоличествоБутылок);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "5/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	// Заполнение по данным ТЧ ДанныеПоНефтепродуктам (Разздел G6)
	Для Каждого СтрокаТовар Из ДокументСНТ.ДанныеПоНефтепродуктам Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "6/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;

	// Заполнение по данным ТЧ ДанныеПоБиотопливу (Разздел G7)
	Для Каждого СтрокаТовар Из ДокументСНТ.ДанныеПоБиотопливу Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "7/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;

	// Заполнение по данным ТЧ ТабачнаяПродукция (Разздел G8)
	Для Каждого СтрокаТовар Из ДокументСНТ.ТабачнаяПродукция Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.КоличествоПачек);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "8/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	// Заполнение по данным ТЧ ДругиеТоварыЦифроваяМаркировка (Разздел G9)
	Для Каждого СтрокаТовар Из ДокументСНТ.ДругиеТоварыЦифроваяМаркировка Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "9/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	// Заполнение по данным ТЧ ТоварыЭкспортныйКонтроль (Разздел G10)
	Для Каждого СтрокаТовар Из ДокументСНТ.ТоварыЭкспортныйКонтроль Цикл
		
		КодЕдиницыИзмерения = ВССерверПереопределяемый.ПолучитьКодЕдиницыИзмерения(СтрокаТовар.ЕдиницаИзмерения, СтрокаТовар.Товар);
		
		ДанныеСтрокиТовары = Новый Структура();
		ДанныеСтрокиТовары.Вставить("Товар", 			   СтрокаТовар.Товар);
		ДанныеСтрокиТовары.Вставить("ТоварНаименование",   СтрокаТовар.ТоварНаименование);
		ДанныеСтрокиТовары.Вставить("КодТНВЭД", 		   СтрокаТовар.КодТНВЭД);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмерения",    СтрокаТовар.ЕдиницаИзмерения);
		ДанныеСтрокиТовары.Вставить("ЕдиницаИзмеренияКод", КодЕдиницыИзмерения);
		ДанныеСтрокиТовары.Вставить("Количество", 		   СтрокаТовар.Количество);
		ДанныеСтрокиТовары.Вставить("Цена", 			   СтрокаТовар.Цена);
		ДанныеСтрокиТовары.Вставить("НомерСтрокиВСНТ",	   "10/" + СтрокаТовар.НомерСтроки); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		ДанныеСтрокиТовары.Вставить("ИсточникПроисхождения",СтрокаТовар.ИсточникПроисхождения); //Формат номера "НомерТабличнойЧасти/НомерСтроки"
		
		ДанныеДокументаСНТ.Добавить(ДанныеСтрокиТовары);
		
	КонецЦикла;
	
	Возврат ДанныеДокументаСНТ;
	
КонецФункции

Функция ПолучитьДанныеШапкиДокументаФНО(ДокументФНО) Экспорт
	
	ДанныеДокумента = Новый Структура();
	// В ЕРП в документе "ЗаявлениеОВвозеТоваров" регистрационный номер храниться в реквизите "НомерОтметкиОРегистрации"
	ДанныеДокумента.Вставить("РегистрационныйНомер", ДокументФНО.НомерОтметкиОРегистрации);
	ДанныеДокумента.Вставить("Дата", ДокументФНО.Дата);
	// В ЕРП в документе "ЗаявлениеОВвозеТоваров" итоговая сумма по товарам берётся из реквизита "СуммаНДС"
	ДанныеДокумента.Вставить("Сумма", ДокументФНО.Товары.Итог("ФактурнаяСтоимость"));
	
	Возврат ДанныеДокумента;
	
КонецФункции

// Описание: Заполняет количество остатков по источникам происхождения
//
// Параметры (название, тип, дифференцированное значение)
//  ДокументОбъект - Объект документа СопоставлениеСНТиФНО
//  ИмяТабличнойЧастиТовары - Имя табличной части товаров СНТ
Процедура ЗаполнитьОстаткиТоваровВС(ДокументОбъект, ИмяТабличнойЧастиТовары) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", ДокументОбъект[ИмяТабличнойЧастиТовары].Выгрузить());
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", ДокументОбъект.СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("ДатаОстатка", ДокументОбъект.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	&СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Товар КАК Номенклатура,
	|	ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТоваров.ИсточникПроисхождения КАК ИсточникПроисхождения
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтруктурноеПодразделение,
	|	Склад,
	|	Номенклатура,
	|	ЕдиницаИзмерения,
	|	ИсточникПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыДокумента.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОстаткиВС.КоличествоОстаток, 0) - ЕСТЬNULL(ОстаткиВСВРезерве.КоличествоОстаток, 0) КАК КоличествоОстаток
	|ИЗ
	|	ТоварыДокумента КАК ТоварыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(
	|				&ДатаОстатка,
	|				(Организация, СтруктурноеПодразделение, Склад, Номенклатура, ЕдиницаИзмерения, ИсточникПроисхождения) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Товары.Организация,
	|						Товары.СтруктурноеПодразделение,
	|						Товары.Склад,
	|						Товары.Номенклатура,
	|						Товары.ЕдиницаИзмерения,
	|						Товары.ИсточникПроисхождения
	|					ИЗ
	|						ТоварыДокумента КАК Товары)) КАК ОстаткиВС
	|		ПО ТоварыДокумента.Организация = ОстаткиВС.Организация
	|			И ТоварыДокумента.СтруктурноеПодразделение = ОстаткиВС.СтруктурноеПодразделение
	|			И ТоварыДокумента.Склад = ОстаткиВС.Склад
	|			И ТоварыДокумента.Номенклатура = ОстаткиВС.Номенклатура
	|			И ТоварыДокумента.ЕдиницаИзмерения = ОстаткиВС.ЕдиницаИзмерения
	|			И ТоварыДокумента.ИсточникПроисхождения = ОстаткиВС.ИсточникПроисхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВиртуальногоСкладаВРезерве.Остатки(
	|				&ДатаОстатка,
	|				(Организация, СтруктурноеПодразделение, Склад, Номенклатура, ЕдиницаИзмерения, ИсточникПроисхождения) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Товары.Организация,
	|						Товары.СтруктурноеПодразделение,
	|						Товары.Склад,
	|						Товары.Номенклатура,
	|						Товары.ЕдиницаИзмерения,
	|						Товары.ИсточникПроисхождения
	|					ИЗ
	|						ТоварыДокумента КАК Товары)) КАК ОстаткиВСВРезерве
	|		ПО ТоварыДокумента.Организация = ОстаткиВСВРезерве.Организация
	|			И ТоварыДокумента.СтруктурноеПодразделение = ОстаткиВСВРезерве.СтруктурноеПодразделение
	|			И ТоварыДокумента.Склад = ОстаткиВСВРезерве.Склад
	|			И ТоварыДокумента.Номенклатура = ОстаткиВСВРезерве.Номенклатура
	|			И ТоварыДокумента.ЕдиницаИзмерения = ОстаткиВСВРезерве.ЕдиницаИзмерения
	|			И ТоварыДокумента.ИсточникПроисхождения = ОстаткиВСВРезерве.ИсточникПроисхождения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПараметрыПоиска = Новый Структура("НомерСтроки", Выборка.НомерСтроки);
		НайденныеСтроки = ДокументОбъект[ИмяТабличнойЧастиТовары].НайтиСтроки(ПараметрыПоиска);
		Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
			Для каждого СтрокаТЧ Из НайденныеСтроки Цикл
				СтрокаТЧ.КоличествоОстатков = Выборка.КоличествоОстаток;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры //ЗаполнитьОстаткиТоваровВС

#КонецОбласти

#Область ЗаполнениеСФиЭСФпоСНТ

Функция ТекстЗапросаПоУслугамВводЭСФИзСНТ() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(400))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(400))
	|		ИНАЧЕ СправочникНоменклатура.Наименование
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВозвратТоваровОтПокупателяУслуги.Номенклатура КАК Товар,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателяУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВозвратТоваровОтПокупателяУслуги.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ВозвратТоваровОтПокупателяУслуги.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателяУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВозвратТоваровОтПокупателяУслуги.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ВозвратТоваровОтПокупателяУслуги.Упаковка.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателяУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВозвратТоваровОтПокупателяУслуги.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателя.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ВозвратТоваровОтПокупателя.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ВозвратТоваровОтПокупателяУслуги.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяУслуги.Цена * ВозвратТоваровОтПокупателяУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ВозвратТоваровОтПокупателяУслуги.Сумма
	|									ТОГДА ВозвратТоваровОтПокупателяУслуги.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяУслуги.Сумма / ВозвратТоваровОтПокупателяУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяУслуги.Цена * ВозвратТоваровОтПокупателяУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ВозвратТоваровОтПокупателяУслуги.Сумма
	|					ТОГДА ВозвратТоваровОтПокупателяУслуги.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяУслуги.Сумма / ВозвратТоваровОтПокупателяУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ВозвратТоваровОтПокупателяУслуги.СуммаСНДС - ВозвратТоваровОтПокупателяУслуги.СуммаНДС КАК СуммаБезНалогов,
	|	"""" КАК СтавкаАкцизаЧисло,
	|	"""" КАК СтавкаАкциза,
	|	0 КАК СуммаАкциза,
	|	ВозвратТоваровОтПокупателяУслуги.СуммаСНДС - ВозвратТоваровОтПокупателяУслуги.СуммаНДС КАК ОборотПоРеализации,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателя.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ КАК СтавкаНДСЧисло,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВозвратТоваровОтПокупателяУслуги.СтавкаНДС.ДляОсвобожденногоОборота, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВозвратТоваровОтПокупателяУслуги.СтавкаНДС.ДляОсвобожденногоОборота, ЛОЖЬ)
	|		ИНАЧЕ ЕСТЬNULL(ВозвратТоваровОтПокупателяУслуги.СтавкаНДС.МестоРеализацииНеРК, ЛОЖЬ)
	|	КОНЕЦ КАК БезНДС,
	|	ВозвратТоваровОтПокупателяУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ВозвратТоваровОтПокупателяУслуги.СуммаНДС КАК СуммаНДС,
	|	ВозвратТоваровОтПокупателяУслуги.СуммаСНДС КАК Сумма,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(30)) КАК НомерЗаявленияВРамкахТС,
	|	""6"" КАК ПризнакПроисхождения,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	1 КАК ИдентификаторТовара,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка) КАК ИсточникПроисхождения,
	|	ЛОЖЬ КАК ПризнакУчетаНаВиртуальномСкладе
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтПокупателяУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтПокупателя
	|		ПО ВозвратТоваровОтПокупателяУслуги.Ссылка = ВозвратТоваровОтПокупателя.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровОтПокупателяУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ВозвратТоваровОтПокупателяУслуги.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ВозвратТоваровОтПокупателяУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ВозвратТоваровОтПокупателяУслуги.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ВозвратТоваровОтПокупателяУслуги.Ссылка = &СНТДокументОснование
	|	И ВозвратТоваровОтПокупателяУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(400))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(400))
	|		ИНАЧЕ СправочникНоменклатура.Наименование
	|	КОНЕЦ,
	|	ВозвратТоваровПоставщикуУслуги.Номенклатура,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)),
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщикуУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВозвратТоваровПоставщикуУслуги.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ВозвратТоваровПоставщикуУслуги.Упаковка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщикуУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВозвратТоваровПоставщикуУслуги.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ВозвратТоваровПоставщикуУслуги.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщикуУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВозвратТоваровПоставщикуУслуги.Количество,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И ВозвратТоваровПоставщику.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ВозвратТоваровПоставщикуУслуги.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(ВозвратТоваровПоставщикуУслуги.Цена * ВозвратТоваровПоставщикуУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ВозвратТоваровПоставщикуУслуги.Сумма
	|									ТОГДА ВозвратТоваровПоставщикуУслуги.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(ВозвратТоваровПоставщикуУслуги.Сумма / ВозвратТоваровПоставщикуУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(ВозвратТоваровПоставщикуУслуги.Цена * ВозвратТоваровПоставщикуУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = ВозвратТоваровПоставщикуУслуги.Сумма
	|					ТОГДА ВозвратТоваровПоставщикуУслуги.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(ВозвратТоваровПоставщикуУслуги.Сумма / ВозвратТоваровПоставщикуУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВозвратТоваровПоставщикуУслуги.СуммаСНДС - ВозвратТоваровПоставщикуУслуги.СуммаНДС,
	|	"""",
	|	"""",
	|	0,
	|	ВозвратТоваровПоставщикуУслуги.СуммаСНДС - ВозвратТоваровПоставщикуУслуги.СуммаНДС,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВозвратТоваровПоставщикуУслуги.СтавкаНДС.ДляОсвобожденногоОборота, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ВозвратТоваровПоставщикуУслуги.СтавкаНДС.ДляОсвобожденногоОборота, ЛОЖЬ)
	|		ИНАЧЕ ЕСТЬNULL(ВозвратТоваровПоставщикуУслуги.СтавкаНДС.МестоРеализацииНеРК, ЛОЖЬ)
	|	КОНЕЦ,
	|	ВозвратТоваровПоставщикуУслуги.СтавкаНДС,
	|	ВозвратТоваровПоставщикуУслуги.СуммаНДС,
	|	ВозвратТоваровПоставщикуУслуги.СуммаСНДС,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(30)),
	|	""6"",
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)),
	|	1,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ПО ВозвратТоваровПоставщикуУслуги.Ссылка = ВозвратТоваровПоставщику.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровПоставщикуУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО ВозвратТоваровПоставщикуУслуги.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА ВозвратТоваровПоставщикуУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ ВозвратТоваровПоставщикуУслуги.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	ВозвратТоваровПоставщикуУслуги.Ссылка = &СНТДокументОснование
	|	И ВозвратТоваровПоставщикуУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(400))) <> """"
	|			ТОГДА ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(400))
	|		ИНАЧЕ СправочникНоменклатура.Наименование
	|	КОНЕЦ,
	|	РеализацияТоваровУслугУслуги.Номенклатура,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)),
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ РеализацияТоваровУслугУслуги.Упаковка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслугУслуги.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ РеализацияТоваровУслугУслуги.Упаковка.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ТипИзмеряемойВеличины, ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|					ТОГДА ЕСТЬNULL(ДанныеЕдиницыИзмерения.ЕдиницаИзмерения.КодЭСФ, """")
	|				ИНАЧЕ ЕСТЬNULL(ДанныеЕдиницыИзмерения.КодЭСФ, """")
	|			КОНЕЦ
	|	КОНЕЦ,
	|	РеализацияТоваровУслугУслуги.Количество,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				И РеализацияТоваровУслуг.ЦенаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА РеализацияТоваровУслугУслуги.Цена = 0
	|						ТОГДА 0
	|					ИНАЧЕ ВЫРАЗИТЬ(ВЫБОР
	|								КОГДА (ВЫРАЗИТЬ(РеализацияТоваровУслугУслуги.Цена * РеализацияТоваровУслугУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = РеализацияТоваровУслугУслуги.Сумма
	|									ТОГДА РеализацияТоваровУслугУслуги.Цена
	|								ИНАЧЕ ВЫРАЗИТЬ(РеализацияТоваровУслугУслуги.Сумма / РеализацияТоваровУслугУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|							КОНЕЦ / (1 + ЕСТЬNULL(СтавкиНДС.Ставка, 0) * 0.01) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА (ВЫРАЗИТЬ(РеализацияТоваровУслугУслуги.Цена * РеализацияТоваровУслугУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))) = РеализацияТоваровУслугУслуги.Сумма
	|					ТОГДА РеализацияТоваровУслугУслуги.Цена
	|				ИНАЧЕ ВЫРАЗИТЬ(РеализацияТоваровУслугУслуги.Сумма / РеализацияТоваровУслугУслуги.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ,
	|	РеализацияТоваровУслугУслуги.СуммаСНДС - РеализацияТоваровУслугУслуги.СуммаНДС,
	|	"""",
	|	"""",
	|	0,
	|	РеализацияТоваровУслугУслуги.СуммаСНДС - РеализацияТоваровУслугУслуги.СуммаНДС,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНДС.Ставка, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РеализацияТоваровУслугУслуги.СтавкаНДС.ДляОсвобожденногоОборота, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ЕСТЬNULL(РеализацияТоваровУслугУслуги.СтавкаНДС.ДляОсвобожденногоОборота, ЛОЖЬ)
	|		ИНАЧЕ ЕСТЬNULL(РеализацияТоваровУслугУслуги.СтавкаНДС.МестоРеализацииНеРК, ЛОЖЬ)
	|	КОНЕЦ,
	|	РеализацияТоваровУслугУслуги.СтавкаНДС,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	РеализацияТоваровУслугУслуги.СуммаСНДС,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(30)),
	|	""6"",
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(10)),
	|	1,
	|	ЗНАЧЕНИЕ(Справочник.ИсточникиПроисхождения.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияТоваровУслугУслуги.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО РеализацияТоваровУслугУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
	|		ПО РеализацияТоваровУслугУслуги.СтавкаНДС = СтавкиНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДанныеЕдиницыИзмерения
	|		ПО (ВЫБОР
	|				КОГДА РеализацияТоваровУслугУслуги.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	|				ИНАЧЕ РеализацияТоваровУслугУслуги.Упаковка
	|			КОНЕЦ = ДанныеЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслугУслуги.Ссылка = &СНТДокументОснование
	|	И РеализацияТоваровУслугУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет, в документе ЭСФ, реквизиты СвязанныйЭСФНомер и СвязанныйЭСФДата, СвязанныйЭСФРегистрационныйНомер.
//
Процедура ЗаполнитьДанныеСвязанногоЭСФ(СФ, ЭСФ)
	
 	ЭСФ.СвязанныйЭСФДата = '0001-01-01';
	ЭСФ.СвязанныйЭСФНомер = "";
	ЭСФ.СвязанныйЭСФРегистрационныйНомер = "";
	
	ПодчиненныйЭСФ = НайтиПодчиненныйЭСФ(СФ);
	
	Если ПодчиненныйЭСФ  <> Неопределено И ПодчиненныйЭСФ.Количество() > 0 Тогда
		
		ДанныеОсновного = ПодчиненныйЭСФ[0].Ссылка;
		ЭСФ.СвязанныйЭСФ = ДанныеОсновного;
		ЭСФ.СвязанныйЭСФДата = ДанныеОсновного.Дата;
		ЭСФ.СвязанныйЭСФНомер = ДанныеОсновного.Номер;
		ЭСФ.СвязанныйЭСФРегистрационныйНомер = ДанныеОсновного.РегистрационныйНомер;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаВыбораСНТ(ПТУ, СНТ) Экспорт
	
	ОбъектСНТ = СНТ.ПолучитьОбъект();
	ОбъектСНТ.ДокументОснование = ПТУ;
	ОбъектСНТ.Записать();
	
КонецПроцедуры

Функция ПроверитьИмяДокументаПриСозданииЭлементовФормыДляВводаСНТ(ИмяФормы) Экспорт
	
	Возврат ?(СтрНайти(ИмяФормы, "ПриобретениеТоваровУслуг") <> 0, Истина, Ложь);
	
КонецФункции

Процедура ПолучитьАдресПоставщикаПолучателяВЭСФИзСНТ(ПриемникДокументЭСФ, Организация, Дата) Экспорт
	
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, Дата, ,);
	ПриемникДокументЭСФ.Адрес = СведенияОбОрганизации.ЮридическийАдрес; 
	
КонецПроцедуры

Функция ПолучитьСсылкуНаЭСФПриВводеНовогоСНТ(ДокументОснование) Экспорт

	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") 
		ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		СвязанныйСФ = СНТСерверПереопределяемый.НайтиПодчиненныйСчетФактуру(ДокументОснование, "СчетФактураВыданный");
	Иначе
		СвязанныйСФ = СНТСерверПереопределяемый.НайтиПодчиненныйСчетФактуру(ДокументОснование, "СчетФактураПолученный");
	КонецЕсли;
	
	Если СвязанныйСФ.Количество() <> 0 Тогда
		
		СвязанныйЭСФ = СНТСерверПереопределяемый.НайтиПодчиненныйЭСФ(СвязанныйСФ);
		Если СвязанныйЭСФ.Количество() <> 0 Тогда 
			Возврат СвязанныйЭСФ[0].Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено; 
	КонецЕсли;	
	
КонецФункции

Процедура ЗаполнитьСсылкуНаСНТВЭСФ(ДокументЭСФ, СНТ) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументЭСФ.СНТ) Тогда
		ЭСФОбъект = ДокументЭСФ.ПолучитьОбъект();
		ЭСФОбъект.СНТ = СНТ;
		ЭСФОбъект.Записать();	
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКурсВалютыПриСозданииСНТ(Валюта, Дата) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &Валюта) КАК КурсыВалютСрезПоследних"; 
	
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Валюта", 	   Валюта);
	Выборка = Запрос.Выполнить().Выбрать();
						
	Пока Выборка.Следующий() Цикл
		
		КурсВалюты = Выборка.Курс;
		
	КонецЦикла;
			
	Возврат КурсВалюты;
	
КонецФункции

Функция ПолучитьМассивСкрываемыхПолейАкцизы() Экспорт 
	
	МассивИменПолейАкцизы = Новый Массив();
	МассивИменПолейАкцизы.Добавить("ТоварыСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ЭтиловыйСпиртСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ВиноматериалСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ПивоПивныеНапиткиСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("АлкогольнаяПродукцияКромеПиваСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ДанныеПоНефтепродуктамСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ДанныеПоБиотопливуСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ТабачнаяПродукцияСтавкаАкциза");
	//МассивИменПолейАкцизы.Добавить("ТабачнаяПродукцияЦифроваяМаркировкаСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ДругиеТоварыЦифроваяМаркировкаСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ТоварыЭкспортныйКонтрольСтавкаАкциза");
	МассивИменПолейАкцизы.Добавить("ТоварыВССтавкаАкциза");
	
	Возврат МассивИменПолейАкцизы;
	
КонецФункции

Функция ПолучитьФОКонтрагентыПартнеры() Экспорт
	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
КонецФункции

#Область СоответствиеТоваровИЕдиницИзмерений

Функция ТекстЗапросаСНТТоварыЕдиницыИзмерения(СозданиеВременнойТаблицы = ЛОЖЬ) Экспорт 
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА СНТТовары.ЕдиницаИзмеренияКод <> &ПустаяСтрока
	|			ТОГДА СНТТовары.ЕдиницаИзмеренияКод
	|		ИНАЧЕ СНТТовары.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ВЫБОР
	|		КОГДА СНТТовары.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТТовары.ТоварНаименование
	|	КОНЕЦ КАК ТоварНаименование,
	|	 СНТТовары.Ссылка,
	|	 СНТТовары.ЕдиницаИзмерения,
	|	 СНТТовары.Товар" 
	+ ?(СозданиеВременнойТаблицы, Символы.ПС + "ПОМЕСТИТЬ вт_СНТЕдиницыИзмерения", "") + Символы.ПС +
	"ИЗ
	|	Документ.СНТ.Товары КАК СНТТовары
	|ГДЕ
	|	СНТТовары.ТоварНаименование <> &ПустаяСтрока
	|	И СНТТовары.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТТовары.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТТовары.ТоварНаименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СНТТовары.ЕдиницаИзмеренияКод <> &ПустаяСтрока
	|			ТОГДА СНТТовары.ЕдиницаИзмеренияКод
	|		ИНАЧЕ СНТТовары.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ,
	|	 СНТТовары.Ссылка,
	|	 СНТТовары.ЕдиницаИзмерения,
	|	 СНТТовары.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыВС.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА ТоварыВС.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА ТоварыВС.ТоварНаименование
	|	КОНЕЦ,
	|	 ТоварыВС.Ссылка,
	|	 ТоварыВС.ЕдиницаИзмерения,
	|	 ТоварыВС.Товар
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК ТоварыВС
	|ГДЕ
	|	ТоварыВС.ТоварНаименование <> &ПустаяСтрока
	|	И ТоварыВС.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТоварыВС.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА ТоварыВС.ТоварНаименование
	|	КОНЕЦ,
	|	ТоварыВС.ЕдиницаИзмерения.Код,
	|	 ТоварыВС.Ссылка,
	|	 ТоварыВС.ЕдиницаИзмерения,
	|	 ТоварыВС.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТЭтиловыйСпирт.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТЭтиловыйСпирт.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТЭтиловыйСпирт.Ссылка,
	|	 СНТЭтиловыйСпирт.ЕдиницаИзмерения,
	|	 СНТЭтиловыйСпирт.Товар
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК СНТЭтиловыйСпирт
	|ГДЕ
	|	СНТЭтиловыйСпирт.ТоварНаименование <> &ПустаяСтрока
	|	И СНТЭтиловыйСпирт.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТЭтиловыйСпирт.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТЭтиловыйСпирт.ТоварНаименование
	|	КОНЕЦ,
	|	СНТЭтиловыйСпирт.ЕдиницаИзмерения.Код,
	|	 СНТЭтиловыйСпирт.Ссылка,
	|	 СНТЭтиловыйСпирт.ЕдиницаИзмерения,
	|	 СНТЭтиловыйСпирт.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТВиноматериал.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТВиноматериал.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТВиноматериал.Ссылка,
	|	 СНТВиноматериал.ЕдиницаИзмерения,
	|	 СНТВиноматериал.Товар
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК СНТВиноматериал
	|ГДЕ
	|	СНТВиноматериал.ТоварНаименование <> &ПустаяСтрока
	|	И СНТВиноматериал.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТВиноматериал.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТВиноматериал.ТоварНаименование
	|	КОНЕЦ,
	|	СНТВиноматериал.ЕдиницаИзмерения.Код,
	|	 СНТВиноматериал.Ссылка,
	|	 СНТВиноматериал.ЕдиницаИзмерения,
	|	 СНТВиноматериал.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТПивоПивныеНапитки.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТПивоПивныеНапитки.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТПивоПивныеНапитки.Ссылка,
	|	 СНТПивоПивныеНапитки.ЕдиницаИзмерения,
	|	 СНТПивоПивныеНапитки.Товар
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК СНТПивоПивныеНапитки
	|ГДЕ
	|	СНТПивоПивныеНапитки.ТоварНаименование <> &ПустаяСтрока
	|	И СНТПивоПивныеНапитки.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТПивоПивныеНапитки.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТПивоПивныеНапитки.ТоварНаименование
	|	КОНЕЦ,
	|	СНТПивоПивныеНапитки.ЕдиницаИзмерения.Код,
	|	 СНТПивоПивныеНапитки.Ссылка,
	|	 СНТПивоПивныеНапитки.ЕдиницаИзмерения,
	|	 СНТПивоПивныеНапитки.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТАлкогольнаяПродукцияКромеПива.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяПродукцияКромеПива.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТАлкогольнаяПродукцияКромеПива.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТАлкогольнаяПродукцияКромеПива.Ссылка,
	|	 СНТАлкогольнаяПродукцияКромеПива.ЕдиницаИзмерения,
	|	 СНТАлкогольнаяПродукцияКромеПива.Товар
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК СНТАлкогольнаяПродукцияКромеПива
	|ГДЕ
	|	СНТАлкогольнаяПродукцияКромеПива.ТоварНаименование <> &ПустаяСтрока
	|	И СНТАлкогольнаяПродукцияКромеПива.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТАлкогольнаяПродукцияКромеПива.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТАлкогольнаяПродукцияКромеПива.ТоварНаименование
	|	КОНЕЦ,
	|	СНТАлкогольнаяПродукцияКромеПива.ЕдиницаИзмерения.Код,
	|	 СНТАлкогольнаяПродукцияКромеПива.Ссылка,
	|	 СНТАлкогольнаяПродукцияКромеПива.ЕдиницаИзмерения,
	|	 СНТАлкогольнаяПродукцияКромеПива.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТДанныеПоНефтепродуктам.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТДанныеПоНефтепродуктам.Ссылка,
	|	 СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения,
	|	 СНТДанныеПоНефтепродуктам.Товар
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК СНТДанныеПоНефтепродуктам
	|ГДЕ
	|	СНТДанныеПоНефтепродуктам.ТоварНаименование <> &ПустаяСтрока
	|	И СНТДанныеПоНефтепродуктам.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТДанныеПоНефтепродуктам.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТДанныеПоНефтепродуктам.ТоварНаименование
	|	КОНЕЦ,
	|	СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения.Код,
	|	 СНТДанныеПоНефтепродуктам.Ссылка,
	|	 СНТДанныеПоНефтепродуктам.ЕдиницаИзмерения,
	|	 СНТДанныеПоНефтепродуктам.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДанныеПоБиотопливу.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТДанныеПоБиотопливу.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТДанныеПоБиотопливу.Ссылка,
	|	 СНТДанныеПоБиотопливу.ЕдиницаИзмерения,
	|	 СНТДанныеПоБиотопливу.Товар
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК СНТДанныеПоБиотопливу
	|ГДЕ
	|	СНТДанныеПоБиотопливу.ТоварНаименование <> &ПустаяСтрока
	|	И СНТДанныеПоБиотопливу.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТДанныеПоБиотопливу.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТДанныеПоБиотопливу.ТоварНаименование
	|	КОНЕЦ,
	|	СНТДанныеПоБиотопливу.ЕдиницаИзмерения.Код,
	|	 СНТДанныеПоБиотопливу.Ссылка,
	|	 СНТДанныеПоБиотопливу.ЕдиницаИзмерения,
	|	 СНТДанныеПоБиотопливу.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТабачнаяПродукция.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТТабачнаяПродукция.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТТабачнаяПродукция.Ссылка,
	|	 СНТТабачнаяПродукция.ЕдиницаИзмерения,
	|	 СНТТабачнаяПродукция.Товар
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК СНТТабачнаяПродукция
	|ГДЕ
	|	СНТТабачнаяПродукция.ТоварНаименование <> &ПустаяСтрока
	|	И СНТТабачнаяПродукция.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТТабачнаяПродукция.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТТабачнаяПродукция.ТоварНаименование
	|	КОНЕЦ,
	|	СНТТабачнаяПродукция.ЕдиницаИзмерения.Код,
	|	 СНТТабачнаяПродукция.Ссылка,
	|	 СНТТабачнаяПродукция.ЕдиницаИзмерения,
	|	 СНТТабачнаяПродукция.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТДругиеТоварыЦифроваяМаркировка.Ссылка,
	|	 СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения,
	|	 СНТДругиеТоварыЦифроваяМаркировка.Товар
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК СНТДругиеТоварыЦифроваяМаркировка
	|ГДЕ
	|	СНТДругиеТоварыЦифроваяМаркировка.ТоварНаименование <> &ПустаяСтрока
	|	И СНТДругиеТоварыЦифроваяМаркировка.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТДругиеТоварыЦифроваяМаркировка.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТДругиеТоварыЦифроваяМаркировка.ТоварНаименование
	|	КОНЕЦ,
	|	СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения.Код,
	|	 СНТДругиеТоварыЦифроваяМаркировка.Ссылка,
	|	 СНТДругиеТоварыЦифроваяМаркировка.ЕдиницаИзмерения,
	|	 СНТДругиеТоварыЦифроваяМаркировка.Товар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТТоварыЭкспортныйКонтроль.ТоварНаименование
	|	КОНЕЦ,
	|	 СНТТоварыЭкспортныйКонтроль.Ссылка,
	|	 СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения,
	|	 СНТТоварыЭкспортныйКонтроль.Товар
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК СНТТоварыЭкспортныйКонтроль
	|ГДЕ
	|	СНТТоварыЭкспортныйКонтроль.ТоварНаименование <> &ПустаяСтрока
	|	И СНТТоварыЭкспортныйКонтроль.Ссылка В(&МассивСНТ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СНТТоварыЭкспортныйКонтроль.ТоварНаименование <> &ПустаяСтрока
	|			ТОГДА СНТТоварыЭкспортныйКонтроль.ТоварНаименование
	|	КОНЕЦ,
	|	СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения.Код,
	|	 СНТТоварыЭкспортныйКонтроль.Ссылка,
	|	 СНТТоварыЭкспортныйКонтроль.ЕдиницаИзмерения,
	|	 СНТТоварыЭкспортныйКонтроль.Товар";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Процедура УстановитьНаименованиеРозничныйПокупатель(ОбъектСНТ, Реквизит) Экспорт
	
	Если ОбъектСНТ[Реквизит] = ПредопределенноеЗначение("Справочник.Партнеры.РозничныйПокупатель") 
		ИЛИ ОбъектСНТ[Реквизит] = ПредопределенноеЗначение("Справочник.Контрагенты.РозничныйПокупатель") Тогда
		ИмяРеквизита = Реквизит + "Наименование";
		ОбъектСНТ[ИмяРеквизита] = "Розничная реализация";
	КонецЕсли;
	
КонецПроцедуры

#Область ВводЭДВСпоСНТ

Функция ТекстЗапросаСНТ(ПервыйЗапрос = Истина) Экспорт
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ 
	|	Товары.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	&ПодразделенияОрганизацийПустаяСсылка КАК СтруктурноеПодразделение,
	|	&ПодразделенияОрганизацийПустаяСсылка КАК СтруктурноеПодразделениеПолучатель,
	|	Товары.Дата КАК ДатаИсходногоДокумента,
	|	Товары.Дата,
	|	Товары.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.СписаниеТоваровНеВС) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ОтсутствуетТребованиеСНТ) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	"""" КАК Комментарий,
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК СкладПолучатель,
	|	Товары.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Номенклатура КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименование КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоОстаток КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.КоличествоОстаток * Товары.Цена КАК Сумма,
	|	Товары.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""СНТ"" КАК ИмяДокумента,
	|	Товары.ТипПошлины КАК ТипПошлины,
	|	Товары.ТипПроисхождения КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""""""" КАК ПрефиксВидаДокумента,
	|	"""""""" КАК НомерУчетногоДокумента,
	|	"""""""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	ТоварыНеПодлежащиеУчету КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|		ПО Товары.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка";	
	Если Не ПервыйЗапрос Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ вт_ДанныеДокумента", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаВыбораСНТ() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СНТТоварыВС.Товар КАК Номенклатура,
	|	СНТТоварыВС.Ссылка КАК Ссылка,
	|	СНТТоварыВС.Ссылка.Организация КАК Организация,
	|		&ПодразделенияОрганизацийПустаяСсылка
	|КАК СтруктурноеПодразделение,
	|	СНТТоварыВС.Ссылка.Дата КАК Дата,
	|	СНТТоварыВС.Ссылка.Номер КАК Номер,
	|	СНТТоварыВС.Ссылка.СкладПолучатель КАК СкладОтправитель,
	|	СНТТоварыВС.ТоварНаименование КАК ТоварНаименование,
	|	СНТТоварыВС.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	СНТТоварыВС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СНТТоварыВС.КодТНВЭД КАК КодТНВЭД,
	|	СНТТоварыВС.Цена КАК Цена,
	|	СНТТоварыВС.СуммаБезНалогов КАК СуммаБезНалогов,
	|	СНТТоварыВС.СтавкаАкциза КАК СтавкаАкциза,
	|	СНТТоварыВС.СтавкаАкцизаЧисло КАК СтавкаАкцизаЧисло,
	|	СНТТоварыВС.СуммаАкциза КАК СуммаАкциза,
	|	СНТТоварыВС.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	СНТТоварыВС.БезНДС КАК БезНДС,
	|	СНТТоварыВС.СтавкаНДС КАК СтавкаНДС,
	|	СНТТоварыВС.СуммаНДС КАК СуммаНДС,
	|	СНТТоварыВС.Сумма КАК Сумма,
	|	СНТТоварыВС.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	СНТТоварыВС.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	СНТТоварыВС.ИдентификаторТовара КАК ИдентификаторТовара,
	|	СНТТоварыВС.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	СНТТоварыВС.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	|	СНТТоварыВС.GTIN КАК GTIN,
	|	ЕстьNull(СопоставленныеИсточникиПроисхождения.ИсточникПроисхожденияПослеСопоставления, СНТТоварыВС.ИсточникПроисхождения)  КАК ИсточникПроисхождения
	|ПОМЕСТИТЬ ТоварыВССНТ
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК СНТТоварыВС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставленныеИсточникиПроисхождения КАК СопоставленныеИсточникиПроисхождения
	|		ПО СНТТоварыВС.ИсточникПроисхождения = СопоставленныеИсточникиПроисхождения.ИсточникПроисхожденияДоСопоставления
	|ГДЕ
	|	СНТТоварыВС.Ссылка В(&МассивДокументов)
	|	И (СНТТоварыВС.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Ввоз)
	|	ИЛИ (СНТТоварыВС.Ссылка.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Входящий) 
	|			И СНТТоварыВС.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСНТ.Реализация)))
	|	И СНТТоварыВС.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСНТ.Подтвержден)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыВССНТ.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ) КАК ПризнакУчетаНаВиртуальномСкладеГСВС,
	|	СправочникИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе КАК ПризнакУчетаНаВиртуальномСкладе,
	|	СправочникИсточникиПроисхождения.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	СправочникИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	СправочникИсточникиПроисхождения.ТипПошлины КАК ТипПошлины,
	|	СправочникИсточникиПроисхождения.ТипПроисхождения КАК ТипПроисхождения,
	|	ЕСТЬNULL(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВиртуальногоСкладаВРезерве.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ТоварыВССНТ.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ТоварыВССНТ.КодТНВЭД КАК КодТНВЭД,
	|	ТоварыВССНТ.Цена КАК Цена,
	|	ТоварыВССНТ.СуммаБезНалогов КАК СуммаБезНалогов,
	|	ТоварыВССНТ.СтавкаАкциза КАК СтавкаАкциза,
	|	ТоварыВССНТ.СтавкаАкцизаЧисло КАК СтавкаАкцизаЧисло,
	|	ТоварыВССНТ.СуммаАкциза КАК СуммаАкциза,
	|	ТоварыВССНТ.СтавкаНДСЧисло КАК СтавкаНДСЧисло,
	|	ТоварыВССНТ.БезНДС КАК БезНДС,
	|	ТоварыВССНТ.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыВССНТ.СуммаНДС КАК СуммаНДС,
	|	ТоварыВССНТ.Сумма КАК Сумма,
	|	СправочникИсточникиПроисхождения.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	СправочникИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	ТоварыВССНТ.ИдентификаторТовара КАК ИдентификаторТовара,
	|	ТоварыВССНТ.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ТоварыВССНТ.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор,
	|	ТоварыВССНТ.GTIN КАК GTIN,
	|	ТоварыВССНТ.Организация КАК Организация,
	|	ТоварыВССНТ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ТоварыВССНТ.Дата КАК ДАТА,
	|	ТоварыВССНТ.Номер КАК Номер,
	|	ТоварыВССНТ.СкладОтправитель КАК СкладОтправитель,
	|	ТоварыВССНТ.Ссылка КАК Ссылка,
	|	ТоварыВССНТ.ТоварНаименование КАК ТоварНаименование
	|ПОМЕСТИТЬ ТоварыНеПодлежащиеУчету
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(
	|			&ДатаОстатка,
	|			(Номенклатура, ИсточникПроисхождения) В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТоварыВС.Номенклатура,
	|					ТоварыВС.ИсточникПроисхождения
	|				ИЗ
	|					ТоварыВССНТ КАК ТоварыВС)) КАК ТоварыНаВиртуальныхСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК СправочникИсточникиПроисхождения
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = СправочникИсточникиПроисхождения.Ссылка
	|			И ТоварыНаВиртуальныхСкладахОстатки.Номенклатура = СправочникИсточникиПроисхождения.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО (СправочникИсточникиПроисхождения.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыВССНТ КАК ТоварыВССНТ
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.Номенклатура = ТоварыВССНТ.Номенклатура
	|			И ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = ТоварыВССНТ.ИсточникПроисхождения
	//|			И ТоварыНаВиртуальныхСкладахОстатки.ДокументПартии = ТоварыВССНТ.Ссылка
	|			И ТоварыНаВиртуальныхСкладахОстатки.Организация = ТоварыВССНТ.Организация
	|			И ТоварыНаВиртуальныхСкладахОстатки.Склад = ТоварыВССНТ.СкладОтправитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВиртуальногоСкладаВРезерве.Остатки(
	|				&ДатаОстатка,
	|				(Номенклатура, ИсточникПроисхождения) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТоварыВС.Номенклатура,
	|						ТоварыВС.ИсточникПроисхождения
	|					ИЗ
	|						ТоварыВССНТ КАК ТоварыВС)) КАК ТоварыВиртуальногоСкладаВРезерве
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.Организация = ТоварыВиртуальногоСкладаВРезерве.Организация
	|			И (ВЫБОР
	|				КОГДА &ПоддержкаРаботыСоСтруктурнымиПодразделениями
	|					ТОГДА ТоварыНаВиртуальныхСкладахОстатки.СтруктурноеПодразделение = ТоварыВиртуальногоСкладаВРезерве.СтруктурноеПодразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И ТоварыНаВиртуальныхСкладахОстатки.Склад = ТоварыВиртуальногоСкладаВРезерве.Склад
	|			И ТоварыНаВиртуальныхСкладахОстатки.Номенклатура = ТоварыВиртуальногоСкладаВРезерве.Номенклатура
	|			И ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения = ТоварыВиртуальногоСкладаВРезерве.ЕдиницаИзмерения
	|			И ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = ТоварыВиртуальногоСкладаВРезерве.ИсточникПроисхождения
	|			И ТоварыНаВиртуальныхСкладахОстатки.ДокументПартии = ТоварыВиртуальногоСкладаВРезерве.ДокументПартии
	|ГДЕ
	|	ЕСТЬNULL(ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(ТоварыВиртуальногоСкладаВРезерве.КоличествоОстаток, 0) > 0
	|	И НЕ ЕСТЬNULL(СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе, ЛОЖЬ)
	|	И СправочникИсточникиПроисхождения.ПризнакУчетаНаВиртуальномСкладе	
	|;
	|///////////////////////////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСНТКонвертацияЕдиницИзмерения() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Ссылка КАК Ссылка,
	|	СНТ.Организация КАК Организация,
	|	СНТ.Дата,
	|	СНТ.Номер,
	|	СНТ.Ссылка КАК ДокументОснование,
	|	ВЫРАЗИТЬ(СНТ.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	СНТ.СкладПолучатель КАК СкладОтправитель,
	|	СНТ.Организация КАК СтруктурноеПодразделение
	|
	|ПОМЕСТИТЬ вт_РеквизитыСНТ
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|ГДЕ
	|	СНТ.Ссылка В(&МассивДокументов)
	|	И СНТ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Входящий)
	|
	| ;
	| ///////////////////
    |
	|ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ПОМЕСТИТЬ вт_ТоварыЭСФ
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлассификаторЕдиницИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО Товары.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлассификаторЕдиницИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО Товары.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.КоличествоУпаковок * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.КоличествоУпаковок * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлассификаторЕдиницИзмерения.КодЭСФ КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО Товары.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
    |ВЫБРАТЬ 
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.КоэффициентПересчета,
	|	КлассификаторЕдиницИзмеренияХраненияОстатков.КодЭСФ КАК ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.Количество * Товары.КоэффициентПересчета КАК КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|				ИЛИ Товары.КоэффициентПересчета = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ ВЫРАЗИТЬ(Товары.СуммаБезНалогов / (Товары.Количество * Товары.КоэффициентПересчета) КАК ЧИСЛО(17, 2))
	|	КОНЕЦ КАК ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмеренияХраненияОстатков
	|		ПО Товары.ЕдиницаИзмеренияХраненияОстатков = КлассификаторЕдиницИзмеренияХраненияОстатков.Ссылка
	|ГДЕ
	|	Товары.ПризнакПроисхождения <> ""6""
	|	И (Товары.КоэффициентПересчета <> 1
	|	ИЛИ (Товары.ЕдиницаИзмерения <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) И 
	|	Товары.ЕдиницаИзмеренияХраненияОстатков <> Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	И Товары.ЕдиницаИзмерения <> Товары.ЕдиницаИзмеренияХраненияОстатков))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РеквизитыСНТ.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ОрганизацияПолучатель,
	|	вт_РеквизитыСНТ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	&ПустоеПодразделение КАК СтруктурноеПодразделениеПолучатель,
	|	вт_РеквизитыСНТ.Дата КАК ДатаИсходногоДокумента,
	|	вт_РеквизитыСНТ.Дата,
	|	вт_РеквизитыСНТ.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	вт_РеквизитыСНТ.Комментарий КАК Комментарий,
	|	вт_РеквизитыСНТ.ДокументОснование КАК ДокументОснование,
	|	вт_РеквизитыСНТ.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК СкладПолучатель,
	|	вт_РеквизитыСНТ.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ Товары.Сумма / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""ИсходныеТовары"" КАК ИмяТабличнойЧасти,
	|	""СНТ"" КАК ИмяДокумента,
	|	Товары.ТипПошлины КАК ТипПошлины,
	|	Товары.ТипПроисхождения КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РеквизитыСНТ КАК вт_РеквизитыСНТ
	|			ПО Товары.Ссылка = вт_РеквизитыСНТ.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_РеквизитыСНТ.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка),
	|	вт_РеквизитыСНТ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	вт_РеквизитыСНТ.Дата,
	|	вт_РеквизитыСНТ.Дата,
	|	вт_РеквизитыСНТ.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Детализация),
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ),
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный),
	|	вт_РеквизитыСНТ.Комментарий,
	|	вт_РеквизитыСНТ.ДокументОснование,
	|	вт_РеквизитыСНТ.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	вт_РеквизитыСНТ.СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Товары.ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД,
	|	Товары.ЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЕдиницаИзмеренияХраненияОстатковКод,
	|	Товары.КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЦенаЕдиницаИзмеренияХраненияОстатков * Товары.КоличествоЕдиницаИзмеренияХраненияОстатков,
	|	Товары.ЦенаЕдиницаИзмеренияХраненияОстатков,
	|	Товары.СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	""Товары"",
	|	""СНТ"",
	|	Товары.ТипПошлины,
	|	Товары.ТипПроисхождения,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	"""",
	|	"""",
	|	""""
	|ИЗ
	|	вт_ТоварыЭСФ КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РеквизитыСНТ КАК вт_РеквизитыСНТ
	|			ПО Товары.Ссылка = вт_РеквизитыСНТ.Ссылка";
	
	Возврат  ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНаПеремещениеИзВходящегоСНТ() Экспорт

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СНТ.Ссылка КАК Ссылка,
	|	СНТ.Организация КАК Организация,
	|	СНТ.Организация КАК ОрганизацияПолучатель,	
	|	СНТ.Дата КАК Дата,
	|	СНТ.Номер КАК Номер,
	|	СНТ.Ссылка КАК ДокументОснование,
	|	ВЫРАЗИТЬ(СНТ.Комментарий КАК СТРОКА(400)) КАК Комментарий,
	|	СНТ.СкладПолучатель КАК СкладОтправитель,
	|	СНТ.Организация КАК СтруктурноеПодразделение
	|ПОМЕСТИТЬ вт_РеквизитыСНТ
	|ИЗ
	|	Документ.СНТ КАК СНТ
	|ГДЕ
	|	СНТ.Ссылка В(&МассивДокументов)
	|	И СНТ.Направление = ЗНАЧЕНИЕ(Перечисление.НаправленияСНТ.Входящий)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Товар КАК Товар,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.СуммаБезНалогов КАК Сумма,
	|	Товары.Цена КАК Цена,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины КАК ТипПошлины,
	|	ДанныеИП.ТипПроисхождения КАК ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2 КАК СтранаПроисхожденияТовараКод
	|ПОМЕСТИТЬ вт_ТоварыСНТ
	|ИЗ
	|	Документ.СНТ.ТоварыВС КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	КлассификаторЕдиницИзмерения.КодЭСФ,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ЭтиловыйСпирт КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО Товары.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	КлассификаторЕдиницИзмерения.КодЭСФ,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.Виноматериал КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО Товары.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ПивоПивныеНапитки КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	КлассификаторЕдиницИзмерения.КодЭСФ,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.АлкогольнаяПродукцияКромеПива КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК КлассификаторЕдиницИзмерения
	|		ПО Товары.ЕдиницаИзмерения = КлассификаторЕдиницИзмерения.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ДанныеПоНефтепродуктам КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ДанныеПоБиотопливу КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ТабачнаяПродукция КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ДругиеТоварыЦифроваяМаркировка КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.Товар,
	|	Товары.ТоварНаименование,
	|	ДанныеИП.ТоварНаименованиеВРамкахТС,
	|	ДанныеИП.КодТНВЭД,
	|	Товары.ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод,
	|	Товары.Количество,
	|	Товары.СуммаБезНалогов,
	|	Товары.Цена,
	|	Товары.ПризнакПроисхождения,
	|	ДанныеИП.НомерЗаявленияВРамкахТС,
	|	ДанныеИП.НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения,
	|	ДанныеИП.ТипПошлины,
	|	ДанныеИП.ТипПроисхождения,
	|	ДанныеИП.СтранаПроисхожденияТовара,
	|	ДанныеСтраныМира.КодАльфа2
	|ИЗ
	|	Документ.СНТ.ТоварыЭкспортныйКонтроль КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсточникиПроисхождения КАК ДанныеИП
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК ДанныеСтраныМира
	|			ПО ДанныеИП.СтранаПроисхожденияТовара = ДанныеСтраныМира.Ссылка
	|		ПО Товары.ИсточникПроисхождения = ДанныеИП.Ссылка
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.ПризнакПроисхождения <> ""6""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_РеквизитыСНТ.Организация КАК Организация,
	|	вт_РеквизитыСНТ.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	вт_РеквизитыСНТ.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК СтруктурноеПодразделениеПолучатель,
	|	вт_РеквизитыСНТ.Дата КАК ДатаИсходногоДокумента,
	|	вт_РеквизитыСНТ.Дата,
	|	вт_РеквизитыСНТ.Номер,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение) КАК ТипФормы,
	|	ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.ПустаяСсылка) КАК ПричинаСписания,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДетализации.ПустаяСсылка) КАК ВидДетализации,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Созданный) КАК Статус,
	|	вт_РеквизитыСНТ.Комментарий КАК Комментарий,
	|	вт_РеквизитыСНТ.ДокументОснование КАК ДокументОснование,
	|	вт_РеквизитыСНТ.СкладОтправитель КАК СкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК СкладПолучатель,
	|	вт_РеквизитыСНТ.СкладОтправитель КАК ВиртуальныйСкладОтправитель,
	|	ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка) КАК ВиртуальныйСкладПолучатель,
	|	Товары.Товар КАК Товар,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	Товары.ТоварНаименование КАК ТоварНаименование,
	|	Товары.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	Товары.КодТНВЭД КАК КодТНВЭД,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА Товары.Цена
	|		ИНАЧЕ Товары.Сумма / Товары.Количество
	|	КОНЕЦ КАК Цена,
	|	Товары.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	Товары.СтранаПроисхожденияТовараКод КАК СтранаПроисхожденияТовараКод,
	|	Товары.ПризнакПроисхождения КАК ПризнакПроисхождения,
	|	Товары.НомерЗаявленияВРамкахТС КАК НомерЗаявленияВРамкахТС,
	|	Товары.НомерПозицииВДекларацииИлиЗаявлении КАК НомерПозицииВДекларацииИлиЗаявлении,
	|	Товары.ИсточникПроисхождения КАК ИсточникПроисхождения,
	|	""Товары"" КАК ИмяТабличнойЧасти,
	|	""СНТ"" КАК ИмяДокумента,
	|	Товары.ТипПошлины КАК ТипПошлины,
	|	Товары.ТипПроисхождения КАК ТипПроисхождения,
	|	ЛОЖЬ КАК ВозможенЭкспорт,
	|	ЛОЖЬ КАК ЗапрещеноРазбиватьДокумент,
	|	ЛОЖЬ КАК РаспределятьТоварыПоИП,
	|	ЛОЖЬ КАК РаспределятьИсходныеТоварыПоИП,
	|	"""" КАК ПрефиксВидаДокумента,
	|	"""" КАК НомерУчетногоДокумента,
	|	"""" КАК НомерПакета
	|ПОМЕСТИТЬ вт_ДанныеДокумента
	|ИЗ
	|	вт_ТоварыСНТ КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_РеквизитыСНТ КАК вт_РеквизитыСНТ
	|		ПО Товары.Ссылка = вт_РеквизитыСНТ.Ссылка ";	

 Возврат ТекстЗапроса;
 
КонецФункции

#КонецОбласти

#Область СсылкаНаСНТ

Процедура ОбновитьРеквизитыСНТ(ДанныеФормы, РеквизитНадписьСНТ = "НадписьСНТ", ТребуетсяСНТ = Истина, ГруппаДляВключенияМеню = "ГруппаПодвалЛевая", ПослеГруппы = "") Экспорт
	
	Если ПолучитьДанныеСНТ(ДанныеФормы, ГруппаДляВключенияМеню, ПослеГруппы) Тогда 
		ЗаполнитьТекстПроСНТ(ДанныеФормы, РеквизитНадписьСНТ, ТребуетсяСНТ);
		УправлениеГруппойСНТ(ДанныеФормы, ТребуетсяСНТ);
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДанныеСНТ(ДанныеФормы, ГруппаДляВключенияМеню = "ГруппаПодвалЛевая", ПослеГруппы = "") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеСНТ") Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Если ДанныеФормы.Элементы.Найти("ГруппаСНТ") = Неопределено Тогда
		Если ДанныеФормы.Элементы.Найти("ГруппаПодвалЛевая") = Неопределено Тогда
			Если ДанныеФормы.Элементы.Найти("ГруппаКомментарийАвтор") <> Неопределено Тогда
				СоздатьЭлементыФормыДляВводаСНТ(ДанныеФормы, "ГруппаКомментарийАвтор", ПослеГруппы);
			ИначеЕсли ДанныеФормы.Элементы.Найти("Подвал") <> Неопределено Тогда // УПК Подвал
				СоздатьЭлементыФормыДляВводаСНТ(ДанныеФормы, "Подвал", ПослеГруппы);
			Иначе
				СоздатьЭлементыФормыДляВводаСНТ(ДанныеФормы, ГруппаДляВключенияМеню, ПослеГруппы);
			КонецЕсли; 
		Иначе
			СоздатьЭлементыФормыДляВводаСНТ(ДанныеФормы, ГруппаДляВключенияМеню, ПослеГруппы);
		КонецЕсли;
				
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеФормы.СНТ) Тогда
		СНТ = ДанныеФормы.СНТ;
	Иначе
		ДанныеПоСНТ = СНТСервер.ПроверитьНаличиеСвязанногоСНТ(ДанныеФормы.Объект.Ссылка, Истина);
		Если (ТипЗнч(ДанныеПоСНТ) <> Тип("СписокЗначений")) И (ДанныеПоСНТ <> Неопределено) Тогда
			СНТ = ДанныеПоСНТ.Ссылка;
		ИначеЕсли (ТипЗнч(ДанныеПоСНТ) = Тип("СписокЗначений")) И (ДанныеПоСНТ.Количество()> 1) Тогда
			Если ДанныеФормы.СписокСНТ.Количество() = 0 Тогда
				Для каждого СтрокаТаблицыИсточник Из ДанныеПоСНТ Цикл
					ЗаполнитьЗначенияСвойств(ДанныеФормы.СписокСНТ.Добавить(), СтрокаТаблицыИсточник);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли (ТипЗнч(ДанныеПоСНТ) = Тип("СписокЗначений")) И (ДанныеПоСНТ.Количество() = 1) Тогда
			СНТ = ДанныеПоСНТ[0].Значение;
		Иначе 
			СНТ = ПредопределенноеЗначение("Документ.СНТ.ПустаяСсылка");
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСНТ = Неопределено;
		
	Если ЗначениеЗаполнено(СНТ) Тогда
		
		РеквизитыСНТ = Новый Структура(
		"Ссылка, ТипСНТ, Дата, Проведен, ПометкаУдаления",
		СНТ, Перечисления.ТипыСНТ.Первичная, '00010101', Ложь, Ложь);
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		СНТ, "Дата, ТипСНТ, Проведен, ПометкаУдаления");
		ЗаполнитьЗначенияСвойств(РеквизитыСНТ, ЗначенияРеквизитов);
		
		ТекстСНТ = ПолучитьТекстСНТ(РеквизитыСНТ);
		
		ДанныеСНТ = Новый Структура("СНТ, ТекстСНТ, Проведен, ТипСНТ, ПометкаУдаления", СНТ, ТекстСНТ, РеквизитыСНТ.Проведен, РеквизитыСНТ.ТипСНТ, РеквизитыСНТ.ПометкаУдаления);
		ДанныеФормы.СНТ = СНТ;
		ДанныеФормы.ДанныеСНТ = ДанныеСНТ;
	
	ИначеЕсли ДанныеФормы.СписокСНТ.Количество()<> 0 Тогда
		
		СписокСсылокСНТ = Новый СписокЗначений;
		
		Для каждого СсылкаСНТ Из ДанныеФормы.СписокСНТ Цикл
			
			РеквизитыСНТ = Новый Структура(
			"Ссылка, ТипСНТ, Дата, Проведен, ПометкаУдаления",
			СсылкаСНТ.Значение, Перечисления.ТипыСНТ.Первичная, '00010101', Ложь, Ложь);
			
			ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			СсылкаСНТ.Значение, "Дата, ТипСНТ, Проведен, ПометкаУдаления");
			ЗаполнитьЗначенияСвойств(РеквизитыСНТ, ЗначенияРеквизитов);
			
			СписокСсылокСНТ.Добавить(РеквизитыСНТ);
			
		КонецЦикла; 
		
		ТекстСНТ = ПолучитьТекстСНТ(СписокСсылокСНТ);
		
		Если СписокСсылокСНТ.Количество() <> 0 Тогда
			
			СписокСНТ = Новый СписокЗначений;
			
			Для каждого Ссылки Из СписокСсылокСНТ Цикл
				СсылкаСНТ = Ссылки.Значение.Ссылка;
				СписокСНТ.Добавить(СсылкаСНТ);
			КонецЦикла; 
			
			ДанныеСНТ = Новый Структура("СНТ, ТекстСНТ, Проведен, ТипСНТ, ПометкаУдаления", СписокСНТ, ТекстСНТ, РеквизитыСНТ.Проведен, РеквизитыСНТ.ТипСНТ, РеквизитыСНТ.ПометкаУдаления);
			ДанныеФормы.СписокСНТ = СписокСНТ;
			ДанныеФормы.ДанныеСНТ = ДанныеСНТ;
			
		КонецЕсли;
		
	Иначе
		
		ДанныеФормы.СНТ = СНТ;
		ДанныеФормы.ДанныеСНТ = ДанныеСНТ;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьТекстСНТ(ДанныеСНТ) Экспорт
	
	Если ТипЗнч(ДанныеСНТ) = Тип("СписокЗначений") Тогда
		
		НадписьКоличествоСНТ = НСтр("ru='Всего СНТ: (%КоличествоДокументов%)'");
		Текст = СтрЗаменить(НадписьКоличествоСНТ, "%КоличествоДокументов%", ДанныеСНТ.Количество());
	
	Иначе
		
		СНТ = ?(ДанныеСНТ.Свойство("Ссылка"), ДанныеСНТ.Ссылка, Неопределено);
		ДополнительныйТекст = "";
		
		Если ДанныеСНТ.ПометкаУдаления Тогда
			ДополнительныйТекст = НСтр("ru=' (помечен на удаление)'");
		Иначе
			Если НЕ ДанныеСНТ.Проведен Тогда
				ДополнительныйТекст = НСтр("ru=' (не проведен)'");
			КонецЕсли;
		КонецЕсли;
		
		Текст = Строка(СНТ)+ ДополнительныйТекст;
		
	КонецЕсли;
		
	Возврат Текст;
	
КонецФункции 

Процедура ЗаполнитьТекстПроСНТ(Форма, РеквизитНадписьСНТ = "НадписьСНТ", ТребуетсяСНТ = Истина) Экспорт
	
	ДанныеСНТ = Форма.ДанныеСНТ;
	
	Если ТребуетсяСНТ И ДанныеСНТ = Неопределено Тогда
		Форма[РеквизитНадписьСНТ] = "";
		Возврат;
	КонецЕсли;
	
	Если НЕ ТребуетсяСНТ Тогда
		Форма[РеквизитНадписьСНТ] = НСтр("ru='Не требуется'");
		Форма.Элементы[РеквизитНадписьСНТ].ЦветТекста = Новый Цвет(51, 51, 51); // текст формы
	Иначе
		Форма[РеквизитНадписьСНТ] = ДанныеСНТ.ТекстСНТ;
		
		Если ТребуетсяСНТ И (ДанныеСНТ.ПометкаУдаления ИЛИ НЕ ДанныеСНТ.Проведен) Тогда
			Форма.Элементы[РеквизитНадписьСНТ].ЦветТекста = Новый Цвет(255, 0, 0);  // красный
		Иначе
			Форма.Элементы[РеквизитНадписьСНТ].ЦветТекста = Новый Цвет(51, 51, 51); // текст формы
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура УправлениеГруппойСНТ(Форма, ТребуетсяСНТ = Истина) Экспорт
	
	Элементы = Форма.Элементы;
	
	Если ТребуетсяСНТ И (ЗначениеЗаполнено(Форма.СписокСНТ) ИЛИ ЗначениеЗаполнено(Форма.СНТ)) Тогда
		Элементы.ГруппаСНТ.ТекущаяСтраница = Элементы.ГруппаСсылкаСНТ;
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЭлементыФормыДляВводаСНТ(Форма, ГруппаДляВключенияМеню = "ГруппаСсылки", ПослеГруппы = "") Экспорт

	ДокументИсточник = Форма.Объект.Ссылка;
	
	//Добавим необходимые для работы реквизиты формы
	ДобавляемыеРеквизиты = Новый Массив;
	НовыйРеквизитНадписиСНТ = Новый РеквизитФормы("НадписьСНТ", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(500))); 
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитНадписиСНТ);
	
	НовыйРеквизитДанныеСНТ = Новый РеквизитФормы("ДанныеСНТ", Новый ОписаниеТипов());
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитДанныеСНТ);
	
	НовыйРеквизитСНТ = Новый РеквизитФормы("СНТ", Новый ОписаниеТипов("ДокументСсылка.СНТ"));
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитСНТ);
	
	НовыйРеквизитСписокСНТ = Новый РеквизитФормы("СписокСНТ", Новый ОписаниеТипов("СписокЗначений"));
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизитСписокСНТ);
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Если ЗначениеЗаполнено(ПослеГруппы) Тогда
		
		//Создадим группу страниц для работы с СНТ
		ГруппаСНТ = Форма.Элементы.Вставить("ГруппаСНТ", Тип("ГруппаФормы"),, Форма.Элементы[ПослеГруппы]);
		ГруппаСНТ.Вид = ВидГруппыФормы.Страницы;
		ГруппаСНТ.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		
	Иначе 
		//Получим группу в котороую встроим элементы
		ПодменюРазмещения = Форма.Элементы[ГруппаДляВключенияМеню];
		//Создадим группу страниц для работы с СНТ
		ГруппаСНТ = Форма.Элементы.Добавить("ГруппаСНТ", Тип("ГруппаФормы"), ПодменюРазмещения);
		ГруппаСНТ.Вид = ВидГруппыФормы.Страницы;
		ГруппаСНТ.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		
	КонецЕсли;
	
	//Создадим страницу ссылки СНТ
	ГруппаСсылкаСНТ = Форма.Элементы.Добавить("ГруппаСсылкаСНТ", Тип("ГруппаФормы"), ГруппаСНТ);
	ГруппаСсылкаСНТ.Вид = ВидГруппыФормы.Страница;
	
	ПолеНадписиСНТ = Форма.Элементы.Добавить("НадписьСНТ", Тип("ПолеФормы"), ГруппаСсылкаСНТ);
	ПолеНадписиСНТ.Вид = ВидПоляФормы.ПолеНадписи;
	ПолеНадписиСНТ.Гиперссылка = Истина;
	ПолеНадписиСНТ.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ПолеНадписиСНТ.ПутьКДанным = "НадписьСНТ";
	
	ПолеНадписиСНТ.УстановитьДействие("Нажатие", "НадписьСНТНажатие");
	
КонецПроцедуры

Процедура СоздатьЭлементыФормыСпискаДляВводаСНТ(Форма, ГруппаДляВключенияМеню = "ФормаКоманднаяПанель", СписокДокументов = "Список") Экспорт

	//Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеСНТ") Тогда 
	//	Возврат;
	//КонецЕсли;
	//
	////Получим группу в котороую встроим элементы
	//ПодменюРазмещения = Форма.Элементы[ГруппаДляВключенияМеню];
	//
	////Добавим подменю создания СНТ
	//ГруппаСозданиеСНТ = Форма.Элементы.Добавить("ГруппаСозданиеСНТ", Тип("ГруппаФормы"), ПодменюРазмещения);
	//ГруппаСозданиеСНТ.Вид = ВидГруппыФормы.Подменю;
	//ГруппаСозданиеСНТ.Видимость = Истина;
	//ГруппаСозданиеСНТ.Заголовок = "СНТ";
	//ГруппаСозданиеСНТ.РастягиватьПоГоризонтали = Истина;
	//
	////Создание команду обработки создания СНТ
	//НоваяКоманда = Форма.Команды.Добавить("СоздатьСНТ");
	//НоваяКоманда.Заголовок = "Ввести новую СНТ";
	//НоваяКоманда.Действие = "ОбработкаКомандыСозданияСНТ";
	//НоваяКоманда.ИзменяетСохраняемыеДанные = Ложь;
	//НоваяКоманда.Отображение = ОтображениеКнопки.КартинкаИТекст;
	//
	//НовыйЭлемент = Форма.Элементы.Добавить("СоздатьСНТ", Тип("КнопкаФормы"), ГруппаСозданиеСНТ);
	//НовыйЭлемент.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	//НовыйЭлемент.ИмяКоманды = "СоздатьСНТ";
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Заполняет список обработчиков обновления информационной базы.
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики, ЗавершениеОбновления = Ложь) Экспорт
	

	
КонецПроцедуры

#КонецОбласти

#Область ИнтеграцияПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

Процедура ПриЗаполненииОграниченияДоступа(Ограничение, ИмяДокумента) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Функция ПолучитьЗначениеПараметраКонтрагентРозница() Экспорт
	
	МассивЗначенийКонтрагентов = Новый Массив();
	МассивЗначенийКонтрагентов.Добавить(ПредопределенноеЗначение("Справочник.Контрагенты.РозничныйПокупатель"));
	МассивЗначенийКонтрагентов.Добавить(ПредопределенноеЗначение("Справочник.Партнеры.РозничныйПокупатель"));
	
	Возврат МассивЗначенийКонтрагентов;
	
КонецФункции
