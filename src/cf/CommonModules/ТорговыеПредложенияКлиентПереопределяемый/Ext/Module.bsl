
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Торговые предложения".
// ОбщийМодуль.ТорговыеПредложенияКлиентПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обработка переопределяемой команды формы.
//
// Параметры:
//  Форма	 - УправляемаяФорма - форма из которой производится обработка команды.
//  Команда	 - КомандаФормы - описание команды формы.
//
Процедура ОбработатьКомандуФормы(Форма, Команда) Экспорт
	
	Если СтрНайти(Команда.Имя, "ВставкаИзБуфера") Тогда
		
		// Вставка из буфера.
		КоличествоТоваровДоВставки = Форма.Список.Количество();

		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("УникальныйИдентификатор", Форма.УникальныйИдентификатор);
		СписокТоваров = ТорговыеПредложенияВызовСервераУТ.ПолучитьСтрокиИзБуфераОбмена(ДополнительныеПараметры);
		
		Для каждого СтрокаТовара Из СписокТоваров Цикл
			ТекущаяСтрока = Форма.Список.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
		КонецЦикла;
		
		КоличествоВставленных = Форма.Список.Количество() - КоличествоТоваровДоВставки;

		ТекстСообщения = НСтр("ru='Из буфера обмена вставлено строк (%КоличествоВставленных%)'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоВставленных%", КоличествоВставленных);

		ТекстЗаголовка = НСтр("ru='Строки вставлены'");
		ПоказатьОповещениеПользователя(ТекстЗаголовка,, ТекстСообщения, БиблиотекаКартинок.Информация32);
		
	ИначеЕсли СтрНайти(Команда.Имя, "ПодобратьТовары") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("УникальныйИдентификатор", Форма.УникальныйИдентификатор);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ОткрытьФорму("Обработка.ПодборТоваровПоОтбору.Форма", ПараметрыФормы, Форма, Форма.УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

// Открытие формы отправки запросов цен поставщикам.
//
// Параметры:
//  ПараметрыОткрытия	 - Структура - параметры для открываемой формы
//    * УникальныйИдентификаторКорзины - УникальныйИдентификатор - ключ уникальности формы поиска товаров.
//    * АдресТоваровВХранилище - Строка - адрес хранилища значений таблицы товаров для поиска.
//    * Валюта - СправочникСсылка.Валюта - валюта поиска товаров.
//
Процедура ОткрытьФормуОтправкиЗапросовЦен(ПараметрыОткрытия) Экспорт
	
КонецПроцедуры

// Получение данных контекста для подсказки.
//
// Параметры:
//  Форма			 - УправляемаяФорма - форма прикладного объекта.
//  ДанныеКонтекста	 - Структура - свойства контекста, 
//                                 см.ТорговыеПредложенияКлиент.ДанныеКонтекстаДляПодсказки().
//
Процедура ПолучитьДанныеКонтекстаДляПодсказки(Знач Форма, ДанныеКонтекста) Экспорт
	
	Если Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаСписка"
		или Форма.ИмяФормы = "Документ.ЗаказКлиента.Форма.ФормаСпискаДокументов" Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаСписка"
		или Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаСпискаДокументов" Тогда 
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЗаказПоставщику.Форма.ФормаДокумента" Тогда 
		
		ДанныеКонтекста.Основание = Форма.Объект.Ссылка;
		ДанныеКонтекста.Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Форма.Объект.Организация);
		ДанныеКонтекста.РежимПокупателя = Истина;
		ДанныеКонтекста.РежимПоискаПоСписку = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаСписка"  Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Партнеры.Форма.ФормаСписка"
		или Форма.ИмяФормы = "Справочник.Партнеры.Форма.ФормаСпискаБезПолнотекстовогоПоиска" Тогда 
		
		Если Форма.СписокОтборПоТипуПартнера.Количество() Тогда 
			Если Форма.СписокОтборПоТипуПартнера.Получить(0).Значение = "Клиент" Тогда 
				ДанныеКонтекста.РежимПоставщика = Истина;
			ИначеЕсли Форма.СписокОтборПоТипуПартнера.Получить(0).Значение = "Поставщик" Тогда
				ДанныеКонтекста.РежимПокупателя = Истина;
			КонецЕсли;
		Иначе
			ДанныеКонтекста = Неопределено;
		КонецЕсли;
	ИначеЕсли Форма.ИмяФормы = "Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаТиповыхСоглашений"
		или Форма.ИмяФормы = "Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаИндивидуальныхСоглашений" Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;		
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ЖурналДокументовЗакупки.Форма.СписокДокументов"  Тогда
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ЖурналДокументовПродажи.Форма.СписокДокументов"  Тогда
		
		ДанныеКонтекста.РежимПоставщика = Истина;		
		
	ИначеЕсли Форма.ИмяФормы = "Обработка.ПрайсЛистПоставщика.Форма.Форма"  Тогда
		
		ДанныеКонтекста.РежимПокупателя = Истина;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда 
		
		ДанныеКонтекста.Основание = Форма.Объект.Ссылка;
		ДанныеКонтекста.РежимПокупателя = Истина;
		ДанныеКонтекста.РежимПоискаПоОтборам = Истина;
		
	Иначе
		
		ДанныеКонтекста = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейсУП

// Открывает форму поиска торговых предложений по списку товаров.
//
// Параметры:
//  ОписаниеКоманды - Структура - описание команды.
//
Функция ОткрытьПоискТоваровПоСписку(МассивСсылок, ПараметрыВыполнения) Экспорт
	
	ПараметрКоманды = Новый Массив();
	Если НЕ ПараметрыВыполнения.ОписаниеКоманды.МножественныйВыбор Тогда
		ПараметрКоманды.Добавить(МассивСсылок);
	Иначе
		ПараметрКоманды = МассивСсылок;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ПараметрыКоманды", ПараметрКоманды);
	
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПоТоварам",СтруктураРеквизитов);
	
КонецФункции

#КонецОбласти