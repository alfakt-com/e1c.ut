
#Область ПроцедурыИФункцииФормированияПакетов

///////////////////////////////////////////////////////////////////
//			ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЙ ПАКЕТОВ            //
/////////////////////////////////////////////////////////////////



// Процедура формирует пакеты данных, указанного типа
//
// Параметры:
//  ОбщиеНастройки	 - 	 Структура с общими настройками
//  ТипДанных		 - 	 Тип операции
Процедура ФормированиеПакетовДанных(пОбщиеНастройки, ТипДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	//#Область ФормированиеПакетовКонтрагентов	
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Компания тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки компаний.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Компании, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных компаний завершено.");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Контакт тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки контактов.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Контакты, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных контактов завершено");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Реквизит тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки реквизитов клиентов.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Реквизиты, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных реквизитов клиентов завершено");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ФактАдресРеквизита тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки фактических адресов реквизитов клиентов.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Адреса, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных фактических адресов реквизитов клиентов завершено");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЮрАдресРеквизита тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки юридических адресов реквизитов клиентов.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Адреса, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных юридических адресов реквизитов клиентов завершено");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.БанковскийСчетРеквизита тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки банковских счетов реквизитов клиентов.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.БанкСчета, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных банковских счетов реквизитов клиентов завершено");
		//#КонецОбласти		
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки групп товаров.");
		
		ТаблицаОбъектовОбменаВыгрузки = ПолучитьТаблицуОбъектовОбменаВыгрузкиГруппТоваров(ОбщиеНастройки);
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных групп товаров завершено");
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваТовара тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки свойств товаров.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.СвойстваТоваров, ОбщиеНастройки.НастройкиСинхронизацииТоваров.НастройкиКомпоновкиДанныхТоваров);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		//Если ТаблицаОбъектовОбменаВыгрузки.Найти(ОбщиеНастройки.ПредопределенноеСвойствоВидаНоменклатуры, "Объект") = Неопределено Тогда
		//	НоваяСтрока 			= ТаблицаОбъектовОбменаВыгрузки.Добавить();
		//	НоваяСтрока.Объект 		= ОбщиеНастройки.ПредопределенноеСвойствоВидаНоменклатуры; 
		//	НоваяСтрока.ТипДанных 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара; 
		//КонецЕсли;
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных свойств товаров завершено");
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЕдиницаИзмерения тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки единиц измерения товаров.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.ЕдиницыИзмерения);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных единиц измерений товаров завершено");
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки товаров.");
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Товары, ОбщиеНастройки.НастройкиСинхронизацииТоваров.НастройкиКомпоновкиДанныхТоваров);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных товаров завершено");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Счет ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСчета тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки счетов. Вид данных:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Счета, ОбщиеНастройки.НастройкиСинхронизацииСчетов.НастройкиКомпоновкиДанныхСчетов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных счетов завершено. Вид данных:" + Строка(ТипДанных));
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Сделка ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСделки
		ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ТоварыСделки Тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для выгрузки сделок. Вид данных:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Сделки, ОбщиеНастройки.НастройкиСинхронизацииСделок.НастройкиКомпоновкиДанныхСделок);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных сделок завершено. Вид данных:" + Строка(ТипДанных));
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКомпании ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКонтакта 
		ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСчета ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСделки 
		ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКомпании ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКонтакта 
		ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСчета ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки тогда 
		
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для объектов с типом:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.ПользовательскиеПоля);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных для объектов с типом:" + Строка(ТипДанных) + " завершено");
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоЗаказа ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваЗаказа тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для объектов с типом:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.СвойстваЗаказов);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных для объектов с типом:" + Строка(ТипДанных) + " завершено");
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Заказ ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ТоварыЗаказа ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.УказанныеСвойстваЗаказа тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для объектов с типом:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Заказы);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных для объектов с типом:" + Строка(ТипДанных) + " завершено");
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Оплата тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для объектов с типом:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Оплаты);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных для объектов с типом:" + Строка(ТипДанных) + " завершено");
		
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Отгрузка тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Начало формирования пакетов данных для объектов с типом:" + Строка(ТипДанных));
		
		Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Отгрузки);
		
		ТаблицаОбъектовОбменаВыгрузки = Запрос.Выполнить().Выгрузить();
		
		ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Формирование пакетов данных для объектов с типом:" + Строка(ТипДанных) + " завершено");
		
	КонецЕсли;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	// чтобы лог не затерся.
	
КонецПроцедуры

// Процедура - загружает таблицы данных в регистр сведений, хранящий пакеты данных
//
// Параметры:
//  ОбщиеНастройки		 			- 	 Структура с общими настройками
//  ТаблицаОбъектовОбменаВыгрузки	- 	 Таблица значений с данными, которые нужно выгрузить на сайт 
//  ТипДанных		 				- 	 Тип данных выгружаемый на портал
Процедура ЗагрузкаТаблицыДанныхВРегистрПакетов(ОбщиеНастройки, ТаблицаОбъектовОбменаВыгрузки, ТипДанных)
	
	ТаблицаОбъектовОбменаВыгрузки.Колонки.Добавить("Пакет");
	
	РазбивкаТаблицыДанныхНаПакеты(ОбщиеНастройки, ТипДанных, ТаблицаОбъектовОбменаВыгрузки);
	
	НаборЗаписей = РегистрыСведений.Б24_ПакетыВыгрузки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НастройкаСинхронизации.Установить(ОбщиеНастройки.НастройкаСинхронизации);
	НаборЗаписей.Отбор.ТипДанных.Установить(ТипДанных);
	НаборЗаписей.Загрузить(ТаблицаОбъектовОбменаВыгрузки);
	НаборЗаписей.Записать();             
	
КонецПроцедуры

// Процедура - разбивает данные таблицы значений на пакеты данных
//
// Параметры:
//  ОбщиеНастройки		 - 	 Структура с общими настройками
//  Таблица				 - 	 Таблица данных с выгружаемыми данными 
//  Узел				 - 	 Узел настроек обмена 
//  Каталог				 - 	 Идентификатор каталога(инфоблока), в который будет произведена выгрузка данных 
Процедура РазбивкаТаблицыДанныхНаПакеты(ОбщиеНастройки, ТипДанных, Таблица)
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар И ОбщиеНастройки.НастройкиСинхронизацииТоваров.ВыгружатьКартинкиИФайлы тогда
		КоличествоДанныхВПакете = ОбщиеНастройки.КоличествоДанныхВПакете/5;	  //картинки медленно грузятся и могут отвалиться, поэтому пакеты делим на 5
	Иначе
		КоличествоДанныхВПакете = ОбщиеНастройки.КоличествоДанныхВПакете;	
	КонецЕсли;
	
	Итератор 	= 0;
	Пакет 		= 1;
	
	Для каждого ТекСтр из Таблица Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтр.Объект) тогда
			Продолжить;
		КонецЕсли;
		
		Итератор = Итератор + 1;
		
		Если Итератор > КоличествоДанныхВПакете тогда
			Пакет = Пакет + 1;
			Итератор = 1;
		КонецЕсли;
		
		ТекСтр.Пакет = Пакет;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуОбъектовОбменаВыгрузкиГруппТоваров(ОбщиеНастройки)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Объект");
	Результат.Колонки.Добавить("ТипДанных");
	Результат.Колонки.Добавить("НастройкаСинхронизации");
	
	Если Б24_СинхронизацияПовтИсп.ЕстьПользовательскоеДеревоГрупп(ОбщиеНастройки.НастройкаСинхронизации) тогда
		
		//Запрос = Новый Запрос;
		//Запрос.УстановитьПараметр("мТовары", ПолучитьИспользуемуюНоменклатуру());
		//Запрос.Текст = "ВЫБРАТЬ 
		//|	Номенклатура.Ссылка КАК Номенклатура
		//|ИЗ
		//|	Справочник.Номенклатура КАК Номенклатура
		//|ГДЕ
		//|	Номенклатура.Ссылка В(&мТовары)
		//|ИТОГИ ПО
		//|	Номенклатура ИЕРАРХИЯ";
		//
		//тзн = Запрос.Выполнить().Выгрузить();
		//тзн.Свернуть("Номенклатура");
		//МассивГрупп = тзн.ВыгрузитьКолонку("Номенклатура");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПолнаяВыгрузка"				, ОбщиеНастройки.ПолнаяВыгрузка);
		Запрос.УстановитьПараметр("ВремяЗаписиВМиллисекундах"	, ОбщиеНастройки.ВремяЗапускаВМиллисекундах);
		Запрос.УстановитьПараметр("ТипДанных"					, ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара);
		Запрос.УстановитьПараметр("НастройкаСинхронизации"		, ОбщиеНастройки.НастройкаСинхронизации);
		//Запрос.УстановитьПараметр("МассивГрупп",  МассивГрупп);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	Б24_ПользовательскиеГруппыТоваров.Ссылка КАК Группа
		|ИЗ
		|	Справочник.Б24_ПользовательскиеГруппыТоваров КАК Б24_ПользовательскиеГруппыТоваров
		|ГДЕ
		|	(ВЫБОР
		|				КОГДА &ПолнаяВыгрузка
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ Б24_ПользовательскиеГруппыТоваров.Ссылка В
		|						(ВЫБРАТЬ
		|							Б_ТаблицаИзменений.Объект
		|						ИЗ
		|							РегистрСведений.Б24_ТаблицаИзменений КАК Б_ТаблицаИзменений
		|						ГДЕ
		|							Б_ТаблицаИзменений.ТипДанных = &ТипДанных
		|							И Б_ТаблицаИзменений.НастройкаСинхронизации = &НастройкаСинхронизации
		|							И Б_ТаблицаИзменений.ВремяЗаписиВМиллисекундах <= &ВремяЗаписиВМиллисекундах)
		|			КОНЕЦ
		|			ИЛИ Б24_ПользовательскиеГруппыТоваров.Ссылка В
		|				(ВЫБРАТЬ
		|					Б24_ПакетыВыгрузки.Объект
		|				ИЗ
		|					РегистрСведений.Б24_ПакетыВыгрузки КАК Б24_ПакетыВыгрузки
		|				ГДЕ
		|					Б24_ПакетыВыгрузки.ТипДанных = &ТипДанных
		|					И Б24_ПакетыВыгрузки.НастройкаСинхронизации = &НастройкаСинхронизации))
		|	И Б24_ПользовательскиеГруппыТоваров.Ссылка В ИЕРАРХИИ(&ДеревоГрупп)
		|ИТОГИ ПО
		|	Группа ТОЛЬКО ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("ДеревоГрупп", ОбщиеНастройки.ДеревоГрупп);	
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПолнаяВыгрузка"				, ОбщиеНастройки.ПолнаяВыгрузка);
		Запрос.УстановитьПараметр("ВремяЗаписиВМиллисекундах"	, ОбщиеНастройки.ВремяЗапускаВМиллисекундах);
		Запрос.УстановитьПараметр("ТипДанных"					, ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара);
		Запрос.УстановитьПараметр("НастройкаСинхронизации"		, ОбщиеНастройки.НастройкаСинхронизации);
		Запрос.УстановитьПараметр("МассивГрупп"					, Б24_СинхронизацияВызовСервера.ПолучитьИспользуемыеГруппыНоменклатуры(ОбщиеНастройки.НастройкаСинхронизации));
		
		Запрос.Текст = "ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Группа
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ЭтоГруппа
		|	И Номенклатура.Ссылка В(&МассивГрупп)
		|	И (ВЫБОР
		|				КОГДА &ПолнаяВыгрузка
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ Номенклатура.Ссылка В
		|						(ВЫБРАТЬ
		|							Б_ТаблицаИзменений.Объект
		|						ИЗ
		|							РегистрСведений.Б24_ТаблицаИзменений КАК Б_ТаблицаИзменений
		|						ГДЕ
		|							Б_ТаблицаИзменений.ТипДанных = &ТипДанных
		|							И Б_ТаблицаИзменений.НастройкаСинхронизации = &НастройкаСинхронизации
		|							И Б_ТаблицаИзменений.ВремяЗаписиВМиллисекундах <= &ВремяЗаписиВМиллисекундах)
		|			КОНЕЦ
		|			ИЛИ Номенклатура.Ссылка В
		|				(ВЫБРАТЬ
		|					Б24_ПакетыВыгрузки.Объект
		|				ИЗ
		|					РегистрСведений.Б24_ПакетыВыгрузки КАК Б24_ПакетыВыгрузки
		|				ГДЕ
		|					Б24_ПакетыВыгрузки.ТипДанных = &ТипДанных
		|					И Б24_ПакетыВыгрузки.НастройкаСинхронизации = &НастройкаСинхронизации))
		|ИТОГИ ПО
		|	Группа ТОЛЬКО ИЕРАРХИЯ";
		
	КонецЕсли;
	
	тзн = Запрос.Выполнить().Выгрузить();
	тзн.Свернуть("Группа");
	
	Для каждого ТекСтрока из тзн Цикл
		
		Если ЗначениеЗаполнено(ТекСтрока.Группа) И ТекСтрока.Группа <> ОбщиеНастройки.ДеревоГрупп тогда
			НовСтрока = Результат.Добавить();
			НовСтрока.Объект	= ТекСтрока.Группа;
			НовСтрока.ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара;
			НовСтрока.НастройкаСинхронизации = ОбщиеНастройки.НастройкаСинхронизации;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;	
	
КонецФункции

// Функция - возвращает Запрос для выгрузки пакетов данных
//
// Параметры:
//  ОбщиеНастройки		 					- 	 Структура с общими настройками
//  ТипДанных								 - 	 Признак, для каких данных нужно формировать Запрос 
//  СхемаВыгрузки							 - 	 Схема компоновки данных выгрузки данных
//  НастройкиКомпоновщикаИзНастройкиОбмена	 - 	 Настройки отборов компоновки данных
// Возвращаемое значение:
//  Запрос для получения пакетов данных  
Функция ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, СхемаВыгрузки, НастройкиКомпоновщикаИзНастройкиОбмена = Неопределено) Экспорт
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаВыгрузки)); 
	Если ЗначениеЗаполнено(НастройкиКомпоновщикаИзНастройкиОбмена) Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновщикаИзНастройкиОбмена);
		КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаВыгрузки.НастройкиПоУмолчанию);
	КонецЕсли;
	
	Для Каждого ТекПараметрСКД из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		
		Если ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("НастройкаСинхронизации") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= ОбщиеНастройки.НастройкаСинхронизации; 	
		ИначеЕсли ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("ТипДанных") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= ТипДанных; 
		ИначеЕсли ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("ПолнаяВыгрузка") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= ОбщиеНастройки.ПолнаяВыгрузка; 	
		ИначеЕсли ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("ВремяЗапускаВМиллисекундах") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= ОбщиеНастройки.ВремяЗапускаВМиллисекундах; 	
		ИначеЕсли ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("мИсключения") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= Б24_СинхронизацияВызовСервера.ПолучитьНазванияИсключающихСвойств(); 	
		ИначеЕсли ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("Период") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= ТекущаяДата(); 	
		ИначеЕсли ТекПараметрСКД.Параметр = Новый ПараметрКомпоновкиДанных("Портал") тогда
			ТекПараметрСКД.Использование 	= Истина;
			ТекПараметрСКД.Значение 		= ОбщиеНастройки.Портал; 	
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Компания ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Контакт Тогда
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("спкКомпаний");
		Если НайденныйПараметрСКД <> Неопределено тогда
			
			СпкПараметр = новый СписокЗначений;
			СпкПараметр.ЗагрузитьЗначения(ОбщиеНастройки.ТипыКонтрагентовДляКомпаний);
			
			НайденныйПараметрСКД.Значение 		= СпкПараметр;
			НайденныйПараметрСКД.Использование 	= Истина;
		КонецЕсли;
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("спкКонтактов");
		Если НайденныйПараметрСКД <> Неопределено тогда
			
			СпкПараметр = новый СписокЗначений;
			СпкПараметр.ЗагрузитьЗначения(ОбщиеНастройки.ТипыКонтрагентовДляКонтактов);
			
			НайденныйПараметрСКД.Значение 		= СпкПараметр;
			НайденныйПараметрСКД.Использование 	= Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара Тогда
		
		Склад 	= Неопределено;
		ТипЦены = Неопределено;
		
		ОбщиеНастройки.НастройкиСинхронизацииТоваров.Свойство("Склад"	, Склад);
		ОбщиеНастройки.НастройкиСинхронизацииТоваров.Свойство("ТипЦены"	, ТипЦены);
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Склад");
		Если НайденныйПараметрСКД <> Неопределено тогда
			НайденныйПараметрСКД.Значение 		= Склад;
			НайденныйПараметрСКД.Использование 	= Истина;
		КонецЕсли;
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ТипЦен");
		Если НайденныйПараметрСКД <> Неопределено тогда
			НайденныйПараметрСКД.Значение 		= ТипЦены;
			НайденныйПараметрСКД.Использование 	= Истина;
		КонецЕсли;
		
		Если Б24_СинхронизацияПовтИсп.ЕстьПользовательскоеДеревоГрупп(ОбщиеНастройки.НастройкаСинхронизации) Тогда
			УстановкаОтбораПоДеревуГрупп(ОбщиеНастройки, КомпоновщикНастроек);   		
		КонецЕсли;
	КонецЕсли;
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Счет ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСчета Тогда
		
		ДатаНачалаВыгрузкиСчетов = Неопределено;
		ОбщиеНастройки.НастройкиСинхронизацииСчетов.Свойство("ДатаНачалаВыгрузкиСчетов", ДатаНачалаВыгрузкиСчетов);
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачалаВыгрузкиСчетов");
		Если НайденныйПараметрСКД <> Неопределено тогда
			НайденныйПараметрСКД.Значение 		= ДатаНачалаВыгрузкиСчетов;
			НайденныйПараметрСКД.Использование 	= Истина;
		КонецЕсли;
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Сделка ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСделки 
		ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ТоварыСделки Тогда
		
		ДатаНачалаВыгрузкиСделок = Неопределено;
		ОбщиеНастройки.НастройкиСинхронизацииСделок.Свойство("ДатаНачалаВыгрузкиСделок", ДатаНачалаВыгрузкиСделок);
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачалаВыгрузкиСделок");
		Если НайденныйПараметрСКД <> Неопределено тогда
			НайденныйПараметрСКД.Значение 		= ДатаНачалаВыгрузкиСделок;
			НайденныйПараметрСКД.Использование 	= Истина;
		КонецЕсли;
		
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Заказ ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ТоварыЗаказа
		ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Оплата ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Отгрузка	Тогда
		                                                                      
		ДатаНачалаВыгрузкиЗаказов = Неопределено;                  		
		ОбщиеНастройки.НастройкиСинхронизацииЗаказов.Свойство("ДатаНачалаВыгрузкиЗаказов", ДатаНачалаВыгрузкиЗаказов);
		
		НайденныйПараметрСКД = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ДатаНачалаВыгрузкиЗаказов");
		Если НайденныйПараметрСКД <> Неопределено тогда
			НайденныйПараметрСКД.Значение 		= ДатаНачалаВыгрузкиЗаказов;
			НайденныйПараметрСКД.Использование 	= Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	
	//МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаВыгрузки, КомпоновщикНастроек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаВыгрузки, КомпоновщикНастроек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанных"));
	Запрос.Текст = МакетКомпоновкиДанных.НаборыДанных.ОсновнойНаборДанных.Запрос;
	
	Для каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
		Запрос.Параметры.Вставить(Параметр.Имя, Параметр.Значение);
	КонецЦикла;
	
	Возврат Запрос; 	
	
КонецФункции

Процедура УстановкаОтбораПоДеревуГрупп(ОбщиеНастройки, КомпоновщикНастроек)
	
	СписокНоменклатурыДереваГрупп  = Новый СписокЗначений;
	
	ОтборПоДеревуГрупп 	= "ПрограммныйОтборПоДеревуГрупп";
	Отбор 				= КомпоновщикНастроек.Настройки.Отбор;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Б24_ПользовательскиеГруппыТоваров.Номенклатура
	|ИЗ
	|	Справочник.Б24_ПользовательскиеГруппыТоваров.Товары КАК Б24_ПользовательскиеГруппыТоваров
	|ГДЕ
	|	Б24_ПользовательскиеГруппыТоваров.Ссылка В ИЕРАРХИИ (&ДеревоГрупп)";
	
	Запрос.УстановитьПараметр("ДеревоГрупп", ОбщиеНастройки.ДеревоГрупп);
	
	тзнТоваров = Запрос.Выполнить().Выгрузить();
	СписокНоменклатурыДереваГрупп.ЗагрузитьЗначения(тзнТоваров.ВыгрузитьКолонку("Номенклатура"));
	
	Если СписокНоменклатурыДереваГрупп.Количество() > 0 Тогда
		
		НовыйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовыйЭлемент.ИдентификаторПользовательскойНастройки = ОтборПоДеревуГрупп;
		НовыйЭлемент.ЛевоеЗначение 	=  Новый ПолеКомпоновкиДанных("Номенклатура");
		НовыйЭлемент.ВидСравнения 	= ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
		НовыйЭлемент.ПравоеЗначение = СписокНоменклатурыДереваГрупп;
		НовыйЭлемент.Использование 	= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьНеиспользуемыеРегистрации() Экспорт
	
	МассивВыгружаемыхВРежимеРеальногоВремени = Б24_СинхронизацияПовтИсп.ПолучитьМассивНастроекОВыгружаемыхДанных(Истина);
	
	Для каждого ИнформацияОНастройкеСинхронизации ИЗ МассивВыгружаемыхВРежимеРеальногоВремени Цикл
	
		ТипыДанныхДляОбменаСПорталом = Б24_СинхронизацияПовтИсп.ПолучитьТипыДанныхДляОбменаСПорталом();	
	
		ОбщиеНастройки = Б24_СинхронизацияКлиентСервер.СформироватьНастройкиСинхронизации(ИнформацияОНастройкеСинхронизации.НастройкаСинхронизации, Ложь, 0);
		
		Если ОбщиеНастройки = Неопределено тогда
			Возврат;
		КонецЕсли;
		
		Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);		
		
		Для Каждого ТипДанныхДляОбменаСПорталом ИЗ ТипыДанныхДляОбменаСПорталом  Цикл	
				 
			ТипДанных = ТипДанныхДляОбменаСПорталом.Значение;	
	        ПринудительноУдалить = Ложь;
			Запрос = Неопределено;
	
			Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Компания тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Компании, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);				
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Контакт тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Контакты, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Реквизит тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Реквизиты, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ФактАдресРеквизита тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Адреса, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЮрАдресРеквизита тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Адреса, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.БанковскийСчетРеквизита тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.БанкСчета, ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.НастройкиКомпоновкиДанныхКонтрагентов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваТовара тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьТовары;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.СвойстваТоваров, ОбщиеНастройки.НастройкиСинхронизацииТоваров.НастройкиКомпоновкиДанныхТоваров);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЕдиницаИзмерения тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьТовары;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.ЕдиницыИзмерения);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьТовары;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Товары, ОбщиеНастройки.НастройкиСинхронизацииТоваров.НастройкиКомпоновкиДанныхТоваров);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Счет ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСчета тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьСчета;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Счета, ОбщиеНастройки.НастройкиСинхронизацииСчетов.НастройкиКомпоновкиДанныхСчетов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Сделка ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСделки
				ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ТоварыСделки Тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьСделки;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Сделки, ОбщиеНастройки.НастройкиСинхронизацииСделок.НастройкиКомпоновкиДанныхСделок);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКомпании ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКонтакта 
				ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКомпании ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКонтакта тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьКонтрагентов ИЛИ Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииКонтрагентов(ИнформацияОНастройкеСинхронизации.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляКомпанийИКонтактов") = ЛОЖЬ;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.ПользовательскиеПоля);		
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСчета ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСчета тогда	
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьСчета ИЛИ Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииСчетов(ИнформацияОНастройкеСинхронизации.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляСчетов") = ЛОЖЬ;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.ПользовательскиеПоля);		
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСделки ИЛИ ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки	тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьСделки ИЛИ Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииСделок(ИнформацияОНастройкеСинхронизации.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляСделок") = ЛОЖЬ;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.ПользовательскиеПоля);		
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Заказ тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьЗаказы;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Заказы, ОбщиеНастройки.НастройкиСинхронизацииЗаказов.НастройкиКомпоновкиДанныхЗаказов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Отгрузка тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьОтгрузки;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Отгрузки);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Оплата тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьОплаты;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.Оплаты);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоЗаказа тогда
				ПринудительноУдалить = НЕ ИнформацияОНастройкеСинхронизации.ВыгружатьЗаказы;
				Запрос = ПолучитьЗапросДляВыгрузкиДанных(ОбщиеНастройки, ТипДанных, ОбщиеНастройки.СтруктураСхемКомпоновки.СвойстваЗаказов);
			ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара тогда 
				Запрос = Истина;	//для проверки в дальнейшем
			КонецЕсли;			
		
			Если Запрос = Неопределено тогда
				Продолжить;
			КонецЕсли;
			
			Если Запрос = Истина тогда
				ТаблицаОбъектов = ПолучитьТаблицуОбъектовОбменаВыгрузкиГруппТоваров(ОбщиеНастройки);
			Иначе
				ТаблицаОбъектов = Запрос.Выполнить().Выгрузить();
			КонецЕсли;	
				
			ВыборкаЗаписей =  РегистрыСведений.Б24_ТаблицаИзменений.Выбрать(Новый Структура("ТипДанных", ТипДанных));
				
			Пока ВыборкаЗаписей.Следующий() Цикл
				
				Если ВыборкаЗаписей.НастройкаСинхронизации = ИнформацияОНастройкеСинхронизации.НастройкаСинхронизации тогда
					
					Если ПринудительноУдалить тогда
						ВыборкаЗаписей.ПолучитьМенеджерЗаписи().Удалить();					
					Иначе
						Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар тогда
				
							Если ТаблицаОбъектов.Найти(ВыборкаЗаписей.Объект, "Объект") = Неопределено И ТаблицаОбъектов.Найти(ВыборкаЗаписей.ПодчиненныйОбъект, "ПодчиненныйОбъект" ) = Неопределено тогда
								ВыборкаЗаписей.ПолучитьМенеджерЗаписи().Удалить();					
							КонецЕсли;
						Иначе						
							Если ТаблицаОбъектов.Найти(ВыборкаЗаписей.Объект, "Объект") = Неопределено тогда
								ВыборкаЗаписей.ПолучитьМенеджерЗаписи().Удалить();					
							КонецЕсли;						
						КонецЕсли;					
					КонецЕсли;					
				КонецЕсли;			
			КонецЦикла;			
		КонецЦикла;	
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти


#Область ОбщиеПроцедурыИФункцииОбмена

///////////////////////////////////////////////////////////////////
//			       ПРОЦЕДУРЫ И ФУНКЦИИ ОБМЕНА                   //
/////////////////////////////////////////////////////////////////


// Функция - возвращает массив данных пакета по заданным критериям
//
// Параметры:
//  ОбщиеНастройки	 - 	Структура с общими настройками  
//  ТипДанных		 - 	Тип операции     
//  Пакет		 	- 	Пакет данных     
//  ЭтоДозагрузка	 - 	Если истина, то сначало выполянется дозагрузка неотправленных данных     
// Возвращаемое значение:
//   Таблица значений с данными пакетов 
Функция ПолучитьПакетИзРегистраПакетов(ОбщиеНастройки, ТипДанных, Пакет) Экспорт
	
	Запрос = Новый Запрос;    	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ПакетыВыгрузки.Объект КАК Объект,
	|	Б24_ПакетыВыгрузки.ПодчиненныйОбъект КАК ПодчиненныйОбъект
	|ИЗ
	|	РегистрСведений.Б24_ПакетыВыгрузки КАК Б24_ПакетыВыгрузки
	|ГДЕ
	|	Б24_ПакетыВыгрузки.ТипДанных = &ТипДанных
	|	И Б24_ПакетыВыгрузки.Пакет = &Пакет
	|	И Б24_ПакетыВыгрузки.НастройкаСинхронизации = &НастройкаСинхронизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Б24_ПакетыВыгрузки.Пакет";
	Запрос.УстановитьПараметр("ТипДанных", ТипДанных);
	Запрос.УстановитьПараметр("Пакет", Пакет);
	Запрос.УстановитьПараметр("НастройкаСинхронизации", ОбщиеНастройки.НастройкаСинхронизации);
	
	тзнДанных = Запрос.Выполнить().Выгрузить();
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар тогда
		мДанных = Б24_ОбщегоНазначенияСервер.ПреобразоватьТаблицуВМассив(ТзнДанных);	
	Иначе
		мДанных = тзнДанных.ВыгрузитьКолонку("Объект");
	КонецЕсли;
	
	Возврат мДанных; 	
	
КонецФункции

Процедура УдалениеРегистрацииПоТипуДанных(ОбщиеНастройки, ТипДанных, МассивДанных) Экспорт
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар тогда
		
		Для Каждого ТекСтрока из МассивДанных Цикл
			
			Выборка = РегистрыСведений.Б24_ТаблицаИзменений.Выбрать(Новый Структура("ТипДанных", ТипДанных));
			Пока Выборка.Следующий() Цикл
				
				Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") = Истина тогда
					Если Выборка.НастройкаСинхронизации = ОбщиеНастройки.НастройкаСинхронизации И ((Выборка.Объект = ТекСтрока.Объект ИЛИ НЕ ЗначениеЗаполнено(Выборка.Объект)) И Выборка.ПодчиненныйОбъект = ТекСтрока.ПодчиненныйОбъект) тогда
						Выборка.ПолучитьМенеджерЗаписи().Удалить();
						Прервать;	
					КонецЕсли;
				Иначе
					Если Выборка.НастройкаСинхронизации = ОбщиеНастройки.НастройкаСинхронизации И (Выборка.Объект = ТекСтрока.Объект ИЛИ НЕ ЗначениеЗаполнено(Выборка.Объект)) тогда
						Выборка.ПолучитьМенеджерЗаписи().Удалить();
						Прервать;	
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТипДанных", ТипДанных);
		Запрос.УстановитьПараметр("мОбъекты" , МассивДанных);
		Запрос.УстановитьПараметр("НастройкаСинхронизации", ОбщиеНастройки.НастройкаСинхронизации);
		Запрос.Текст = "ВЫБРАТЬ
		|	Б24_ТаблицаИзменений.Объект КАК Объект,
		|	Б24_ТаблицаИзменений.ТипДанных КАК ТипДанных,
		|	Б24_ТаблицаИзменений.ПодчиненныйОбъект КАК ПодчиненныйОбъект,
		|	Б24_ТаблицаИзменений.НастройкаСинхронизации КАК НастройкаСинхронизации
		|ИЗ
		|	РегистрСведений.Б24_ТаблицаИзменений КАК Б24_ТаблицаИзменений
		|ГДЕ
		|	Б24_ТаблицаИзменений.ТипДанных = &ТипДанных
		|	И Б24_ТаблицаИзменений.Объект В(&мОбъекты)
		|	И Б24_ТаблицаИзменений.НастройкаСинхронизации = &НастройкаСинхронизации";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.Б24_ТаблицаИзменений.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Прочитать();
			Запись.Удалить();
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьКоличествоВыгружаемыхПакетов(ОбщиеНастройки, ТипДанных) Экспорт
	
	Результат = 0;
	
	Запрос = Новый Запрос;    	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Б24_ПакетыВыгрузки.Пакет КАК Пакет
	|ИЗ
	|	РегистрСведений.Б24_ПакетыВыгрузки КАК Б24_ПакетыВыгрузки
	|ГДЕ
	|	Б24_ПакетыВыгрузки.ТипДанных = &ТипДанных
	|	И Б24_ПакетыВыгрузки.НастройкаСинхронизации = &НастройкаСинхронизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пакет УБЫВ";
	Запрос.УстановитьПараметр("ТипДанных", ТипДанных);
	Запрос.УстановитьПараметр("НастройкаСинхронизации", ОбщиеНастройки.НастройкаСинхронизации);
	
	ВыполненныйЗапрос = Запрос.Выполнить();
	
	Если НЕ ВыполненныйЗапрос.Пустой() тогда
		тзнДанных = ВыполненныйЗапрос.Выгрузить();	
		Результат = тзнДанных[0].Пакет;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Успешно,  ТипДанных, Пакет, Данные) Экспорт
	
	Если Успешно тогда
		НаборЗаписей = РегистрыСведений.Б24_ПакетыВыгрузки.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Пакет.Установить(Пакет);
		НаборЗаписей.Отбор.НастройкаСинхронизации.Установить(ОбщиеНастройки.НастройкаСинхронизации);
		Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.Товар тогда
			НаборЗаписей.Отбор.Объект.Установить(Данные.Объект);
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") = Истина тогда
				НаборЗаписей.Отбор.ПодчиненныйОбъект.Установить(Данные.ПодчиненныйОбъект);
			КонецЕсли;
			
		Иначе
			НаборЗаписей.Отбор.Объект.Установить(Данные);
		КонецЕсли;
		НаборЗаписей.Отбор.ТипДанных.Установить(ТипДанных);
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнениеТелефонаИПочтыДляКонтрагента(ОбщиеНастройки, Контрагент, МенеджерВременныхТаблиц, СтруктураИспВидовКИ, ТелоЗапроса)
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Объект", Контрагент);
	Запрос.Текст = "ВЫБРАТЬ
	|	ВремТелефоны.Представление КАК Представление,
	|	ВремТелефоны.Вид КАК Вид
	|ИЗ
	|	ВремТелефоны КАК ВремТелефоны
	|ГДЕ
	|	ВремТелефоны.Объект = &Объект";
	
	ВыборкаТелефонов = Запрос.Выполнить().Выбрать();	
	
	Счетчик = 0;
	Пока ВыборкаТелефонов.Следующий() Цикл       
		
		ТипТелефона = "";
		Если ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонРабочий ИЛИ ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонРабочийОрг ИЛИ ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонРабочийКонЛица тогда
			ТипТелефона = "WORK";
		ИначеЕсли ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонМобильный ИЛИ ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонМобильныйОрг ИЛИ ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонРабочийКонЛица тогда
			ТипТелефона = "MOBILE";
		ИначеЕсли ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонДомашний ИЛИ ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонДомашнийОрг ИЛИ ВыборкаТелефонов.Вид = СтруктураИспВидовКИ.ТелефонРабочийКонЛица тогда
			ТипТелефона = "HOME";
		Иначе
			Продолжить;
		КонецЕсли;
		
		ЕстьЗапятые 		= Ложь;
		ЕстьТочкаЗапятые 	= Ложь;
		МассивКонтактов 	= Новый Массив;
		
		Если СтрНайти(ВыборкаТелефонов.Представление, ",") > 0 тогда
			ЕстьЗапятые = Истина;
			МассивКонтактов = СтрРазделить(ВыборкаТелефонов.Представление, ",")
		КонецЕсли;
		
		Если СтрНайти(ВыборкаТелефонов.Представление, ";") > 0 тогда
			ЕстьТочкаЗапятые = Истина;
			МассивКонтактов = СтрРазделить(ВыборкаТелефонов.Представление, ";")
		КонецЕсли;
		
		Если НЕ ЕстьТочкаЗапятые И НЕ ЕстьЗапятые тогда
			МассивКонтактов.Добавить(ВыборкаТелефонов.Представление);	
		КонецЕсли;
		
		Для Каждого ТекКонтакт из МассивКонтактов Цикл 
			ТелоЗапроса = ТелоЗапроса + "&fields[PHONE]["+Строка(Счетчик)+"][VALUE]="+Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(СокрЛП(ТекКонтакт))+"&fields[PHONE]["+Строка(Счетчик)+"][VALUE_TYPE]=" + ТипТелефона; 
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Объект", Контрагент);
	Запрос.Текст = "ВЫБРАТЬ
	|	ВремПочта.Представление КАК Представление,
	|	ВремПочта.Вид КАК Вид
	|ИЗ
	|	ВремПочта КАК ВремПочта
	|ГДЕ
	|	ВремПочта.Объект = &Объект";
	
	ВыборкаПочт = Запрос.Выполнить().Выбрать();	
	
	Счетчик = 0;
	Пока ВыборкаПочт.Следующий() Цикл
		
		ТипПочты = "";
		Если ВыборкаПочт.Вид = СтруктураИспВидовКИ.ПочтаРабочий ИЛИ ВыборкаПочт.Вид = СтруктураИспВидовКИ.ПочтаРабочийОрг ИЛИ ВыборкаПочт.Вид = СтруктураИспВидовКИ.ПочтаРабочийКонЛица тогда
			ТипПочты = "WORK";
		ИначеЕсли ВыборкаПочт.Вид = СтруктураИспВидовКИ.ПочтаЧастная ИЛИ ВыборкаПочт.Вид = СтруктураИспВидовКИ.ПочтаЧастнаяОрг ИЛИ ВыборкаПочт.Вид = СтруктураИспВидовКИ.ПочтаРабочийКонЛица тогда
			ТипПочты = "HOME";
		Иначе
			Продолжить;                                                                          
		КонецЕсли;
		
		ЕстьЗапятые 		= Ложь;
		ЕстьТочкаЗапятые 	= Ложь;
		МассивКонтактов 	= Новый Массив;
		
		Если СтрНайти(ВыборкаПочт.Представление, ",") > 0 тогда
			ЕстьЗапятые = Истина;
			МассивКонтактов = СтрРазделить(ВыборкаПочт.Представление, ",")
		КонецЕсли;
		
		Если СтрНайти(ВыборкаПочт.Представление, ";") > 0 тогда
			ЕстьТочкаЗапятые = Истина;
			МассивКонтактов = СтрРазделить(ВыборкаПочт.Представление, ";")
		КонецЕсли;
		
		Если НЕ ЕстьТочкаЗапятые И НЕ ЕстьЗапятые тогда
			МассивКонтактов.Добавить(ВыборкаПочт.Представление);	
		КонецЕсли;
		
		Для Каждого ТекКонтакт из МассивКонтактов Цикл 
			ТелоЗапроса = ТелоЗапроса + "&fields[EMAIL]["+Строка(Счетчик)+"][VALUE]="+Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(СокрЛП(ТекКонтакт))+"&fields[EMAIL]["+Строка(Счетчик)+"][VALUE_TYPE]=" + ТипПочты; 
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Функция СформироватьДанныеПоКомпаниям(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	
#Область ФормированиеВременныхТаблицДанных
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивДанных", МассивДанных);
	Запрос.УстановитьПараметр("ТипТелефона"	, Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("ТипПочты"	, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ТипДанных"	, ОбщиеНастройки.ТипыОбъектовОбмена.Компания);
	Запрос.УстановитьПараметр("Портал"		, ОбщиеНастройки.Портал);	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.Ссылка КАК Объект,
	|	ПартнерыКонтактнаяИнформация.Представление КАК Представление,
	|	ПартнерыКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	|	ПартнерыКонтактнаяИнформация.НомерТелефонаБезКодов КАК НомерТелефонаБезКодов,
	|	ПартнерыКонтактнаяИнформация.Вид КАК Вид
	|ПОМЕСТИТЬ ВремТелефоны
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Тип = &ТипТелефона
	|	И ПартнерыКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Ссылка,
	|	ОрганизацииКонтактнаяИнформация.Представление,
	|	ОрганизацииКонтактнаяИнформация.НомерТелефона,
	|	ОрганизацииКонтактнаяИнформация.НомерТелефонаБезКодов,
	|	ОрганизацииКонтактнаяИнформация.Вид
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Тип = &ТипТелефона
	|	И ОрганизацииКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.Ссылка КАК Объект,
	|	ПартнерыКонтактнаяИнформация.Представление КАК Представление,
	|	ПартнерыКонтактнаяИнформация.АдресЭП КАК АдресЭП,
	|	ПартнерыКонтактнаяИнформация.Вид КАК Вид
	|ПОМЕСТИТЬ ВремПочта
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Тип = &ТипПочты
	|	И ПартнерыКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Ссылка,
	|	ОрганизацииКонтактнаяИнформация.Представление,
	|	ОрганизацииКонтактнаяИнформация.АдресЭП,
	|	ОрганизацииКонтактнаяИнформация.Вид
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Тип = &ТипПочты
	|	И ОрганизацииКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партнеры.Ссылка КАК Ссылка,
	|	Партнеры.ПометкаУдаления КАК ПометкаУдаления,
	|	Партнеры.Наименование КАК Наименование,
	|	Партнеры.НаименованиеПолное КАК НаименованиеПолное,
	|	Партнеры.Комментарий КАК Комментарий,
	|	Партнеры.ОсновнойМенеджер КАК Ответственный,
	|	""N"" КАК ЭтоОрганизация
	|ПОМЕСТИТЬ ВремКомпании
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	Организации.ПометкаУдаления,
	|	Организации.Наименование,
	|	Организации.НаименованиеПолное,
	|	"""",
	|	"""",
	|	""Y""
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВремКомпании.Ссылка КАК Объект,
	|	ВремКомпании.Ссылка КАК Идентификатор1С,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремКомпании.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремКомпании.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(ВремКомпании.НаименованиеПолное КАК СТРОКА(100)) КАК НаименованиеПолное,
	|	""CUSTOMER"" КАК ТипОбъекта,
	|	ВЫРАЗИТЬ(ВремКомпании.Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|	ВремКомпании.Ответственный КАК Ответственный,
	|	ВремКомпании.ЭтоОрганизация КАК ЭтоОрганизация
	|ИЗ
	|	ВремКомпании КАК ВремКомпании
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремКомпании.Ссылка = ВремИдентификаторыОбъектов.Объект";
#КонецОбласти
	
	Если  Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииКонтрагентов(ОбщиеНастройки.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляКомпанийИКонтактов") = Истина тогда
		ДобавитьКЗапросуОбъектовДанныеОПользовательскихПолях(ОбщиеНастройки, Запрос, "Справочник.Партнеры", ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКомпании, ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКомпании);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураИспВидовКИ = Б24_СинхронизацияПовтИсп.ПолучитьСтруктуруВидовКИКонтрагентов();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхКомпании(ОбщиеНастройки, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24), МенеджерВременныхТаблиц, СтруктураИспВидовКИ);
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	// чтобы лог не затерся.
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхКомпании(ОбщиеНастройки, ИнформацияОКомпании, ЭтоНовыйЭлемент, МенеджерВременныхТаблиц, СтруктураИспВидовКИ)
	
	ПреффиксыВнешнихКодов1С = Б24_СинхронизацияПовтИсп.ПолучитьПреффиксыВнешнихКодов1С();
	
	Идентификатор1С = XMLСтрока(ИнформацияОКомпании.Идентификатор1С);
	Идентификатор1С = ?(ИнформацияОКомпании.ЭтоОрганизация = "Y", ПреффиксыВнешнихКодов1С.Организации + Идентификатор1С, Идентификатор1С); 
	
	Поля = Новый Структура;
	
	Поля.Вставить("TITLE"			, ИнформацияОКомпании.Наименование); 
	Поля.Вставить("COMPANY_TYPE"	, ИнформацияОКомпании.ТипОбъекта); 
	Поля.Вставить("COMMENTS"		, ИнформацияОКомпании.Комментарий); 
	Поля.Вставить("ORIGIN_ID"		, Идентификатор1С); 
	Поля.Вставить("ORIGINATOR_ID"	, "ONE_C"); 
	Поля.Вставить("IS_MY_COMPANY"	, ИнформацияОКомпании.ЭтоОрганизация); 
	
	Если ЗначениеЗаполнено(ИнформацияОКомпании.Ответственный) тогда
		НайденнаяСтрока = ОбщиеНастройки.ТаблицаСопоставленияПользователей.Найти(ИнформацияОКомпании.Ответственный);
		Если НайденнаяСтрока<> Неопределено тогда
			Поля.Вставить("ASSIGNED_BY_ID", НайденнаяСтрока.ИдПользователя); 
		КонецЕсли;
	КонецЕсли;
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;                                                                     
	
	ЗаполнениеТелефонаИПочтыДляКонтрагента(ОбщиеНастройки, ИнформацияОКомпании.Объект, МенеджерВременныхТаблиц, СтруктураИспВидовКИ, ТелоЗапроса);
	
	Если Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииКонтрагентов(ОбщиеНастройки.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляКомпанийИКонтактов") = Истина тогда	
		ПараметрыПользовательскихПолей = "";
		ЗаполнитьЗначенияПользовательскихПолей(ОбщиеНастройки, МенеджерВременныхТаблиц, ИнформацияОКомпании.Объект, ПараметрыПользовательскихПолей);	
		ТелоЗапроса = ТелоЗапроса + ПараметрыПользовательскихПолей; 
	КонецЕсли;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.company.add?"  + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.company.update?id=" + ИнформацияОКомпании.ИдентификаторБ24 + "&" + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоКонтактам(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	
#Область ФормированиеВременныхТаблицДанных
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивДанных"	 , МассивДанных);
	Запрос.УстановитьПараметр("ТипТелефона"		 , Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("ТипПочты"		 , Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ТипДанных"		 , ОбщиеНастройки.ТипыОбъектовОбмена.Контакт);
	Запрос.УстановитьПараметр("ТипДанныхКомпания", ОбщиеНастройки.ТипыОбъектовОбмена.Компания);
	Запрос.УстановитьПараметр("Портал"			 , ОбщиеНастройки.Портал);	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыКомпаний
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхКомпания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.Ссылка КАК Объект,
	|	ПартнерыКонтактнаяИнформация.Представление КАК Представление,
	|	ПартнерыКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	|	ПартнерыКонтактнаяИнформация.НомерТелефонаБезКодов КАК НомерТелефонаБезКодов,
	|	ПартнерыКонтактнаяИнформация.Вид КАК Вид
	|ПОМЕСТИТЬ ВремТелефоны
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Тип = &ТипТелефона
	|	И ПартнерыКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефонаБезКодов,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	|ГДЕ
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = &ТипТелефона
	|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартнерыКонтактнаяИнформация.Ссылка КАК Объект,
	|	ПартнерыКонтактнаяИнформация.Представление КАК Представление,
	|	ПартнерыКонтактнаяИнформация.АдресЭП КАК АдресЭП,
	|	ПартнерыКонтактнаяИнформация.Вид КАК Вид
	|ПОМЕСТИТЬ ВремПочта
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Тип = &ТипПочты
	|	И ПартнерыКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.АдресЭП,
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	|ГДЕ
	|	КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = &ТипПочты
	|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партнеры.Ссылка КАК Ссылка,
	|	Партнеры.ПометкаУдаления КАК ПометкаУдаления,
	|	Партнеры.Наименование КАК Наименование,
	|	Партнеры.НаименованиеПолное КАК НаименованиеПолное,
	|	Партнеры.ОсновнойМенеджер КАК Ответственный,
	|	Партнеры.Комментарий КАК Комментарий,
	|	NULL КАК ИдентификаторКомпанииБитрикс24,
	|	ЛОЖЬ КАК ЭтоКонтактноеЛицо
	|ПОМЕСТИТЬ ВремКонтрагенты
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтактныеЛицаПартнеров.Ссылка,
	|	КонтактныеЛицаПартнеров.ПометкаУдаления,
	|	КонтактныеЛицаПартнеров.Наименование,
	|	КонтактныеЛицаПартнеров.Наименование,
	|	КонтактныеЛицаПартнеров.Автор,
	|	КонтактныеЛицаПартнеров.Комментарий,
	|	ВремИдентификаторыКомпаний.Идентификатор,
	|	ИСТИНА
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыКомпаний КАК ВремИдентификаторыКомпаний
	|		ПО КонтактныеЛицаПартнеров.Владелец = ВремИдентификаторыКомпаний.Объект
	|ГДЕ
	|	КонтактныеЛицаПартнеров.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыКомпаний
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВремКонтрагенты.Ссылка КАК Объект,
	|	ВремКонтрагенты.Ссылка КАК Идентификатор1С,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремКонтрагенты.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремКонтрагенты.Наименование КАК Наименование,
	|	ВЫРАЗИТЬ(ВремКонтрагенты.НаименованиеПолное КАК СТРОКА(100)) КАК НаименованиеПолное,
	|	""CLIENT"" КАК ТипОбъекта,
	|	ВЫРАЗИТЬ(ВремКонтрагенты.Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|	ВремКонтрагенты.Ответственный КАК Ответственный,
	|	ВремКонтрагенты.ИдентификаторКомпанииБитрикс24 КАК ИдентификаторКомпанииБитрикс24,
	|	ВремКонтрагенты.ЭтоКонтактноеЛицо КАК ЭтоКонтактноеЛицо
	|ИЗ
	|	ВремКонтрагенты КАК ВремКонтрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремКонтрагенты.Ссылка = ВремИдентификаторыОбъектов.Объект";
#КонецОбласти
	
	Если  Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииКонтрагентов(ОбщиеНастройки.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляКомпанийИКонтактов") = Истина тогда
		ДобавитьКЗапросуОбъектовДанныеОПользовательскихПолях(ОбщиеНастройки, Запрос, "Справочник.Партнеры", ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКонтакта, ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКонтакта);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	СтруктураИспВидовКИ = Б24_СинхронизацияПовтИсп.ПолучитьСтруктуруВидовКИКонтрагентов();
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхКонтакта(ОбщиеНастройки, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24), МенеджерВременныхТаблиц, СтруктураИспВидовКИ);
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	// чтобы лог не затерся.
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхКонтакта(ОбщиеНастройки, ИнформацияОКонтакте, ЭтоНовыйЭлемент, МенеджерВременныхТаблиц, СтруктураИспВидовКИ)
	
	Если ИнформацияОКонтакте.ЭтоКонтактноеЛицо И НЕ ЗначениеЗаполнено(ИнформацияОКонтакте.ИдентификаторКомпанииБитрикс24) тогда
		Возврат "";	
	КонецЕсли;
	
	ПреффиксыВнешнихКодов1С = Б24_СинхронизацияПовтИсп.ПолучитьПреффиксыВнешнихКодов1С();
	
	Идентификатор1С = XMLСтрока(ИнформацияОКонтакте.Идентификатор1С);
	Идентификатор1С = ?(ИнформацияОКонтакте.ЭтоКонтактноеЛицо, ПреффиксыВнешнихКодов1С.КонтактныеЛица + Идентификатор1С, Идентификатор1С); 
	
	Поля = Новый Структура;
	
	//лНаименованиеПолное = ?(ЗначениеЗаполнено(ИнформацияОКонтакте.НаименованиеПолное), ИнформацияОКонтакте.НаименованиеПолное, ИнформацияОКонтакте.Наименование); 
	ФИО = ФизическиеЛицаКлиентСервер.ФамилияИмяОтчество(ИнформацияОКонтакте.Наименование);
	
	Поля.Вставить("NAME"				, ?(ЗначениеЗаполнено(ФИО.Имя), ФИО.Имя, ИнформацияОКонтакте.Наименование));
	Поля.Вставить("LAST_NAME"			, ?(ЗначениеЗаполнено(ФИО.Имя), ФИО.Фамилия, ""));
	Поля.Вставить("SECOND_NAME"			, ФИО.Отчество);
	
	Поля.Вставить("TYPE_ID"			, ИнформацияОКонтакте.ТипОбъекта); 
	Поля.Вставить("COMMENTS"		, ИнформацияОКонтакте.Комментарий); 
	Поля.Вставить("ORIGIN_ID"		, Идентификатор1С); 
	Поля.Вставить("ORIGINATOR_ID"	, "ONE_C"); 
	
	Если ЗначениеЗаполнено(ИнформацияОКонтакте.ИдентификаторКомпанииБитрикс24) тогда
		Поля.Вставить("COMPANY_ID"	, ИнформацияОКонтакте.ИдентификаторКомпанииБитрикс24); 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОКонтакте.Ответственный) тогда
		НайденнаяСтрока = ОбщиеНастройки.ТаблицаСопоставленияПользователей.Найти(ИнформацияОКонтакте.Ответственный);
		Если НайденнаяСтрока<> Неопределено тогда
			Поля.Вставить("ASSIGNED_BY_ID", НайденнаяСтрока.ИдПользователя); 
		КонецЕсли;
	КонецЕсли;
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;                                                                     
	
	ЗаполнениеТелефонаИПочтыДляКонтрагента(ОбщиеНастройки, ИнформацияОКонтакте.Объект, МенеджерВременныхТаблиц, СтруктураИспВидовКИ, ТелоЗапроса);
	
	Если Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииКонтрагентов(ОбщиеНастройки.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляКомпанийИКонтактов") = Истина тогда	
		ПараметрыПользовательскихПолей = "";
		ЗаполнитьЗначенияПользовательскихПолей(ОбщиеНастройки, МенеджерВременныхТаблиц, ИнформацияОКонтакте.Объект, ПараметрыПользовательскихПолей);	
		ТелоЗапроса = ТелоЗапроса + ПараметрыПользовательскихПолей; 
	КонецЕсли;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.contact.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.contact.update?id=" + ИнформацияОКонтакте.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоРеквизитам(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"		, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"			, ОбщиеНастройки.ТипыОбъектовОбмена.Реквизит);
	Запрос.УстановитьПараметр("ТипДанныхКомпания"	, ОбщиеНастройки.ТипыОбъектовОбмена.Компания);
	Запрос.УстановитьПараметр("ТипДанныхКонтакт"	, ОбщиеНастройки.ТипыОбъектовОбмена.Контакт);
	Запрос.УстановитьПараметр("НазваниеСтраны"		, Б24_ОбщегоНазначенияСервер.ПолучитьНазваниеСтраны());
	Запрос.УстановитьПараметр("Портал"			 	, ОбщиеНастройки.Портал);	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыВладельцев
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И (Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхКомпания
	|			ИЛИ Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхКонтакт)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Контрагенты.Ссылка КАК Объект,
	|	Контрагенты.Ссылка КАК Идентификатор1С,
	|	Контрагенты.ПометкаУдаления КАК ПометкаУдаления,
	|	Контрагенты.Наименование КАК Наименование,
	|	Контрагенты.НаименованиеПолное КАК НаименованиеПолное,
	|	Контрагенты.ИНН КАК ИНН,
	|	Контрагенты.КПП КАК КПП,
	|	Контрагенты.КодПоОКПО КАК КодПоОКПО,
	|	Контрагенты.СтранаРегистрации.Наименование КАК СтранаРегистрации,
	|	Контрагенты.РегистрационныйНомер КАК РегистрационныйНомер,
	|	"""" КАК СвидетельствоСерияНомер,
	|	"""" КАК СвидетельствоДатаВыдачи,
	|	ЛОЖЬ КАК ЭтоКомпания,
	|	Контрагенты.Партнер КАК Владелец,
	|	Контрагенты.ЮрФизЛицо КАК ЮрФизЛицо,
	|	Партнеры.ЮрФизЛицо КАК КомпанияЧастноеЛицо
	|ПОМЕСТИТЬ ВремКонтрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|		ПО Контрагенты.Партнер = Партнеры.Ссылка
	|ГДЕ
	|	Контрагенты.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	Организации.Ссылка,
	|	Организации.ПометкаУдаления,
	|	Организации.Наименование,
	|	Организации.НаименованиеПолное,
	|	Организации.ИНН,
	|	Организации.КПП,
	|	Организации.КодПоОКПО,
	|	Организации.СтранаРегистрации.Наименование,
	|	Организации.ОГРН,
	|	Организации.СвидетельствоСерияНомер,
	|	Организации.СвидетельствоДатаВыдачи,
	|	ИСТИНА,
	|	Организации.Ссылка,
	|	Организации.ЮрФизЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.КомпанияЧастноеЛицо.Компания)
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремКонтрагенты.Идентификатор1С КАК Идентификатор1С,
	|	ВремКонтрагенты.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремКонтрагенты.Наименование КАК Наименование,
	|	ВремКонтрагенты.НаименованиеПолное КАК НаименованиеПолное,
	|	ВремКонтрагенты.ИНН КАК ИНН,
	|	ВремКонтрагенты.КПП КАК КПП,
	|	ВремКонтрагенты.КодПоОКПО КАК КодПоОКПО,
	|	ВремКонтрагенты.СтранаРегистрации КАК СтранаРегистрации,
	|	ВремКонтрагенты.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ВремКонтрагенты.СвидетельствоСерияНомер КАК СвидетельствоСерияНомер,
	|	ВремКонтрагенты.СвидетельствоДатаВыдачи КАК СвидетельствоДатаВыдачи,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремИдентификаторыВладельцев.Идентификатор КАК ИдентификаторБ24Владельца,
	|	ВремКонтрагенты.ЭтоКомпания КАК ЭтоКомпания,
	|	ВремКонтрагенты.ЮрФизЛицо КАК ЮрФизЛицо,
	|	ВремКонтрагенты.КомпанияЧастноеЛицо КАК ВидКонтрагента
	|ИЗ
	|	ВремКонтрагенты КАК ВремКонтрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремКонтрагенты.Объект = ВремИдентификаторыОбъектов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыВладельцев КАК ВремИдентификаторыВладельцев
	|		ПО ВремКонтрагенты.Владелец = ВремИдентификаторыВладельцев.Объект";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхРеквизита(ОбщиеНастройки, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	// чтобы лог не затерся.
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхРеквизита(ОбщиеНастройки, ИнформацияОРеквизите, ЭтоНовыйЭлемент)
	
	//ОСНОВНЫЕ!!!!
	//
	//Поля.Вставить("ID"					, "");  	
	//Поля.Вставить("ENTITY_TYPE_ID"		, "");  	
	//Поля.Вставить("ENTITY_ID"				, "");  	
	//Поля.Вставить("PRESET_ID"				, "");  	
	//Поля.Вставить("NAME"					, "");  	
	//Поля.Вставить("CODE"					, "");  	
	//Поля.Вставить("XML_ID"				, "");  	
	//Поля.Вставить("ACTIVE"				, "");  	
	//Поля.Вставить("SORT"					, "");  	
	//Поля.Вставить("RQ_NAME"				, "");  	
	//Поля.Вставить("RQ_FIRST_NAME"			, "");  	
	//Поля.Вставить("RQ_LAST_NAME"			, "");  	
	//Поля.Вставить("RQ_COMPANY_NAME"		, "");  	
	//Поля.Вставить("RQ_COMPANY_FULL_NAME"	, "");  	
	//Поля.Вставить("RQ_COMPANY_REG_DATE"	, "");  	
	//Поля.Вставить("RQ_DIRECTOR"			, "");  	
	//Поля.Вставить("RQ_ACCOUNTANT"			, "");  	
	//Поля.Вставить("RQ_CONTACT"			, "");  	
	//Поля.Вставить("RQ_DIRECTOR"			, "");  	
	//Поля.Вставить("RQ_IDENT_DOC"			, "");  	
	//Поля.Вставить("RQ_IDENT_DOC_SER"		, "");  	
	//Поля.Вставить("RQ_IDENT_DOC_NUM"		, "");  	
	//Поля.Вставить("RQ_IDENT_DOC_DATE"		, "");  	
	//Поля.Вставить("RQ_IDENT_DOC_ISSUED_BY", "");  	
	//Поля.Вставить("RQ_IDENT_DOC_DEP_CODE"	, "");  	
	//Поля.Вставить("RQ_INN"				, "");  	
	//Поля.Вставить("RQ_KPP"				, "");  	
	//Поля.Вставить("RQ_IFNS"				, "");  	
	//Поля.Вставить("RQ_USRLE"				, "");  	
	//Поля.Вставить("RQ_OGRN"				, "");  	
	//Поля.Вставить("RQ_OKPO"				, "");  	
	//Поля.Вставить("RQ_OKVED"				, "");  	
	//Поля.Вставить("RQ_EDRPOU"				, "");  	
	//Поля.Вставить("RQ_DRFO"				, "");  	
	//Поля.Вставить("RQ_KBE"				, "");  	
	//Поля.Вставить("RQ_IIN"				, "");  	
	//Поля.Вставить("RQ_BIN"				, "");  	
	//Поля.Вставить("RQ_RESIDENCE_COUNTRY"	, "");  	
	//Поля.Вставить("ORIGINATOR_ID"			, "");  	
	//                          
	//ENTITY_TYPE_ID = 3- физ
	//4- юр
	
	ПреффиксыВнешнихКодов1С = Б24_СинхронизацияПовтИсп.ПолучитьПреффиксыВнешнихКодов1С();
	Идентификатор1С = XMLСтрока(ИнформацияОРеквизите.Идентификатор1С);
	Идентификатор1С = ?(ИнформацияОРеквизите.ЭтоКомпания, ПреффиксыВнешнихКодов1С.Организации + Идентификатор1С , Идентификатор1С);
	
	Поля = Новый Структура;
	
	Поля.Вставить("ENTITY_TYPE_ID"	, ?(ОбщиеНастройки.ТипыКонтрагентовДляКомпаний.Найти(ИнформацияОРеквизите.ВидКонтрагента) <> Неопределено ИЛИ ИнформацияОРеквизите.ЭтоКомпания, "4", "3"));
	Поля.Вставить("ENTITY_ID"		, ИнформацияОРеквизите.ИдентификаторБ24Владельца);  	
	
	НайденнаяСтрока = ОбщиеНастройки.НастройкиСинхронизацииКонтрагентов.Пресеты.Найти(ИнформацияОРеквизите.ЮрФизЛицо);
	Если НайденнаяСтрока = Неопределено тогда
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.КритическаяОшибка, "Не найден пресет для типа:" + Строка(ИнформацияОРеквизите.ЮрФизЛицо));
		ОбщиеНастройки.ВыполненоБезОшибок = Ложь;
		Возврат "";	
	КонецЕсли;
	Поля.Вставить("PRESET_ID"		, НайденнаяСтрока.ИдШаблона);  	
	Поля.Вставить("NAME"			, ?(ЗначениеЗаполнено(ИнформацияОРеквизите.НаименованиеПолное), ИнформацияОРеквизите.НаименованиеПолное, ИнформацияОРеквизите.Наименование));  	
	Поля.Вставить("RQ_IIN"			, ИнформацияОРеквизите.ИНН);  	
	
	Если ОбщиеНастройки.ТипыКонтрагентовДляКомпаний.Найти(ИнформацияОРеквизите.ВидКонтрагента) <> Неопределено тогда
		
		Поля.Вставить("RQ_COMPANY_NAME"		, ИнформацияОРеквизите.Наименование);  	
		Поля.Вставить("RQ_COMPANY_FULL_NAME", ИнформацияОРеквизите.НаименованиеПолное);  
		
		//Поля.Вставить("RQ_KPP"		, ИнформацияОРеквизите.КПП);  	
		
		//Если СтрДлина(ИнформацияОРеквизите.РегистрационныйНомер) > 13 тогда
		//	Поля.Вставить("RQ_OGRNIP"	, ИнформацияОРеквизите.РегистрационныйНомер);  
		//Иначе
		//	Поля.Вставить("RQ_OGRN"		, ИнформацияОРеквизите.РегистрационныйНомер);  
		//КонецЕсли;
		
	Иначе
		
		лНаименованиеПолное = ?(ЗначениеЗаполнено(ИнформацияОРеквизите.НаименованиеПолное), ИнформацияОРеквизите.НаименованиеПолное, ИнформацияОРеквизите.Наименование); 
		ФИО = ФизическиеЛицаКлиентСервер.ФамилияИмяОтчество(лНаименованиеПолное);
		
		Поля.Вставить("RQ_NAME"				, лНаименованиеПолное);
		Поля.Вставить("RQ_FIRST_NAME"		, ?(ЗначениеЗаполнено(ФИО.Имя), ФИО.Имя, ИнформацияОРеквизите.Наименование));
		Поля.Вставить("RQ_LAST_NAME"		, ?(ЗначениеЗаполнено(ФИО.Имя), ФИО.Фамилия, ""));
		Поля.Вставить("RQ_SECOND_NAME"		, ФИО.Отчество);
		
		Поля.Вставить("RQ_IDENT_DOC_SER"	, Лев(ИнформацияОРеквизите.СвидетельствоСерияНомер, 4));  	
		Поля.Вставить("RQ_IDENT_DOC_NUM"	, СокрЛП(Прав(ИнформацияОРеквизите.СвидетельствоСерияНомер, СтрДлина(ИнформацияОРеквизите.СвидетельствоСерияНомер)-4)));  	
		Поля.Вставить("RQ_IDENT_DOC_DATE"	, ИнформацияОРеквизите.СвидетельствоДатаВыдачи);  	
		
		//Поля.Вставить("RQ_OGRNIP"			, ИнформацияОРеквизите.РегистрационныйНомер);  	
		
	КонецЕсли;
	
	Поля.Вставить("ACTIVE"			, ?(ИнформацияОРеквизите.ПометкаУдаления,"N","Y"));  	
	Поля.Вставить("XML_ID"			, Идентификатор1С);  	
	Поля.Вставить("ORIGINATOR_ID"	, "ONE_C");  	
	
	
	Поля.Вставить("RQ_OKPO"				, ИнформацияОРеквизите.КодПоОКПО);  	
	Поля.Вставить("RQ_RESIDENCE_COUNTRY", ИнформацияОРеквизите.СтранаРегистрации);  	
	
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;  
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.requisite.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.requisite.update?id=" + ИнформацияОРеквизите.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоАдресам(пОбщиеНастройки, МассивДанных, ТипДанных, Пакет) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ФактАдресРеквизита тогда
		ВидКИ 		= Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
		ВидКИОрг 	= Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации;
	Иначе
		ВидКИ		= Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;	
		ВидКИОрг 	= Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных", МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"	, ТипДанных);
	Запрос.УстановитьПараметр("ТипДанныхРеквизит", ОбщиеНастройки.ТипыОбъектовОбмена.Реквизит);
	Запрос.УстановитьПараметр("Портал"			 , ОбщиеНастройки.Портал);	
	
	Запрос.УстановитьПараметр("ВидКИ"	, ВидКИ);
	Запрос.УстановитьПараметр("ВидКИОрг", ВидКИОрг);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыВладельцев
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхРеквизит
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Объект,
	|	КонтрагентыКонтактнаяИнформация.Представление КАК Представление,
	|	КонтрагентыКонтактнаяИнформация.Страна КАК Страна,
	|	КонтрагентыКонтактнаяИнформация.Регион КАК Регион,
	|	КонтрагентыКонтактнаяИнформация.Город КАК Город,
	|	КонтрагентыКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей
	|ПОМЕСТИТЬ ВремКИ
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|	И КонтрагентыКонтактнаяИнформация.Вид = &ВидКИ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОрганизацииКонтактнаяИнформация.Ссылка,
	|	ОрганизацииКонтактнаяИнформация.Представление,
	|	ОрганизацииКонтактнаяИнформация.Страна,
	|	ОрганизацииКонтактнаяИнформация.Регион,
	|	ОрганизацииКонтактнаяИнформация.Город,
	|	ОрганизацииКонтактнаяИнформация.ЗначенияПолей
	|ИЗ
	|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Ссылка В(&МассивДанных)
	|	И ОрганизацииКонтактнаяИнформация.Вид = &ВидКИОрг
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремКИ.Объект КАК Идентификатор1С,
	|	ВремКИ.Представление КАК Представление,
	|	ВремКИ.Страна КАК Страна,
	|	ВремКИ.Регион КАК Регион,
	|	ВремКИ.Город КАК Город,
	|	ВремИдентификаторыВладельцев.Идентификатор КАК ИдентификаторБ24Владельца,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремКИ.ЗначенияПолей КАК ЗначенияПолей
	|ИЗ
	|	ВремКИ КАК ВремКИ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремКИ.Объект = ВремИдентификаторыОбъектов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыВладельцев КАК ВремИдентификаторыВладельцев
	|		ПО ВремКИ.Объект = ВремИдентификаторыВладельцев.Объект";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементыСАдресом = Новый Массив; 	
	мЭлементы 		  = Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		мЭлементыСАдресом.Добавить(Выборка.Идентификатор1С);	
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхАдреса(ОбщиеНастройки, ТипДанных, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекЭлемент из МассивДанных Цикл
		Если мЭлементыСАдресом.Найти(ТекЭлемент) = Неопределено тогда
			УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ТипДанных, Пакет, ТекЭлемент);
		КонецЕсли;
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	// чтобы лог не затерся.
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхАдреса(ОбщиеНастройки, ТипДанных, ИнформацияОАдресе, ЭтоНовыйЭлемент)
	
	//1- факт
	//6 -юр
	// УправлениеКонтактнойИнформацией.ПредыдущийФорматКонтактно
	
	ПреффиксыВнешнихКодов1С = Б24_СинхронизацияПовтИсп.ПолучитьПреффиксыВнешнихКодов1С();
	
	Идентификатор1С = XMLСтрока(ИнформацияОАдресе.Идентификатор1С);
	Идентификатор1С = ?(ТипЗнч(ИнформацияОАдресе.Идентификатор1С) = Тип("СправочникСсылка.Организации"), ПреффиксыВнешнихКодов1С.Организации + Идентификатор1С, Идентификатор1С); 
	
	Поля = Новый Структура;
	
	Поля.Вставить("ENTITY_TYPE_ID", "8");
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ФактАдресРеквизита тогда
		Поля.Вставить("TYPE_ID", "1");
	Иначе
		Поля.Вставить("TYPE_ID", "6");
	КонецЕсли;
	
	Поля.Вставить("ENTITY_ID", ИнформацияОАдресе.ИдентификаторБ24Владельца);  	
	
	СтруктураПолей = ПолучитьСтруктуруАдреса(ИнформацияОАдресе.ЗначенияПолей);
	
	Если СтруктураПолей = Неопределено тогда
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "У контрагента " + Строка(ИнформацияОАдресе.Идентификатор1С) + " некорректный " + Строка(ТипДанных));
		Возврат "";
	КонецЕсли;
	
	Поля.Вставить("COUNTRY", СтруктураПолей.Страна);  	
	
	Если Врег(СокрЛп(СтруктураПолей.Страна)) = Б24_ОбщегоНазначенияСервер.ПолучитьНазваниеСтраны() тогда
		
		Поля.Вставить("PROVINCE"	, СтруктураПолей.СубъектРФ);  	
		Поля.Вставить("REGION"		, СтруктураПолей.Район);
		Поля.Вставить("POSTAL_CODE"	, СтруктураПолей.ПИндекс);  
		
		лГород = "";
		Если ЗначениеЗаполнено(СтруктураПолей.Город) тогда
			лГород = СтруктураПолей.Город; 
		КонецЕсли;
		Если ЗначениеЗаполнено(СтруктураПолей.НаселПункт) тогда
			лГород = лГород + ", нас. пункт " + СтруктураПолей.НаселПункт; 
		КонецЕсли;
		Поля.Вставить("CITY", лГород);  	
		
		Адрес1 = "";
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.Улица), "улица " + СтруктураПолей.Улица, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.Дом), ", дом " + СтруктураПолей.Дом, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.корпус), ", корпус " + СтруктураПолей.корпус, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.сооружение), ", сооружение " + СтруктураПолей.сооружение, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.литера), ", литера " + СтруктураПолей.литера, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.строение), ", строение " + СтруктураПолей.строение, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.участок), ", участок " + СтруктураПолей.участок, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.АЯ), ", а/я " + СтруктураПолей.АЯ, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.ВЧ), ", в/ч " + СтруктураПолей.ВЧ, "");	
		Адрес1 = Адрес1 + ?(ЗначениеЗаполнено(СтруктураПолей.ПОП), ", п/о " + СтруктураПолей.ПОП, "");	
		Поля.Вставить("ADDRESS_1", Адрес1);  	
		
		Адрес2 = "";
		Адрес2 = Адрес2 + ?(ЗначениеЗаполнено(СтруктураПолей.квартира), "квартира " + СтруктураПолей.квартира, "");	
		Адрес2 = Адрес2 + ?(ЗначениеЗаполнено(СтруктураПолей.офис), ", офис " + СтруктураПолей.офис, "");	
		Адрес2 = Адрес2 + ?(ЗначениеЗаполнено(СтруктураПолей.бокс), ", бокс " + СтруктураПолей.бокс, "");	
		Адрес2 = Адрес2 + ?(ЗначениеЗаполнено(СтруктураПолей.этаж), ", этаж " + СтруктураПолей.этаж, "");	
		Адрес2 = Адрес2 + ?(ЗначениеЗаполнено(СтруктураПолей.комната), ", комната " + СтруктураПолей.комната, "");	
		Адрес2 = Адрес2 + ?(ЗначениеЗаполнено(СтруктураПолей.помещение), ", помещение " + СтруктураПолей.помещение, "");	
		Поля.Вставить("ADDRESS_2", Адрес2);  	
		
	Иначе
		Поля.Вставить("ADDRESS_1", СтруктураПолей.Представление);  	
	КонецЕсли;
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;  
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.address.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.address.update?id=" + ИнформацияОАдресе.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции

Функция ПолучитьСтруктуруАдреса(ЗначенияПолей)
	
	//Если Метаданные.ОбщиеМодули.Найти("РаботаСАдресами") <> Неопределено Тогда
		
		Если ТипЗнч(ЗначенияПолей) = Тип("Строка") И СтрНачинаетсяС(СокрЛ(ЗначенияПолей), "<") Тогда
			
			ПространствоИмен = "http://www.v8.1c.ru/ssl/contactinfo";;
			ЧтениеXML = Новый ЧтениеXML;
			
			ЧтениеXML.УстановитьСтроку(ЗначенияПолей);
			
			Попытка
				XDTOАдрес = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ФабрикаXDTO.Тип(ПространствоИмен, "КонтактнаяИнформация"));
			Исключение
				Возврат Неопределено;
			КонецПопытки;
			
			СтруктураДанных = РазбратьАдресXDTO(XDTOАдрес);
			
			Возврат СтруктураДанных;
			
		ИначеЕсли ТипЗнч(ЗначенияПолей) = Тип("Строка") Тогда
			
			СтруктураДанных =  Новый Структура;
			СтруктураДанных.Вставить("Представление", "");
			СтруктураДанных.Вставить("Страна"		, "");
			СтруктураДанных.Вставить("СубъектРФ"	, СтрЗаменить(СтрПолучитьСтроку(ЗначенияПолей,2), "Регион=", ""));
			СтруктураДанных.Вставить("Округ"		, "");
			СтруктураДанных.Вставить("Район"		, "");
			СтруктураДанных.Вставить("Город"		, СтрЗаменить(СтрПолучитьСтроку(ЗначенияПолей,3), "Город=", ""));
			СтруктураДанных.Вставить("ВнутригРайон"	, "");
			СтруктураДанных.Вставить("НаселПункт"	, "");
			СтруктураДанных.Вставить("Улица"		, СтрЗаменить(СтрПолучитьСтроку(ЗначенияПолей,4), "Улица=", ""));
			СтруктураДанных.Вставить("ОКТМО"		, "");
			
			СтруктураДанных.Вставить("ПИндекс"		, СтрЗаменить(СтрПолучитьСтроку(ЗначенияПолей,1), "Индекс=", ""));
			СтруктураДанных.Вставить("Дом"			, СтрЗаменить(СтрПолучитьСтроку(ЗначенияПолей,5), "Дом=", ""));
			СтруктураДанных.Вставить("Корпус"		, "");
			СтруктураДанных.Вставить("Участок"		, "");
			СтруктураДанных.Вставить("Сооружение"	, "");
			СтруктураДанных.Вставить("Строение"		, "");
			СтруктураДанных.Вставить("Литера"		, "");
			СтруктураДанных.Вставить("Квартира"		, СтрЗаменить(СтрПолучитьСтроку(ЗначенияПолей,6), "Квартира=", ""));
			СтруктураДанных.Вставить("Офис"			, "");
			СтруктураДанных.Вставить("Бокс"			, "");
			СтруктураДанных.Вставить("Помещение"	, "");
			СтруктураДанных.Вставить("Этаж"			, "");
			СтруктураДанных.Вставить("АЯ"			, "");
			СтруктураДанных.Вставить("ПОП"			, "");
			СтруктураДанных.Вставить("ВЧ"			, "");
			СтруктураДанных.Вставить("Другое"		, "");
			СтруктураДанных.Вставить("Комната"		, "");
			
			Возврат СтруктураДанных;
			
		КонецЕсли;
		
		Возврат Неопределено;
		
	//КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция РазбратьАдресXDTO(XDTOАдрес)
	
	СтруктураДанных =  Новый Структура;
	СтруктураДанных.Вставить("Представление", "");
	СтруктураДанных.Вставить("Страна"		, "");
	СтруктураДанных.Вставить("СубъектРФ"	, "");
	СтруктураДанных.Вставить("Округ"		, "");
	СтруктураДанных.Вставить("Район"		, "");
	СтруктураДанных.Вставить("Город"		, "");
	СтруктураДанных.Вставить("ВнутригРайон"	, "");
	СтруктураДанных.Вставить("НаселПункт"	, "");
	СтруктураДанных.Вставить("Улица"		, "");
	СтруктураДанных.Вставить("ОКТМО"		, "");
	
	СтруктураДанных.Вставить("ПИндекс"		, "");
	СтруктураДанных.Вставить("Дом"			, "");
	СтруктураДанных.Вставить("Корпус"		, "");
	СтруктураДанных.Вставить("Участок"		, "");
	СтруктураДанных.Вставить("Сооружение"	, "");
	СтруктураДанных.Вставить("Строение"		, "");
	СтруктураДанных.Вставить("Литера"		, "");
	СтруктураДанных.Вставить("Квартира"		, "");
	СтруктураДанных.Вставить("Офис"			, "");
	СтруктураДанных.Вставить("Бокс"			, "");
	СтруктураДанных.Вставить("Помещение"	, "");
	СтруктураДанных.Вставить("Этаж"			, "");
	СтруктураДанных.Вставить("АЯ"			, "");
	СтруктураДанных.Вставить("ПОП"			, "");
	СтруктураДанных.Вставить("ВЧ"			, "");
	СтруктураДанных.Вставить("Другое"		, "");
	СтруктураДанных.Вставить("Комната"		, "");
	
	
	Если XDTOАдрес.Свойства().Получить("Представление") <> Неопределено тогда
		СтруктураДанных.Представление = XDTOАдрес.Представление;
	Иначе
		Возврат Неопределено; 
	КонецЕсли;
	
	Если XDTOАдрес.Свойства().Получить("Состав") = Неопределено тогда
		Возврат СтруктураДанных; 
	Иначе
		
		Состав = XDTOАдрес.Состав;	
		
		Если Состав.Свойства().Получить("Страна") <> Неопределено тогда
			СтруктураДанных.Страна = Состав.Страна;
		Иначе
			Возврат Неопределено; 
		КонецЕсли;
		
		
		Если Состав.Свойства().Получить("Состав") <> Неопределено тогда
			
			ПоляАдреса = Состав.Состав;	
			
			Если ТипЗнч(ПоляАдреса) = Тип("Строка") тогда
				Возврат СтруктураДанных;
			КонецЕсли;
			
			Если ПоляАдреса.Свойства().Получить("СубъектРФ") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.СубъектРФ) тогда
					СтруктураДанных.СубъектРФ = ПоляАдреса.СубъектРФ;
				КонецЕсли
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("Округ") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.Округ) тогда
					СтруктураДанных.Округ = ПоляАдреса.Округ;
				КонецЕсли
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("СвРайМО") <> Неопределено тогда
				Если ПоляАдреса.СвРайМО <> Неопределено тогда
					Если ПоляАдреса.СвРайМО.Свойства().Получить("Район") <> Неопределено тогда
						Если СвойствоXDTOЗаполнено(ПоляАдреса.СвРайМО.Район) тогда
							СтруктураДанных.Район = ПоляАдреса.СвРайМО.Район;
						КонецЕсли
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("Город") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.Город) тогда
					СтруктураДанных.Город = ПоляАдреса.Город;
				КонецЕсли
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("ВнутригРайон") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.ВнутригРайон) тогда
					СтруктураДанных.ВнутригРайон = ПоляАдреса.ВнутригРайон;
				КонецЕсли
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("НаселПункт") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.НаселПункт) тогда
					СтруктураДанных.НаселПункт = ПоляАдреса.НаселПункт;
				КонецЕсли
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("Улица") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.Улица) тогда
					СтруктураДанных.Улица = ПоляАдреса.Улица;
				КонецЕсли
			КонецЕсли;
			Если ПоляАдреса.Свойства().Получить("ОКТМО") <> Неопределено тогда
				Если СвойствоXDTOЗаполнено(ПоляАдреса.ОКТМО) тогда
					СтруктураДанных.ОКТМО = ПоляАдреса.ОКТМО;
				КонецЕсли
			КонецЕсли;
			
			Если ПоляАдреса.Свойства().Получить("ДопАдрЭл") <> Неопределено тогда
				
				Если ТипЗнч(ПоляАдреса.ДопАдрЭл) = Тип("СписокXDTO") тогда
					
					Для Каждого ДопАдрЭл Из ПоляАдреса.ДопАдрЭл Цикл
						
						Если ДопАдрЭл.Свойства().Получить("Номер") <> Неопределено тогда
							
							Если ДопАдрЭл.Номер <> Неопределено тогда
								РазобратьДопАдрЭл(СтруктураДанных, ДопАдрЭл.Номер);
							Иначе
								Если ДопАдрЭл.Свойства().Получить("ТипАдрЭл") <> Неопределено тогда
									Если ДопАдрЭл.ТипАдрЭл = "10100000" тогда
										СтруктураДанных.ПИндекс = ДопАдрЭл.Значение; 	
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
							
						Иначе
							
							Если ДопАдрЭл.Свойства().Получить("ТипАдрЭл") <> Неопределено тогда
								СтруктураДанных.ПИндекс = ДопАдрЭл.Значение; 	
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
					
				Иначе
					Если ПоляАдреса.ДопАдрЭл.Свойства().Получить("Номер") <> Неопределено тогда
						РазобратьДопАдрЭл(СтруктураДанных, ПоляАдреса.ДопАдрЭл.Номер);
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		
	КонецЕсли;	
	
	Возврат СтруктураДанных;	
	
КонецФункции 

Функция СвойствоXDTOЗаполнено(СвойствоXDTO)
	
	СвойствоЗаполнено = Истина;
	
	Если ТипЗнч(СвойствоXDTO) = Тип("ОбъектXDTO")
		ИЛИ ТипЗнч(СвойствоXDTO) = Тип("СписокXDTO")
		ИЛИ НЕ ЗначениеЗаполнено(СвойствоXDTO) Тогда
		
		СвойствоЗаполнено = Ложь;
		
	КонецЕсли;
	
	Возврат СвойствоЗаполнено;
	
КонецФункции

Процедура РазобратьДопАдрЭл(СтруктураДанных, ДопАдрЭлXDTO)
	
	Попытка
		Значение = ДопАдрЭлXDTO.Значение;
	Исключение
		Значение = "";
	КонецПопытки;
	
	Если ДопАдрЭлXDTO = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	Если ДопАдрЭлXDTO.Тип = "1010" тогда
		СтруктураДанных.Дом = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "1040" тогда
		СтруктураДанных.Участок = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "1070" тогда
		СтруктураДанных.Сооружение = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "1080" тогда
		СтруктураДанных.Литера = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "1060" тогда
		СтруктураДанных.Строение = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "1050" тогда
		СтруктураДанных.Корпус = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2010" тогда
		СтруктураДанных.Квартира = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2030" тогда
		СтруктураДанных.Офис = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2040" тогда
		СтруктураДанных.Бокс = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2020" тогда
		СтруктураДанных.Помещение = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2060" тогда
		СтруктураДанных.Этаж = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2070" тогда
		СтруктураДанных.АЯ = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2090" тогда
		СтруктураДанных.ПОП = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2080" тогда
		СтруктураДанных.ВЧ = Значение;
	ИначеЕсли ДопАдрЭлXDTO.Тип = "2050" тогда
		СтруктураДанных.Комната = Значение;
	Иначе
		СтруктураДанных.Другое = Значение;
	КонецЕсли;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоБанковскимСчетамКомпанийКонтактов(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МассивВладельцев = Новый Массив;
	
	Для каждого ТекЗначение из МассивДанных Цикл
		МассивВладельцев.Добавить(ТекЗначение.Владелец);	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"	, МассивДанных);
	Запрос.УстановитьПараметр("МассивВладельцев", МассивВладельцев);
	Запрос.УстановитьПараметр("ТипДанных"		, ОбщиеНастройки.ТипыОбъектовОбмена.БанковскийСчетРеквизита);
	Запрос.УстановитьПараметр("ТипДанныхРеквизит", ОбщиеНастройки.ТипыОбъектовОбмена.Реквизит);
	Запрос.УстановитьПараметр("Портал"			 , ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыВладельцев
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхРеквизит
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивВладельцев)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчетаОрганизаций.Ссылка КАК Объект,
	|	БанковскиеСчетаОрганизаций.Ссылка КАК Идентификатор1С,
	|	БанковскиеСчетаОрганизаций.ПометкаУдаления КАК ПометкаУдаления,
	|	БанковскиеСчетаОрганизаций.Наименование КАК Наименование,
	|	БанковскиеСчетаОрганизаций.НомерСчета КАК НомерСчета,
	|	БанковскиеСчетаОрганизаций.Банк КАК Банк,
	|	КлассификаторБанков.Код КАК КодБанка,
	|	КлассификаторБанков.КоррСчет КАК КоррСчетБанка,
	|	КлассификаторБанков.Адрес КАК АдресБанка,
	|	КлассификаторБанков.Город КАК ГородБанка,
	|	КлассификаторБанков.Наименование КАК НаименованиеБанка,
	|	Валюты.Наименование КАК ВалютаКод,
	|	КлассификаторБанков.СВИФТБИК КАК СВИФТБИК,
	|	КлассификаторБанков.Код КАК БикБанка,
	|	БанковскиеСчетаОрганизаций.Владелец КАК Владелец,
	|	БанковскиеСчетаОрганизаций.СВИФТБанка КАК СВИФТБанкаВСчете,
	|	БанковскиеСчетаОрганизаций.НаименованиеБанка КАК НаименованиеБанкаВСчете,
	|	ВЫРАЗИТЬ(БанковскиеСчетаОрганизаций.АдресБанка КАК СТРОКА(100)) КАК АдресБанкаВСчете,
	|	БанковскиеСчетаОрганизаций.БИКБанка КАК БИКБанкаВСчете
	|ПОМЕСТИТЬ ВремБанковскиеСчета
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|		ПО БанковскиеСчетаОрганизаций.Банк = КлассификаторБанков.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|		ПО БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств = Валюты.Ссылка
	|ГДЕ
	|	БанковскиеСчетаОрганизаций.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагентов.Ссылка,
	|	БанковскиеСчетаКонтрагентов.Ссылка,
	|	БанковскиеСчетаКонтрагентов.ПометкаУдаления,
	|	БанковскиеСчетаКонтрагентов.Наименование,
	|	БанковскиеСчетаКонтрагентов.НомерСчета,
	|	БанковскиеСчетаКонтрагентов.Банк,
	|	КлассификаторБанков.Код,
	|	КлассификаторБанков.КоррСчет,
	|	КлассификаторБанков.Адрес,
	|	КлассификаторБанков.Город,
	|	КлассификаторБанков.Наименование,
	|	Валюты.Наименование,
	|	КлассификаторБанков.СВИФТБИК,
	|	КлассификаторБанков.Код,
	|	БанковскиеСчетаКонтрагентов.Владелец,
	|	БанковскиеСчетаКонтрагентов.СВИФТБанка,
	|	БанковскиеСчетаКонтрагентов.НаименованиеБанка,
	|	ВЫРАЗИТЬ(БанковскиеСчетаКонтрагентов.АдресБанка КАК СТРОКА(100)),
	|	БанковскиеСчетаКонтрагентов.БИКБанка
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторБанков КАК КлассификаторБанков
	|		ПО БанковскиеСчетаКонтрагентов.Банк = КлассификаторБанков.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|		ПО БанковскиеСчетаКонтрагентов.ВалютаДенежныхСредств = Валюты.Ссылка
	|ГДЕ
	|	БанковскиеСчетаКонтрагентов.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремБанковскиеСчета.Объект КАК Объект,
	|	ВремБанковскиеСчета.Идентификатор1С КАК Идентификатор1С,
	|	ВремБанковскиеСчета.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремБанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВремБанковскиеСчета.Банк КАК Банк,
	|	ВремИдентификаторыВладельцев.Идентификатор КАК ИдентификаторБ24Владельца,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремБанковскиеСчета.КодБанка КАК КодБанка,
	|	ВремБанковскиеСчета.КоррСчетБанка КАК КоррСчетБанка,
	|	ВремБанковскиеСчета.АдресБанка КАК АдресБанка,
	|	ВремБанковскиеСчета.ГородБанка КАК ГородБанка,
	|	ВремБанковскиеСчета.НаименованиеБанка КАК НаименованиеБанка,
	|	ВремБанковскиеСчета.ВалютаКод КАК ВалютаКод,
	|	ВремБанковскиеСчета.СВИФТБИК КАК СВИФТБИК,
	|	ВремБанковскиеСчета.БикБанка КАК БикБанка,
	|	ВремБанковскиеСчета.Наименование КАК Наименование,
	|	ВремБанковскиеСчета.СВИФТБанкаВСчете КАК СВИФТБанкаВСчете,
	|	ВремБанковскиеСчета.НаименованиеБанкаВСчете КАК НаименованиеБанкаВСчете,
	|	ВремБанковскиеСчета.АдресБанкаВСчете КАК АдресБанкаВСчете,
	|	ВремБанковскиеСчета.БИКБанкаВСчете КАК БИКБанкаВСчете,
	|	ВремБанковскиеСчета.Владелец КАК Владелец
	|ИЗ
	|	ВремБанковскиеСчета КАК ВремБанковскиеСчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыВладельцев КАК ВремИдентификаторыВладельцев
	|		ПО ВремБанковскиеСчета.Владелец = ВремИдентификаторыВладельцев.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремБанковскиеСчета.Объект = ВремИдентификаторыОбъектов.Объект";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхБанковскогоСчета(ОбщиеНастройки, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	// чтобы лог не затерся.
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхБанковскогоСчета(ОбщиеНастройки, ИнформацияОБанковскомСчете, ЭтоНовыйЭлемент)
	
	Идентификатор1С = XMLСтрока(ИнформацияОБанковскомСчете.Идентификатор1С);
	Идентификатор1С = ?(ТипЗнч(ИнформацияОБанковскомСчете.Владелец) = Тип("СправочникСсылка.Организации"), "B_ORG_" + Идентификатор1С, Идентификатор1С); 
	
	Поля = Новый Структура;
	
	Поля.Вставить("ENTITY_TYPE_ID"	, "8");
	Поля.Вставить("ENTITY_ID"		, ИнформацияОБанковскомСчете.ИдентификаторБ24Владельца);  	
	Поля.Вставить("ACTIVE"			, ?(ИнформацияОБанковскомСчете.ПометкаУдаления,"N","Y"));  	
	Поля.Вставить("XML_ID"			, Идентификатор1С);  	
	Поля.Вставить("ORIGINATOR_ID"	, "ONE_C");  	
	
	Поля.Вставить("NAME"			, ИнформацияОБанковскомСчете.Наименование);
	
	лВалютаСимвольныйКод = ПолучитьВалютуПоКоду(Лев(ИнформацияОБанковскомСчете.ВалютаКод, 3));
	
	Если ЗначениеЗаполнено(лВалютаСимвольныйКод) тогда
		Поля.Вставить("RQ_ACC_CURRENCY", лВалютаСимвольныйКод);
	КонецЕсли;
	
	Поля.Вставить("RQ_ACC_NUM"		, ИнформацияОБанковскомСчете.НомерСчета);
	Поля.Вставить("RQ_COR_ACC_NUM"	, ИнформацияОБанковскомСчете.КоррСчетБанка);
	
	Поля.Вставить("RQ_BANK_NAME", ?(ЗначениеЗаполнено(ИнформацияОБанковскомСчете.НаименованиеБанкаВСчете), ИнформацияОБанковскомСчете.НаименованиеБанкаВСчете, ИнформацияОБанковскомСчете.НаименованиеБанка));
	Поля.Вставить("RQ_BANK_ADDR", ?(ЗначениеЗаполнено(ИнформацияОБанковскомСчете.АдресБанкаВСчете)		 , ИнформацияОБанковскомСчете.АдресБанкаВСчете		 , ИнформацияОБанковскомСчете.АдресБанка));
	Поля.Вставить("RQ_BIK"		, ?(ЗначениеЗаполнено(ИнформацияОБанковскомСчете.БИКБанкаВСчете)		 , ИнформацияОБанковскомСчете.БИКБанкаВСчете		 , ИнформацияОБанковскомСчете.БикБанка));
	Поля.Вставить("RQ_SWIFT"	, ?(ЗначениеЗаполнено(ИнформацияОБанковскомСчете.СВИФТБанкаВСчете)		 , ИнформацияОБанковскомСчете.СВИФТБанкаВСчете		 , ИнформацияОБанковскомСчете.СВИФТБИК));
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;  
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.requisite.bankdetail.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.requisite.bankdetail.update?id=" + ИнформацияОБанковскомСчете.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции

Функция ПолучитьВалютуПоКоду(КодВалюты)
	
	Если КодВалюты = "840" тогда
		Результат = "USD";
	ИначеЕсли КодВалюты = "978" тогда
		Результат = "EUR";
	ИначеЕсли КодВалюты = "980" тогда
		Результат = "UAH";
	ИначеЕсли КодВалюты = "974" тогда
		Результат = "BYN";
	ИначеЕсли КодВалюты = "398" тогда
		Результат = "KZT";
	ИначеЕсли КодВалюты = "643" тогда
		Результат = "RUB";
	Иначе
		Результат = "KZT";
	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоГруппамТоваров(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	Если Б24_СинхронизацияПовтИсп.ЕстьПользовательскоеДеревоГрупп(ОбщиеНастройки.НастройкаСинхронизации) Тогда
		лИмяСправочника = "Б24_ПользовательскиеГруппыТоваров";
	Иначе
		лИмяСправочника = "Номенклатура";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"	, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"		, ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара);
	Запрос.УстановитьПараметр("Портал"			, ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыРодителей
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникГрупп.Ссылка КАК Объект,
	|	СправочникГрупп.Родитель КАК Родитель,
	|	СправочникГрупп.Ссылка КАК Идентификатор1С,
	|	СправочникГрупп.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникГрупп.Наименование КАК Наименование,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремИдентификаторыРодителей.Идентификатор КАК ИдентификаторБ24Родителя
	|ИЗ
	|	Справочник."+лИмяСправочника+" КАК СправочникГрупп
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО (ВремИдентификаторыОбъектов.Объект = СправочникГрупп.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыРодителей КАК ВремИдентификаторыРодителей
	|		ПО СправочникГрупп.Родитель = ВремИдентификаторыРодителей.Объект
	|ГДЕ
	|	СправочникГрупп.Ссылка В(&МассивДанных)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхГруппыНоменклатуры(ОбщиеНастройки, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 		
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхГруппыНоменклатуры(ОбщиеНастройки, ИнформацияОГруппаНоменклатуры, ЭтоНовыйЭлемент)
	
	Поля = Новый Структура;
	
	Поля.Вставить("XML_ID"			, ИнформацияОГруппаНоменклатуры.Идентификатор1С);  	
	Поля.Вставить("NAME"			, ИнформацияОГруппаНоменклатуры.Наименование);
	
	Поля.Вставить("SECTION_ID"		, ?(ЗначениеЗаполнено(ИнформацияОГруппаНоменклатуры.ИдентификаторБ24Родителя), ИнформацияОГруппаНоменклатуры.ИдентификаторБ24Родителя, ""));
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;  
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОГруппаНоменклатуры.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.productsection.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОГруппаНоменклатуры.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.productsection.update?id=" + ИнформацияОГруппаНоменклатуры.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоЕдиницамИзмеренияТоваров(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"	, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"		, ОбщиеНастройки.ТипыОбъектовОбмена.ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Портал"			, ОбщиеНастройки.Портал);	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Объект,
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Идентификатор1С,
	|	УпаковкиЕдиницыИзмерения.ПометкаУдаления КАК ПометкаУдаления,
	|	УпаковкиЕдиницыИзмерения.Наименование КАК Наименование,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	УпаковкиЕдиницыИзмерения.Код КАК Код,
	|	УпаковкиЕдиницыИзмерения.НаименованиеПолное КАК НаименованиеПолное,
	|	УпаковкиЕдиницыИзмерения.МеждународноеСокращение КАК МеждународноеСокращение
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО (ВремИдентификаторыОбъектов.Объект = УпаковкиЕдиницыИзмерения.Ссылка)
	|ГДЕ
	|	УпаковкиЕдиницыИзмерения.Ссылка В(&МассивДанных)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхПоЕдиницыИзмеренияНоменклатуры(ОбщиеНастройки, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 		
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоЕдиницыИзмеренияНоменклатуры(ОбщиеНастройки, ИнформацияОЕдиницеИзмерения, ЭтоНовыйЭлемент)
	
	Поля = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(ИнформацияОЕдиницеИзмерения.Код) тогда
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, "У единицы измерения: " + ИнформацияОЕдиницеИзмерения.Наименование + ". Пустой код, единица не будет выгружена в Битрикс24");
		Возврат "";	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИнформацияОЕдиницеИзмерения.Наименование) тогда
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, "У единицы измерения: " + ИнформацияОЕдиницеИзмерения.Наименование + ". Пустое Наименование, единица не будет выгружена в Битрикс24");
		Возврат "";	
	КонецЕсли;
	
	Поля.Вставить("CODE"				, ИнформацияОЕдиницеИзмерения.Код);  	
	Поля.Вставить("MEASURE_TITLE"		, ИнформацияОЕдиницеИзмерения.Наименование);
	Поля.Вставить("SIMBOL_RUS"			, ИнформацияОЕдиницеИзмерения.НаименованиеПолное);
	
	//Поля.Вставить("IS_DEFAULT"			, "N");
	Поля.Вставить("SIMBOL_INTL"			, ИнформацияОЕдиницеИзмерения.МеждународноеСокращение);
	Поля.Вставить("SIMBOL_LETTER_INTL"	, ИнформацияОЕдиницеИзмерения.МеждународноеСокращение);
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		
	КонецЦикла;  
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОЕдиницеИзмерения.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.measure.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОЕдиницеИзмерения.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.measure.update?id=" + ИнформацияОЕдиницеИзмерения.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоСвойствамТоваров(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;	
	
#Область ФормированиеВременныхТаблицДанных
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"			, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"				, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара);
	Запрос.УстановитьПараметр("ТипДанныхЗначенийСвойств", ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваТовара);
	Запрос.УстановитьПараметр("Портал"					, ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор,
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Справочник.ЗначенияСвойствОбъектов) КАК Объект
	|ПОМЕСТИТЬ ВремИдентификаторыЗначенийСвойств
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка,
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Идентификатор1С,
	|	ДополнительныеРеквизитыИСведения.ПометкаУдаления КАК ПометкаУдаления,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Заголовок,
	|	ДополнительныеРеквизитыИСведения.Наименование КАК Наименование,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно,
	|	ДополнительныеРеквизитыИСведения.НаборСвойств КАК НаборСвойств
	|ПОМЕСТИТЬ ВремСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Ссылка КАК Набор,
	|	ДополнительныеРеквизиты.Свойство КАК Свойство
	|ПОМЕСТИТЬ ВремВсеСвойстваНаборы
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Свойство В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Ссылка,
	|	ДополнительныеСведения.Свойство
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Свойство В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремВсеСвойстваНаборы.Набор КАК Набор,
	|	ВремВсеСвойстваНаборы.Свойство КАК Свойство
	|ПОМЕСТИТЬ ВремСвойстваНаборы
	|ИЗ
	|	ВремВсеСвойстваНаборы КАК ВремВсеСвойстваНаборы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремВсеСвойстваНаборы.Набор,
	|	ВремВсеСвойстваНаборы.Свойство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремВсеСвойстваНаборы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка КАК Объект,
	|	ЗначенияСвойствОбъектов.Ссылка КАК Идентификатор1С,
	|	ЗначенияСвойствОбъектов.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗначенияСвойствОбъектов.Наименование КАК Наименование,
	|	ЗначенияСвойствОбъектов.Наименование КАК ПолноеНаименование,
	|	ВремИдентификаторыЗначенийСвойств.Идентификатор КАК ИдентификаторБ24,
	|	ЗначенияСвойствОбъектов.Владелец КАК Свойство
	|ПОМЕСТИТЬ ВремЗначенияСвойств
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийСвойств КАК ВремИдентификаторыЗначенийСвойств
	|		ПО ЗначенияСвойствОбъектов.Ссылка = ВремИдентификаторыЗначенийСвойств.Объект
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец В
	|			(ВЫБРАТЬ
	|				ВремСвойства.Ссылка
	|			ИЗ
	|				ВремСвойства)
	|	И ЗначенияСвойствОбъектов.ПометкаУдаления = ЛОЖЬ
	|	И ЗначенияСвойствОбъектов.ЭтоГруппа = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыЗначенийСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремСвойства.Ссылка КАК Объект,
	|	ВремСвойства.Ссылка КАК Идентификатор1С,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремСвойства.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремСвойства.Заголовок КАК Заголовок,
	|	ВремСвойства.Наименование КАК Наименование,
	|	ВремСвойства.ТипЗначения КАК ТипЗначения,
	|	ВремСвойства.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно,
	|	ВремСвойства.НаборСвойств КАК НаборСвойств
	|ИЗ
	|	ВремСвойства КАК ВремСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО (ВремИдентификаторыОбъектов.Объект = ВремСвойства.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремСвойства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыОбъектов";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
#КонецОбласти	
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхПоСвойствамНоменклатуры(ОбщиеНастройки, Пакет, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24), МенеджерВременныхТаблиц);
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 		
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоСвойствамНоменклатуры(ОбщиеНастройки, Пакет, ИнформацияОСвойствеТовара, ЭтоНовыйЭлемент, МенеджерВременныхТаблиц)
	
	лЗначенияСвойств = "";
	
	Поля = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Свойство", ?(ИнформацияОСвойствеТовара.Объект.ВладелецДополнительныхЗначений.Пустая(), ИнформацияОСвойствеТовара.Объект,  ИнформацияОСвойствеТовара.Объект.ВладелецДополнительныхЗначений));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ *
	|ИЗ
	|	ВремСвойстваНаборы КАК ВремСвойстваНаборы
	|ГДЕ
	|	ВремСвойстваНаборы.Свойство = &Свойство";
	
	ВыборкаСвойстваНаборы = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаСвойстваНаборы.Следующий() Цикл
		
		Если ВыборкаСвойстваНаборы.Набор.ПринадлежитЭлементу(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры) ИЛИ ВыборкаСвойстваНаборы.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры тогда
			Поля.Вставить("XML_ID"	, "H_" + XMLСтрока(ИнформацияОСвойствеТовара.Идентификатор1С));  	
			Поля.Вставить("NAME"	, Б24_СинхронизацияПовтИсп.ПолучитьПрефиксСвойстваХарактеристики() + ИнформацияОСвойствеТовара.Заголовок);
			Прервать;
		ИначеЕсли ВыборкаСвойстваНаборы.Набор.ПринадлежитЭлементу(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура) ИЛИ ВыборкаСвойстваНаборы.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура тогда
			Поля.Вставить("XML_ID"	, ИнформацияОСвойствеТовара.Идентификатор1С);  
			Поля.Вставить("NAME"	, ИнформацияОСвойствеТовара.Заголовок);
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Поля.Вставить("ACTIVE"		, ?(ИнформацияОСвойствеТовара.ПометкаУдаления,"N","Y"));  	
	
	//Если ОбщиеНастройки.ПредопределенноеСвойствоВидаНоменклатуры = ИнформацияОСвойствеТовара.Объект тогда
	//	Поля.Вставить("IS_REQUIRED"		, "Y");  	
	//Иначе	
	Поля.Вставить("IS_REQUIRED"		, ?(ИнформацияОСвойствеТовара.ЗаполнятьОбязательно,"Y","N"));  	
	//КонецЕсли;	
	
	//Если ИнформацияОСвойствеТовара.Объект = ОбщиеНастройки.ПредопределенноеСвойствоКартинокИФайловНоменклатуры тогда
	//	Поля.Вставить("MULTIPLE"		, "Y"); 
	//	Поля.Вставить("PROPERTY_TYPE"	, "F"); 
	//	Поля.Вставить("FILE_TYPE"		, ""); 
	//	Поля.Вставить("USER_TYPE"		, ""); 
	//	Поля.Вставить("LINK_IBLOCK_ID"	, "null"); 
	//	
	//Иначе
	Поля.Вставить("MULTIPLE"		, "N");  	
	
	лТипСтрокой = Строка(ИнформацияОСвойствеТовара.ТипЗначения);
	
	Если лТипСтрокой = "Строка" тогда
		
		Если ИнформацияОСвойствеТовара.ТипЗначения.КвалификаторыСтроки.Длина = 0 тогда
			Поля.Вставить("PROPERTY_TYPE"	, "S");  
			Поля.Вставить("USER_TYPE"		, "HTML");  
		Иначе
			Поля.Вставить("PROPERTY_TYPE"	, "S");  
			Поля.Вставить("USER_TYPE"		, "");  
		КонецЕсли;
		
	ИначеЕсли лТипСтрокой = "Число" тогда
		Поля.Вставить("PROPERTY_TYPE", "N");  
	ИначеЕсли лТипСтрокой = "Дата" тогда
		Поля.Вставить("PROPERTY_TYPE"	, "S");
		
		Если ИнформацияОСвойствеТовара.ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.ДатаВремя тогда 
			Поля.Вставить("USER_TYPE", "DateTime"); 
		Иначе
			Поля.Вставить("USER_TYPE", "Date"); 
		КонецЕсли;
	ИначеЕсли лТипСтрокой = "Пользователь" тогда
		Поля.Вставить("USER_TYPE", "employee"); 
	ИначеЕсли лТипСтрокой = "Дополнительное значение" тогда
		Поля.Вставить("PROPERTY_TYPE"	, "L"); 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Свойство", ?(ИнформацияОСвойствеТовара.Объект.ВладелецДополнительныхЗначений.Пустая(), ИнформацияОСвойствеТовара.Объект,  ИнформацияОСвойствеТовара.Объект.ВладелецДополнительныхЗначений));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Текст = "ВЫБРАТЬ *
		|ИЗ
		|	ВремЗначенияСвойств КАК ВремЗначенияСвойств
		|ГДЕ
		|	ВремЗначенияСвойств.Свойство = &Свойство";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			лИдентификаторЗначения = ?(ЗначениеЗаполнено(Выборка.ИдентификаторБ24), Выборка.ИдентификаторБ24, XMLСтрока(Выборка.Объект));
			
			лЗначенияСвойств = лЗначенияСвойств +  "&fields[VALUES]["+лИдентификаторЗначения+"][XML_ID]=" + XMLСтрока(Выборка.Объект) + "&fields[VALUES]["+лИдентификаторЗначения+"][VALUE]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Выборка.Наименование); 
			
		КонецЦикла;
		
	Иначе
		УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара, Пакет, ИнформацияОСвойствеТовара.Объект);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Ошибка, "В свойствах не поддерживается тип: " + лТипСтрокой + " в свойстве - " + ИнформацияОСвойствеТовара.Заголовок);
		Возврат "";		
	КонецЕсли;
	//КонецЕсли;	
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
	КонецЦикла;  
	
	ТелоЗапроса = ТелоЗапроса +  лЗначенияСвойств;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСвойствеТовара.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.product.property.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСвойствеТовара.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.product.property.update?id=" + ИнформацияОСвойствеТовара.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции

Функция СформироватьЗапросПолученияIDЗначенийСвойствТоваров(ОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
	Запрос = новый Запрос;
	
	Запрос.УстановитьПараметр("МассивДанных"	, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"		, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара);
	Запрос.УстановитьПараметр("Портал"			, ОбщиеНастройки.Портал);
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Объект,
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Идентификатор1С,
	|	ДополнительныеРеквизитыИСведения.ПометкаУдаления КАК ПометкаУдаления,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Заголовок,
	|	ДополнительныеРеквизитыИСведения.Наименование КАК Наименование,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно
	|ПОМЕСТИТЬ ВремСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В(&МассивДанных)
	|	И ДополнительныеРеквизитыИСведения.ДополнительныеЗначенияИспользуются
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремСвойства.Объект КАК Идентификатор1С,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24
	|ИЗ
	|	ВремСвойства КАК ВремСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремСвойства.Объект = ВремИдентификаторыОбъектов.Объект";
	
	ВыполненныйЗапрос = Запрос.Выполнить();	
	
	мЭлементы 	=  Новый массив;
	
	Если НЕ ВыполненныйЗапрос.Пустой() тогда
		
		Выборка = ВыполненныйЗапрос.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ИдентификаторБ24) тогда
				мЭлементы.Добавить("cmd["+ XMLСтрока(Выборка.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.product.property.list?filter[ID]="  + Выборка.ИдентификаторБ24));
			Иначе
				УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваТовара, Пакет, Выборка.Идентификатор1С);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат мЭлементы;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоТоварам(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	мСвойстваИсключения = Новый Массив;
	мСвойстваИсключения.Добавить(ОбщиеНастройки.ПредопределенноеСвойствоВидаНоменклатуры);	
	//	мСвойстваИсключения.Добавить(ОбщиеНастройки.ПредопределенноеСвойствоКартинокИФайловНоменклатуры);	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	ИдСвойстваВидаНоменклатуры 	= Б24_СинхронизацияВызовСервера.ПолучитьИдОбъекта(ОбщиеНастройки.НастройкаСинхронизации,ОбщиеНастройки.ПредопределенноеСвойствоВидаНоменклатуры, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара); 
	ОбщиеНастройки.Вставить("ИдПредопределенногоСвойстваВидаНоменклатуры", ИдСвойстваВидаНоменклатуры);
	
	//ИдСвойстваКартинокИФайловНоменклатуры 	= Б24_СинхронизацияВызовСервера.ПолучитьИдОбъекта(ОбщиеНастройки.НастройкаСинхронизации,ОбщиеНастройки.ПредопределенноеСвойствоКартинокИФайловНоменклатуры, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара); 
	//ОбщиеНастройки.Вставить("ИдПредопределенногоСвойстваКартинокИФайловНоменклатуры", ИдСвойстваКартинокИФайловНоменклатуры);
	
	ТипЦены = Неопределено;
	ОбщиеНастройки.НастройкиСинхронизацииТоваров.Свойство("ТипЦены"	, ТипЦены);
	ОбщиеНастройки.Вставить("КодВалюты", ТипЦены.ВалютаЦены.Код); 
	
	тзнДанных = Новый ТаблицаЗначений;
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);
	тзнДанных.Колонки.Добавить("Объект", ОписаниеТипов);
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);
	тзнДанных.Колонки.Добавить("ПодчиненныйОбъект", ОписаниеТипов);
	
	Для Каждого ТекЭлемент из МассивДанных Цикл
		НоваяСтрока = тзнДанных.Добавить();
		НоваяСтрока.Объект 				= ТекЭлемент.Объект;
		НоваяСтрока.ПодчиненныйОбъект 	= ТекЭлемент.ПодчиненныйОбъект;
	КонецЦикла;
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	
#Область ФормированиеВременныхТаблицДанных
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТоварыСХарактеристкамиПакета", тзнДанных);
	Запрос.УстановитьПараметр("ТипДанных"					, ОбщиеНастройки.ТипыОбъектовОбмена.Товар);
	Запрос.УстановитьПараметр("ТипДанныхСвойство"			, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара);
	Запрос.УстановитьПараметр("ТипДанныхЗначениеСвойства"	, ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваТовара);
	Запрос.УстановитьПараметр("ТипДанныхЕдиницаИзмерения"	, ОбщиеНастройки.ТипыОбъектовОбмена.ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("ТипДанныхКартинкаФайлТовара"	, ОбщиеНастройки.ТипыОбъектовОбмена.КартинкаФайлТовара);
	Запрос.УстановитьПараметр("СвойствоВидаНоменклатуры"	, ОбщиеНастройки.ПредопределенноеСвойствоВидаНоменклатуры);
	Запрос.УстановитьПараметр("Портал"			 			, ОбщиеНастройки.Портал);
	Запрос.УстановитьПараметр("НастройкаСинхронизации"		, ОбщиеНастройки.НастройкаСинхронизации);
	
	Запрос.УстановитьПараметр("ВыгружатьКартинкиИФайлы"		, ОбщиеНастройки.НастройкиСинхронизацииТоваров.ВыгружатьКартинкиИФайлы);
	Запрос.УстановитьПараметр("ВыгружатьВсеКартинкиИФайлы"	, ОбщиеНастройки.НастройкиСинхронизацииТоваров.ВыгружатьКартинкиИФайлы И ОбщиеНастройки.ПолнаяВыгрузка);
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("СписокРасширенийКартинок"	, Б24_ОбщегоНазначенияСервер.ПолучитьМассивРазрешенныхРасширенийКартинок());
	Запрос.УстановитьПараметр("СписокСвойствИсключений"		, мСвойстваИсключения);
	
	Запрос.УстановитьПараметр("ТипЦены", ТипЦены);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТоварыСХарактеристкамиПакета.Объект КАК Объект,
	|	ВЫРАЗИТЬ(ТоварыСХарактеристкамиПакета.ПодчиненныйОбъект КАК Справочник.ХарактеристикиНоменклатуры) КАК ПодчиненныйОбъект
	|ПОМЕСТИТЬ ВремНоменклатураСХарактеристиками
	|ИЗ
	|	&ТоварыСХарактеристкамиПакета КАК ТоварыСХарактеристкамиПакета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект,
	|	ПодчиненныйОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Справочник.Номенклатура) КАК Объект,
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.ПодчиненныйОбъект КАК Справочник.ХарактеристикиНоменклатуры) КАК ПодчиненныйОбъект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И (Б24_ИдентификаторыОбъектов.Объект, Б24_ИдентификаторыОбъектов.ПодчиненныйОбъект) В
	|			(ВЫБРАТЬ
	|				ВремНоменклатураСХарактеристиками.Объект,
	|				ВремНоменклатураСХарактеристиками.ПодчиненныйОбъект
	|			ИЗ
	|				ВремНоменклатураСХарактеристиками)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект,
	|	ПодчиненныйОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыЕдиницИзмерения
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхЕдиницаИзмерения
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыЗначенийСвойств
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхЗначениеСвойства
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка КАК ЗначениеСвойства,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВремИдентификаторыЗначенийСвойств.Идентификатор КАК ИдентификаторБ24ВидаНоменклатуры
	|ПОМЕСТИТЬ ВремЗначенияСвойствВидаНоменклатуры
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ЗначенияСвойствОбъектов.Наименование = ВидыНоменклатуры.Наименование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийСвойств КАК ВремИдентификаторыЗначенийСвойств
	|		ПО ЗначенияСвойствОбъектов.Ссылка = ВремИдентификаторыЗначенийСвойств.Объект
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец = &СвойствоВидаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремНоменклатураСХарактеристиками.Объект КАК Объект,
	|	ВремНоменклатураСХарактеристиками.ПодчиненныйОбъект КАК ПодчиненныйОбъект,
	|	Номенклатура.ПометкаУдаления КАК ПометкаУдаленияНоменклатуры,
	|	ХарактеристикиНоменклатуры.ПометкаУдаления КАК ПометкаУдаленияХарактеристикиНоменклатуры,
	|	Номенклатура.Родитель КАК Родитель,
	|	Номенклатура.Наименование КАК НаименованиеНоменклатуры,
	|	ХарактеристикиНоменклатуры.Наименование КАК НаименованиеХарактеристикиНоменклатуры,
	|	Номенклатура.Описание КАК НаименованиеПолноеНоменклатуры,
	|	ХарактеристикиНоменклатуры.НаименованиеПолное КАК НаименованиеПолноеХарактеристикиНоменклатуры,
	|	Номенклатура.Артикул КАК Артикул,
	|	Номенклатура.Производитель КАК Производитель,
	|	Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	Номенклатура.ФайлКартинки КАК ФайлКартинкиНоменклатуры,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВремЗначенияСвойствВидаНоменклатуры.ИдентификаторБ24ВидаНоменклатуры КАК ИдентификаторБ24ВидаНоменклатуры
	|ПОМЕСТИТЬ ВремИнформацияНоменклатурыСХарактеристиками
	|ИЗ
	|	ВремНоменклатураСХарактеристиками КАК ВремНоменклатураСХарактеристиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВремНоменклатураСХарактеристиками.Объект = Номенклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВремНоменклатураСХарактеристиками.ПодчиненныйОбъект = ХарактеристикиНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремЗначенияСвойствВидаНоменклатуры КАК ВремЗначенияСвойствВидаНоменклатуры
	|		ПО (Номенклатура.ВидНоменклатуры = ВремЗначенияСвойствВидаНоменклатуры.ВидНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремЗначенияСвойствВидаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремИнформацияНоменклатурыСХарактеристиками.Объект КАК Объект,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ПодчиненныйОбъект КАК ПодчиненныйОбъект,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ПометкаУдаленияНоменклатуры КАК ПометкаУдаленияНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ПометкаУдаленияХарактеристикиНоменклатуры КАК ПометкаУдаленияХарактеристикиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.Родитель КАК Родитель,
	|	ВремИнформацияНоменклатурыСХарактеристиками.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.НаименованиеХарактеристикиНоменклатуры КАК НаименованиеХарактеристикиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.НаименованиеПолноеНоменклатуры КАК НаименованиеПолноеНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.НаименованиеПолноеХарактеристикиНоменклатуры КАК НаименованиеПолноеХарактеристикиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ЕдиницаИзмерения КАК ИдентификаторЕдиницыИзмерения1С,
	|	ВремИдентификаторыЕдиницИзмерения.Идентификатор КАК ИдентификаторЕдиницыИзмеренияБ24,
	|	ВремИнформацияНоменклатурыСХарактеристиками.Артикул КАК Артикул,
	|	ВремИнформацияНоменклатурыСХарактеристиками.Производитель КАК Производитель,
	|	ВремИнформацияНоменклатурыСХарактеристиками.СтавкаНДС КАК СтавкаНДС,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ФайлКартинкиНоменклатуры КАК ФайлКартинкиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристиками.ИдентификаторБ24ВидаНоменклатуры КАК ИдентификаторБ24ВидаНоменклатуры
	|ПОМЕСТИТЬ ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами
	|ИЗ
	|	ВремИнформацияНоменклатурыСХарактеристиками КАК ВремИнформацияНоменклатурыСХарактеристиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремИнформацияНоменклатурыСХарактеристиками.Объект = ВремИдентификаторыОбъектов.Объект
	|			И ВремИнформацияНоменклатурыСХарактеристиками.ПодчиненныйОбъект = ВремИдентификаторыОбъектов.ПодчиненныйОбъект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЕдиницИзмерения КАК ВремИдентификаторыЕдиницИзмерения
	|		ПО ВремИнформацияНоменклатурыСХарактеристиками.ЕдиницаИзмерения = ВремИдентификаторыЕдиницИзмерения.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыЕдиницИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИнформацияНоменклатурыСХарактеристиками
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.Объект КАК Объект,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ПодчиненныйОбъект КАК ПодчиненныйОбъект,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ИдентификаторБ24 КАК ИдентификаторБ24,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ПометкаУдаленияНоменклатуры КАК ПометкаУдаленияНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ПометкаУдаленияХарактеристикиНоменклатуры КАК ПометкаУдаленияХарактеристикиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.Родитель КАК Родитель,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.НаименованиеХарактеристикиНоменклатуры КАК НаименованиеХарактеристикиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.НаименованиеПолноеНоменклатуры КАК НаименованиеПолноеНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.НаименованиеПолноеХарактеристикиНоменклатуры КАК НаименованиеПолноеХарактеристикиНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ИдентификаторЕдиницыИзмерения1С КАК ИдентификаторЕдиницыИзмерения1С,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ИдентификаторЕдиницыИзмеренияБ24 КАК ИдентификаторЕдиницыИзмеренияБ24,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.Артикул КАК Артикул,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.Производитель КАК Производитель,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.СтавкаНДС КАК СтавкаНДС,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ФайлКартинкиНоменклатуры КАК ФайлКартинкиНоменклатуры,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ВидыЦен.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ИдентификаторБ24ВидаНоменклатуры КАК ИдентификаторБ24ВидаНоменклатуры
	|ИЗ
	|	ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами КАК ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ВидЦены = &ТипЦены) КАК ЦеныНоменклатурыСрезПоследних
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК ВидыЦен
	|			ПО ЦеныНоменклатурыСрезПоследних.ВидЦены = ВидыЦен.Ссылка
	|		ПО ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.Объект = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами.ПодчиненныйОбъект = ЦеныНоменклатурыСрезПоследних.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИнформацияНоменклатурыСХарактеристикамиСИдентификаторами";
	
	ТекстЗапроса = ТекстЗапроса + "	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВремНоменклатураСХарактеристиками.Объект КАК Номенклатура,
	|	ВидыНоменклатуры.НаборСвойств КАК НаборСвойств
	|ПОМЕСТИТЬ ВремНоменклатура
	|ИЗ
	|	ВремНоменклатураСХарактеристиками КАК ВремНоменклатураСХарактеристиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|		ПО ВремНоменклатураСХарактеристиками.Объект = Номенклатура.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремНоменклатураСХарактеристиками.Объект КАК Номенклатура,
	|	ВремНоменклатураСХарактеристиками.ПодчиненныйОбъект КАК Характеристика,
	|	ВидыНоменклатуры.НаборСвойствХарактеристик КАК НаборСвойствХарактеристики
	|ПОМЕСТИТЬ ВремНоменклатураСХарактеристикамиИНаборами
	|ИЗ
	|	ВремНоменклатураСХарактеристиками КАК ВремНоменклатураСХарактеристиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|		ПО ВремНоменклатураСХарактеристиками.Объект = Номенклатура.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК СвойствоНоменклатуры
	|ПОМЕСТИТЬ ВремСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	НЕ ДополнительныеРеквизитыИСведения.Ссылка В (&СписокСвойствИсключений)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СвойствоНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДопРеквизиты.Номенклатура КАК Номенклатура,
	|	ДопРеквизиты.Свойство КАК Свойство,
	|	ЗначенияДопРеквизитов.Значение КАК Значение
	|ПОМЕСТИТЬ ВремЗначенияСвойствТовараВрем
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВремНоменклатура.Номенклатура КАК Номенклатура,
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатура КАК ВремНоменклатура
	|			ПО НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ВремНоменклатура.НаборСвойств
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВремНоменклатура.Номенклатура,
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатура КАК ВремНоменклатура
	|			ПО (НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие))) КАК ДопРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ЗначенияДопРеквизитов
	|		ПО ДопРеквизиты.Свойство = ЗначенияДопРеквизитов.Свойство
	|			И ДопРеквизиты.Номенклатура = ЗначенияДопРеквизитов.Ссылка
	|ГДЕ
	|	ДопРеквизиты.Свойство В
	|			(ВЫБРАТЬ
	|				ВремСвойства.СвойствоНоменклатуры
	|			ИЗ
	|				ВремСвойства)
	|	И НЕ ДопРеквизиты.Свойство ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДопСведения.Номенклатура,
	|	ДопСведения.Свойство,
	|	ЗначенияДопСведений.Значение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВремНоменклатура.Номенклатура КАК Номенклатура,
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство КАК Свойство
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатура КАК ВремНоменклатура
	|			ПО НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ВремНоменклатура.НаборСвойств
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВремНоменклатура.Номенклатура,
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатура КАК ВремНоменклатура
	|			ПО (НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство.НаборСвойств = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие))) КАК ДопСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияДопСведений
	|		ПО ДопСведения.Свойство = ЗначенияДопСведений.Свойство
	|			И ДопСведения.Номенклатура = ЗначенияДопСведений.Объект
	|ГДЕ
	|	ДопСведения.Свойство В
	|			(ВЫБРАТЬ
	|				ВремСвойства.СвойствоНоменклатуры
	|			ИЗ
	|				ВремСвойства)
	|	И НЕ ДопСведения.Свойство ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремЗначенияСвойствТовараВрем.Свойство КАК Свойство,
	|	ВремЗначенияСвойствТовараВрем.Свойство КАК Идентификатор1С,
	|	ИдентификаторыСвойств.Идентификатор КАК ИдентификаторСвойстваБ24,
	|	ВремЗначенияСвойствТовараВрем.Значение КАК Значение,
	|	ВремИдентификаторыЗначенийСвойств.Идентификатор КАК ИдентификаторЗначенияСвойстваБ24,
	|	ВремЗначенияСвойствТовараВрем.Номенклатура КАК Номенклатура,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ДополнительныеЗначенияИспользуются КАК ДополнительныеЗначенияИспользуются
	|ПОМЕСТИТЬ ВремЗначенияСвойствНоменклатуры
	|ИЗ
	|	ВремЗначенияСвойствТовараВрем КАК ВремЗначенияСвойствТовараВрем
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|			Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|		ИЗ
	|			РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|		ГДЕ
	|			Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхСвойство
	| И Б24_ИдентификаторыОбъектов.Портал = &Портал) КАК ИдентификаторыСвойств
	|		ПО ВремЗначенияСвойствТовараВрем.Свойство = ИдентификаторыСвойств.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийСвойств КАК ВремИдентификаторыЗначенийСвойств
	|		ПО ВремЗначенияСвойствТовараВрем.Значение = ВремИдентификаторыЗначенийСвойств.Объект
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО ВремЗначенияСвойствТовараВрем.Свойство = ДополнительныеРеквизитыИСведения.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремЗначенияСвойствТовараВрем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ДопРеквизиты.Номенклатура КАК Номенклатура,
	|	ДопРеквизиты.Свойство КАК Свойство,
	|	ЗначенияДопРеквизитов.Значение КАК Значение,
	|	ДопРеквизиты.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВремЗначенияСвойствХарактеристикВрем
	|ИЗ
	|	(ВЫБРАТЬ
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Номенклатура КАК Номенклатура,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Характеристика КАК Характеристика
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатураСХарактеристикамиИНаборами КАК ВремНоменклатураСХарактеристикамиИНаборами
	|			ПО НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ВремНоменклатураСХарактеристикамиИНаборами.НаборСвойствХарактеристики
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Номенклатура,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Характеристика
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатураСХарактеристикамиИНаборами КАК ВремНоменклатураСХарактеристикамиИНаборами
	|			ПО (НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие))) КАК ДопРеквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ЗначенияДопРеквизитов
	|		ПО ДопРеквизиты.Свойство = ЗначенияДопРеквизитов.Свойство
	|			И ДопРеквизиты.Характеристика = ЗначенияДопРеквизитов.Ссылка
	|ГДЕ
	|	ДопРеквизиты.Свойство В
	|			(ВЫБРАТЬ
	|				ВремСвойства.СвойствоНоменклатуры
	|			ИЗ
	|				ВремСвойства)
	|	И НЕ ДопРеквизиты.Свойство ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДопСведения.Номенклатура,
	|	ДопСведения.Свойство,
	|	ЗначенияДопСведений.Значение,
	|	ДопСведения.Характеристика
	|ИЗ
	|	(ВЫБРАТЬ
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство КАК Свойство,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Номенклатура КАК Номенклатура,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Характеристика КАК Характеристика
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатураСХарактеристикамиИНаборами КАК ВремНоменклатураСХарактеристикамиИНаборами
	|			ПО НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ВремНоменклатураСХарактеристикамиИНаборами.НаборСвойствХарактеристики
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Номенклатура,
	|		ВремНоменклатураСХарактеристикамиИНаборами.Характеристика
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатураСХарактеристикамиИНаборами КАК ВремНоменклатураСХарактеристикамиИНаборами
	|			ПО (НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка = ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие))) КАК ДопСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ЗначенияДопСведений
	|		ПО ДопСведения.Свойство = ЗначенияДопСведений.Свойство
	|			И ДопСведения.Характеристика = ЗначенияДопСведений.Объект
	|ГДЕ
	|	ДопСведения.Свойство В
	|			(ВЫБРАТЬ
	|				ВремСвойства.СвойствоНоменклатуры
	|			ИЗ
	|				ВремСвойства)
	|	И НЕ ДопСведения.Свойство ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Характеристика,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремЗначенияСвойствХарактеристикВрем.Свойство КАК Свойство,
	|	ВремЗначенияСвойствХарактеристикВрем.Свойство КАК Идентификатор1С,
	|	ИдентификаторыСвойств.Идентификатор КАК ИдентификаторСвойстваБ24,
	|	ВремЗначенияСвойствХарактеристикВрем.Значение КАК Значение,
	|	ВремИдентификаторыЗначенийСвойств.Идентификатор КАК ИдентификаторЗначенияСвойстваБ24,
	|	ВремЗначенияСвойствХарактеристикВрем.Номенклатура КАК Номенклатура,
	|	ВремЗначенияСвойствХарактеристикВрем.Характеристика КАК Характеристика,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ДополнительныеЗначенияИспользуются КАК ДополнительныеЗначенияИспользуются
	|ПОМЕСТИТЬ ВремЗначенияСвойствХарактеристикНоменклатуры
	|ИЗ
	|	ВремЗначенияСвойствХарактеристикВрем КАК ВремЗначенияСвойствХарактеристикВрем
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийСвойств КАК ВремИдентификаторыЗначенийСвойств
	|		ПО ВремЗначенияСвойствХарактеристикВрем.Значение = ВремИдентификаторыЗначенийСвойств.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|			Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|		ИЗ
	|			РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|		ГДЕ
	|			Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхСвойство
	|			И  Б24_ИдентификаторыОбъектов.Портал = &Портал) КАК ИдентификаторыСвойств
	|		ПО ВремЗначенияСвойствХарактеристикВрем.Свойство = ИдентификаторыСвойств.Объект
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО ВремЗначенияСвойствХарактеристикВрем.Свойство = ДополнительныеРеквизитыИСведения.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Характеристика,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремЗначенияСвойствХарактеристикВрем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремСвойства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураСХарактеристикамиИНаборами";


	
	
	ТекстЗапроса = ТекстЗапроса + "	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла,
	|	ИСТИНА КАК ЭтоНоменклатуры,
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Файл,
	|	НоменклатураПрисоединенныеФайлы.Наименование КАК Наименование,
	|	НоменклатураПрисоединенныеФайлы.Описание КАК Описание,
	|	НоменклатураПрисоединенныеФайлы.ТипХраненияФайла КАК ТипХраненияФайла,
	|	НоменклатураПрисоединенныеФайлы.Расширение КАК Расширение,
	|	НоменклатураПрисоединенныеФайлы.ДатаСоздания КАК ДатаСоздания,
	|	НоменклатураПрисоединенныеФайлы.Том.ПолныйПутьWindows КАК ТомПолныйПутьWindows,
	|	НоменклатураПрисоединенныеФайлы.Том.ПолныйПутьLinux КАК ТомПолныйПутьLinux,
	|	НоменклатураПрисоединенныеФайлы.ПутьКФайлу КАК ПутьКФайлу
	|ПОМЕСТИТЬ ВремНоменклатураСВсемиПрисоединеннымиФайлами
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	|	&ВыгружатьКартинкиИФайлы = ИСТИНА
	|	И НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
	|	И НоменклатураПрисоединенныеФайлы.ВладелецФайла В
	|			(ВЫБРАТЬ
	|				ВремНоменклатураСХарактеристиками.Объект
	|			ИЗ
	|				ВремНоменклатураСХарактеристиками)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Файл КАК Файл
	|ПОМЕСТИТЬ ВремНоменклатураСНужнымиПрисоединеннымиФайлами
	|ИЗ
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами КАК ВремНоменклатураСВсемиПрисоединеннымиФайлами
	|ГДЕ
	|	&ВыгружатьВсеКартинкиИФайлы = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Файл
	|ИЗ
	|	РегистрСведений.Б24_ТаблицаИзменений КАК Б24_ТаблицаИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремНоменклатураСВсемиПрисоединеннымиФайлами КАК ВремНоменклатураСВсемиПрисоединеннымиФайлами
	|		ПО Б24_ТаблицаИзменений.Объект = ВремНоменклатураСВсемиПрисоединеннымиФайлами.Файл
	|ГДЕ
	|	Б24_ТаблицаИзменений.НастройкаСинхронизации = &НастройкаСинхронизации
	|	И &ВыгружатьВсеКартинкиИФайлы = ЛОЖЬ
	|	И Б24_ТаблицаИзменений.ТипДанных = &ТипДанныхКартинкаФайлТовара
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Файл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВремНоменклатураСНужнымиПрисоединеннымиФайлами.Файл КАК Файл,
	//|	ПрисоединенныеФайлы.ХранимыйФайл КАК ХранимыйФайл
	|	Неопределено КАК ХранимыйФайл
	|ПОМЕСТИТЬ ВремНужныеФайлыНоменклатуры
	|ИЗ
	|	ВремНоменклатураСНужнымиПрисоединеннымиФайлами КАК ВремНоменклатураСНужнымиПрисоединеннымиФайлами
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрисоединенныеФайлы КАК ПрисоединенныеФайлы
	//|		ПО ВремНоменклатураСНужнымиПрисоединеннымиФайлами.Файл = ПрисоединенныеФайлы.ПрисоединенныйФайл
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Файл
	|;
	|
	//|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураСНужнымиПрисоединеннымиФайлами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.ВладелецФайла КАК ВладелецФайла,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Файл,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Наименование,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Описание,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.ТипХраненияФайла,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.Расширение,
	|	ВремНужныеФайлыНоменклатуры.ХранимыйФайл,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.ДатаСоздания,
	|	ВЫБОР
	|		КОГДА ВремНужныеФайлыНоменклатуры.Файл ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НадоВыгружать,
	|	ВЫБОР
	|		КОГДА ВремНоменклатураСВсемиПрисоединеннымиФайлами.Расширение В (&СписокРасширенийКартинок)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоКартинка,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.ТомПолныйПутьWindows,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.ТомПолныйПутьLinux,
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами.ПутьКФайлу
	|ПОМЕСТИТЬ ВремФайлыНоменклатуры
	|ИЗ
	|	ВремНоменклатураСВсемиПрисоединеннымиФайлами КАК ВремНоменклатураСВсемиПрисоединеннымиФайлами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремНужныеФайлыНоменклатуры КАК ВремНужныеФайлыНоменклатуры
	|		ПО ВремНоменклатураСВсемиПрисоединеннымиФайлами.Файл = ВремНужныеФайлыНоменклатуры.Файл
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВладелецФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНоменклатураСВсемиПрисоединеннымиФайлами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремНужныеФайлыНоменклатуры";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
#КонецОбласти
	
	тзнПрвязкаНоменклатурыКГруппам = ПолучитьПривязкуНоменклатурыКГруппам(ОбщиеНастройки, тзнДанных.ВыгрузитьКолонку("Объект"));
	
	мЭлементы 	=  Новый массив;
	
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхНоменклатуры(ОбщиеНастройки, Выборка, МенеджерВременныхТаблиц, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24), тзнПрвязкаНоменклатурыКГруппам);
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.КартинкиИФайлыНоменклатуры 				= ОбщиеНастройки.КартинкиИФайлыНоменклатуры; 		
	//пОбщиеНастройки.КартинкиИФайлыХарактеристикНоменклатуры = ОбщиеНастройки.КартинкиИФайлыХарактеристикНоменклатуры;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 	
	
	Возврат мЭлементы;	
	
КонецФункции

Функция ПолучитьПривязкуНоменклатурыКГруппам(ОбщиеНастройки, МассивДанных)
	
	лЕстьДеревоГрупп = Б24_СинхронизацияПовтИсп.ЕстьПользовательскоеДеревоГрупп(ОбщиеНастройки.НастройкаСинхронизации);
	
	Если НЕ лЕстьДеревоГрупп тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("МассивДанных"	, МассивДанных);
		Запрос.УстановитьПараметр("ТипДанныхГруппы"	, ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара);
		Запрос.УстановитьПараметр("Портал"			, ОбщиеНастройки.Портал);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	Б24_ИдентификаторыОбъектов.Объект КАК Группа,
		|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ВремИдентификаторыГрупп
		|ИЗ
		|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
		|ГДЕ
		|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхГруппы
		|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.Родитель КАК Родитель
		|ПОМЕСТИТЬ ВремНоменклатура
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&МассивДанных)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Родитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремНоменклатура.Номенклатура КАК Номенклатура,
		|	ВремИдентификаторыГрупп.Идентификатор КАК Идентификатор
		|ИЗ
		|	ВремНоменклатура КАК ВремНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыГрупп КАК ВремИдентификаторыГрупп
		|		ПО (ВремИдентификаторыГрупп.Группа = ВремНоменклатура.Родитель)"; 
		
		ТаблицаТоваровДереваГрупп = Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		ТаблицаТоваровДереваГрупп = Новый ТаблицаЗначений;
		ТаблицаТоваровДереваГрупп.Колонки.Добавить("Идентификатор");
		ТаблицаТоваровДереваГрупп.Колонки.Добавить("Номенклатура");
		ТаблицаТоваровДереваГрупп.Индексы.Добавить("Номенклатура");
		
		ЗапросГрупп = Новый Запрос;
		ЗапросГрупп.УстановитьПараметр("ТипДанныхГруппы", ОбщиеНастройки.ТипыОбъектовОбмена.ГруппаТовара);
		ЗапросГрупп.УстановитьПараметр("Инфоблок"		, ОбщиеНастройки.ДеревоГрупп); 
		ЗапросГрупп.УстановитьПараметр("Портал"			, ОбщиеНастройки.Портал);
		
		ЗапросГрупп.Текст = "ВЫБРАТЬ
		|	Б24_ИдентификаторыОбъектов.Объект КАК Группа,
		|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ВремИдентификаторыГрупп
		|ИЗ
		|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
		|ГДЕ
		|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхГруппы
		|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Б24_ПользовательскиеГруппыТоваровТовары.Номенклатура КАК Номенклатура,
		|	Б24_ПользовательскиеГруппыТоваровТовары.Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
		|	ВремИдентификаторыГрупп.Идентификатор КАК ИдентификаторРаздела
		|ИЗ
		|	Справочник.Б24_ПользовательскиеГруппыТоваров.Товары КАК Б24_ПользовательскиеГруппыТоваровТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыГрупп КАК ВремИдентификаторыГрупп
		|		ПО Б24_ПользовательскиеГруппыТоваровТовары.Ссылка = ВремИдентификаторыГрупп.Группа
		|ГДЕ
		|	Б24_ПользовательскиеГруппыТоваровТовары.Ссылка В ИЕРАРХИИ(&Инфоблок)";
		
		ВыборкаГрупп = ЗапросГрупп.Выполнить().Выбрать();
		
		МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
		
		ЗапросТоваров = Новый Запрос;
		ЗапросТоваров.УстановитьПараметр("МассивДанных"	, МассивДанных);
		ЗапросТоваров.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ЗапросТоваров.Текст = "ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ ВремНоменклатура
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&МассивДанных)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура";	
		ЗапросТоваров.Выполнить();
		
		ЗапросТоваров = Новый Запрос;
		ЗапросТоваров.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Пока ВыборкаГрупп.Следующий() Цикл
			
			Если ВыборкаГрупп.ЭтоГруппа = Истина тогда
				ЗапросТоваров.Текст = 
				"ВЫБРАТЬ
				|	ВремНоменклатура.Номенклатура
				|ИЗ
				|	ВремНоменклатура КАК ВремНоменклатура
				|ГДЕ
				|	ВремНоменклатура.Номенклатура В ИЕРАРХИИ(&Группа)";
				ЗапросТоваров.УстановитьПараметр("Группа", ВыборкаГрупп.Номенклатура);
			Иначе
				ЗапросТоваров.Текст = 
				"ВЫБРАТЬ
				|	ВремНоменклатура.Номенклатура
				|ИЗ
				|	ВремНоменклатура КАК ВремНоменклатура
				|ГДЕ
				|	ВремНоменклатура.Номенклатура = &Номенклатура";
				ЗапросТоваров.УстановитьПараметр("Номенклатура", ВыборкаГрупп.Номенклатура);
			КонецЕсли;
			
			Результат = ЗапросТоваров.Выполнить();
			Если Результат.Пустой() Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаТоваров = Результат.Выбрать();
			
			Пока ВыборкаТоваров.Следующий() Цикл
				
				НовСтрока = ТаблицаТоваровДереваГрупп.Добавить();
				НовСтрока.Идентификатор = ВыборкаГрупп.ИдентификаторРаздела; 
				НовСтрока.Номенклатура 	= ВыборкаТоваров.Номенклатура; 
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаТоваровДереваГрупп.Свернуть("Идентификатор, Номенклатура");
	
	Возврат ТаблицаТоваровДереваГрупп;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхНоменклатуры(ОбщиеНастройки, ИнформацияОНоменклатуре, МенеджерВременныхТаблиц, ЭтоНовыйЭлемент, тзнПрвязкаНоменклатурыКГруппам)
	
	Поля = Новый Структура;
	
	ЕстьХарактеристика = ЗначениеЗаполнено(ИнформацияОНоменклатуре.ПодчиненныйОбъект);
	
	Если НЕ ЕстьХарактеристика тогда
		ВнешнийИдентификатор = XMLСтрока(ИнформацияОНоменклатуре.Объект);	
		Активный 			 = ИнформацияОНоменклатуре.ПометкаУдаленияНоменклатуры;	
		Наименование 		 = ИнформацияОНоменклатуре.НаименованиеНоменклатуры;
		НаименованиеПолное 	 = ИнформацияОНоменклатуре.НаименованиеПолноеНоменклатуры;
	Иначе
		ВнешнийИдентификатор = XMLСтрока(ИнформацияОНоменклатуре.Объект) + "#" + XMLСтрока(ИнформацияОНоменклатуре.ПодчиненныйОбъект);	
		Активный = ИнформацияОНоменклатуре.ПометкаУдаленияХарактеристикиНоменклатуры;	
		
		РазделительНаименований = Б24_СинхронизацияПовтИсп.ПолучитьРазделительНаименованийНоменклатуры();
		Наименование 		 = ИнформацияОНоменклатуре.НаименованиеНоменклатуры + РазделительНаименований + ИнформацияОНоменклатуре.НаименованиеХарактеристикиНоменклатуры;
		НаименованиеПолное 	 = ИнформацияОНоменклатуре.НаименованиеПолноеНоменклатуры + РазделительНаименований + ИнформацияОНоменклатуре.НаименованиеПолноеХарактеристикиНоменклатуры;
	КонецЕсли;                                                
	
	Поля.Вставить("XML_ID"		, ВнешнийИдентификатор);  	
	Поля.Вставить("ACTIVE"		, ?(Активный,"N","Y"));  	
	Поля.Вставить("NAME"		, Наименование);
	Поля.Вставить("DESCRIPTION"	, НаименованиеПолное);
	
	лВалютаСимвольныйКод = ПолучитьВалютуПоКоду(Лев(ОбщиеНастройки.КодВалюты, 3));
	Если ЗначениеЗаполнено(лВалютаСимвольныйКод) тогда
		Поля.Вставить("CURRENCY_ID", лВалютаСимвольныйКод);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОНоменклатуре.Цена) тогда
		Поля.Вставить("PRICE"	, ИнформацияОНоменклатуре.Цена);
	Иначе
		Поля.Вставить("PRICE"	, 0);
	КонецЕсли;
	
	Поля.Вставить("VAT_INCLUDED", ?(ИнформацияОНоменклатуре.ЦенаВключаетНДС = Истина,"Y","N"));
	
	НайденнаяСтрока = ОбщиеНастройки.НастройкиСинхронизацииТоваров.СтавкиНДС.Найти(ИнформацияОНоменклатуре.СтавкаНДС);
	
	Если НайденнаяСтрока <> Неопределено тогда
		Поля.Вставить("VAT_ID", НайденнаяСтрока.ИдСтавки);
	Иначе
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Ставка НДС: " + Строка(ИнформацияОНоменклатуре.СтавкаНДС) + " не поддерживается модулем. Нужно прописать ID руками в коде 1С.");
	КонецЕсли;
	
	
	НайденныеCтроки = тзнПрвязкаНоменклатурыКГруппам.НайтиСтроки(Новый Структура("Номенклатура", ИнформацияОНоменклатуре.Объект));
	
	Если НайденныеCтроки.Количество() = 0  тогда	
		Поля.Вставить("SECTION_ID", "");	
	ИначеЕсли НайденныеCтроки.Количество() = 1  тогда	
		
		ИдентификаторРаздела = тзнПрвязкаНоменклатурыКГруппам.НайтиСтроки(Новый Структура("Номенклатура", ИнформацияОНоменклатуре.Объект))[0].Идентификатор;
		Поля.Вставить("SECTION_ID", ?(ЗначениеЗаполнено(ИдентификаторРаздела), ИдентификаторРаздела, ""));
		
	ИначеЕсли НайденныеCтроки.Количество() > 1  тогда	
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Информация, "Товар " + ИнформацияОНоменклатуре.НаименованиеНоменклатуры + " привязан к нескольким разделам. Будет указан первый.");
		ИдентификаторРаздела = тзнПрвязкаНоменклатурыКГруппам.НайтиСтроки(Новый Структура("Номенклатура", ИнформацияОНоменклатуре.Объект))[0].Идентификатор;
		Поля.Вставить("SECTION_ID", ?(ЗначениеЗаполнено(ИдентификаторРаздела), ИдентификаторРаздела, ""));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОНоменклатуре.ИдентификаторЕдиницыИзмеренияБ24) тогда
		Поля.Вставить("MEASURE"		, ИнформацияОНоменклатуре.ИдентификаторЕдиницыИзмеренияБ24);
	КонецЕсли;	
	
	ПараметрыКартинки 	= "";
	ЗначенияСвойств 	= "";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВремФайлыНоменклатуры ГДЕ ВремФайлыНоменклатуры.ВладелецФайла В (&ВладелецФайла)"; 
	
	ВладелецФайла = Новый Массив;
	ВладелецФайла.Добавить(ИнформацияОНоменклатуре.Объект);
	
	Запрос.УстановитьПараметр("ВладелецФайла", ВладелецФайла);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаименованиеФайла = Выборка.Наименование + ?(Лев(Выборка.Расширение, 1) = ".",Выборка.Расширение, "." + Выборка.Расширение);
		
		Если Выборка.НадоВыгружать И ((НЕ ЕстьХарактеристика И Выборка.Файл = ИнформацияОНоменклатуре.ФайлКартинкиНоменклатуры)
			ИЛИ (ЕстьХарактеристика И Выборка.Файл = ИнформацияОНоменклатуре.ФайлКартинкиНоменклатуры)) тогда 
			
			Если Выборка.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе тогда
				
				Если ЗначениеЗаполнено(Выборка.ХранимыйФайл.Получить()) тогда
					ДвоичныеДанныеФайла = Выборка.ХранимыйФайл.Получить().ПолучитьДвоичныеДанные();
					ПараметрыКартинки = ПараметрыКартинки + "&fields[PREVIEW_PICTURE][fileData][0]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НаименованиеФайла) + "&fields[PREVIEW_PICTURE][fileData][1]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Base64Строка(ДвоичныеДанныеФайла));  
					ПараметрыКартинки = ПараметрыКартинки + "&fields[DETAIL_PICTURE][fileData][0]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НаименованиеФайла) + "&fields[DETAIL_PICTURE][fileData][1]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Base64Строка(ДвоичныеДанныеФайла));  
				КонецЕсли;		
			Иначе
				ИмяФайла = Б24_ОбщегоНазначенияСервер.ПолучитьПутьДляПлатформы(ОбщиеНастройки.ПлатформаWindows, ?(ОбщиеНастройки.ПлатформаWindows, Выборка.ТомПолныйПутьWindows, Выборка.ТомПолныйПутьLinux) + "\" + Выборка.ПутьКФайлу);
				
				Если ЗначениеЗаполнено(ИмяФайла) тогда
					ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
					ПараметрыКартинки = ПараметрыКартинки + "&fields[PREVIEW_PICTURE][fileData][0]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НаименованиеФайла) + "&fields[PREVIEW_PICTURE][fileData][1]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Base64Строка(ДвоичныеДанныеФайла));  
					ПараметрыКартинки = ПараметрыКартинки + "&fields[DETAIL_PICTURE][fileData][0]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НаименованиеФайла) + "&fields[DETAIL_PICTURE][fileData][1]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Base64Строка(ДвоичныеДанныеФайла));  
				КонецЕсли;
			КонецЕсли;
			
			//Иначе
			
			//Если Выборка.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе тогда
			//	НачалоПараметра = "&fields[PROPERTY_"+ОбщиеНастройки.ИдПредопределенногоСвойстваКартинокИФайловНоменклатуры+"][0]";
			//	ЗначенияСвойств = ЗначенияСвойств + НачалоПараметра + "[valueId]=0"; 
			//	ЗначенияСвойств = ЗначенияСвойств + НачалоПараметра + "[fileData][0]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НаименованиеФайла); 
			//	ЗначенияСвойств = ЗначенияСвойств + НачалоПараметра + "[fileData][1]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Base64Строка(ДвоичныеДанныеФайла));
			//Иначе
			//ИмяФайла = Б_ОбщиеПроцедурыИФункцииСервер.ПолучитьПутьДляПлатформы(ПараметрыОбмена.ПлатформаWindows, ?(ПараметрыОбмена.ПлатформаWindows, Выборка.ТомПолныйПутьWindows, Выборка.ТомПолныйПутьLinux) + "\" + Выборка.ПутьКФайлу);
			//ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ИмяФайла);
			//	НачалоПараметра = "&fields[PROPERTY_"+ОбщиеНастройки.ИдПредопределенногоСвойстваКартинокИФайловНоменклатуры+"][0]";
			//	ЗначенияСвойств = ЗначенияСвойств + НачалоПараметра + "[valueId]=0"; 
			//	ЗначенияСвойств = ЗначенияСвойств + НачалоПараметра + "[fileData][0]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НаименованиеФайла); 
			//	ЗначенияСвойств = ЗначенияСвойств + НачалоПараметра + "[fileData][1]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Base64Строка(ДвоичныеДанныеФайла));
			//КонецЕсли;
			
		КонецЕсли;
		
		ОбщиеНастройки.КартинкиИФайлыНоменклатуры.Добавить(Выборка.Файл);
		
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойствТовара(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремЗначенияСвойствНоменклатуры", ЗначенияСвойств, ИнформацияОНоменклатуре.Объект);
	
	Если ЕстьХарактеристика тогда
		ЗаполнитьЗначенияСвойствТовара(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремЗначенияСвойствХарактеристикНоменклатуры", ЗначенияСвойств, ИнформацияОНоменклатуре.Объект, ИнформацияОНоменклатуре.ПодчиненныйОбъект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОНоменклатуре.ИдентификаторБ24ВидаНоменклатуры) тогда
		ЗначенияСвойств = ЗначенияСвойств + "&fields[PROPERTY_" + ОбщиеНастройки.ИдПредопределенногоСвойстваВидаНоменклатуры + "][value]=" + (ИнформацияОНоменклатуре.ИдентификаторБ24ВидаНоменклатуры);	
	КонецЕсли;
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение);  
	КонецЦикла;  
	
	ТелоЗапроса = ТелоЗапроса + ЗначенияСвойств + ПараметрыКартинки;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ ВнешнийИдентификатор + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.product.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ ВнешнийИдентификатор + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.product.update?id=" + ИнформацияОНоменклатуре.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции

Процедура ЗаполнитьЗначенияСвойствТовара(ОбщиеНастройки, МенеджерВременныхТаблиц, НазваниеТаблицы, ПараметрыСвойств, Номенклатура, Характеристика = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура"	, Номенклатура);
	Запрос.УстановитьПараметр("Характеристика"	, Характеристика);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "ВЫБРАТЬ *
	|ИЗ
	|	"+НазваниеТаблицы+" КАК ВремЗначенияСвойств
	|ГДЕ
	|	ВремЗначенияСвойств.Номенклатура=&Номенклатура";
	
	Если ЗначениеЗаполнено(Характеристика) тогда 
		ТекстЗапроса = ТекстЗапроса + "
		| И ВремЗначенияСвойств.Характеристика=&Характеристика";
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	//   Запрос.Выполнить().Выгрузить();
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ИдентификаторСвойстваБ24) тогда
			
			Если Строка(Выборка.ТипЗначения) = "Пользователь" тогда	
				
				НайденнаяСтрока = ОбщиеНастройки.ТаблицаСопоставленияПользователей.Найти(Выборка.Значение, "Пользователь1С");	
				
				Если НайденнаяСтрока <> Неопределено тогда
					ПараметрыСвойств = ПараметрыСвойств + "&fields[PROPERTY_" + Выборка.ИдентификаторСвойстваБ24 + "][value]=" + XMLСтрока(НайденнаяСтрока.ИдПользователя);
				Иначе
					ПараметрыСвойств = ПараметрыСвойств + "&fields[PROPERTY_" + Выборка.ИдентификаторСвойстваБ24 + "][value]=" + XMLСтрока("");
				КонецЕсли;
				
			Иначе
				
				Если Выборка.ДополнительныеЗначенияИспользуются тогда
					Если ЗначениеЗаполнено(Выборка.ИдентификаторЗначенияСвойстваБ24) тогда
						ПараметрыСвойств = ПараметрыСвойств + "&fields[PROPERTY_" + Выборка.ИдентификаторСвойстваБ24 + "][value]=" + XMLСтрока(Выборка.ИдентификаторЗначенияСвойстваБ24);
					Иначе
						ПараметрыСвойств = ПараметрыСвойств + "&fields[PROPERTY_" + Выборка.ИдентификаторСвойстваБ24 + "][value]=" + XMLСтрока("");
					КонецЕсли;
				Иначе
					ПараметрыСвойств = ПараметрыСвойств + "&fields[PROPERTY_" + Выборка.ИдентификаторСвойстваБ24 + "][value]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Выборка.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалениеРегистрацииКартинокИФайлов(ОбщиеНастройки, МассивДанных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокКартинокИФайлов", МассивДанных);
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ТаблицаИзменений.Объект КАК Объект,
	|	Б24_ТаблицаИзменений.ТипДанных КАК ТипДанных,
	|	Б24_ТаблицаИзменений.ПодчиненныйОбъект КАК ПодчиненныйОбъект,
	|	Б24_ТаблицаИзменений.НастройкаСинхронизации КАК НастройкаСинхронизации
	|ИЗ
	|	РегистрСведений.Б24_ТаблицаИзменений КАК Б24_ТаблицаИзменений
	|ГДЕ
	|	Б24_ТаблицаИзменений.Объект В(&СписокКартинокИФайлов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = РегистрыСведений.Б24_ТаблицаИзменений.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		Запись.Удалить();
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоПользовательскимПолям(пОбщиеНастройки, ТипДанных, МассивДанных, Пакет) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКомпании тогда
		ТипЗначенияСвойств 	= ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКомпании; 
		ОбъектБитрикс24 = "company";
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКонтакта тогда
		ТипЗначенияСвойств 	= ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКонтакта;
		ОбъектБитрикс24 = "contact";
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСделки тогда
		ТипЗначенияСвойств 	= ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки; 
		ОбъектБитрикс24 = "deal";
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСчета тогда
		ТипЗначенияСвойств 	= ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСчета;
		ОбъектБитрикс24 = "invoice";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;	
	
#Область ФормированиеВременныхТаблицДанных		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"			, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"				, ТипДанных);
	Запрос.УстановитьПараметр("ТипДанныхЗначенийСвойств", ТипЗначенияСвойств);
	Запрос.УстановитьПараметр("Портал"			 		, ОбщиеНастройки.Портал);	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор,
	|	Б24_ИдентификаторыОбъектов.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект.Владелец КАК Владелец,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор,
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект
	|ПОМЕСТИТЬ ВремИдентификаторыЗначенийСвойствВрем
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхЗначенийСвойств
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремИдентификаторыЗначенийСвойствВрем.Объект КАК Объект,
	|	ВремИдентификаторыЗначенийСвойствВрем.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыЗначенийСвойств
	|ИЗ
	|	ВремИдентификаторыЗначенийСвойствВрем КАК ВремИдентификаторыЗначенийСвойствВрем
	|ГДЕ
	|	ВремИдентификаторыЗначенийСвойствВрем.Владелец В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыЗначенийСвойствВрем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Объект,
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Идентификатор1С,
	|	ДополнительныеРеквизитыИСведения.ПометкаУдаления КАК ПометкаУдаления,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Заголовок,
	|	ДополнительныеРеквизитыИСведения.Наименование КАК Наименование,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно,
	|	ДополнительныеРеквизитыИСведения.НаборСвойств КАК НаборСвойств
	|ПОМЕСТИТЬ ВремСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка КАК Объект,
	|	ЗначенияСвойствОбъектов.Ссылка КАК Идентификатор1С,
	|	ЗначенияСвойствОбъектов.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗначенияСвойствОбъектов.Наименование КАК Наименование,
	|	ЗначенияСвойствОбъектов.Наименование КАК ПолноеНаименование,
	|	ВремИдентификаторыЗначенийСвойств.Идентификатор КАК ИдентификаторБ24,
	|	ЗначенияСвойствОбъектов.Владелец КАК Свойство
	|ПОМЕСТИТЬ ВремЗначенияСвойств
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийСвойств КАК ВремИдентификаторыЗначенийСвойств
	|		ПО ЗначенияСвойствОбъектов.Ссылка = ВремИдентификаторыЗначенийСвойств.Объект
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец В
	|			(ВЫБРАТЬ
	|				ВремСвойства.Объект
	|			ИЗ
	|				ВремСвойства)
	|	И ЗначенияСвойствОбъектов.ПометкаУдаления = ЛОЖЬ
	|	И ЗначенияСвойствОбъектов.ЭтоГруппа = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремСвойства.Объект КАК Объект,
	|	ВремСвойства.Идентификатор1С КАК Идентификатор1С,
	|	ВремСвойства.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремСвойства.Заголовок КАК Заголовок,
	|	ВремСвойства.Наименование КАК Наименование,
	|	ВремСвойства.ТипЗначения КАК ТипЗначения,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремСвойства.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно,
	|	ВремСвойства.НаборСвойств КАК НаборСвойств,
	|	ВремИдентификаторыОбъектов.ДополнительныйИдентификатор КАК ИмяПоля
	|ИЗ
	|	ВремСвойства КАК ВремСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремСвойства.Объект = ВремИдентификаторыОбъектов.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыЗначенийСвойств";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
#КонецОбласти
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхПоПользовательскимПолям(ОбщиеНастройки, ТипДанных, ОбъектБитрикс24, МенеджерВременныхТаблиц, Пакет, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 		
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоПользовательскимПолям(ОбщиеНастройки, ТипДанных, НазваниеОбъектаБитрикс24, МенеджерВременныхТаблиц, Пакет, ИнформацияОПользовательскомПоле, ЭтоНовыйЭлемент)
	
	лЗначенияСвойств = "";
	
	Поля = Новый Структура;
	
	Поля.Вставить("XML_ID"	, ИнформацияОПользовательскомПоле.Идентификатор1С); 
	
	Если ЭтоНовыйЭлемент тогда
		//ГСЧ = Новый ГенераторСлучайныхЧисел();
		//рндЧисло = Строка(ГСЧ.СлучайноеЧисло(100, 999));
		//Поля.Вставить("FIELD_NAME"	, "UF_CRM_" + рндЧисло + Прав(Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(),"ЧГ=0"),10)); 
		
		Если ЗначениеЗаполнено(ИнформацияОПользовательскомПоле.ИмяПоля) тогда
			Поля.Вставить("FIELD_NAME", ИнформацияОПользовательскомПоле.ИмяПоля); 
		Иначе
			Поля.Вставить("FIELD_NAME", "UF_CRM_" + Прав(Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(),"ЧГ=0"),13)); 
			Б24_СинхронизацияВызовСервера.ЗаписатьИдБ24Объекта(ОбщиеНастройки, ТипДанных, ИнформацияОПользовательскомПоле.Объект, "", Поля.FIELD_NAME);
		КонецЕсли;
		
	Иначе
		Поля.Вставить("FIELD_NAME", ИнформацияОПользовательскомПоле.ИмяПоля); 
	КонецЕсли;
	
	Поля.Вставить("EDIT_FORM_LABEL"	 , ИнформацияОПользовательскомПоле.Заголовок);
	Поля.Вставить("LIST_COLUMN_LABEL", ИнформацияОПользовательскомПоле.Заголовок);
	Поля.Вставить("MANDATORY"		 , ?(ИнформацияОПользовательскомПоле.ЗаполнятьОбязательно,"Y","N"));  	
	Поля.Вставить("MULTIPLE"		 , "N");  	
	
	лТипСтрокой = Строка(ИнформацияОПользовательскомПоле.ТипЗначения);
	
	Если лТипСтрокой = "Строка" тогда
		
		Если ИнформацияОПользовательскомПоле.ТипЗначения.КвалификаторыСтроки.Длина = 777 тогда
			Поля.Вставить("USER_TYPE_ID", "url");  
		Иначе
			Поля.Вставить("USER_TYPE_ID", "string");  
		КонецЕсли;
		
	ИначеЕсли лТипСтрокой = "Булево" тогда
		Поля.Вставить("USER_TYPE_ID", "boolean");  
	ИначеЕсли лТипСтрокой = "Дата" тогда
		Если ИнформацияОПользовательскомПоле.ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.ДатаВремя тогда 
			Поля.Вставить("USER_TYPE_ID", "datetime"); 
		Иначе
			Поля.Вставить("USER_TYPE_ID", "date"); 
		КонецЕсли;
	ИначеЕсли лТипСтрокой = "Число" тогда
		Если ИнформацияОПользовательскомПоле.ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти  = 0 тогда 
			Поля.Вставить("USER_TYPE_ID", "integer"); 
		Иначе
			Поля.Вставить("USER_TYPE_ID", "double"); 
		КонецЕсли;
	ИначеЕсли лТипСтрокой = "Пользователь" тогда
		Поля.Вставить("USER_TYPE_ID", "employee"); 
	ИначеЕсли лТипСтрокой = "Дополнительное значение" тогда
		Поля.Вставить("USER_TYPE_ID"	, "enumeration"); 
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Свойство", ?(ИнформацияОПользовательскомПоле.Объект.ВладелецДополнительныхЗначений.Пустая(), ИнформацияОПользовательскомПоле.Объект,  ИнформацияОПользовательскомПоле.Объект.ВладелецДополнительныхЗначений));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.Текст = "ВЫБРАТЬ *
		|ИЗ
		|	ВремЗначенияСвойств КАК ВремЗначенияСвойств
		|ГДЕ
		|	ВремЗначенияСвойств.Свойство = &Свойство";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Итератор = 0;
		Пока Выборка.Следующий() Цикл
			
			//лИдентификаторЗначения = ?(ЗначениеЗаполнено(Выборка.ИдентификаторБ24), Выборка.ИдентификаторБ24, XMLСтрока(Выборка.Объект));
			
			Если ЗначениеЗаполнено(Выборка.ИдентификаторБ24) тогда
				лЗначенияСвойств = лЗначенияСвойств +  "&fields[LIST]["+(Итератор)+"][ID]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Выборка.ИдентификаторБ24); 
			КонецЕсли;	
			лЗначенияСвойств = лЗначенияСвойств +  "&fields[LIST]["+(Итератор)+"][VALUE]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(Выборка.Наименование); 
			
			Итератор = Итератор+1;	
			
		КонецЦикла;
		
	Иначе
		УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ТипДанных, Пакет, ИнформацияОПользовательскомПоле.Объект);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Ошибка, "В свойствах не поддерживается тип: " + лТипСтрокой + " в свойстве - " + ИнформацияОПользовательскомПоле.Заголовок);
		Возврат "";		
	КонецЕсли;
	//КонецЕсли;	
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
	КонецЦикла;  
	
	ТелоЗапроса = ТелоЗапроса +  лЗначенияСвойств;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОПользовательскомПоле.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm."+НазваниеОбъектаБитрикс24+".userfield.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОПользовательскомПоле.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm."+НазваниеОбъектаБитрикс24+".userfield.update?id=" + ИнформацияОПользовательскомПоле.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьЗапросПолученияIDЗначенийПользовательскихПолей(ОбщиеНастройки, ТипДанных, МассивДанных, Пакет) Экспорт
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКомпании тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКомпании; 
		ОбъектБитрикс24 = "company";
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКонтакта тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКонтакта;
		ОбъектБитрикс24 = "contact";
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСделки;         
		ОбъектБитрикс24 = "deal";
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСчета тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСчета;
		ОбъектБитрикс24 = "invoice";
	КонецЕсли;                                                       
	
	Запрос = новый Запрос;
	
	Запрос.УстановитьПараметр("МассивДанных", МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"	, ТипСвойства);
	Запрос.УстановитьПараметр("Портал"		, ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Объект,
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Идентификатор1С,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Заголовок,
	|	ДополнительныеРеквизитыИСведения.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВремСвойства
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В(&МассивДанных)
	|	И ДополнительныеРеквизитыИСведения.ДополнительныеЗначенияИспользуются
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремСвойства.Объект КАК Идентификатор1С,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24
	|ИЗ
	|	ВремСвойства КАК ВремСвойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО ВремСвойства.Объект = ВремИдентификаторыОбъектов.Объект";
	
	ВыполненныйЗапрос = Запрос.Выполнить();	
	
	мЭлементы 	=  Новый массив;
	
	Если НЕ ВыполненныйЗапрос.Пустой() тогда
		
		Выборка = ВыполненныйЗапрос.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			//ИдентификаторБ24 = ?(ЗначениеЗаполнено(ИдентификаторБ24), ИдентификаторБ24, "");
			
			
			Если ЗначениеЗаполнено(Выборка.ИдентификаторБ24) тогда
				мЭлементы.Добавить("cmd["+ XMLСтрока(Выборка.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm."+ОбъектБитрикс24+".userfield.list?filter[ID]="  + Выборка.ИдентификаторБ24));
				//Иначе
				//	Б24_ОбменСПорталомВыгрузкаВызовСервера.УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ТипДанных, Пакет, Выборка.Идентификатор1С);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат мЭлементы;
	
КонецФункции

Процедура ОбработатьЗапросПолученияIDЗначенийПользовательскихПолей(ОбщиеНастройки, ТипДанных, СтруктураОтвета, Пакет) Экспорт
	
	Если ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКомпании тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКомпании; 
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваКонтакта тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоКонтакта;
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСделки;         
	ИначеЕсли ТипДанных = ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСчета тогда
		ТипСвойства 	= ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСчета;
	КонецЕсли;                                                       
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Владелец КАК Владелец,
	|	ЗначенияСвойствОбъектов.Наименование КАК Наименование,
	|	ЗначенияСвойствОбъектов.Ссылка КАК Объект
	|ПОМЕСТИТЬ ВремЗначенияСвойств
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.ЭтоГруппа = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Владелец,
	|	Наименование";
	Запрос.Выполнить();
	
	result1 = СтруктураОтвета.Получить("result");
	Если result1 <> Неопределено тогда
		
		result2 = result1.Получить("result");  			
		Если result2 <> Неопределено тогда
			
			Для каждого ТекСвойство из result2 Цикл
				
				Свойство = Б24_СинхронизацияВызовСервера.ПолучитьЗначениеПоXML(Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"), ТекСвойство.Ключ);	
				
				Если ТекСвойство.Значение.Количество()=0 тогда
					Продолжить;	
				КонецЕсли;
				
				LIST = ТекСвойство.Значение[0].Получить("LIST");
				
				Если LIST <> Неопределено тогда
					
					Для Каждого ТекЗначение из LIST Цикл
						
						ИдОбъекта 	= ТекЗначение.Получить("ID");
						Значение 	= ТекЗначение.Получить("VALUE");
						
						Запрос = Новый Запрос;
						Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
						Запрос.УстановитьПараметр("Владелец", Свойство);
						Запрос.УстановитьПараметр("Наименование", Значение);
						Запрос.Текст = "ВЫБРАТЬ
						|	ВремЗначенияСвойств.Объект КАК Объект
						|ИЗ
						|	ВремЗначенияСвойств КАК ВремЗначенияСвойств
						|ГДЕ
						|	ВремЗначенияСвойств.Владелец = &Владелец
						|	И ВремЗначенияСвойств.Наименование = &Наименование";
						
						Выборка = Запрос.Выполнить().Выбрать();
						
						Пока Выборка.Следующий() Цикл
							Б24_СинхронизацияВызовСервера.ЗаписатьИдБ24Объекта(ОбщиеНастройки, ТипДанных, Выборка.Объект, ИдОбъекта);  
							Прервать;
						КонецЦикла;
					КонецЦикла;	
					
				КонецЕсли;
				
				УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ТипДанных, Пакет, Свойство);
				
			КонецЦикла;	
		КонецЕсли;
		
		Если result1.Получить("result_error") <> Неопределено тогда
			
			Для каждого ТекСтрока из result1.Получить("result_error") Цикл
				
				лОписаниеОшибки = ТекСтрока.Значение.Получить("error_description");
				
				лОбъект = Б24_СинхронизацияВызовСервера.ПолучитьЗначениеПоXML(ТИП("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"), ТекСтрока.Ключ);	
				
				Если НЕ ЗначениеЗаполнено(лОбъект) тогда
					Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, лОписаниеОшибки + " у не найденного объекта с ид:" + Строка(ТекСтрока.Ключ));   
				Иначе
					Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, лОписаниеОшибки + " у объекта:" + Строка(лОбъект)); 
					Б24_СинхронизацияРегистрацияИзмененийВызовСервера.ЗарегистрироватьИВыгрузитьВРежимеРеальногоВремени(ОбщиеНастройки.НастройкаСинхронизации, лОбъект, ТипСвойства);
				КонецЕсли;	
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Процедура ЗаполнитьЗначенияПользовательскихПолей(ОбщиеНастройки, МенеджерВременныхТаблиц, Объект, ПараметрыПользовательскихПолей)
	
	ЗапросПользовательскихПолей = Новый Запрос;
	ЗапросПользовательскихПолей.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПользовательскихПолей.Текст = "ВЫБРАТЬ *
	|ИЗ
	|	ВремИдентификаторыПользовательскихПолей";
	ВыполненныйЗапросПользовательскихПолей = ЗапросПользовательскихПолей.Выполнить();	
	Если ВыполненныйЗапросПользовательскихПолей.Пустой() тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаПользовательскихПолей = ВыполненныйЗапросПользовательскихПолей.Выбрать();
	Пока ВыборкаПользовательскихПолей.Следующий() Цикл
		
		ЗапросЗначенийСвойств = Новый Запрос;
		ЗапросЗначенийСвойств.УстановитьПараметр("Объект"	, Объект);
		ЗапросЗначенийСвойств.УстановитьПараметр("Свойство"	, ВыборкаПользовательскихПолей.Объект);
		
		ЗапросЗначенийСвойств.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ЗапросЗначенийСвойств.Текст = "ВЫБРАТЬ *
		|ИЗ
		|	ВремЗначенияОбъектовСИд
		| ГДЕ
		| ВремЗначенияОбъектовСИд.Объект = &Объект
		| И ВремЗначенияОбъектовСИд.Свойство = &Свойство";
		ВыполненныйЗапросЗначенийСвойств = ЗапросЗначенийСвойств.Выполнить();	
		Если ВыполненныйЗапросЗначенийСвойств.Пустой() тогда
			ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + XMLСтрока("");
		Иначе
			
			ВыборкаЗначенийСвойств = ВыполненныйЗапросЗначенийСвойств.Выбрать();
			Пока ВыборкаЗначенийСвойств.Следующий() Цикл
				
				Если ВыборкаПользовательскихПолей.ДополнительныеЗначенияИспользуются тогда
					
					Если ЗначениеЗаполнено(ВыборкаЗначенийСвойств.ИдентификаторЗначенияСвойстваБитрикс24) тогда
						ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + XMLСтрока(ВыборкаЗначенийСвойств.ИдентификаторЗначенияСвойстваБитрикс24);
					Иначе
						ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + XMLСтрока("");
					КонецЕсли;
					
				Иначе
					
					Если Строка(ВыборкаПользовательскихПолей.ТипЗначения) = "Пользователь" тогда	
						
						НайденнаяСтрока = ОбщиеНастройки.ТаблицаСопоставленияПользователей.Найти(ВыборкаЗначенийСвойств.Значение, "Пользователь1С");	
						
						Если НайденнаяСтрока <> Неопределено тогда
							ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + XMLСтрока(НайденнаяСтрока.ИдПользователя);
						Иначе
							ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + XMLСтрока("");
						КонецЕсли;
					ИначеЕсли Строка(ВыборкаПользовательскихПолей.ТипЗначения) = "Булево" тогда	
						ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + ?(ВыборкаЗначенийСвойств.Значение =Истина, "1", "0");
					Иначе
						ПараметрыПользовательскихПолей = ПараметрыПользовательскихПолей + "&fields["+ВыборкаПользовательскихПолей.ДополнительныйИдентификаторБитрикс24+"]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ВыборкаЗначенийСвойств.Значение);
					КонецЕсли;
					
				КонецЕсли;
				
				Прервать;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьКЗапросуОбъектовДанныеОПользовательскихПолях(ОбщиеНастройки, Запрос, НазваниеТаблицы ,ТипПользовательскихПолей, ТипЗначенийПользовательскихПолей)
	
	ТекстЗапроса = Запрос.Текст; 
	
	Запрос.УстановитьПараметр("ТипДанныхЗСК", ТипЗначенийПользовательскихПолей);
	Запрос.УстановитьПараметр("ТипДанныхЗС"	, ТипПользовательскихПолей);
	Запрос.УстановитьПараметр("Портал"		, ОбщиеНастройки.Портал);	
	
	ТекстЗапроса = ТекстЗапроса + "	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБитрикс24,
	|	Б24_ИдентификаторыОбъектов.ДополнительныйИдентификатор КАК ДополнительныйИдентификаторБитрикс24,
	|	ДополнительныеРеквизитыИСведения.ДополнительныеЗначенияИспользуются КАК ДополнительныеЗначенияИспользуются,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения
	|ПОМЕСТИТЬ ВремИдентификаторыПользовательскихПолей
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ПО Б24_ИдентификаторыОбъектов.Объект = ДополнительныеРеквизитыИСведения.Ссылка
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхЗС
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыЗначенийПользовательскихПолей
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхЗСК
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ОбъектДополнительныеРеквизиты.Значение КАК Значение,
	|	ОбъектДополнительныеРеквизиты.Ссылка КАК Объект
	|ПОМЕСТИТЬ ВремЗначенияОбъектов
	|ИЗ
	|	&ТаблицаСвойствОбъекта КАК ОбъектДополнительныеРеквизиты
	|ГДЕ
	|	ОбъектДополнительныеРеквизиты.Ссылка В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Свойство,
	|	ДополнительныеСведения.Значение,
	|	ДополнительныеСведения.Объект
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство,
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремЗначенияОбъектов.Объект КАК Объект,
	|	ВремЗначенияОбъектов.Свойство КАК Свойство,
	|	ВремЗначенияОбъектов.Значение КАК Значение,
	|	ВремИдентификаторыЗначенийПользовательскихПолей.Идентификатор КАК ИдентификаторЗначенияСвойстваБитрикс24
	|ПОМЕСТИТЬ ВремЗначенияОбъектовСИд
	|ИЗ
	|	ВремЗначенияОбъектов КАК ВремЗначенияОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийПользовательскихПолей КАК ВремИдентификаторыЗначенийПользовательскихПолей
	|		ПО ВремЗначенияОбъектов.Значение = ВремИдентификаторыЗначенийПользовательскихПолей.Объект
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект,
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремЗначенияОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыЗначенийПользовательскихПолей";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТаблицаСвойствОбъекта", НазваниеТаблицы+".ДополнительныеРеквизиты");
	Запрос.Текст = ТекстЗапроса;
	
КонецПроцедуры


Функция ПолучитьСвойствоИзВременнойТаблицы(ОбщиеНастройки, МенеджерВременныхТаблиц, НазваниеВременнойТаблицы, Объект, Свойство)
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Объект"	, Объект);
	Запрос.УстановитьПараметр("Свойство", Свойство);
	Запрос.Текст = "ВЫБРАТЬ
	|	ВремТаблицаСвойств.Значение КАК Значение
	|ИЗ
	|	"+НазваниеВременнойТаблицы+" КАК ВремТаблицаСвойств
	|ГДЕ
	|	ВремТаблицаСвойств.Объект = &Объект
	|И ВремТаблицаСвойств.Свойство = &Свойство";
	
	ВыполненныйЗапрос = Запрос.Выполнить();
	
	Если НЕ ВыполненныйЗапрос.Пустой() тогда
		Выборка = ВыполненныйЗапрос.Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат = Выборка.Значение;
			Прервать;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;	
	
КонецФункции

#КонецОбласти


#Область CRM

Функция СформироватьДанныеПоСчетам(пОбщиеНастройки, МассивДанных) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоСчетам(ОбщиеНастройки, ИнформацияОСчете, МенеджерВременныхТаблиц, ЭтоНовыйЭлемент)
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоРеквизитамСчетов(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруРеквизитовСчетов(ОбщиеНастройки, ИнформацияОСчете, МенеджерВременныхТаблиц)
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоСделкам(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	
#Область ФормированиеВременныхТаблицДанных		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивДанных"		, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанныхСделок"		, ОбщиеНастройки.ТипыОбъектовОбмена.Сделка);
	Запрос.УстановитьПараметр("ТипДанныхКомпаний"	, ОбщиеНастройки.ТипыОбъектовОбмена.Компания);
	Запрос.УстановитьПараметр("ТипДанныхКонтактов"	, ОбщиеНастройки.ТипыОбъектовОбмена.Контакт);
	Запрос.УстановитьПараметр("АкутальнаяДатаСеанса", ТекущаяДата());
	Запрос.УстановитьПараметр("Портал"			 	, ОбщиеНастройки.Портал);

	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Документ.ЗаказКлиента) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыСделок
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхСделок
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыПартнеровОрганизаций
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И (Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхКомпаний
	|			ИЛИ Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхКонтактов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект,
	|	ДополнительныеСведения.Свойство КАК Свойство,
	|	ДополнительныеСведения.Значение КАК Значение
	|ПОМЕСТИТЬ ВремТаблицаСвойств
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Объект В(&МассивДанных)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиентаДополнительныеРеквизиты.Ссылка,
	|	ЗаказКлиентаДополнительныеРеквизиты.Свойство,
	|	ЗаказКлиентаДополнительныеРеквизиты.Значение
	|ИЗ
	|	Документ.ЗаказКлиента.ДополнительныеРеквизиты КАК ЗаказКлиентаДополнительныеРеквизиты
	|ГДЕ
	|	ЗаказКлиентаДополнительныеРеквизиты.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Документ,
	|	ВремИдентификаторыПартнеровОрганизаций.Идентификатор КАК ИдентификаторКонтактаБитрикс24ИзРегистра,
	|	КонтактныеЛицаПартнеров.Владелец КАК ВладелецКонтактаИзРегистра,
	|	ВремИдентификаторыКонтактныхЛиц.Идентификатор КАК ИдентификаторКонтактногоЛицаБитрикс24
	|ПОМЕСТИТЬ ВремКонтактыДокументов
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыПартнеровОрганизаций КАК ВремИдентификаторыКонтактныхЛиц
	|		ПО ЗаказКлиента.КонтактноеЛицо = ВремИдентификаторыКонтактныхЛиц.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б24_УстановленныеКонтактыВДокументах КАК Б24_УстановленныеКонтактыВДокументах
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремИдентификаторыПартнеровОрганизаций КАК ВремИдентификаторыПартнеровОрганизаций
	|			ПО Б24_УстановленныеКонтактыВДокументах.Контакт = ВремИдентификаторыПартнеровОрганизаций.Объект
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|			ПО Б24_УстановленныеКонтактыВДокументах.Контакт = КонтактныеЛицаПартнеров.Ссылка
	|		ПО (Б24_УстановленныеКонтактыВДокументах.Документ = ЗаказКлиента.Ссылка)
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Объект,
	|	ЗаказКлиента.Ссылка КАК Идентификатор1С,
	|	ЗаказКлиента.ПометкаУдаления КАК ПометкаУдаления,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ЗаказКлиента.Партнер КАК Партнер,
	|	ЗаказКлиента.Контрагент КАК Контрагент,
	|	ЗаказКлиента.Организация КАК Организация,
	|	ЗаказКлиента.Менеджер КАК Менеджер,
	|	ЗаказКлиента.Номер КАК Номер,
	|	ЗаказКлиента.Дата КАК Дата,
	|	ЗаказКлиента.Проведен КАК Проведен,
	|	ЗаказКлиента.Комментарий КАК Комментарий,
	|	СостоянияЗаказовКлиентов.Состояние КАК Состояние,
	|	ЗаказКлиента.Валюта.Код КАК ВалютаДокумента,
	|	ЗаказКлиента.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказКлиента.ЦенаВключаетНДС КАК СуммаВключаетНДС,
	|	ПРЕДСТАВЛЕНИЕ(ЗаказКлиента.Ссылка) КАК СделкаСтрокой,
	|	ВремИдентификаторыПартнеровОрганизаций.Идентификатор КАК ИдентификаторБ24Партнера,
	|	ЗаказКлиента.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
	|	ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЗаказКлиента.Статус КАК Статус,
	|	ЕСТЬNULL(СостоянияЗаказовКлиентов.ПроцентОплаты, 0) КАК ПроцентОплаты,
	|	ЕСТЬNULL(СостоянияЗаказовКлиентов.ПроцентОтгрузки, 0) КАК ПроцентОтгрузки,
	|	ВремКонтактыДокументов.ИдентификаторКонтактаБитрикс24ИзРегистра КАК ИдентификаторКонтактаБитрикс24ИзРегистра,
	|	ВремКонтактыДокументов.ИдентификаторКонтактногоЛицаБитрикс24 КАК ИдентификаторКонтактногоЛицаБитрикс24,
	|	ВремКонтактыДокументов.ВладелецКонтактаИзРегистра КАК ВладелецКонтактаИзРегистра
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыСделок КАК ВремИдентификаторыОбъектов
	|		ПО (ВремИдентификаторыОбъектов.Объект = ЗаказКлиента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовКлиентов КАК СостоянияЗаказовКлиентов
	|		ПО ЗаказКлиента.Ссылка = СостоянияЗаказовКлиентов.Заказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыПартнеровОрганизаций КАК ВремИдентификаторыПартнеровОрганизаций
	|		ПО ЗаказКлиента.Партнер = ВремИдентификаторыПартнеровОрганизаций.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремКонтактыДокументов КАК ВремКонтактыДокументов
	|		ПО ЗаказКлиента.Ссылка = ВремКонтактыДокументов.Документ
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремКонтактыДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыСделок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыПартнеровОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Ссылка КАК Сделка,
	|	ЗаказКлиентаТовары.Сумма КАК Сумма,
	|	ЗаказКлиентаТовары.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ВремТоварыСделок
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка В(&МассивДанных)
	|	И ЗаказКлиентаТовары.Количество > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сделка";
#КонецОбласти
	
	Если  Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииСделок(ОбщиеНастройки.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляСделок") = Истина тогда
		ДобавитьКЗапросуОбъектовДанныеОПользовательскихПолях(ОбщиеНастройки, Запрос, "Документ.ЗаказКлиента", ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоСделки, ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйHTTPЗапрос = СформироватьСтруктуруШапкиСделки(ОбщиеНастройки, Выборка, МенеджерВременныхТаблиц, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24));
		
		Если НЕ ЗначениеЗаполнено(СформированныйHTTPЗапрос) тогда
			ОбщиеНастройки.ВыполненоБезОшибок = Ложь;
		Иначе
			мЭлементы.Добавить(СформированныйHTTPЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруШапкиСделки(ОбщиеНастройки, ИнформацияОСделке, МенеджерВременныхТаблиц, ЭтоНовыйЭлемент)
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Сделка", ИнформацияОСделке.Объект);
	Запрос.Текст = " ВЫБРАТЬ *
	|ИЗ
	|	ВремТоварыСделок КАК ВремТоварыСделок
	|ГДЕ
	|	ВремТоварыСделок.Сделка = &Сделка";
	
	ТоварыСделки = Запрос.Выполнить().Выгрузить();
	//
	//Если ТоварыСделки.Количество() = 0 тогда
	//	Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, "Нет товаров в заказе: " + Строка(ИнформацияОСделке.Объект) + ". Документ будет пропущен");
	//	Возврат "";
	//КонецЕсли;
	
	ИдСделки 			= Прав(ИнформацияОСделке.ИдентификаторБ24, СтрДлина(ИнформацияОСделке.ИдентификаторБ24)-2);	
	ИдНаправлениеСделки = "";
	
	Поля = Новый Структура;
	
	Поля.Вставить("XML_ID", ИнформацияОСделке.Идентификатор1С);  	
	
	#Область ШапкаСделки	
	Если ОбщиеНастройки.НастройкиСинхронизацииСделок.ИсточникДатыДокумента = "По данным с Битрикс24" тогда
		ДатаВыставленияБ24 = ПолучитьСвойствоИзВременнойТаблицы(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремТаблицаСвойств", ИнформацияОСделке.Объект, ОбщиеНастройки.ПредопределенноеСвойствоДатаСделкиБитрикс24);
		Если ЗначениеЗаполнено(ДатаВыставленияБ24) тогда
			Поля.Вставить("BEGINDATE", ДатаВыставленияБ24);  	
		Иначе
			Поля.Вставить("BEGINDATE", ИнформацияОСделке.Дата);  	
		КонецЕсли;
	Иначе
		Поля.Вставить("BEGINDATE"	, ИнформацияОСделке.Дата);  	
	КонецЕсли;
	
	Если ОбщиеНастройки.НастройкиСинхронизацииСделок.ИсточникНомераДокумента = "По данным с Битрикс24" тогда
		НомерСделкиБ24 = ПолучитьСвойствоИзВременнойТаблицы(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремТаблицаСвойств", ИнформацияОСделке.Объект, ОбщиеНастройки.ПредопределенноеСвойствоНомерСделкиБитрикс24);
		Если ЗначениеЗаполнено(НомерСделкиБ24) тогда
			Поля.Вставить("ID", НомерСделкиБ24);  	
		Иначе
			Поля.Вставить("ID", ИнформацияОСделке.Номер);  	
		КонецЕсли;
	Иначе
		Поля.Вставить("ID", ИнформацияОСделке.Номер);  	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИнформацияОСделке.ЖелаемаяДатаОтгрузки) тогда
		Поля.Вставить("CLOSEDATE", ИнформацияОСделке.ЖелаемаяДатаОтгрузки);  	
	КонецЕсли;
	
	НаправлениеСделки = ПолучитьСвойствоИзВременнойТаблицы(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремТаблицаСвойств", ИнформацияОСделке.Объект, ОбщиеНастройки.ПредопределенноеСвойствоНаправлениеСделки);
	Если ЗначениеЗаполнено(НаправлениеСделки) тогда
		ИдНаправлениеСделки = Б24_СинхронизацияВызовСервера.ПолучитьИдОбъекта(ОбщиеНастройки.НастройкаСинхронизации, НаправлениеСделки, ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваСделки); 
		ИдНаправлениеСделки = Прав(ИдНаправлениеСделки, СтрДлина(ИдНаправлениеСделки)-3);
		
		Если ЗначениеЗаполнено(ИдНаправлениеСделки) тогда
			Поля.Вставить("CATEGORY_ID", ИдНаправлениеСделки);  	
		КонецЕсли;
		
	КонецЕсли;	
	
#КонецОбласти	
	
#Область ЗаполнениеКомпанииКонтакта	
	Если НЕ ЗначениеЗаполнено(ИнформацияОСделке.ИдентификаторБ24Партнера) тогда
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, "Не найден идентификатор партнера(компании/контакта): " + Строка(ИнформацияОСделке.Партнер) + ". Его необходимо повторно выгрузить на Битрикс24");
	
		Если ОбщиеНастройки.ТипыКонтрагентовДляКомпаний.Найти(ИнформацияОСделке.Партнер.ЮрФизЛицо) <> Неопределено тогда
			Б24_СинхронизацияРегистрацияИзмененийВызовСервера.ДобавитьОбъектВТаблицуИзменений(ОбщиеНастройки.НастройкаСинхронизации, ОбщиеНастройки.ТипыОбъектовОбмена.Компания, ИнформацияОСделке.Партнер);
		Иначе
			Б24_СинхронизацияРегистрацияИзмененийВызовСервера.ДобавитьОбъектВТаблицуИзменений(ОбщиеНастройки.НастройкаСинхронизации, ОбщиеНастройки.ТипыОбъектовОбмена.Контакт, ИнформацияОСделке.Партнер);
		КонецЕсли;
		
		//Возврат "";
	КонецЕсли;    
	
	Если ОбщиеНастройки.ТипыКонтрагентовДляКонтактов.Найти(ИнформацияОСделке.Партнер.ЮрФизЛицо) <> Неопределено тогда
		Поля.Вставить("COMPANY_ID", 0);
		Поля.Вставить("CONTACT_ID", ИнформацияОСделке.ИдентификаторБ24Партнера);
		
	Иначе
		
		Поля.Вставить("COMPANY_ID", ИнформацияОСделке.ИдентификаторБ24Партнера);
		
		//Если ЗначениеЗаполнено(ИнформацияОСделке.ИдентификаторБ24Контакта) тогда
		//	Поля.Вставить("CONTACT_ID", ИнформацияОСделке.ИдентификаторБ24Контакта);
		//Иначе
		//	Поля.Вставить("CONTACT_ID", 0);
		//КонецЕсли;
		
	КонецЕсли;
#КонецОбласти	

#Область ЗаполнениеСтатусаСделки	
	Если ОбщиеНастройки.НастройкиСинхронизацииСделок.Свойство("ИнформацияОСтатусах") тогда
		
		ИнформацияОСтатусах = ОбщиеНастройки.НастройкиСинхронизацииСделок.ИнформацияОСтатусах;
		
		ПереводитьВСтатусКогдаОплачен 	= Неопределено;
		ПереводитьВСтатусКогдаОтгружен = Неопределено;
		
		Если ИнформацияОСтатусах.Свойство("ПринудительныеСтатусы") тогда
			Для Каждого ТекПринудительныйСтатус ИЗ ИнформацияОСтатусах.ПринудительныеСтатусы Цикл
				
				Если ТекПринудительныйСтатус.ИдНаправления = ИдНаправлениеСделки тогда
				
					Если ТекПринудительныйСтатус.НазначениеСтатуса = "Оплата" тогда
						ПереводитьВСтатусКогдаОплачен = ТекПринудительныйСтатус.ИдСтатуса;	
					ИначеЕсли ТекПринудительныйСтатус.НазначениеСтатуса = "Отгрузка" тогда
						ПереводитьВСтатусКогдаОтгружен = ТекПринудительныйСтатус.ИдСтатуса; 	
					КонецЕсли;	
				КонецЕсли;	
				
			КонецЦикла;
		КонецЕсли;
		                              
		Если ИнформацияОСделке.ПроцентОтгрузки = 100 И ЗначениеЗаполнено(ПереводитьВСтатусКогдаОтгружен) тогда
			Поля.Вставить("STAGE_ID", ПереводитьВСтатусКогдаОтгружен);  	
		ИначеЕсли ИнформацияОСделке.ПроцентОплаты = 100 И ЗначениеЗаполнено(ПереводитьВСтатусКогдаОплачен) тогда
			Поля.Вставить("STAGE_ID", ПереводитьВСтатусКогдаОплачен);  	                  
		Иначе
			
			Если ИнформацияОСтатусах.ИсточникСтатусов1С = "СвойствоЗаказов" тогда
				Статус = ПолучитьСвойствоИзВременнойТаблицы(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремТаблицаСвойств", ИнформацияОСделке.Объект, ИнформацияОСтатусах.СвойствоЗаказов);
				тзнСтатусов = ИнформацияОСтатусах.СтатусыНаправленийЗначенийСвойств;
			ИначеЕсли ИнформацияОСтатусах.ИсточникСтатусов1С = "СтатусыЗаказов" тогда
				Статус = ИнформацияОСделке.Статус;
				тзнСтатусов = ИнформацияОСтатусах.СтатусыНаправленийСтатусов;
			ИначеЕсли ИнформацияОСтатусах.ИсточникСтатусов1С = "СостоянияЗаказов" тогда
				Статус = ИнформацияОСделке.Состояние;
				тзнСтатусов = ИнформацияОСтатусах.СтатусыНаправленийСостояний;
			КонецЕсли;
			
			НайденныеСтроки = тзнСтатусов.НайтиСтроки(Новый Структура("Статус, ИдНаправления", Статус, ИдНаправлениеСделки));
			Если НайденныеСтроки.Количество() >0 тогда
				НайденнаяСтрока = НайденныеСтроки[0];	
			Иначе
				НайденнаяСтрока = Неопределено;	
			КонецЕсли;
			
			Если НайденнаяСтрока <> Неопределено тогда
				Поля.Вставить("STAGE_ID", НайденнаяСтрока.ИдСтатуса);  	
			КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
#КонецОбласти		

	НайденнаяСтрока = ОбщиеНастройки.ТаблицаСопоставленияПользователей.Найти(ИнформацияОСделке.Менеджер, "Пользователь1С");
	Если НайденнаяСтрока <> Неопределено тогда
		Поля.Вставить("ASSIGNED_BY_ID"	, НайденнаяСтрока.ИдПользователя);  	
	КонецЕсли;
	
	
	//Если ИнформацияОСделке.Статус = Перечисления.СтатусыЗаказовКлиентов.Закрыт тогда	
	//	Поля.Вставить("OPENED", "N");  	
	//	Поля.Вставить("CLOSED", "Y");  	
	//Иначе
	//	Поля.Вставить("OPENED", "Y");  	
	//	Поля.Вставить("CLOSED", "N");  	
	//КонецЕсли;
	
	Поля.Вставить("COMMENTS", ИнформацияОСделке.Комментарий);  	
	
	ТемаСделки = ПолучитьСвойствоИзВременнойТаблицы(ОбщиеНастройки, МенеджерВременныхТаблиц, "ВремТаблицаСвойств", ИнформацияОСделке.Объект, ОбщиеНастройки.ПредопределенноеСвойствоНазваниеТемыСделки);
	Если ЗначениеЗаполнено(ТемаСделки) тогда
		Поля.Вставить("TITLE"	, ТемаСделки);  	
	Иначе
		Поля.Вставить("TITLE"	, "Заказ клиента " + (ИнформацияОСделке.Номер));  	
	КонецЕсли;
	
	
	лВалютаСимвольныйКод = ПолучитьВалютуПоКоду(Лев(ИнформацияОСделке.ВалютаДокумента, 3));
	Если ЗначениеЗаполнено(лВалютаСимвольныйКод) тогда
		Поля.Вставить("CURRENCY_ID", лВалютаСимвольныйКод);
	КонецЕсли;
	
	Поля.Вставить("OPPORTUNITY", ИнформацияОСделке.СуммаДокумента);
	
	ТоварыВрем = ТоварыСделки.Скопировать(,"Сделка, СуммаНДС");
	ТоварыВрем.Свернуть("Сделка", "СуммаНДС");
	Если ТоварыВрем.Количество() > 0 тогда
		Поля.Вставить("TAX_VALUE", ТоварыВрем[0].СуммаНДС);
	Иначе
		Поля.Вставить("TAX_VALUE", 0);
	КонецЕсли;
	
	ТелоЗапроса = "";
	Для каждого ТекПоле из Поля Цикл
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
	КонецЦикла;  
	
	Если Б24_СинхронизацияПовтИсп.НастройкиСинхронизацииСделок(ОбщиеНастройки.НастройкаСинхронизации, "ВыгружатьПользовательскиеПоляСделок") = Истина тогда	
		ПараметрыПользовательскихПолей = "";
		ЗаполнитьЗначенияПользовательскихПолей(ОбщиеНастройки, МенеджерВременныхТаблиц, ИнформацияОСделке.Объект, ПараметрыПользовательскихПолей);	
		ТелоЗапроса = ТелоЗапроса + ПараметрыПользовательскихПолей; 
	КонецЕсли;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСделке.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.deal.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСделке.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.deal.update?id=" + ИдСделки + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоРеквизитамСделок(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	
#Область ФормированиеВременныхТаблицДанных
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивДанных"		, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанныхСделок"		, ОбщиеНастройки.ТипыОбъектовОбмена.Сделка);
	Запрос.УстановитьПараметр("ТипДанныхРеквизитов"	, ОбщиеНастройки.ТипыОбъектовОбмена.Реквизит);
	Запрос.УстановитьПараметр("ТипДанныхБанкСчетов"	, ОбщиеНастройки.ТипыОбъектовОбмена.БанковскийСчетРеквизита);
	Запрос.УстановитьПараметр("Портал"			 	, ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыСделок
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхСделок
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыБанкСчетов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхБанкСчетов
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Объект КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыРеквизитов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхРеквизитов
	|	И Б24_ИдентификаторыОбъектов.Портал = &Портал
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК Объект,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ВремИдентификаторыРеквизитовКонтрагентов.Идентификатор КАК ИдентификаторБ24РеквизитаКонтрагента,
	|	ВремИдентификаторыБанкСчетовОрганизаций.Идентификатор КАК ИдентификаторБанковскогоСчетаОрганизацииБ24,
	|	ВремИдентификаторыБанкСчетовРеквизитов.Идентификатор КАК ИдентификаторБанковскогоСчетаКонтрагентаБ24,
	|	ВремИдентификаторыРеквизитовОрганизаций.Идентификатор КАК ИдентификаторРеквизитаОрганизацииБ24
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыСделок КАК ВремИдентификаторыОбъектов
	|		ПО (ВремИдентификаторыОбъектов.Объект = ЗаказКлиента.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыРеквизитов КАК ВремИдентификаторыРеквизитовКонтрагентов
	|		ПО ЗаказКлиента.Контрагент = ВремИдентификаторыРеквизитовКонтрагентов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыБанкСчетов КАК ВремИдентификаторыБанкСчетовРеквизитов
	|		ПО ЗаказКлиента.БанковскийСчетКонтрагента = ВремИдентификаторыБанкСчетовРеквизитов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыБанкСчетов КАК ВремИдентификаторыБанкСчетовОрганизаций
	|		ПО ЗаказКлиента.БанковскийСчет = ВремИдентификаторыБанкСчетовОрганизаций.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыРеквизитов КАК ВремИдентификаторыРеквизитовОрганизаций
	|		ПО ЗаказКлиента.Организация = ВремИдентификаторыРеквизитовОрганизаций.Объект
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивДанных)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыСделок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыРеквизитов";
	
	Выборка = Запрос.Выполнить().Выбрать();
#КонецОбласти
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24) ИЛИ НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24РеквизитаКонтрагента) тогда
			УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ОбщиеНастройки.ТипыОбъектовОбмена.РеквизитыСделки, Пакет, Выборка.Объект);
			Продолжить;
		КонецЕсли;
		
		СформированныйHTTPЗапрос = СформироватьСтруктуруРеквизитовСделки(ОбщиеНастройки, Выборка, МенеджерВременныхТаблиц);
		
		Если НЕ ЗначениеЗаполнено(СформированныйHTTPЗапрос) тогда
			ОбщиеНастройки.ВыполненоБезОшибок = Ложь;
		Иначе
			мЭлементы.Добавить(СформированныйHTTPЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруРеквизитовСделки(ОбщиеНастройки, ИнформацияОСделке, МенеджерВременныхТаблиц)
	
	Поля = Новый Структура;
	
	Поля.Вставить("ENTITY_ID"			, Прав(ИнформацияОСделке.ИдентификаторБ24, СтрДлина(ИнформацияОСделке.ИдентификаторБ24)-2));
	Поля.Вставить("ENTITY_TYPE_ID"		, 2);
	Поля.Вставить("REQUISITE_ID"		, ИнформацияОСделке.ИдентификаторБ24РеквизитаКонтрагента);
	Поля.Вставить("BANK_DETAIL_ID"		, ?(ЗначениеЗаполнено(ИнформацияОСделке.ИдентификаторБанковскогоСчетаКонтрагентаБ24), ИнформацияОСделке.ИдентификаторБанковскогоСчетаКонтрагентаБ24, 0));
	
	//Поля.Вставить("MC_BANK_DETAIL_ID"	, ?(ЗначениеЗаполнено(ИнформацияОСделке.ИдентификаторБанковскогоСчетаОрганизацииБ24), ИнформацияОСделке.ИдентификаторБанковскогоСчетаОрганизацииБ24, 0));
	//Поля.Вставить("MC_REQUISITE_ID"	, ?(ЗначениеЗаполнено(ИнформацияОСделке.ИдентификаторРеквизитаОрганизацииБ24), ИнформацияОСделке.ИдентификаторРеквизитаОрганизацииБ24, 0));
	Поля.Вставить("MC_BANK_DETAIL_ID"	, 0);
	Поля.Вставить("MC_REQUISITE_ID"		, 0);
	
	ТелоЗапроса = "";
	Для каждого ТекПоле из Поля Цикл
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
	КонецЦикла;  
	
	СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСделке.Объект) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.requisite.link.register?" + ТелоЗапроса);	
	
	Возврат СтрокаЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Функция СформироватьДанныеПоТоварамСделок(пОбщиеНастройки, МассивДанных) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивДанных"		, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанныхСделок"		, ОбщиеНастройки.ТипыОбъектовОбмена.Сделка);
	Запрос.УстановитьПараметр("ТипДанныхТоваров"	, ОбщиеНастройки.ТипыОбъектовОбмена.Товар);
	Запрос.УстановитьПараметр("Портал"			 	, ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Документ.ЗаказКлиента) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыСделок
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхСделок
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Справочник.Номенклатура) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор,
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.ПодчиненныйОбъект КАК Справочник.ХарактеристикиНоменклатуры) КАК ПодчиненныйОбъект
	|ПОМЕСТИТЬ ВремИдентификаторыТоваров
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект,
	|	ПодчиненныйОбъект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Ссылка КАК Сделка,
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ЗаказКлиентаТовары.Характеристика КАК Характеристика,
	|	ЗаказКлиентаТовары.Содержание КАК Содержание,
	|	ЗаказКлиентаТовары.Количество КАК Количество,
	|	ЗаказКлиентаТовары.Цена КАК Цена,
	|	ЗаказКлиентаТовары.Сумма КАК Сумма,
	|	ЗаказКлиентаТовары.ПроцентРучнойСкидки КАК ПроцентСкидкиНаценки,
	|	ЗаказКлиентаТовары.СуммаРучнойСкидки КАК СуммаСкидкиНаценки,
	|	ЗаказКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаказКлиентаТовары.СуммаНДС КАК СуммаНДС,
	|	Товары.Наименование КАК НаименованиеТовара,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(Товары.ЕдиницаИзмерения) КАК НаименованиеЕдиницыИзмерения,
	|	ВремИдентификаторыТоваров.Идентификатор КАК ИдентификаторБ24Товара,
	|	Товары.НаименованиеПолное КАК НаименованиеПолноеНоменклатуры,
	|	Товары.Наименование КАК НаименованиеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ЗаказКлиентаТовары.Характеристика) КАК НаименованиеХарактеристики,
	|	УпаковкиЕдиницыИзмерения.Код КАК КодЕдИзм
	|ПОМЕСТИТЬ ВремТоварыСделок
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|			ПО (Товары.ЕдиницаИзмерения = УпаковкиЕдиницыИзмерения.Ссылка)
	|		ПО ЗаказКлиентаТовары.Номенклатура = Товары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыТоваров КАК ВремИдентификаторыТоваров
	|		ПО ЗаказКлиентаТовары.Номенклатура = ВремИдентификаторыТоваров.Объект
	|			И ЗаказКлиентаТовары.Характеристика = ВремИдентификаторыТоваров.ПодчиненныйОбъект
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка В(&МассивДанных)
	|	И ЗаказКлиентаТовары.Количество > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремИдентификаторыСделок.Идентификатор КАК ИдентификаторБ24,
	|	ЗаказКлиента.Ссылка КАК Идентификатор1С,
	|	ЗаказКлиента.Ссылка КАК Сделка,
	|	ЗаказКлиента.ЦенаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	ВремИдентификаторыСделок КАК ВремИдентификаторыСделок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ЗаказКлиента
	|		ПО ВремИдентификаторыСделок.Объект = ЗаказКлиента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыСделок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйHTTPЗапрос = СформироватьСтруктуруТоваровСделки(ОбщиеНастройки, Выборка, МенеджерВременныхТаблиц);
		
		Если НЕ ЗначениеЗаполнено(СформированныйHTTPЗапрос) тогда
			ОбщиеНастройки.ВыполненоБезОшибок = Ложь;
		Иначе
			мЭлементы.Добавить(СформированныйHTTPЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 
	
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруТоваровСделки(ОбщиеНастройки, ИнформацияОСделке, МенеджерВременныхТаблиц)
	
	Запрос = новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Сделка", ИнформацияОСделке.Сделка);
	Запрос.Текст = " ВЫБРАТЬ *
	|ИЗ
	|	ВремТоварыСделок КАК ВремТоварыСделок
	|ГДЕ
	|	ВремТоварыСделок.Сделка = &Сделка";
	
	ТоварыСделки = Запрос.Выполнить().Выгрузить();
	
	Если ТоварыСделки.Количество() = 0 тогда
		Возврат "";
	КонецЕсли;
	
	ИдСделки = Прав(ИнформацияОСделке.ИдентификаторБ24, СтрДлина(ИнформацияОСделке.ИдентификаторБ24)-2);
	
	ТелоЗапроса = "id=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ИдСделки);
	
	НомерСтроки = 0;
	
	Для каждого ТоварСделки из ТоварыСделки Цикл
		
		Если НЕ ЗначениеЗаполнено(ТоварСделки.ИдентификаторБ24Товара) И ЗначениеЗаполнено(ТоварСделки.Номенклатура) тогда
			Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки,  ОбщиеНастройки.ВаринтыОшибок.Ошибка, "В сделке: " + ИдСделки +" не найден идентификатор номенклатуры: " + ТоварСделки.НаименованиеТовара + ". Его необходимо повторно выгрузить на Битрикс24. Если у товара стоит флаг использования характеристик, то товар без них не выгружается");
			Б24_СинхронизацияРегистрацияИзмененийВызовСервера.ДобавитьОбъектВТаблицуИзменений(ОбщиеНастройки.НастройкаСинхронизации, ОбщиеНастройки.ТипыОбъектовОбмена.Товар, ТоварСделки.Номенклатура, ТоварСделки.Характеристика);
			Возврат "";
		КонецЕсли;
		
		ПоляТЧ = Новый Структура;
		
		//ПоляТЧ.Вставить("ID"					, 0);
		//ПоляТЧ.Вставить("OWNER_ID"			, );
		//ПоляТЧ.Вставить("OWNER_TYPE"			, "D");
		
		ПоляТЧ.Вставить("PRODUCT_ID"			, ТоварСделки.ИдентификаторБ24Товара);
		
		Если НЕ ЗначениеЗаполнено(ТоварСделки.Характеристика) Тогда
			ОписаниеТовара = ТоварСделки.НаименованиеНоменклатуры;
			ПолноеОписаниеТовара = ТоварСделки.НаименованиеПолноеНоменклатуры; 
		Иначе
			
			РазделительНаименований = Б24_СинхронизацияПовтИсп.ПолучитьРазделительНаименованийНоменклатуры();
			
			ОписаниеТовара = ТоварСделки.НаименованиеНоменклатуры + РазделительНаименований + ТоварСделки.НаименованиеХарактеристики;
			ПолноеОписаниеТовара = ТоварСделки.НаименованиеПолноеНоменклатуры + РазделительНаименований + ТоварСделки.НаименованиеХарактеристики; 
		КонецЕсли;
		
		ПоляТЧ.Вставить("PRODUCT_DESCRIPTION"	, ОписаниеТовара);
		ПоляТЧ.Вставить("ORIGINAL_PRODUCT_NAME"	, ПолноеОписаниеТовара);
		
		СтавкаНДС = ТоварСделки.СтавкаНДС.Ставка;
		
		Если ИнформацияОСделке.СуммаВключаетНДС = Истина тогда
			ПоляТЧ.Вставить("PRICE"					, ТоварСделки.Сумма/ТоварСделки.Количество);
			
			ЦенаБезСкидкиСНалогом = ТоварСделки.Сумма/ТоварСделки.Количество+ ТоварСделки.СуммаСкидкиНаценки/ТоварСделки.Количество;
			
			ПоляТЧ.Вставить("PRICE_NETTO"			, ЦенаБезСкидкиСНалогом/(СтавкаНДС+100)*100);
			ПоляТЧ.Вставить("PRICE_EXCLUSIVE"		, ТоварСделки.Сумма/ТоварСделки.Количество-ТоварСделки.СуммаНДС/ТоварСделки.Количество);
			ПоляТЧ.Вставить("PRICE_BRUTTO"			, ЦенаБезСкидкиСНалогом);
		Иначе
			ПоляТЧ.Вставить("PRICE"					, (ТоварСделки.Сумма+ТоварСделки.СуммаНДС)/ТоварСделки.Количество);
			
			ЦенаБезСкидкиБезНалога = (ТоварСделки.Сумма+ТоварСделки.СуммаСкидкиНаценки)/ТоварСделки.Количество;
			
			ПоляТЧ.Вставить("PRICE_NETTO"			, ЦенаБезСкидкиБезНалога);
			ПоляТЧ.Вставить("PRICE_EXCLUSIVE"		, ТоварСделки.Сумма/ТоварСделки.Количество);
			ПоляТЧ.Вставить("PRICE_BRUTTO"			, ЦенаБезСкидкиБезНалога+ЦенаБезСкидкиБезНалога/100*СтавкаНДС);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТоварСделки.КодЕдИзм) тогда
			ПоляТЧ.Вставить("MEASURE_CODE"		, СокрЛП(ТоварСделки.КодЕдИзм));
			ПоляТЧ.Вставить("MEASURE_NAME"		, ТоварСделки.НаименованиеЕдиницыИзмерения);
		КонецЕсли;
		ПоляТЧ.Вставить("QUANTITY"				, ТоварСделки.Количество);
		
		ПоляТЧ.Вставить("DISCOUNT_TYPE_ID"		, "2");
		ПоляТЧ.Вставить("DISCOUNT_RATE"			, ТоварСделки.ПроцентСкидкиНаценки);
		ПоляТЧ.Вставить("DISCOUNT_SUM"			, ТоварСделки.СуммаСкидкиНаценки/ТоварСделки.Количество);
		
		ПоляТЧ.Вставить("TAX_RATE"				, СтавкаНДС);
		
		ПоляТЧ.Вставить("TAX_INCLUDED"			, ?(ИнформацияОСделке.СуммаВключаетНДС, "Y", "N"));
		ПоляТЧ.Вставить("CUSTOMIZED"			, "Y");
		
		//ПоляТЧ.Вставить("SORT"				, "10");
		
		Для каждого ТекПоле из ПоляТЧ Цикл
			ТелоЗапроса = ТелоЗапроса + "&rows["+Строка(НомерСтроки)+"]["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
		КонецЦикла;  
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;                                	
	
	СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСделке.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("crm.deal.productrows.set?" + ТелоЗапроса);	
	
	Возврат СтрокаЗапроса;
	
КонецФункции

#КонецОбласти


#Область ИнтернетМагазин

Функция СформироватьДанныеПоСвойствамЗаказов(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
	ОбщиеНастройки = Новый Структура;
	Для Каждого ЭлементСтруктуры Из пОбщиеНастройки Цикл
		ОбщиеНастройки.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	Б24_СинхронизацияВызовСервера.ДобавитьСложныеНастройкиОбменаВСтруктуру(ОбщиеНастройки);
	
	МенеджерВременныхТаблиц = новый МенеджерВременныхТаблиц;	
	
#Область ФормированиеВременныхТаблицДанных
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДанных"			, МассивДанных);
	Запрос.УстановитьПараметр("ТипДанных"				, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоЗаказа);
	Запрос.УстановитьПараметр("ТипДанныхЗначенийСвойств", ОбщиеНастройки.ТипыОбъектовОбмена.ЗначениеСвойстваЗаказа);
	Запрос.УстановитьПараметр("Портал"					, ОбщиеНастройки.Портал);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор,
	|	Б24_ИдентификаторыОбъектов.ПодчиненныйОбъект КАК ТипПлательщика
	|ПОМЕСТИТЬ ВремИдентификаторыОбъектов
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанных
	|	И Б24_ИдентификаторыОбъектов.Объект В(&МассивДанных)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Б24_ИдентификаторыОбъектов.Идентификатор КАК Идентификатор,
	|	ВЫРАЗИТЬ(Б24_ИдентификаторыОбъектов.Объект КАК Справочник.ЗначенияСвойствОбъектов) КАК Объект,
	|	Б24_ИдентификаторыОбъектов.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор
	|ПОМЕСТИТЬ ВремИдентификаторыЗначенийСвойств
	|ИЗ
	|	РегистрСведений.Б24_ИдентификаторыОбъектов КАК Б24_ИдентификаторыОбъектов
	|ГДЕ
	|	Б24_ИдентификаторыОбъектов.Портал = &Портал
	|	И Б24_ИдентификаторыОбъектов.ТипДанных = &ТипДанныхЗначенийСвойств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Ссылка КАК Объект,
	|	ЗначенияСвойствОбъектов.Ссылка КАК Идентификатор1С,
	|	ЗначенияСвойствОбъектов.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗначенияСвойствОбъектов.Наименование КАК Наименование,
	|	ЗначенияСвойствОбъектов.Наименование КАК ПолноеНаименование,
	|	ВремИдентификаторыЗначенийСвойств.Идентификатор КАК ИдентификаторБ24,
	|	ЗначенияСвойствОбъектов.Владелец КАК Свойство,
	|	ВремИдентификаторыЗначенийСвойств.ДополнительныйИдентификатор КАК ДополнительныйИдентификатор
	|ПОМЕСТИТЬ ВремЗначенияСвойств
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВремИдентификаторыЗначенийСвойств КАК ВремИдентификаторыЗначенийСвойств
	|		ПО (ВремИдентификаторыЗначенийСвойств.Объект = ЗначенияСвойствОбъектов.Ссылка)
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец В(&МассивДанных)
	|	И ЗначенияСвойствОбъектов.ПометкаУдаления = ЛОЖЬ
	|	И ЗначенияСвойствОбъектов.ЭтоГруппа = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыЗначенийСвойств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремИдентификаторыОбъектов.Объект КАК Объект,
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Идентификатор1С,
	|	ВремИдентификаторыОбъектов.Идентификатор КАК ИдентификаторБ24,
	|	ДополнительныеРеквизитыИСведения.ПометкаУдаления КАК ПометкаУдаления,
	|	ДополнительныеРеквизитыИСведения.Заголовок КАК Заголовок,
	|	ДополнительныеРеквизитыИСведения.Наименование КАК Наименование,
	|	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизитыИСведения.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно,
	|	ДополнительныеРеквизитыИСведения.НаборСвойств КАК НаборСвойств,
	|	ВремИдентификаторыОбъектов.ТипПлательщика КАК ТипПлательщика,
	|	ДополнительныеРеквизитыИСведения.ВладелецДополнительныхЗначений КАК ВладелецДополнительныхЗначений
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВремИдентификаторыОбъектов КАК ВремИдентификаторыОбъектов
	|		ПО (ВремИдентификаторыОбъектов.Объект = ДополнительныеРеквизитыИСведения.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремИдентификаторыОбъектов";
	
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
#КонецОбласти	
	
	мЭлементы 	=  Новый массив;
	
	Пока Выборка.Следующий() Цикл
		
		СформированныйЗапрос = СформироватьСтруктуруДанныхПоСвойствамЗаказов(ОбщиеНастройки, Пакет, Выборка, НЕ ЗначениеЗаполнено(Выборка.ИдентификаторБ24), МенеджерВременныхТаблиц);
		
		Если ЗначениеЗаполнено(СформированныйЗапрос) тогда
			мЭлементы.Добавить(СформированныйЗапрос);
		КонецЕсли;
		
	КонецЦикла;
	
	пОбщиеНастройки.НомерСообщения = ОбщиеНастройки.НомерСообщения; 		
	Возврат мЭлементы;	
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоСвойствамЗаказов(ОбщиеНастройки, Пакет, ИнформацияОСвойствеЗаказа, ЭтоНовыйЭлемент, МенеджерВременныхТаблиц)
	
	лЗначенияСвойств = "";
	
	Поля = Новый Структура;
	
	Поля.Вставить("name"			, ИнформацияОСвойствеЗаказа.Заголовок);
	Поля.Вставить("personTypeId"	, ИнформацияОСвойствеЗаказа.ТипПлательщика);
	Поля.Вставить("active"			, ?(ИнформацияОСвойствеЗаказа.ПометкаУдаления,"N","Y"));  	
	Поля.Вставить("xmlId"			, ИнформацияОСвойствеЗаказа.Идентификатор1С);  	
	
	Поля.Вставить("required"		, ?(ИнформацияОСвойствеЗаказа.ЗаполнятьОбязательно,"Y","N"));  
	Поля.Вставить("multiple"		, "N");  	
	
	лТипСтрокой = Строка(ИнформацияОСвойствеЗаказа.ТипЗначения);
	
	Если лТипСтрокой = "Строка" тогда
		Поля.Вставить("type"	, "STRING");  
	ИначеЕсли лТипСтрокой = "Число" тогда
		Поля.Вставить("type"	, "NUMBER");  
	ИначеЕсли лТипСтрокой = "Дата" тогда
		Поля.Вставить("type"	, "DATE");  
	ИначеЕсли лТипСтрокой = "Булево" тогда
		Поля.Вставить("type"	, "Y/N");  
	ИначеЕсли лТипСтрокой = "Дополнительное значение" тогда
		Поля.Вставить("type"	, "ENUM");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Свойство", ?(ИнформацияОСвойствеЗаказа.ВладелецДополнительныхЗначений.Пустая(), ИнформацияОСвойствеЗаказа.Объект,  ИнформацияОСвойствеЗаказа.ВладелецДополнительныхЗначений));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "ВЫБРАТЬ *
		|ИЗ
		|	ВремЗначенияСвойств КАК ВремЗначенияСвойств
		|ГДЕ
		|	ВремЗначенияСвойств.Свойство = &Свойство";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		лЗначенияСвойств = "";
		
		Пока Выборка.Следующий() Цикл
			
			лИдентификаторЗначения = XMLСтрока(Выборка.Объект);
			
			ПоляЗС = Новый Структура;
			
			Если ЗначениеЗаполнено(Выборка.ИдентификаторБ24) тогда
				ПоляЗС.Вставить("id"	, Выборка.ИдентификаторБ24);
				ПоляЗС.Вставить("value" , Выборка.ДополнительныйИдентификатор);
			Иначе
				ПоляЗС.Вставить("value" , лИдентификаторЗначения);
			КонецЕсли;
			
			ПоляЗС.Вставить("name"			, Выборка.Наименование);
			ПоляЗС.Вставить("description"	, Выборка.ПолноеНаименование);
			ПоляЗС.Вставить("xmlId"			, лИдентификаторЗначения);
			
			Для каждого ТекПоле из ПоляЗС Цикл
				лЗначенияСвойств = лЗначенияСвойств + "&fields[variants]["+лИдентификаторЗначения+"]["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
			КонецЦикла;  
			
		КонецЦикла;
		
	Иначе
		УдалениеЗаписиИзПакетаДаных(ОбщиеНастройки, Истина, ОбщиеНастройки.ТипыОбъектовОбмена.СвойствоТовара, Пакет, ИнформацияОСвойствеЗаказа.Объект);
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Ошибка, "В свойствах не поддерживается тип: " + лТипСтрокой + " в свойстве - " + ИнформацияОСвойствеЗаказа.Заголовок);
		Возврат "";		
	КонецЕсли;
	//КонецЕсли;	
	
	ТелоЗапроса = "";
	
	Для каждого ТекПоле из Поля Цикл
		ТелоЗапроса = ТелоЗапроса + ?(СтрДлина(ТелоЗапроса) >0, "&", "") +"fields["+ ТекПоле.Ключ + "]=" + Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ТекПоле.Значение); 
	КонецЦикла;  
	
	ТелоЗапроса = ТелоЗапроса +  лЗначенияСвойств;
	
	Если ЭтоНовыйЭлемент тогда
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСвойствеЗаказа.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("sale.property.add?" + ТелоЗапроса);	
	Иначе
		СтрокаЗапроса = "cmd["+ XMLСтрока(ИнформацияОСвойствеЗаказа.Идентификатор1С) + "]=" +  Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер("sale.property.update?id=" + ИнформацияОСвойствеЗаказа.ИдентификаторБ24 + "&"  + ТелоЗапроса);	
	КонецЕсли;
	
	Возврат СтрокаЗапроса;
	
КонецФункции



Функция СформироватьДанныеПоЗаказам(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоЗаказам(ОбщиеНастройки, Пакет, ИнформацияОЗаказе, ЭтоНовыйЭлемент, МенеджерВременныхТаблиц)

КонецФункции


Функция СформироватьДанныеПоТоварамЗаказов(пОбщиеНастройки, МассивДанных) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруТоваровЗаказа(ОбщиеНастройки, ИнформацияОТоварахЗаказа, МенеджерВременныхТаблиц)
	
КонецФункции


Функция СформироватьДанныеПоУстановленнымЗначениямСвойствЗаказов(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоУстановленнымСвойствамЗаказов(ОбщиеНастройки, Пакет, ИнформацияОЗаказе, МенеджерВременныхТаблиц)
	
КонецФункции


Функция СформироватьДанныеПоОплатам(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоОплатам(ОбщиеНастройки, Пакет, ИнформацияОЗаказе, МенеджерВременныхТаблиц)
	
КонецФункции

// Функция - Получить информацию о платежной системе по соответствию
//
// Параметры:
//  ТипДокумента				 - 	 1- нал, 2- безнал, 3 эквайринг 
//  СоответствияПлатежныхСистем	 - 	 таблица соответствий 
//  РасчетныйСчет				 - 	 Переменные для поиска 
//  Касса						 - 	 Переменные для поиска 
//  Терминал					 - 	 Переменные для поиска 
//  ВидПлатежнойКарты			 - 	 Переменные для поиска 
// 
// Возвращаемое значение:
//   Структура с наименованием и ид платежной системы 
//
Функция ПолучитьИнформациюОПлатежнойСистемеПоСоответствию(ТипДокумента, СоответствияПлатежныхСистем, РасчетныйСчет = Неопределено, Касса = Неопределено, Терминал = Неопределено, ВидПлатежнойКарты = Неопределено)
	
КонецФункции
	

Функция СформироватьДанныеПоОтгрузкам(пОбщиеНастройки, МассивДанных, Пакет) Экспорт
	
КонецФункции

Функция СформироватьСтруктуруДанныхПоОтгрузкам(ОбщиеНастройки, Пакет, ИнформацияОЗаказе, МенеджерВременныхТаблиц)
	
КонецФункции

#КонецОбласти





#Область ВыгрузкаПечатныхФорм

Функция ВыгрузкаПечатнойФормыВБитрикс24(НастройкаСинхронизации, ТипДанныхБ24, ИдБитрикс24СПрефиксами, НазваниеПечатнойФормы, ПечатнаяФорма) Экспорт
	
	Результат = Ложь;	
	
	ОбщиеНастройки = Б24_СинхронизацияКлиентСервер.СформироватьНастройкиСинхронизации(НастройкаСинхронизации, Ложь, 7);
	
	Если ОбщиеНастройки = Неопределено тогда
		Возврат Результат;
	КонецЕсли;
	
	ОбщиеНастройки.Измерение2 = "Выгрузка данных на Битрикс24";
	ОбщиеНастройки.Измерение3 = "Выгрузка файла печатной формы";
	
	ИнформацияФайле = ПолучитьДовичноеСодержимоеПечатнойФормы(ОбщиеНастройки, ПечатнаяФорма, ТипФайлаТабличногоДокумента.DOCX);	
	
	Если ИнформацияФайле.ДвоичноеСодержимоеОтчета = Неопределено тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.КритическаяОшибка, "Не удалось получить двоичные данные печатной формы в формате DOCX. Возможно нет прав на запись печатной формы во временные файлы");
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.КритическаяОшибка, ИнформацияФайле.ОписаниеОшибки);
		
		Возврат Результат;	//этот файл обязателен.
		
	КонецЕсли;
	
	ДанныеDOCX = Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ИнформацияФайле.ДвоичноеСодержимоеОтчета);
	
	ИнформацияФайле = ПолучитьДовичноеСодержимоеПечатнойФормы(ОбщиеНастройки, ПечатнаяФорма, ТипФайлаТабличногоДокумента.PDF);	
	
	Если ИнформацияФайле.ДвоичноеСодержимоеОтчета = Неопределено тогда
		
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Ошибка, "Не удалось получить двоичные данные печатной формы в формате PDF. Возможно нет прав на запись печатной формы во временные файлы");
		Б24_ОбщегоНазначенияСервер.ДобавитьВЛог(ОбщиеНастройки, ОбщиеНастройки.ВаринтыОшибок.Ошибка, ИнформацияФайле.ОписаниеОшибки);
		
	КонецЕсли;
	
	ДанныеPDF = Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(ИнформацияФайле.ДвоичноеСодержимоеОтчета);
	
	ПреффиксыВнешнихКодовБитрикс24 = Б24_СинхронизацияПовтИсп.ПолучитьПреффиксыВнешнихКодовБитрикс24();
	
	ИзмененПреффикс = Ложь;
	Для Каждого ТекПреффикс из ПреффиксыВнешнихКодовБитрикс24 Цикл
			
		Если Лев(ИдБитрикс24СПрефиксами, СтрДлина(ТекПреффикс.Значение))= ТекПреффикс.Значение тогда
			ИдБитрикс24 = Прав(ИдБитрикс24СПрефиксами, СтрДлина(ИдБитрикс24СПрефиксами) - СтрДлина(ТекПреффикс.Значение)); 	
			ИзмененПреффикс = Истина;
		КонецЕсли;
			
	КонецЦикла;
	
	Если НЕ ИзмененПреффикс тогда
		ИдБитрикс24 = ИдБитрикс24СПрефиксами;	
	КонецЕсли;
	
	
	//Если Лев(ИдБитрикс24СПрефиксами,2)= ПреффиксыВнешнихКодовБитрикс24.Сделки тогда
	//	ИдБитрикс24 = Прав(ИдБитрикс24СПрефиксами,СтрДлина(ИдБитрикс24СПрефиксами)-2); 	
	//ИначеЕсли Лев(ИдБитрикс24СПрефиксами,2)= ПреффиксыВнешнихКодовБитрикс24.Заказы тогда
	//	ИдБитрикс24 = Прав(ИдБитрикс24СПрефиксами,СтрДлина(ИдБитрикс24СПрефиксами)-2); 	
	//Иначе
	//	ИдБитрикс24 = ИдБитрикс24СПрефиксами;	
	//КонецЕсли;
	
	НазваниеСообщения 	= Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(НазваниеПечатнойФормы);
	ТипыДанныхДляОбменаСПорталом = Б24_СинхронизацияПовтИсп.ПолучитьТипыДанныхДляОбменаСПорталом();	
	
	ТипВладельца = "0";
	
	Если ТипДанныхБ24 = ТипыДанныхДляОбменаСПорталом.Сделка тогда
		ТипВладельца = "2";	
	ИначеЕсли ТипДанныхБ24 = ТипыДанныхДляОбменаСПорталом.Заказ тогда
		ТипВладельца = "14";	
	ИначеЕсли ТипДанныхБ24 = ТипыДанныхДляОбменаСПорталом.Счет тогда
		ТипВладельца = "5";	
	ИначеЕсли ТипДанныхБ24 = ТипыДанныхДляОбменаСПорталом.Компания тогда
		ТипВладельца = "4";	
	ИначеЕсли ТипДанныхБ24 = ТипыДанныхДляОбменаСПорталом.Контакт тогда
		ТипВладельца = "3";	
	КонецЕсли;
	
	ТелоHTTPЗапроса ="&fields[title]="+НазваниеСообщения+"&fields[number]=2&fields[entityTypeId]="+ТипВладельца+"&fields[entityId]="+Формат(ИдБитрикс24, "ЧГ=0") + "&fields[region]="+Б24_ОбщегоНазначенияСервер.ПолучитьЛокализациюБитрикс24();
	
	Если ДанныеPDF <> Неопределено тогда
		ТелоHTTPЗапроса = ТелоHTTPЗапроса +"&fields[pdfContent]="+ДанныеPDF;  
	КонецЕсли;
	ТелоHTTPЗапроса = ТелоHTTPЗапроса +"&fields[fileContent]="+ДанныеPDF; //чтобы быстро формировалось и не корежилось в Б24 
	//ТелоHTTPЗапроса = ТелоHTTPЗапроса +"&fields[fileContent]="+ДанныеDOCX;  
	//ТелоHTTPЗапроса = ТелоHTTPЗапроса +"&fields[imageContent]=";  
	
	
	ДанныеСПортала = Б24_RestApiВызовСервера.ОтправкаДанныхНаПортал(ОбщиеНастройки, "/rest/crm.documentgenerator.document.upload", ТелоHTTPЗапроса); 
	
	Если НЕ ЗначениеЗаполнено(ДанныеСПортала) тогда
		ОбщиеНастройки.ВыполненоБезОшибок = Ложь;
	ИначеЕсли ДанныеСПортала = Истина тогда		
		Результат = Истина;	
	Иначе	
	
		Если ДанныеСПортала.Получить("result") <> Неопределено тогда
			Если ДанныеСПортала.Получить("result").Получить("document")  <> Неопределено тогда
				Если ДанныеСПортала.Получить("result").Получить("document").Получить("id") <> Неопределено тогда
					Результат = Истина;	
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьКаталогДляВыгрузкиПечатнойФормы()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;  
	ПлатформаWindows = СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64;
	
	КаталогВыгрузки = КаталогВременныхФайлов();
	ПодкаталогБезопасностиКаталогаВыгрузки = "webdata\";
	
	КаталогНаДиске = Б24_ОбщегоНазначенияСервер.ПолучитьПутьДляПлатформы(ПлатформаWindows, КаталогВыгрузки + ПодкаталогБезопасностиКаталогаВыгрузки);
	Если НЕ Б24_ОбщегоНазначенияСервер.СуществуетФайл(КаталогНаДиске) тогда
		СоздатьКаталог(КаталогНаДиске);	
	КонецЕсли;
	
	Возврат Б24_ОбщегоНазначенияСервер.ПолучитьПутьДляПлатформы(ПлатформаWindows, КаталогНаДиске);
	
КонецФункции

Функция ПолучитьДовичноеСодержимоеПечатнойФормы(ОбщиеНастройки, ПечатнаяФорма, ФорматПечатнойФормы)
	
	Если ФорматПечатнойФормы = ТипФайлаТабличногоДокумента.DOCX тогда
		РасширениеФайла = ".docx";	
	ИначеЕсли ФорматПечатнойФормы = ТипФайлаТабличногоДокумента.PDF тогда
		РасширениеФайла = ".pdf";
	ИначеЕсли ФорматПечатнойФормы = ТипФайлаТабличногоДокумента.XLSX тогда
		РасширениеФайла = ".xlsx";	
	ИначеЕсли ФорматПечатнойФормы = ТипФайлаТабличногоДокумента.XLS тогда
		РасширениеФайла = ".xls";	
	ИначеЕсли ФорматПечатнойФормы = ТипФайлаТабличногоДокумента.ODS тогда
		РасширениеФайла = ".ods";	
	Иначе
		РасширениеФайла = ".txt";	
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ДвоичноеСодержимоеОтчета"	, Неопределено);	
	Результат.Вставить("ОписаниеОшибки"				, "");	
	
	КаталогДляВыгрузкиПечатнойФормы = ПолучитьКаталогДляВыгрузкиПечатнойФормы();
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", ""); 	
	
	ИмяФайлаПечатнойФормы 	= КаталогДляВыгрузкиПечатнойФормы + Boundary + РасширениеФайла;  
	
	Попытка
		ПечатнаяФорма.Записать(ИмяФайлаПечатнойФормы, ФорматПечатнойФормы);
	Исключение
		Результат.ОписаниеОшибки = ОписаниеОшибки();
		Возврат Результат;	
	КонецПопытки;
	
	Результат.ДвоичноеСодержимоеОтчета = Base64Строка(Новый ДвоичныеДанные(ИмяФайлаПечатнойФормы));
	
	Попытка
		УдалитьФайлы(ИмяФайлаПечатнойФормы);
	Исключение
	КонецПопытки;
	
	Возврат Результат;	
	
КонецФункции


#КонецОбласти

