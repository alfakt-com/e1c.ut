#Область ПрограмныйИнтерфейс

// Предназначена для определения факта наличия в данных документа номенклатуры, являющейся табачной продукцией.
// 
// Параметры:
//	* Коллекция             – ДанныеФормыКоллекция – состав номенклатуры документа
//	* ЕстьТабачнаяПродукция – Булево – исходящий признак наличия табачной продукции
//
Процедура ЕстьТабачнаяПродукцияВКоллекции(Коллекция, ЕстьТабачнаяПродукция) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТовары", Коллекция.Выгрузить(, "Номенклатура"));

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ВремТаблТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьТабачнаяПродукция
	|ИЗ
	|	ВремТаблТаблицаТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТабачнаяПродукция
	|";
	
	Результат = Запрос.Выполнить();
	
	ЕстьТабачнаяПродукция = НЕ Результат.Пустой();
	
КонецПроцедуры

//Возвращает для передеанного документа таблицу его товаров, являющихся табачной продукцией.
//
//Параметры:
//	* Контекст - УправляемаяФорма, ДокументСсылка - документ, табачную продукцию которого необходимо получить.
//
//Возвращаемое значение:
//	ТаблицаЗначений - таблица табачной продукции документа с колонками:
//		** GTIN           - Строка - GTIN продукции
//		** Номенклатура   - ОпределяемыйТип.Номенклатура - номенклатура табачной продукции
//		** Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика номенклатура табачной продукции
//		** Серия          - ОпределяемыйТип.СерияНоменклатуры - серия номенклатура табачной продукции
//		** Количество     - Число - количество табачной продукции
//
Функция ТаблицаТабачнойПродукцииДокумента(Контекст) Экспорт
	
	ТаблицаТабачнойПродукции = ТаблицаТабачнойПродукции();
	
	Если ИнтеграцияМОТПУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПриобретениеТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросТабачнойПродукцииПриобретениеТоваровУслуг(Контекст);
	ИначеЕсли ИнтеграцияМОТПУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровОтКлиента") Тогда
		РезультатЗапроса = ЗапросТабачнойПродукцииВозвратТоваровОтКлиента(Контекст);
	ИначеЕсли ИнтеграцияМОТПУТКлиентСервер.ЭтоЧекККМ(Контекст)
		Или ИнтеграцияМОТПУТКлиентСервер.ЭтоЧекККМВозврат(Контекст) Тогда
		РезультатЗапроса = ЗапросТабачнойПродукцииЧекККМ(Контекст);
	ИначеЕсли ИнтеграцияМОТПУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "РеализацияТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросТабачнойПродукцииРеализацияТоваровУслуг(Контекст);
	ИначеЕсли ИнтеграцияМОТПУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровПоставщику") Тогда
		РезультатЗапроса = ЗапросТабачнойПродукцииВозвратТоваровПоставщику(Контекст);
	ИначеЕсли ИнтеграцияМОТПУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "КорректировкаРеализации") Тогда
		РезультатЗапроса = ЗапросТабачнойПродукцииКорректировкаРеализации(Контекст);
	Иначе
		Возврат ТаблицаТабачнойПродукции;
	КонецЕсли;
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристика.Следующий() Цикл
			ПродукцияПоGTIN = ТаблицаТабачнойПродукции();
			ДлинаСтрокиGTIN = 0;
			
			ВыборкаGTIN = ВыборкаХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаGTIN.Следующий() Цикл
				Если ПродукцияПоGTIN.Количество() = 0 Тогда
					Выборка = ВыборкаGTIN.Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ПродукцияПоGTIN.Добавить(), Выборка,, "GTIN");
					КонецЦикла;
				КонецЕсли;
				
				Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(ВыборкаGTIN.GTIN)
					И СтрДлина(ВыборкаGTIN.GTIN) > ДлинаСтрокиGTIN Тогда
					ПродукцияПоGTIN.ЗаполнитьЗначения(ВыборкаGTIN.GTIN, "GTIN");
					ДлинаСтрокиGTIN = СтрДлина(ВыборкаGTIN.GTIN);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрокаПродукцииПоGTIN Из ПродукцияПоGTIN Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаТабачнойПродукции.Добавить(), СтрокаПродукцииПоGTIN);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаТабачнойПродукции;
		
КонецФункции

// Заполняет в табличной части служебные реквизиты, например: признак использования характеристик номенклатуры.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  ТабличнаяЧасть - ДанныеФормыКоллекция, ТаблицаЗначений - таблица для заполнения.
//
Процедура ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, ТабличнаяЧасть) Экспорт
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
		
	ПараметрыЗаполненияРеквизитов.Вставить(
		"ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	ПараметрыЗаполненияРеквизитов.Вставить(
		"ЗаполнитьПризнакТипНоменклатуры",
		Новый Структура("Номенклатура", "ТипНоменклатуры"));
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		ТабличнаяЧасть, ПараметрыЗаполненияРеквизитов);
	
КонецПроцедуры

Функция АдресДанныхПроверкиТабачнойПродукцииЧекККМ (ПараметрыСканирования, Объект, УникальныйИдентификатор) Экспорт
	
	СписокШтрихкодов = Объект.АкцизныеМарки.Выгрузить().ВыгрузитьКолонку("АкцизнаяМарка");
	ШтрихкодыТабачнойПродукции = ИСМПТВыбытиеКодовМаркировкиСервер.ИнтеграцияИСУТ_ШтрихкодыСодержащиеВидыПродукции(
		СписокШтрихкодов,
		Перечисления.ВидыПродукцииИС.Табачная);
	
	ДанныеПроверяемогоДокумента = ИСМПТВыбытиеКодовМаркировкиСервер.ШтрихкодированиеИС_ВложенныеШтрихкодыУпаковок(
		ШтрихкодыТабачнойПродукции, ПараметрыСканирования);
	
	ТаблицаТабачнойПродукции = ТаблицаТабачнойПродукцииДокумента(Объект);

	ДанныеХранилища = Новый Структура("ДеревоУпаковок, МаркированныеТовары, ТаблицаТабачнойПродукции",
		ДанныеПроверяемогоДокумента.ДеревоУпаковок,
		ДанныеПроверяемогоДокумента.МаркированныеТовары,
		ТаблицаТабачнойПродукции);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеХранилища, УникальныйИдентификатор);
	
КонецФункции

#Область СерииНоменклатуры

// Определяет параметры указания серий для товаров, указанных в форме.
//
// Параметры:
//		Форма						- УправляемаяФорма	- форма с товарами, для которой необходимо определить параметры указания серий.
//		ПараметрыУказанияСерий	- Структура			- заполняемые параметры указания серий, состав полей структуры задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Процедура ЗаполнитьПараметрыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта                  = Форма.ИмяФормы;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтотОбъект";
	
	ПараметрыУказанияСерий.ИмяТЧТовары       = "ПодобраннаяТабачнаяПродукция";
	ПараметрыУказанияСерий.ИмяТЧСерии        = "ПодобраннаяТабачнаяПродукция";
	ПараметрыУказанияСерий.ИмяПоляСклад      = "Склад";
	ПараметрыУказанияСерий.ИмяПоляКоличество = "Количество";
	
	ПараметрыУказанияСерий.ИменаПолейДополнительные.Добавить("КоличествоПодобрано");
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Форма.Склад, Ложь);

	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
																	Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.Дата = ТекущаяДатаСеанса();
	
КонецПроцедуры

// Формирует текст запроса для расчета статусов указания серий
//	Параметры:
//		ТекстЗапроса				- Строка		- формируемый текст запроса.
//		ПараметрыУказанияСерий	- Структура	- состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//
Процедура СформироватьТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий, ТекстЗапроса) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары." + ПараметрыУказанияСерий.ИмяПоляКоличество + " КАК Количество,";
	
	Для Каждого ИмяПоля Из ПараметрыУказанияСерий.ИменаПолейДополнительные Цикл
		ТекстЗапроса = ТекстЗапроса + "
		|	Товары." + ИмяПоля + " КАК " + ИмяПоля + ",";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,";
	
	Если ПараметрыУказанияСерий.ПроверяемыйДокумент = "ЧекККМ"
	 Или ПараметрыУказанияСерий.ПроверяемыйДокумент = "ЧекККМВозврат" Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБОР
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
		|			ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
		|			ТОГДА 0
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
		|			ТОГДА ВЫБОР
		|				КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|					И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 14
		|				ИНАЧЕ 13
		|			КОНЕЦ
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
		|			ТОГДА ВЫБОР
		|				КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|					И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|					ТОГДА 10
		|				ИНАЧЕ 9
		|			КОНЕЦ
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
		|			ТОГДА ВЫБОР
		|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
		|					ТОГДА ВЫБОР
		|						КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|							И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|							ТОГДА 6
		|						ИНАЧЕ 5
		|					КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|					КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|						И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|						ТОГДА 8
		|					ИНАЧЕ 7
		|				КОНЕЦ
		|			КОНЕЦ
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
		|			И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
		|			ТОГДА ВЫБОР
		|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
		|					ТОГДА ВЫБОР
		|						КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|							И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|							ТОГДА 4
		|						ИНАЧЕ 3
		|					КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|					КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|						И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|						ТОГДА 2
		|					ИНАЧЕ 1
		|				КОНЕЦ
		|			КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СтатусУказанияСерий";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБОР
		|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
		|			ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
		|				ТОГДА ВЫБОР
		|					КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|						И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|						ТОГДА ВЫБОР
		|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
		|								ТОГДА 14
		|							ИНАЧЕ 10
		|						КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
		|							ТОГДА 13
		|						ИНАЧЕ 9
		|					КОНЕЦ
		|				КОНЕЦ
		|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
		|				ТОГДА ВЫБОР
		|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
		|						ТОГДА ВЫБОР
		|							КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|								И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|								ТОГДА 6
		|							ИНАЧЕ 5
		|						КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|						КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|							И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|							ТОГДА 8
		|						ИНАЧЕ 7
		|					КОНЕЦ
		|				КОНЕЦ
		|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
		|				И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
		|					И &ПриемкаОтПоставщика
		|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоВозвратуОтКлиента
		|					И &ПриемкаПоВозвратуОтКлиента
		|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПеремещению
		|					И &ПриемкаПоПеремещению
		|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПрочемуОприходованию
		|					И &ПриемкаПоПрочемуОприходованию)
		|				ТОГДА ВЫБОР
		|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
		|						ТОГДА ВЫБОР
		|							КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|								И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|								ТОГДА 4
		|							ИНАЧЕ 3
		|						КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|						КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|							И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|							ТОГДА 2
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|				КОНЕЦ
		|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
		|				И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКлиенту
		|					И &ОтгрузкаКлиенту
		|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
		|					И &ОтгрузкаНаВнутренниеНужды
		|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоВозвратуПоставщику
		|					И &ОтгрузкаПоВозвратуПоставщику
		|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоПеремещению
		|					И &ОтгрузкаПоПеремещению)
		|				ТОГДА ВЫБОР
		|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
		|						ТОГДА ВЫБОР
		|							КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|								И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|								ТОГДА 4
		|							ИНАЧЕ 3
		|						КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|						КОГДА (Товары.Количество <> 0 ИЛИ Товары.КоличествоПодобрано <> 0)
		|							И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|							ТОГДА 2
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|				КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	КОНЕЦ КАК СтатусУказанияСерий";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
КонецПроцедуры

// Предназначена для расчета статусов указания серий во всех строках таблицы товаров
// см. НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий
// 
// Параметры:
// * Форма        - УправляемаяФорма - форма с таблицей товаров
// * ТекстЗапроса - Строка - текст запроса для расчета статусов указания серий 
//
Процедура ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерий);
	
КонецПроцедуры

// Возвращает через параметр наличие права на добавление элементов справочника СерииНоменклатуры
// 
// Параметры:
// 	ПравоДобавлениеСерий - Булево - исходящий, наличие права на добавление.
//
Процедура ОпределитьПравоДобавлениеСерий(ПравоДобавлениеСерий) Экспорт
	
	ПравоДобавлениеСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ТаблицаТабачнойПродукцииДокумента

// Формирует пустую таблицу табачной продукции
// 
// Параметры:
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица определяющая состав табачной продукции документа:
// * GTIN           - ОпределяемыйТип.GTIN                       - штрихкод
// * Номенклатура   - ОпределяемыйТип.Номенклатура               - номенклатура
// * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика
// * Серия          - ОпределяемыйТип.СерияНоменклатуры          - серия
// * Количество     - Число                                      - количество
Функция ТаблицаТабачнойПродукции()

	ТаблицаТабачнойПродукции = Новый ТаблицаЗначений();
	ТаблицаТабачнойПродукции.Колонки.Добавить("GTIN",           Метаданные.ОпределяемыеТипы.GTIN.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Номенклатура",   Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Характеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Серия",          Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Количество",     Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаТабачнойПродукции;
	
КонецФункции

Функция ЗапросТабачнойПродукцииПриобретениеТоваровУслуг(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """")      КАК GTIN,
	|	ПриобретениеТоваровУслугТовары.Номенклатура         КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика       КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ПриобретениеТоваровУслугТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПриобретениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ПриобретениеТоваровУслугТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И ПриобретениеТоваровУслугТовары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросТабачнойПродукцииВозвратТоваровОтКлиента(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """")      КАК GTIN,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура          КАК Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Характеристика        КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВозвратТоваровОтКлиентаТовары.Количество            КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровОтКлиентаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ВозвратТоваровОтКлиентаТовары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И ВозвратТоваровОтКлиентаТовары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	ВозвратТоваровОтКлиентаТовары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросТабачнойПродукцииЧекККМ(ФормаОбъект)
	
	Если ТипЗнч(ФормаОбъект) = Тип("УправляемаяФорма") Тогда
		Товары = ФормаОбъект.Объект.Товары.Выгрузить();
	Иначе
		Товары = ФормаОбъект.Товары.Выгрузить();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары", Товары);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВТ_Товары.Серия КАК Серия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_ТабачнаяПродукция
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТабачнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика,
	|	ВТ_Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	ТабачнаяПродукция.Номенклатура КАК Номенклатура,
	|	ТабачнаяПродукция.Характеристика КАК Характеристика,
	|	ТабачнаяПродукция.Серия КАК Серия,
	|	ТабачнаяПродукция.Количество КАК Количество
	|ИЗ
	|	ВТ_ТабачнаяПродукция КАК ТабачнаяПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ТабачнаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И ТабачнаяПродукция.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросТабачнойПродукцииРеализацияТоваровУслуг(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|		И Товары.Склад = Серии.Склад
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросТабачнойПродукцииВозвратТоваровПоставщику(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросТабачнойПродукцииКорректировкаРеализации(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия                                   КАК Серия,
	|	Товары.Количество                              КАК Количество
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#КонецОбласти
