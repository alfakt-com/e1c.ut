#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.Вставить("РазрешеноМенятьВарианты", Ложь);
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтаксис-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если ЭтаФорма.Параметры.Свойство("КлючВарианта") Тогда
		Если ЭтаФорма.Параметры.КлючВарианта = "СверкаПоРегистраторам" Тогда
			ЭтаФорма.КлючТекущегоВарианта = ЭтаФорма.Параметры.КлючВарианта;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КлючВарианта = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.КлючВарианта;
	
	ВерсияКонфигурации = Лев(Метаданные.Версия, 3);
	
	ПериодОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодОтчета");
	Если ПериодОтчета <> Неопределено Тогда
		ЭтотОбъект.НачалоПериода = ПериодОтчета.Значение.ДатаНачала;
		ЭтотОбъект.КонецПериода = ?(ЗначениеЗаполнено(ПериодОтчета.Значение.ДатаОкончания), КонецДня(ПериодОтчета.Значение.ДатаОкончания), Дата(3999, 1, 1));
	КонецЕсли;
	
	ПараметрОрганизация = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "Организация");
	ЭтотОбъект.МассивОрганизаций = ?(ПараметрОрганизация.Использование 
										И ЗначениеЗаполнено(ПараметрОрганизация.Значение), ПараметрОрганизация.Значение, ДоступныеОрганизации());
	ДокументРезультат.Очистить();

	ВременныеТаблицы = Новый МенеджерВременныхТаблиц;
	
	КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("КлючВарианта", КлючВарианта);
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных,
		НастройкиКомпоновкиДанных,
		ДанныеРасшифровки);
		
	УстановитьПривилегированныйРежим(Истина);
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТЗТовары",                  ТаблицаТовары(ВременныеТаблицы, КлючВарианта));
	УстановитьПривилегированныйРежим(Ложь);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
	ВременныеТаблицы.Закрыть();
	
	ПостОбработка(ДокументРезультат, ДанныеРасшифровки, КлючВарианта);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаТовары(ВременныеТаблицы, КлючВарианта)
	
	Если Не (ЭтотОбъект.РазделУчета = 0 Или ЭтотОбъект.РазделУчета = 2) Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ?(КлючВарианта = "СверкаПоРегистраторам",
					ТекстЗапросаТоварыПоРегистраторам(),
					ТекстЗапросаТовары());
	
	Запрос.УстановитьПараметр("НачалоПериода", ЭтотОбъект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ЭтотОбъект.КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаОстатков", Новый Граница(ЭтотОбъект.КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МассивОрганизаций", ЭтотОбъект.МассивОрганизаций);
	Запрос.УстановитьПараметр("Номенклатура", ЭтотОбъект.Номенклатура);
	Запрос.УстановитьПараметр("Склад", ЭтотОбъект.Склад);
	
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	ТЗ = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	Возврат ТЗ;
	
КонецФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаТовары()
	
	Возврат 
	"ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.Организация КАК ОрганизацияВС,
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.Номенклатура КАК НоменклатураВС,
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.Склад КАК СкладВС,
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстатокВС,
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.КоличествоПриход КАК КоличествоПриходВС,
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.КоличествоРасход КАК КоличествоРасходВС,
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстатокВС
	|ПОМЕСТИТЬ ВТТоварыНаВиртуальныхСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , ) КАК ТоварыНаВиртуальныхСкладахОстаткиИОбороты
	|ГДЕ
	|	ТоварыНаВиртуальныхСкладахОстаткиИОбороты.Организация В(&МассивОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизацийОстаткиИОбороты.Организация КАК ОрганизацияУч,
	|	ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры.Номенклатура КАК НоменклатураУч,
	|	ВЫБОР
	|		КОГДА СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад <> НЕОПРЕДЕЛЕНО
	|			ТОГДА СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад
	|		ИНАЧЕ ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры.Склад
	|	КОНЕЦ КАК СкладУч,
	|	ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстатокУч,
	|	ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход КАК КоличествоПриходУч,
	|	ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход КАК КоличествоРасходУч,
	|	ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстатокУч
	|ПОМЕСТИТЬ ВТТоварыОрганизаций
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , ) КАК ТоварыОрганизацийОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|		ПО ТоварыОрганизацийОстаткиИОбороты.АналитикаУчетаНоменклатуры.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад
	|			И ТоварыОрганизацийОстаткиИОбороты.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация
	|ГДЕ
	|	ТоварыОрганизацийОстаткиИОбороты.Организация В(&МассивОрганизаций)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварыНаВиртуальныхСкладах.ОрганизацияВС КАК Организация,
	|	ВТТоварыНаВиртуальныхСкладах.СкладВС КАК Склад,
	|	ВТТоварыНаВиртуальныхСкладах.НоменклатураВС КАК Номенклатура,
	|	ВТТоварыНаВиртуальныхСкладах.КоличествоНачальныйОстатокВС КАК КоличествоНачальныйОстатокВС,
	|	ВТТоварыНаВиртуальныхСкладах.КоличествоПриходВС КАК КоличествоПриходВС,
	|	ВТТоварыНаВиртуальныхСкладах.КоличествоРасходВС КАК КоличествоРасходВС,
	|	ВТТоварыНаВиртуальныхСкладах.КоличествоКонечныйОстатокВС КАК КоличествоКонечныйОстатокВС,
	|	0 КАК КоличествоНачальныйОстатокУч,
	|	0 КАК КоличествоПриходУч,
	|	0 КАК КоличествоРасходУч,
	|	0 КАК КоличествоКонечныйОстатокУч
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	ВТТоварыНаВиртуальныхСкладах КАК ВТТоварыНаВиртуальныхСкладах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТоварыОрганизаций.ОрганизацияУч,
	|	ВТТоварыОрганизаций.СкладУч,
	|	ВТТоварыОрганизаций.НоменклатураУч,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВТТоварыОрганизаций.КоличествоНачальныйОстатокУч,
	|	ВТТоварыОрганизаций.КоличествоПриходУч,
	|	ВТТоварыОрганизаций.КоличествоРасходУч,
	|	ВТТоварыОрганизаций.КоличествоКонечныйОстатокУч
	|ИЗ
	|	ВТТоварыОрганизаций КАК ВТТоварыОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТовары.Организация КАК Организация,
	|	ВТТовары.Склад КАК Склад,
	|	ВТТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ВТТовары.КоличествоНачальныйОстатокВС) КАК КоличествоНачальныйОстатокВС,
	|	СУММА(ВТТовары.КоличествоПриходВС) КАК КоличествоПриходВС,
	|	СУММА(ВТТовары.КоличествоРасходВС) КАК КоличествоРасходВС,
	|	СУММА(ВТТовары.КоличествоКонечныйОстатокВС) КАК КоличествоКонечныйОстатокВС,
	|	СУММА(ВТТовары.КоличествоНачальныйОстатокУч) КАК КоличествоНачальныйОстатокУч,
	|	СУММА(ВТТовары.КоличествоПриходУч) КАК КоличествоПриходУч,
	|	СУММА(ВТТовары.КоличествоРасходУч) КАК КоличествоРасходУч,
	|	СУММА(ВТТовары.КоличествоКонечныйОстатокУч) КАК КоличествоКонечныйОстатокУч
	|ИЗ
	|	ВТТовары КАК ВТТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТовары.Склад,
	|	ВТТовары.Организация,
	|	ВТТовары.Номенклатура";
	
КонецФункции

Функция ТекстЗапросаТоварыПоРегистраторам()
	
	Возврат
	"ВЫБРАТЬ
	|	ТоварыНаВиртуальныхСкладах.Организация КАК ОрганизацияВС,
	|	ТоварыНаВиртуальныхСкладах.Номенклатура КАК НоменклатураВС,
	|	ТоварыНаВиртуальныхСкладах.Склад КАК СкладВС,
	|	ВЫБОР
	|		КОГДА ТоварыНаВиртуальныхСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыНаВиртуальныхСкладах.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПриходВС,
	|	ВЫБОР
	|		КОГДА ТоварыНаВиртуальныхСкладах.ВидДвижения <> ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыНаВиртуальныхСкладах.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоРасходВС,
	|	ТоварыНаВиртуальныхСкладах.Регистратор КАК РегистраторВС,
	|	ТоварыНаВиртуальныхСкладах.ИсточникПроисхождения КАК ИсточникПроисхождения
	|ПОМЕСТИТЬ ВТТоварыНаВиртуальныхСкладах
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах КАК ТоварыНаВиртуальныхСкладах
	|ГДЕ
	|	ТоварыНаВиртуальныхСкладах.Организация В(&МассивОрганизаций)
	|	И ТоварыНаВиртуальныхСкладах.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК ОрганизацияУЧ,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК НоменклатураУЧ,
	|	ВЫБОР
	|		КОГДА СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад <> НЕОПРЕДЕЛЕНО
	|			ТОГДА СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад
	|		ИНАЧЕ ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад
	|	КОНЕЦ КАК СкладУЧ,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПриходУЧ,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения <> ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоРасходУЧ,
	|	ТоварыОрганизаций.Регистратор КАК РегистраторУЧ,
	|	"""" КАК ИсточникПроисхождения
	|ПОМЕСТИТЬ ВТТоварыОрганизаций
	|ИЗ
	|	РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ПО (ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Склад = СоответствиеСкладовИВиртуальныхСкладов.Склад)
	|			И (ТоварыОрганизаций.Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация)
	|ГДЕ
	|	ТоварыОрганизаций.Организация В(&МассивОрганизаций)
	|	И ТоварыОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварыНаВиртуальныхСкладах.ОрганизацияВС КАК Организация,
	|	ВТТоварыНаВиртуальныхСкладах.НоменклатураВС КАК Номенклатура,
	|	ВТТоварыНаВиртуальныхСкладах.СкладВС КАК Склад,
	|	ВТТоварыНаВиртуальныхСкладах.РегистраторВС КАК Регистратор,
	|	ВТТоварыНаВиртуальныхСкладах.КоличествоПриходВС КАК КоличествоПриходВС,
	|	ВТТоварыНаВиртуальныхСкладах.КоличествоРасходВС КАК КоличествоРасходВС,
	|	0 КАК КоличествоПриходУЧ,
	|	0 КАК КоличествоРасходУЧ,
	|	ВТТоварыНаВиртуальныхСкладах.ИсточникПроисхождения КАК ИсточникПроисхождения
	|ИЗ
	|	ВТТоварыНаВиртуальныхСкладах КАК ВТТоварыНаВиртуальныхСкладах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТоварыОрганизаций.ОрганизацияУЧ,
	|	ВТТоварыОрганизаций.НоменклатураУЧ,
	|	ВТТоварыОрганизаций.СкладУЧ,
	|	ВТТоварыОрганизаций.РегистраторУЧ,
	|	0,
	|	0,
	|	ВТТоварыОрганизаций.КоличествоПриходУЧ,
	|	ВТТоварыОрганизаций.КоличествоРасходУЧ,
	|	ВТТоварыОрганизаций.ИсточникПроисхождения
	|ИЗ
	|	ВТТоварыОрганизаций КАК ВТТоварыОрганизаций";

КонецФункции

#КонецОбласти 

#Область ДоработкаТабличногоДокумента

Функция ДоступныеОрганизации(Организация = Неопределено)
	СписокОрганизаций = Новый СписокЗначений;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеСправочника.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Организация
		|	И ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеСправочника.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК ДанныеСправочника
		|ГДЕ
		|	&Организация В (ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
		|	И ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)");
		Запрос.УстановитьПараметр("Организация", Организация);
		МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
		СписокОрганизаций.ЗагрузитьЗначения(МассивОрганизаций);
	Иначе
		СписокОрганизаций.Добавить(Организация);
	КонецЕсли;
	Возврат СписокОрганизаций;
КонецФункции

Процедура ПостОбработка(ТабДок, ДанныеРасшифровки, КлючВарианта)
	
	СписокЯчеек = Новый СписокЗначений;
	СписокЯчеек.Добавить("Начальный остаток");
	СписокЯчеек.Добавить("Приход");
	СписокЯчеек.Добавить("Расход");
	СписокЯчеек.Добавить("Конечный остаток");
	СписокЯчеек.Добавить("Показатели");
	
	ОбъединяемыеЯчейки = Новый СписокЗначений;
	ОбъединяемыеЯчейки.Добавить("Количество начальный остаток уч");
	ОбъединяемыеЯчейки.Добавить("Количество приход уч");
	ОбъединяемыеЯчейки.Добавить("Количество расход уч");
	ОбъединяемыеЯчейки.Добавить("Количество конечный остаток уч");
	ОбъединяемыеЯчейки.Добавить("Количество начальный остаток ВС");
	ОбъединяемыеЯчейки.Добавить("Отклонение (начальный остаток)");
	ОбъединяемыеЯчейки.Добавить("Количество приход ВС");
	ОбъединяемыеЯчейки.Добавить("Количество расход ВС");
	ОбъединяемыеЯчейки.Добавить("Отклонение (приход)");
	ОбъединяемыеЯчейки.Добавить("Количество конечный остаток ВС");
	ОбъединяемыеЯчейки.Добавить("Нач. остаток (откл.)");
	ОбъединяемыеЯчейки.Добавить("Кон. остаток (откл.)");
	ОбъединяемыеЯчейки.Добавить("Приход (откл.)");
	ОбъединяемыеЯчейки.Добавить("Расход (откл.)");
	ОбъединяемыеЯчейки.Добавить("Товары организации");
	ОбъединяемыеЯчейки.Добавить("Товары на виртуальных складах");
	ОбъединяемыеЯчейки.Добавить("Отклонение (ТО-ВС)");
	
	
	Для индСтр = 1 По ТабДок.ВысотаТаблицы Цикл
		МаксимальнаяВысотаШапки = 0;
		Для индКол = 1 По ТабДок.ШиринаТаблицы Цикл
			
			Если ТабДок.Область(индСтр, 1).Текст = "Итого" Тогда
				ТабДок.Область(индСтр, индКол).Расшифровка = Неопределено;
			КонецЕсли;

			Если ОбъединятьЯчейки(ТабДок, индСтр, индКол, СписокЯчеек, КлючВарианта) Тогда
				ТекстЗаголовка = ТабДок.Область(индСтр, индКол).Текст;
				Если КлючВарианта = "СверкаПоРегистраторам" Тогда
					ОбъединяемаяОбласть = ТабДок.Область(индСтр, индКол, Макс(индСтр, ТабДок.ФиксацияСверху), индКол);
				Иначе
					ВысотаШапки = 0;
					Для Индекс = 1 По 5 Цикл
						СледующаяЯчейка = ТабДок.Область(индСтр+Индекс, индКол, индСтр+Индекс, индКол).Текст;
						Если ОбъединяемыеЯчейки.НайтиПоЗначению(СледующаяЯчейка) <> Неопределено Тогда
							ВысотаШапки = ВысотаШапки + 1;
						КонецЕсли;
					КонецЦикла;
					ОбъединяемаяОбласть = ТабДок.Область(индСтр - 1, индКол, индСтр + ВысотаШапки, индКол);
					МаксимальнаяВысотаШапки = Макс(МаксимальнаяВысотаШапки, ВысотаШапки);
				КонецЕсли;
				ОбъединяемаяОбласть.Объединить();
				ОбъединяемаяОбласть.Текст = ТекстЗаголовка;
				ОбъединяемаяОбласть.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				
				Если СписокЯчеек.Количество() = 0 Тогда 
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		индСтр = индСтр + МаксимальнаяВысотаШапки;
	КонецЦикла;

КонецПроцедуры

Функция ОбъединятьЯчейки(ТабДок, индСтр, индКол, СписокЯчеек, КлючВарианта)

	Ячейка = ТабДок.Область(индСтр, индКол);
	ЯчейкаКОбъединению = СписокЯчеек.НайтиПоЗначению(Ячейка.Текст);
	Если ЯчейкаКОбъединению <> Неопределено Тогда
		Если КлючВарианта = "СверкаПоРегистраторам" Тогда
			СписокЯчеек.Удалить(ЯчейкаКОбъединению);
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли