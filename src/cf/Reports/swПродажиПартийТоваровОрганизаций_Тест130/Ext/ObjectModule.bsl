
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	//Параметр    = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидЦены"));
	//Если НЕ ЗначениеЗаполнено(Параметр.Значение) Тогда
	//	Параметр.Значение       = Константы.swВидПриходнойЦены.Получить();
	//КонецЕсли;
	//Параметр.Использование  = Истина;
	//Если ЗначениеЗаполнено(Параметр.ИдентификаторПользовательскойНастройки) Тогда
	//	
	//	ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
	//	Параметр.ИдентификаторПользовательскойНастройки);
	//	Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
	//		Если НЕ ЗначениеЗаполнено(ПользовательскийПараметр.Значение) Тогда
	//			ПользовательскийПараметр.Значение = Параметр.Значение;
	//		Иначе
	//			Параметр.Значение = ПользовательскийПараметр.Значение;
	//		КонецЕсли;
	//		ПользовательскийПараметр.Использование = Истина;
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//ВидЦены = Параметр.Значение;

	//Параметр    = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Склад"));
	//Если НЕ ЗначениеЗаполнено(Параметр.Значение) Тогда
	//	Параметр.Значение       = Справочники.Склады.ПустаяСсылка();
	//КонецЕсли;
	//Параметр.Использование  = Истина;
	//Если ЗначениеЗаполнено(Параметр.ИдентификаторПользовательскойНастройки) Тогда
	//	
	//	ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
	//	Параметр.ИдентификаторПользовательскойНастройки);
	//	Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
	//		Если НЕ ЗначениеЗаполнено(ПользовательскийПараметр.Значение) Тогда
	//			ПользовательскийПараметр.Значение = Параметр.Значение;
	//		Иначе
	//			Параметр.Значение = ПользовательскийПараметр.Значение;
	//		КонецЕсли;
	//		ПользовательскийПараметр.Использование = Истина;
	//	КонецЕсли;
	//КонецЕсли;
	//Склад = Параметр.Значение;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.ВНаличииОстаток, 0)) КАК ВНаличииОстаток,
	//               |	СУММА(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК СуммаОстаток
	//               |ИЗ
	//               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	//               |			&КонецПериода,
	//               |			ВЫБОР
	//               |				КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	//               |					ТОГДА ИСТИНА
	//               |				ИНАЧЕ Склад = &Склад
	//               |			КОНЕЦ) КАК ТоварыНаСкладахОстатки
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонецПериода, ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
	//               |		ПО ТоварыНаСкладахОстатки.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура";
	//Параметр    = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	//Если ЗначениеЗаполнено(Параметр.Значение) Тогда
	//	КонецПериода       = Параметр.Значение;
	//КонецЕсли;
	//Если ЗначениеЗаполнено(Параметр.ИдентификаторПользовательскойНастройки) Тогда
	//	ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(
	//	Параметр.ИдентификаторПользовательскойНастройки);
	//	Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
	//		Если ЗначениеЗаполнено(ПользовательскийПараметр.Значение) Тогда
	//			КонецПериода = ПользовательскийПараметр.Значение.ДатаОкончания;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	//Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	//Запрос.УстановитьПараметр("Склад",Склад);
	//Запрос.УстановитьПараметр("ВидЦены",ВидЦены);
	//ПараметрСумма = 0;
	//ПараметрКоличество = 0;
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	ПараметрСумма = Выборка.СуммаОстаток;	
	//	ПараметрКоличество = Выборка.ВНаличииОстаток;	
	//КонецЦикла;
	//Параметр    = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрСумма"));
	//Если НЕ ЗначениеЗаполнено(Параметр.Значение) Тогда
	//	Параметр.Значение       = ПараметрСумма;
	//КонецЕсли;
	//Параметр.Использование  = Истина;
	//Параметр    = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПараметрКоличество"));
	//Если НЕ ЗначениеЗаполнено(Параметр.Значение) Тогда
	//	Параметр.Значение       = ПараметрКоличество;
	//КонецЕсли;
	//Параметр.Использование  = Истина;
КонецПроцедуры

Функция СведенияОВнешнейОбработке() Экспорт
	РегистрационныеДанные = Новый Структура;
	РегистрационныеДанные.Вставить("Наименование", "Продажи партий товаров организаций");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Истина);
	РегистрационныеДанные.Вставить("Версия", "1.2");
	
	//ДополнительнаяОбработка
	//ДополнительныйОтчет
	//ЗаполнениеОбъекта
	//Отчет
	//ПечатнаяФорма
	//СозданиеСвязанныхОбъектов
	РегистрационныеДанные.Вставить("Вид", "ДополнительныйОтчет");
	
	РегистрационныеДанные.Вставить("Информация", "Продажи партий товаров организаций");
	
	///////////// команды /////////////////////////
	тзКоманд = Новый ТаблицаЗначений;
	тзКоманд.Колонки.Добавить("Идентификатор");
	тзКоманд.Колонки.Добавить("Представление");
	тзКоманд.Колонки.Добавить("Модификатор");
	тзКоманд.Колонки.Добавить("ПоказыватьОповещение");
	тзКоманд.Колонки.Добавить("Использование");
	
	строкаКоманды = тзКоманд.Добавить();
	строкаКоманды.Идентификатор = "swПродажиПартийТоваровОрганизаций";
	строкаКоманды.Представление = "Продажи партий товаров организаций";
	строкаКоманды.ПоказыватьОповещение = Истина;
	строкаКоманды.Использование = "ОткрытиеФормы";
	
	РегистрационныеДанные.Вставить("Команды", тзКоманд);
	
	Возврат РегистрационныеДанные;
	
КонецФункции
