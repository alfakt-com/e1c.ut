
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет список команд создания на основании.
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	Документы.АвансовыйОтчет.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СчетФактураНалоговыйАгент.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	Документы.СчетФактураПолученныйАванс.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
	СозданиеНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Списание безналичных ДС".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) Тогда
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.СписаниеБезналичныхДенежныхСредств.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения.
//       См. описание 1 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//   Параметры - Структура - Вспомогательные параметры. Для чтения.
//       См. описание 2 параметра процедуры ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	
	
КонецПроцедуры

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса.
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ВЫБОР КОГДА ТаблицаДокументов.ПроведеноБанком ТОГДА
	|		&СтрокаПроведеноБанком
	|	ИНАЧЕ
	|		&СтрокаНеПроведеноБанком
	|	КОНЕЦ КАК ПредставлениеТекущегоСтатуса,
	|	&СтрокаПроведеноБанком КАК ПредставлениеНовогоСтатуса,
	|	ТаблицаДокументов.ПроведеноБанком КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("СтрокаПроведеноБанком", НСтр("ru = 'Проведено банком'"));
	Запрос.УстановитьПараметр("СтрокаНеПроведеноБанком", НСтр("ru = 'Не проведено банком'"));
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки.
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Дополнительные проверки отсутствуют
	
КонецФункции

// Заполняет переданный документ
//
// Параметры:
//    Объект - ДокументОбъект - заполнямый документ
//    Ссылка - ДокументСсылка - документ-основание.
//
Процедура ЗаполнитьПоОснованию(Объект, Ссылка) Экспорт
	
	ВводНаОснованииПредусмотрен = Ложь;
	
	Если Не ВводНаОснованииПредусмотрен Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не предусмотрен ввод документа %1 на основании документа %2.'"),
			Объект.Метаданные().Синоним,
			Ссылка);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#Область Прочее

// Функция получает реквизиты документа для обмена с конфигурацией "Бухгалтерия предприятия".
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - Документ, для которого необходимо получить реквизиты.
//
// Возвращаемое значение:
//	Структура - Структура реквизитов документа.
//
Функция РеквизитыДокументаДляОбменаСБухгалтерией(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет КАК КорреспондирующийСчет,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СтатьяДвиженияДенежныхСредств.КорреспондирующийСчет <> """"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеДокумента.СтатьяРасходов.КорреспондирующийСчет КАК КорреспондирующийСчет,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СтатьяРасходов.КорреспондирующийСчет <> """"
	|	И ДанныеДокумента.Ссылка.ХозяйственнаяОперация =
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.НомерСтроки
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[0].Выбрать();
	Если Выборка.Следующий() Тогда
		КорреспондирующийСчет = Выборка.КорреспондирующийСчет;
		ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
	Иначе
		КорреспондирующийСчет = "";
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = МассивРезультатов[1].Выбрать();
	Если Выборка.Следующий() Тогда
		КорреспондирующийСчет = Выборка.КорреспондирующийСчет;
		СтатьяРасходов = Выборка.СтатьяРасходов;
	Иначе
		СтатьяРасходов = Неопределено;
	КонецЕсли;
	
	ВидОперации = "ПрочееСписание";
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
		
		Если СтрНайти(КорреспондирующийСчет, "70") <> 0 Тогда
			ВидОперации = "ПеречислениеЗП";	
		КонецЕсли;
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		
		Если СтрНайти(КорреспондирующийСчет, "66") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "67") <> 0 Тогда
			ВидОперации = "РасчетыПоКредитамИЗаймам";
			
		ИначеЕсли СтрНайти(КорреспондирующийСчет, "76") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "60") <> 0
		 ИЛИ СтрНайти(КорреспондирующийСчет, "62") <> 0 Тогда
			ВидОперации = "ПрочиеРасчетыСКонтрагентами";
			
		ИначеЕсли СтрНайти(КорреспондирующийСчет, "70") <> 0 Тогда
			ВидОперации = "ПеречислениеЗП";	
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("ВидОперации, Счет, СтатьяРасходов",
		ВидОперации,
		КорреспондирующийСчет,
		СтатьяРасходов);
	
	Возврат СтруктураРеквизитов;
		
КонецФункции

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции.
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, ПеречислениеВБюджет, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("БанковскийСчетПолучатель");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("ВидПеречисленияВБюджет");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("ИдентификаторПлатежа");
	МассивВсехРеквизитов.Добавить("КассаПолучатель");
	МассивВсехРеквизитов.Добавить("КодБК");
	МассивВсехРеквизитов.Добавить("КодОКАТО");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("КратностьКурсаКонвертации");
	МассивВсехРеквизитов.Добавить("НомерВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ОплатаПоЗаявкам");
	МассивВсехРеквизитов.Добавить("ПеречислениеВБюджет");
	МассивВсехРеквизитов.Добавить("ПлатежиПо275ФЗ");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("Подразделение");
	МассивВсехРеквизитов.Добавить("ПоказательДаты");
	МассивВсехРеквизитов.Добавить("ПоказательНомера");
	МассивВсехРеквизитов.Добавить("ПоказательОснования");
	МассивВсехРеквизитов.Добавить("ПоказательПериода");
	МассивВсехРеквизитов.Добавить("ПоказательТипа");
	МассивВсехРеквизитов.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РегистрацияВНалоговомОргане");
	МассивВсехРеквизитов.Добавить("СтатусСоставителя");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СуммаКонвертации");
	МассивВсехРеквизитов.Добавить("ТипНалога");
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("Договор");

	
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Заказ");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Комментарий");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ПериодВозникновенияРасхода");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Подразделение");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаНДС");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Организация");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Ведомость");
	
	МассивРеквизитовОперации = Новый Массив;
	
	МассивРеквизитовОперации.Добавить("Подразделение");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
	
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
	    МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Подразделение");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ПериодВозникновенияРасхода");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		МассивРеквизитовОперации.Добавить("РегистрацияВНалоговомОргане");
		
		МассивРеквизитовОперации.Добавить("ТипНалога");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("Договор");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Организация");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("КратностьКурсаКонвертации");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("СуммаКонвертации");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику Тогда
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Ведомость");
			
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
			
			МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
			МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		// ЗУПК
		МассивРеквизитовОперации.Добавить("Контрагент");
		// ЗУПК
		МассивРеквизитовОперации.Добавить("ПлатежиПо275ФЗ");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Ведомость");
			
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
			
			МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
			МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтавкаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаНДС");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВзносов Тогда
		
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ОплатаПоЗаявкам");
		МассивРеквизитовОперации.Добавить("ИдентификаторПлатежа");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТипНалога");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Ведомость");
			
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
			
			МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
			МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
		КонецЕсли;
		
		МассивРеквизитовОперации.Добавить("СтатьяАктивовПассивов");
		МассивРеквизитовОперации.Добавить("АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ИННПлательщика");
		МассивРеквизитовОперации.Добавить("КПППлательщика");
		МассивРеквизитовОперации.Добавить("ТекстПлательщика");
		
	КонецЕсли;
	
	МассивОперацийПеречисленияВБюджет = МассивОперацийПеречисленияВБюджет();
	Если (ПеречислениеВБюджет = Неопределено ИЛИ ПеречислениеВБюджет)
		И МассивОперацийПеречисленияВБюджет.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		
		МассивРеквизитовОперации.Добавить("ПеречислениеВБюджет");
		МассивРеквизитовОперации.Добавить("КодБК");
		МассивРеквизитовОперации.Добавить("КодОКАТО");
		МассивРеквизитовОперации.Добавить("ПоказательДаты");
		МассивРеквизитовОперации.Добавить("ПоказательНомера");
		МассивРеквизитовОперации.Добавить("ПоказательОснования");
		МассивРеквизитовОперации.Добавить("ПоказательПериода");
		МассивРеквизитовОперации.Добавить("ПоказательТипа");
		МассивРеквизитовОперации.Добавить("СтатусСоставителя");
		
	КонецЕсли;
	
	Если МассивОперацийПеречисленияВБюджет.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		МассивРеквизитовОперации.Добавить("ВидПеречисленияВБюджет");
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует массив хозяйственных операций, для которых доступно перечисление в бюджет.
//
// Возвращаемое значение:
//	Массив - массив хозяйствненых операций.
//
Функция МассивОперацийПеречисленияВБюджет() Экспорт
	
	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	
	Возврат МассивОпераций;
	
КонецФункции

// Определяет состав хоз. операций документа, для которых не используется расшифровка платежа при отсутствии заявок на
// расход ДС.
//
// Возвращаемое значение:
//    Массив - хозяйственные операции без использования расшифровки платежа.
//
Функция МассивОперацийБезРасшифровкиПлатежа() Экспорт
	
	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	
	Возврат МассивОпераций;
	
КонецФункции

// Определяет свойства полей формы в зависимости от данных
//
// Возвращаемое значение:
//    ТаблицаЗначений - таблица с колонками Поля, Условие, Свойства.
//
Функция НастройкиПолейФормы() Экспорт
	
	Финансы = ФинансоваяОтчетностьСервер;
	Настройки = ДенежныеСредстваСервер.ИнициализироватьНастройкиПолейФормы();
	
	#Область Шапка
	// ОплатаПоЗаявкам
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОплатаПоЗаявкам");
	Элемент.Поля.Добавить("НадписьЗаголовокЗаявки");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", Истина);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОплатаПоЗаявкам");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.РазрешеныПлатежиБезУказанияЗаявок", Истина);
	Элемент.Свойства.Вставить("Доступность");
	
	// ПроведеноБанком
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПроведеноБанком");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ИнкассовоеПоручение);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	Элемент.Свойства.Вставить("ТолькоПросмотр");
	
	// ДатаПроведенияБанком
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаПроведенияБанком");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ПроведеноБанком", Ложь);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	Финансы.НовыйОтбор(ГруппаИли, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	Элемент.Свойства.Вставить("ТолькоПросмотрБезОтметкиНезаполненного");
	
	// ТипНалога
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ТипНалога");
	Элемент.Поля.Добавить("ЗаполнитьПоПредыдущемуПлатежу");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Элемент.Свойства.Вставить("Видимость");
	
	// ОтражениеВРеглУчете
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ОтражениеВРеглУчетеЗаголовок");
	Элемент.Поля.Добавить("НастроитьОтражениеВРеглУчете");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьРеглУчет", Истина);
    Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ОплатаНДСВБюджетПоОтдельнымОперациям", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НастроитьОтражениеВРеглУчете");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПравоДоступаКПлануСчетов", Истина);
	Элемент.Свойства.Вставить("Доступность");
	
	// НадписьРеквизитыПлательщика
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьРеквизитыПлательщика");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(Элемент.Условие, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
	Элемент.Свойства.Вставить("Видимость");
	
	// ПодотчетноеЛицо
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	// ЗУПК
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ПеречислениеСпискуФизическихЛиц", 0);
	Элемент.Свойства.Вставить("Видимость");
	
	// ПеречислениеСпискуФизическихЛиц
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПеречислениеСпискуФизическихЛиц");
	
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	
	Элемент.Свойства.Вставить("Видимость");
	// ЗУПК
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Работник'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодотчетноеЛицо");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Подотчетное лицо'"));
	
	// БанковскийСчетПолучатель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Счет зачисления'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетПолучатель");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru='Счет получатель'"));
	
	// НадписьВалюта
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьВалюта");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Контрагент
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Контрагент");
	Элемент.Поля.Добавить("СтраницыПроблемаПроверкаКонтрагентаКонтрагент");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	// ЗУПК
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ПеречислениеСпискуФизическихЛиц", 1);
	// ЗУПК
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	Элемент.Свойства.Вставить("Видимость");
	
	// БанковскийСчетКонтрагента
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетКонтрагента");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// КассаПолучатель
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КассаПолучатель");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ2 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИ2, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ3 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ3, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИ3, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// РаспоряжениеНаПеремещениеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РаспоряжениеНаПеремещениеДенежныхСредств");
	ГруппаИли1 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли1, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение);
	Финансы.НовыйОтбор(ГруппаИли1, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.БанковскийОрдер);
	Финансы.НовыйОтбор(ГруппаИли1, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.ПлатежныйОрдер);
	ГруппаИли2 = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// ЗаявкаНаРасходованиеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗаявкаНаРасходованиеДенежныхСредств");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// УведомлениеОЗачисленииВалюты
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("УведомлениеОЗачисленииВалюты");
	Финансы.НовыйОтбор(Элемент.Условие, "ТипПлатежногоДокумента", Перечисления.ТипыПлатежныхДокументов.РаспоряжениеОбОбязательнойПродаже);
	Элемент.Свойства.Вставить("Видимость");
	
	// ФискальнаяОперацияСтатус
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ФискальнаяОперацияСтатус");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ДопускаетсяПечатьЧека", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	#КонецОбласти
	
	#Область Реквизиты
	// ПериодАвансовогоОтчета, ДатаАвансовогоОтчета
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПериодАвансовогоОтчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ДатаАвансовогоОтчета");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ПериодАвансовогоОтчетаДата", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// НомерВедомостиНаВыплатуЗарплаты, ДатаВедомостиНаВыплатуЗарплаты
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НомерВедомостиНаВыплатуЗарплаты");
	Элемент.Поля.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Конвертация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ВалютаКонвертации");
	Элемент.Поля.Добавить("ВариантКурсаБанк");
	Элемент.Поля.Добавить("ВариантКурсаЦБ");
	Элемент.Поля.Добавить("КурсКонвертации");
	Элемент.Поля.Добавить("СуммаКонвертации");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("БанковскийСчетСписанияКомиссии");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Финансы.НовыйОтбор(Элемент.Условие, "УсловиеСделкиКонвертации", 1);
	Элемент.Свойства.Вставить("Видимость");
	
	// ПеречислениеВБюджет
	ОтборОперацийПеречисленияВБюджет = Новый ОтборКомпоновкиДанных();
	ГруппаИли = Финансы.НовыйОтбор(ОтборОперацийПеречисленияВБюджет,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПеречислениеВБюджет");
	Элемент.Поля.Добавить("Декорация1");
	Финансы.СкопироватьОтбор(ОтборОперацийПеречисленияВБюджет, Элемент.Условие);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьРеквизитыПлатежаВБюджет");
	Финансы.СкопироватьОтбор(ОтборОперацийПеречисленияВБюджет, Элемент.Условие);
	Финансы.НовыйОтбор(Элемент.Условие, "ПеречислениеВБюджет", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// УИП
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ИдентификаторПлатежа");
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'УИП'"));
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ИдентификаторПлатежа");
	Финансы.СкопироватьОтбор(ОтборОперацийПеречисленияВБюджет, Элемент.Условие);
	Финансы.НовыйОтбор(Элемент.Условие, "ПеречислениеВБюджет", Истина);
	Элемент.Свойства.Вставить("Заголовок", НСтр("ru = 'УИН'"));
	
	// Рублевый платеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ИдентификаторПлатежа");
	Элемент.Поля.Добавить("ВидПлатежа");
	Элемент.Поля.Добавить("ОчередностьПлатежа");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// Валютный платеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ТипКомиссииЗаПеревод");
	Элемент.Поля.Добавить("КодыИнструкцийБанку");
	Элемент.Поля.Добавить("ИнформацияПолучателюПлатежа");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЭтоТранзитныйСчет", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ИнформацияДляРегулирующихОрганов");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ТребуетсяИнформацияДляРегулирующихОрганов", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЭтоТранзитныйСчет", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтраницаВалютныйКонтроль
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаВалютныйКонтроль");
	Элемент.Поля.Добавить("НадписьФайлыДляПередачиВБанк");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйКонтроль", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КодВалютнойОперации");
	Элемент.Поля.Добавить("КодВалютнойОперацииНаименованиеПолное");
	Элемент.Поля.Добавить("ИнформацияДляВалютногоКонтроля");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйКонтроль", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЭтоТранзитныйСчет", Ложь);
	Элемент.Свойства.Вставить("Видимость");
	
	// ВставитьВНазначение
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ВставитьВНазначение");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйКонтроль", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйПлатеж", Ложь);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьВалютныеПлатежи", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// НадписьЗеркальныйПлатеж
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НадписьЗеркальныйПлатеж");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// НДФЛПоВедомостям
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("НДФЛПоВедомостям");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(Элемент.Условие, "ТипНалога", Перечисления.ТипыНалогов.НДФЛ);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплаты", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// КодВалютнойОперацииНаименованиеПолное
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("КодВалютнойОперацииНаименованиеПолное");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.КодВалютнойОперацииЗаполнен", Истина);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ВалютныйКонтроль", Истина);
	Элемент.Свойства.Вставить("Видимость");
	#КонецОбласти
	
	
	#Область РасшифровкаПлатежа
	// СтраницаРасшифровка
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("СтраницаРасшифровка");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ОплатаПоЗаявкам", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	
	Элемент.Свойства.Вставить("Видимость");
	
	// ЗаявкаНаРасходованиеДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаявкаНаРасходованиеДенежныхСредств");
	
	Финансы.НовыйОтбор(Элемент.Условие, "ОплатаПоЗаявкам", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.КонвертацияВалюты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Элемент.Свойства.Вставить("Видимость");
	
	// Аналитика прочей выдачи
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ПериодВозникновенияРасхода");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПериодВозникновенияРасхода");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Подразделение");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПодразделение");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяРасходов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияАналитикаРасходов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияАналитикаАктивовПассивов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.НаправлениеДеятельности");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияНаправлениеДеятельности");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Элемент.Свойства.Вставить("Видимость");
	
	// СтатьяДвиженияДенежныхСредств
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтатьяДвиженияДенежныхСредств");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	ГруппаИли2 = Финансы.НовыйОтбор(ГруппаИ,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли2, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаВзаиморасчетов, ВалютаВзаиморасчетов
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВалютаВзаиморасчетов");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНесколькоВалют", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	Элемент.Свойства.Вставить("Видимость");
	
	// СуммаНДС, СтавкаНДС
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСуммаНДС");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.СтавкаНДС");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияСтавкаНДС");
	Элемент.Поля.Добавить("ВалютаНДС");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	Элемент.Свойства.Вставить("Видимость");
	
	// Заказ
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Заказ");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияЗаказ");
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// Партнер
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Партнер");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияПартнер");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Элемент.Свойства.Вставить("Доступность", Ложь);
	
	// ДоговорКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорКредитаДепозита");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ТипСуммыКредитаДепозита
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипСуммыКредитаДепозита");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоКредитам);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорЗаймаСотруднику
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорЗаймаСотруднику");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	// ДоговорЛизинга
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияДоговорЛизинга");
	Элемент.Поля.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияТипПлатежаПоЛизингу");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю);
	Элемент.Свойства.Вставить("Видимость");
	
	// Организация
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Организация");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияОрганизация");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ЕстьФилиалы", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Элемент.Свойства.Вставить("Видимость");
	
	// Ведомость
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежа.Ведомость");
	Элемент.Поля.Добавить("РасшифровкаБезРазбиенияВедомость");
	
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплаты", Истина);
	
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	Финансы.НовыйОтбор(ГруппаИ, "ТипНалога", Перечисления.ТипыНалогов.НДФЛ);
	Финансы.НовыйОтбор(ГруппаИ, "НДФЛПоВедомостям", Истина);
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	
	Элемент.Свойства.Вставить("Видимость");
	
	#КонецОбласти
	
	#Область Команды
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаПодборПоОстаткам");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ФормаВыгрузитьФайлДляОбменаСБанком");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", Ложь);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплаты", Истина);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ФормаВыгрузитьМТ102");
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплаты", Истина);
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);
	// ЗУПК
	ГруппаИ1 = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ1, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета);
	Финансы.НовыйОтбор(ГруппаИ1, "Дополнительно.ПеречислениеСпискуФизическихЛиц", 1);
	// ЗУПК
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("РасшифровкаПлатежаЗаполнитьРасшифровкуПлатежа");
	ГруппаИли = Финансы.НовыйОтбор(Элемент.Условие,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	Финансы.НовыйОтбор(ГруппаИли, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймов);
	ГруппаИ = Финансы.НовыйОтбор(ГруппаИли,,, Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	Финансы.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику);
	Финансы.НовыйОтбор(ГруппаИ, "Дополнительно.ИспользоватьНачислениеЗарплатыУТ", Истина);
	Элемент.Свойства.Вставить("Видимость");

    Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ПодобратьСчетаФактуры");
	Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	Финансы.НовыйОтбор(Элемент.Условие, "Дополнительно.ОплатаНДСВБюджетПоОтдельнымОперациям", Истина);
	Элемент.Свойства.Вставить("Видимость");
	

	#КонецОбласти
	
#Область РасшифровкаПлатежа
	//// СтраницаПеречислениеВзносовИОтчислений
	//Элемент = Настройки.Добавить();
	//Элемент.Поля.Добавить("СтраницаПеречислениеВзносовИОтчислений");
	//Финансы.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВзносов);	
	//Элемент.Свойства.Вставить("Видимость");
	
#КонецОбласти
	
	Возврат Настройки;
	
КонецФункции

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Возвращает предварительные параметры фискализации чека для документа.
//
// Параметры:
//   ДокументСсылка - ДокументСсылка.РасходныйКассовыйОрдер - Документ.
//   ВерсияФФД - Строка - Версия ФФД.
//
// ВозвращаемоеЗначение:
//  Неопределено, Структура - см. функцию МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека().
//
Функция ПараметрыОперацииФискализацииЧека(ДокументСсылка, СуммаПредоплатыКорректировка = Неопределено, ВерсияФФД = Неопределено) Экспорт
	
	Возврат ДенежныеСредстваСервер.ПараметрыОперацииФискализацииЧека(ДокументСсылка, СуммаПредоплатыКорректировка, ВерсияФФД);
	
КонецФункции

#КонецОбласти


#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Основание") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Основание) Тогда
			
			Если ТипЗнч(Параметры.Основание) = Тип("Структура") И Параметры.Основание.Свойство("МассивВедомостей") Тогда
				
				
			ИначеЕсли (ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") 
				И ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.Основание,"ХозяйственнаяОперацияПоЗарплате") = 
				Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
				Тогда
				
				// ЗУПК
				Если НЕ ЗначениеЗаполнено(ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.Основание.ДокументОснование[0], "БанковскийСчетКонтрагента")) Тогда
				// ЗУПК
				СтандартнаяОбработка = Ложь;
				ВыбраннаяФорма = "ФормаПомощникаСоздания";
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(Параметры.Основание) = Тип("Структура")
				И Параметры.Основание.Свойство("НесколькоЗаявокНаРасходованиеСредств") И Не Параметры.Основание.НесколькоЗаявокНаРасходованиеСредств
				И Параметры.Основание.Свойство("ДокументОснование") И Параметры.Основание.ДокументОснование.Количество()
				И ТипЗнч(Параметры.Основание.ДокументОснование[0]) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
				
				Если ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.Основание.ДокументОснование[0], "ХозяйственнаяОперацияПоЗарплате")
					= Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
					
					// ЗУПК
					Если НЕ ЗначениеЗаполнено(ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.Основание.ДокументОснование[0], "БанковскийСчетКонтрагента")) Тогда
					// ЗУПК
					Параметры.Основание = Параметры.Основание.ДокументОснование[0];
					СтандартнаяОбработка = Ложь;
					// ЗУПК
					ВыбраннаяФорма = "ФормаПомощникаСоздания";
					// ЗУПК
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Если ИмяРегистра = "ЛимитыРасходаДенежныхСредств" Тогда
		ИсточникиДанных.Вставить("РасшифровкаПлатежа.Ведомость");
	Иначе
		ИсточникиДанных.Вставить("РасшифровкаПлатежа.Заказ");
	КонецЕсли;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	ПереопределениеРасчетаПараметров = Новый Структура;
	СинонимТаблицыДокумента = "";
	
	ПолноеИмяДокумента = "Документ.СписаниеБезналичныхДенежныхСредств";
	
	Если ИмяРегистра = "ДенежныеСредстваКВыплате" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("Период", "
			|ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
			|	ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком ТОГДА
			|		ДанныеДокумента.Дата
			|	ИНАЧЕ
			|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
			|КОНЕЦ");
			
		ПереопределениеРасчетаПараметров.Вставить("Получатель", "
			|ВЫБОР
			|	КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
			|		) ТОГДА
			|			ДанныеДокумента.ПодотчетноеЛицо
			|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
			|		ТОГДА
			|			ДанныеДокумента.БанковскийСчетПолучатель.Владелец
			|	ИНАЧЕ
			|		ДанныеДокумента.Контрагент
			|КОНЕЦ");
			
		ТекстЗапроса = ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ДанныеДокумента";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Истина);
	Иначе
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, ПереопределениеРасчетаПараметров, ТекстыЗапросаВременныхТаблиц);
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметровПроведения();
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров
	Запрос = Новый Запрос;
	
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	// Текст запроса, формирующего таблицы движений
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОплатаНДСВБюджет(ТекстыЗапроса, Регистры);
	
	
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	// Выполение запроса и выгрузка полученных таблиц для формирования движений
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, СтруктураДополнительныеСвойства)
	
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
	|		ИЛИ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата) = ДанныеДокумента.ДатаПроведенияБанком ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПроведенияБанком, ДЕНЬ)
	|	КОНЕЦ КАК Период,
	|	ДанныеДокумента.ПроведеноБанком                               КАК ПроведеноБанком,
	|	
	|	ДанныеДокумента.НомерВходящегоДокумента                       КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.Номер                                         КАК Номер,
	|	ДанныеДокумента.ДатаВходящегоДокумента                        КАК ДатаВходящегоДокумента,
	|	ДанныеДокумента.Дата                                          КАК Дата,
	|	ДанныеДокумента.НазначениеПлатежа                             КАК НазначениеПлатежа,
	|	ДанныеДокумента.Валюта                                        КАК Валюта,
	|	ДанныеДокумента.ВалютаКонвертации                             КАК ВалютаКонвертации,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств           КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств      КАК РаспоряжениеНаПеремещениеДенежныхСредств,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта    КАК ВалютаЗаявки,
	|	ДанныеДокумента.Организация                                   КАК Организация,
	|	ДанныеДокумента.БанковскийСчетПолучатель.Владелец             КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.БанковскийСчет                                КАК БанковскийСчет,
	|	ДанныеДокумента.ХозяйственнаяОперация                         КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств                 КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Подразделение                                 КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет.НаправлениеДеятельности        КАК НаправлениеДеятельностиДС,
	|	ДанныеДокумента.ОплатаПоЗаявкам                               КАК ОплатаПоЗаявкам,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	ИНАЧЕ
	|		ДанныеДокумента.Партнер
	|	КОНЕЦ КАК Партнер,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|	ТОГДА
	|		ДанныеДокумента.БанковскийСчетПолучатель.Владелец
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.ПодотчетноеЛицо                               КАК ПодотчетноеЛицо,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|		) ТОГДА
	|			ДанныеДокумента.ПодотчетноеЛицо
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА
	|			ДанныеДокумента.БанковскийСчетПолучатель.Владелец
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Получатель,
	|	
	|	НЕ ЕстьNULL(ДанныеДокумента.БанковскийСчет.РазрешитьПлатежиБезУказанияЗаявок, Ложь) КАК ЗапрещатьПлатежиБезУказанияЗаявок,
	|	
	|	ДанныеДокумента.РегистрацияВНалоговомОргане.Владелец КАК ОбособленноеПодразделение,
	|	ЕстьNULL(ДанныеДокумента.РегистрацияВНалоговомОргане.Владелец.ОбособленноеПодразделение, Ложь)
	|		КАК ОплатаЗаОбособленноеПодразделениеНаОтдельномБалансе,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком
	|			И НЕ (ДанныеДокумента.ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
	|			И ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК СтатусОплачивается,
	|	ДанныеДокумента.РасшифровкаПлатежа.(ЗаявкаНаРасходованиеДенежныхСредств) КАК РасшифровкаПлатежа,
	|	
	|	ДанныеДокумента.СуммаДокумента          КАК СуммаДокумента,
	|	ДанныеДокумента.Договор                 КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК Ответственный,
	|	ДанныеДокумента.Комментарий             КАК Комментарий,
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления,
	|	ДанныеДокумента.Ссылка                  КАК Ссылка,
	|	ДанныеДокумента.Проведен                КАК Проведен
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ЗначенияПараметровПроведения(Реквизиты) Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	СтруктураДополнительныеСвойства.Вставить("СтатусОплачивается", Реквизиты.СтатусОплачивается);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ЗначенияПараметровПроведения(Реквизиты = Неопределено)
	
	Значения = Новый Структура;
	Значения.Вставить("ИдентификаторМетаданных",                         ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СписаниеБезналичныхДенежныхСредств"));
	Значения.Вставить("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств", ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Значения.Вставить("ИспользоватьУчетПрочихДоходовРасходов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Значения.Вставить("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",       ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	Значения.Вставить("ИспользоватьНачислениеЗарплаты",                  Константы.ИспользоватьНачислениеЗарплаты.Получить());
	Значения.Вставить("ИспользоватьЛимитыРасходаДенежныхСредств",        ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредств"));
	Значения.Вставить("ИспользоватьЛимитыРасходаПоОрганизациям",         ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям"));
	Значения.Вставить("ИспользоватьЛимитыРасходаПоПодразделениям",       ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям"));
	Значения.Вставить("ИспользоватьУчетПрочихАктивовПассивов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	
	Значения.Вставить("ВалютаУправленческогоУчета",                      Константы.ВалютаУправленческогоУчета.Получить());
	Значения.Вставить("ВалютаРегламентированногоУчета",                  Константы.ВалютаРегламентированногоУчета.Получить());
	
	Если Реквизиты <> Неопределено Тогда
		
		Значения.Вставить("СтатьяДвиженияДенежныхСредств",                         СтатьяДвиженияДенежныхСредствДокумента(Реквизиты));
		
		МассивЗаявок = Реквизиты.РасшифровкаПлатежа.Выгрузить().ВыгрузитьКолонку("ЗаявкаНаРасходованиеДенежныхСредств");
		МассивЗаявок.Добавить(Реквизиты.ЗаявкаНаРасходованиеДенежныхСредств);
		МассивЗаявок.Добавить(Реквизиты.РаспоряжениеНаПеремещениеДенежныхСредств);
		Значения.Вставить("МассивЗаявок",                                МассивЗаявок);
		
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.Валюта,
			Реквизиты.ВалютаЗаявки,
			Реквизиты.Период);
			
		КоэффициентыКонвертации = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Реквизиты.ВалютаКонвертации,
			Неопределено,
			Реквизиты.Период);
			
		Значения.Вставить("КоэффициентПересчетаВВалютуУпр",              Коэффициенты.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаВВалютуРегл",             Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		Значения.Вставить("КоэффициентПересчетаВВалютуЗаявки",           Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуУпр",   КоэффициентыКонвертации.КоэффициентПересчетаВВалютуУпр);
		Значения.Вставить("КоэффициентПересчетаКонвертацииВВалютуРегл",  КоэффициентыКонвертации.КоэффициентПересчетаВВалютуРегл);
		
		Значения.Вставить("НомерНаПечать",                               ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
		
	КонецЕсли;
	
	Возврат Значения;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)

	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПоАналитикам = Новый Запрос;
	
	ЗапросПоАналитикам.Текст = ТекстЗапросаВременнаяТаблицаОбъектовРасчета(ЗапросПоАналитикам, Новый СписокЗначений);
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ЗапросПоАналитикам.Текст = ЗапросПоАналитикам.Текст + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И ТаблицаОбъектовРасчетов.Организация <> &Организация
	|	И ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыРасчетов.Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	ОбъектыРасчетов.Партнер КАК Партнер,
	|	ОбъектыРасчетов.Договор КАК Договор,
	|	ОбъектыРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ОбъектыРасчетов
	|	ПО ТаблицаРасшифровкаПлатежа.Заказ = ОбъектыРасчетов.Заказ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ОбъектыРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ОбъектыРасчетов.Партнер = Аналитика.Партнер
	|		И ОбъектыРасчетов.Договор = Аналитика.Договор
	|		И ОбъектыРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|		)
	|";

	
	ЗапросПоАналитикам.УстановитьПараметр("Ссылка",                              Запрос.Параметры.Ссылка);
	ЗапросПоАналитикам.УстановитьПараметр("Организация",                         Запрос.Параметры.Организация);
	ЗапросПоАналитикам.УстановитьПараметр("Контрагент",                          Запрос.Параметры.Контрагент);
	ЗапросПоАналитикам.УстановитьПараметр("ПроведеноБанком",                     Запрос.Параметры.ПроведеноБанком);
	ЗапросПоАналитикам.УстановитьПараметр("ХозяйственнаяОперация",               Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросПоАналитикам.УстановитьПараметр("ЗаявкаНаРасходованиеДенежныхСредств", Запрос.Параметры.ЗаявкаНаРасходованиеДенежныхСредств);

	Выборка = ЗапросПоАналитикам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту 
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
		
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураАналитики.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
		СтруктураАналитики.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
		АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
		АналитикаУчетаПоПартнерамПолучатель = Неопределено;
	Иначе
		
		СтруктураАналитики = Новый Структура;
		СтруктураАналитики.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураАналитики.Вставить("Контрагент", Запрос.Параметры.Контрагент);
		СтруктураАналитики.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
		СтруктураАналитики.Вставить("Договор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураАналитики.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
		АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
		АналитикаУчетаПоПартнерамПолучатель = Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",                    АналитикаУчетаПоПартнерам);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамПолучатель",          АналитикаУчетаПоПартнерамПолучатель);
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);

КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ТаблицаОбъектовРасчетов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.Заказ   КАК Заказ,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|			ТОГДА &Организация
	|		КОГДА ТаблицаРасшифровкаПлатежа.Организация.ГоловнаяОрганизация = &Организация
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Организация
	|		ИНАЧЕ
	|			&Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.Партнер
	|	КОНЕЦ КАК Партнер,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Заказ
	|	ИНАЧЕ
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию))
	|		ТОГДА ВЫБОР 
	|				КОГДА ТИПЗНАЧЕНИЯ(ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, 0)) = ТИП(Справочник.ДоговорыМеждуОрганизациями)
	|					ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			КОНЕЦ
	|		ИНАЧЕ 
	|			ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ТаблицаРасшифровкаПлатежа.Заказ) В (ТИП(Документ.ПередачаТоваровМеждуОрганизациями),
	|																		ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациями),
	|																		ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании))
	|					И НЕ ТаблицаРасшифровкаПлатежа.Заказ В (ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка),
	|															ЗНАЧЕНИЕ(Документ.ОтчетПоКомиссииМеждуОрганизациями.ПустаяСсылка),
	|															ЗНАЧЕНИЕ(Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ПустаяСсылка))
	|					И ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.РасчетыЧерезОтдельногоКонтрагента, ЛОЖЬ)
	|				ТОГДА
	|					ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.ДоговорПокупки,ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|				ИНАЧЕ
	|					ВЫБОР
	|						КОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) = Неопределено
	|							ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|						ИНАЧЕ ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|					КОНЕЦ
	|			КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ТаблицаРасшифровкаПлатежа";
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаОбъектовРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаОбъектовРасчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаОбъектовРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяРасходов
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|		ТОГДА
	|			ВЫБОР КОГДА &ИспользоватьУчетПрочихАктивовПассивов ТОГДА
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ИНАЧЕ
	|				НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.АналитикаРасходов 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов 
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|		ТОГДА
	|			ТаблицаРасшифровкаПлатежа.Ссылка.ТипНалога
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Подразделение 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
	|	КОНЕЦ КАК Подразделение,
	|	&ТекстЗапросаРеквизитаОбъектаРасчетовЗаказПодразделение КАК ПодразделениеЗаказа,
	|	ТаблицаРасшифровкаПлатежа.ПериодВозникновенияРасхода КАК ПериодВозникновенияРасхода,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.Ведомость КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ТаблицаРасшифровкаПлатежа.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И НЕ &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	&ТекстЗапросаРеквизитаОбъектаРасчетовЗаказПодразделение КАК ПодразделениеЗаказа,
	|	ТаблицаРасшифровкаПлатежа.ПериодВозникновенияРасхода КАК ПериодВозникновенияРасхода,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.Ведомость КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетов.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	&ТекстЗапросаРеквизитаОбъектаРасчетовЗаказПодразделение КАК ПодразделениеЗаказа,
	|	ТаблицаРасшифровкаПлатежа.ПериодВозникновенияРасхода КАК ПериодВозникновенияРасхода,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Ведомость,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СуммаНДС
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСРегл,
	|
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = ТаблицаОбъектовРасчетов.Партнер
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	Списание.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.Подразделение,
	|	Списание.Подразделение,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.СуммаДокумента,
	|	Списание.СуммаДокумента,
	|	Списание.Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО,
	|	Списание.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ВЫРАЗИТЬ(Списание.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(Списание.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)),
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	&АналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК Списание
	|ГДЕ
	|	Списание.Ссылка = &Ссылка
	|	И Списание.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|	                                    ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|	                                    ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов),
	|	                                    ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"&ТекстЗапросаРеквизитаОбъектаРасчетовЗаказПодразделение", 
		ДенежныеСредстваСервер.ТекстЗапросаРеквизитаОбъектаРасчетов(
			"СписаниеБезналичныхДенежныхСредств", 
			"ТаблицаРасшифровкаПлатежа",
			"Заказ", 
			"Подразделение"));

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваБезналичные";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КСписанию,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств                     КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции                                           КАК СтатьяКалькуляции,
	|
	|	ВЫБОР КОГДА
	|		ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА
	|		Неопределено
	|	ИНАЧЕ
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам
	|	КОНЕЦ КАК АналитикаУчетаПоПартнерам,
	
	|	ТаблицаРасшифровкаПлатежа.Заказ                                             КАК Заказ,
	|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|,		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КЗачислению,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств                     КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции                                           КАК СтатьяКалькуляции,
	|	Неопределено                                                                КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                                КАК Заказ,
	|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период                                                                     КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                 КАК Организация,
	|	ДанныеДокумента.БанковскийСчет                                              КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаУпр,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА НЕ ДанныеДокумента.ПроведеноБанком ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КЗачислению,
	|	
	|	&ХозяйственнаяОперация                                                      КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств                                              КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ТипПлатежаФЗ275                                             КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции                                           КАК СтатьяКалькуляции,
	|	Неопределено                                                                КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                                КАК Заказ,
	|	ДанныеДокумента.Ссылка                                                      КАК ПлатежныйДокумент
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	&Период                                                                      КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                  КАК Организация,
	|	ДанныеДокумента.КассаПолучатель                                              КАК Получатель,
	|	ДанныеДокумента.БанковскийСчет                                               КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка)        КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                       КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                               КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр             КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл            КАК СуммаРегл,
	|	
	|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	&Период                                                                      КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                  КАК Организация,
	|	ДанныеДокумента.БанковскийСчетПолучатель                                     КАК Получатель,
	|	ДанныеДокумента.БанковскийСчет                                               КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) КАК ВидПереводаДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                       КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                               КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр             КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл            КАК СуммаРегл,
	|	
	|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                       КАК ВидДвижения,
	|	&Период                                                                      КАК Период,
	|	
	|	ДанныеДокумента.Организация                                                  КАК Организация,
	|	ДанныеДокумента.БанковскийСчетПолучатель                                     КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                                                 КАК Отправитель,
	|	ВЫБОР КОГДА ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПриобретениеВалюты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.РеализацияВалюты)
	|	КОНЕЦ                                                                        КАК ВидПереводаДенежныхСредств,
	|	ДанныеДокумента.Контрагент                                                   КАК Контрагент,
	|	ДанныеДокумента.Валюта                                                       КАК Валюта,
	|	
	|	ДанныеДокумента.СуммаДокумента                                               КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр             КАК СуммаУпр,
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл            КАК СуммаРегл,
	|	
	|	&СтатьяДвиженияДенежныхСредств                                               КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПроведеноБанком
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|		)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК Сумма,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО (15,2))
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаРегл 
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL
	|		ТОГДА ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО (15,2))
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.СуммаУпр 
	|	КОНЕЦ КАК СуммаУпр,
	|	0 КАК КОтчету
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаАвансовогоОтчета, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ПодотчетноеЛицо,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК КОтчету
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваКВыплате";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Заявка в расшифровке
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	&Получатель КАК Получатель,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЗаявкиРасшифровки.Сумма <
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|		ТОГДА
	|			ЗаявкиРасшифровки.Сумма
	|		ИНАЧЕ
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|	КОНЕЦ КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.Ссылка КАК Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|			СУММА(ВЫБОР
	|				КОГДА &Валюта <> ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта ТОГДА
	|						ДанныеДокумента.СуммаВзаиморасчетов
	|					ИНАЧЕ
	|						ДанныеДокумента.Сумма
	|				КОНЕЦ) КАК Сумма
	|			ИЗ
	|				Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка = &Ссылка
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеДокумента.Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		) КАК ЗаявкиРасшифровки
	|	ПО
	|		ЗаявкиРасшифровки.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ЗаявкиРасшифровки.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ЗаявкиРасшифровки.Сумма,
	|	ДанныеДокумента.БанковскийСчет
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДенежныеСредства.Сумма
	|		ИНАЧЕ -ДенежныеСредства.Сумма
	|	КОНЕЦ) <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	&Получатель КАК Получатель,
	|	&Организация КАК Организация,
	|	ЗаявкиРасшифровки.Сумма -
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0) КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.Ссылка КАК Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|			СУММА(ВЫБОР
	|				КОГДА &Валюта <> ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств.Валюта ТОГДА
	|						ДанныеДокумента.СуммаВзаиморасчетов
	|					ИНАЧЕ
	|						ДанныеДокумента.Сумма
	|				КОНЕЦ) КАК Сумма
	|			ИЗ
	|				Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка = &Ссылка
	|			И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|		СГРУППИРОВАТЬ ПО
	|			ДанныеДокумента.Ссылка,
	|			ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		) КАК ЗаявкиРасшифровки
	|	ПО
	|		ЗаявкиРасшифровки.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И НЕ ЗаявкиРасшифровки.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ЗаявкиРасшифровки.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ЗаявкиРасшифровки.Сумма,
	|	ДанныеДокумента.БанковскийСчет
	|	
	|ИМЕЮЩИЕ
	|	ЗаявкиРасшифровки.Сумма >
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ // Заявка в шапке
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	&Получатель КАК Получатель,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СуммаДокумента <
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|		ТОГДА
	|			ДанныеДокумента.СуммаДокумента
	|		ИНАЧЕ
	|			СУММА(ВЫБОР
	|				КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДенежныеСредства.Сумма
	|				ИНАЧЕ -ДенежныеСредства.Сумма
	|			КОНЕЦ)
	|	КОНЕЦ КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Расшифровка
	|	ПО
	|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И Расшифровка.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ДенежныеСредства.Сумма
	|		ИНАЧЕ -ДенежныеСредства.Сумма
	|	КОНЕЦ) <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКасса,
	|	&Получатель КАК Получатель,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента -
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0) КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Расшифровка
	|	ПО
	|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДенежныеСредстваКВыплате КАК ДенежныеСредства
	|	ПО
	|		ДенежныеСредства.ЗаявкаНаРасходованиеДенежныхСредств = ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств
	|		И ДенежныеСредства.БанковскийСчетКасса = ДанныеДокумента.БанковскийСчет
	|		И ДенежныеСредства.Регистратор <> ДанныеДокумента.Ссылка
	|		И ДенежныеСредства.Активность
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И Расшифровка.Ссылка ЕСТЬ NULL
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет
	|	
	|ИМЕЮЩИЕ
	|	ДанныеДокумента.СуммаДокумента >
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|			КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ДенежныеСредства.Сумма
	|			ИНАЧЕ -ДенежныеСредства.Сумма
	|		КОНЕЦ), 0)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ // Распоряжение на перемещение
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	&Организация КАК Получатель,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.РаспоряжениеНаПеремещениеДенежныхСредств <> ЗНАЧЕНИЕ(Документ.РаспоряжениеНаПеремещениеДенежныхСредств.ПустаяСсылка)
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|		)
	|	И ТипПлатежногоДокумента <> ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.РаспоряжениеОбОбязательнойПродаже)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ // Распоряжение на обязательную продажу
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДанныеДокумента.УведомлениеОЗачисленииВалюты КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКасса,
	|	&Организация КАК Получатель,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.УведомлениеОЗачисленииВалюты <> ЗНАЧЕНИЕ(Документ.УведомлениеОЗачисленииВалюты.ПустаяСсылка)
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И ТипПлатежногоДокумента = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.РаспоряжениеОбОбязательнойПродаже)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ДанныеДокумента.БанковскийСчет.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ДанныеДокумента.БанковскийСчет.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов))
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОГДА &Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ДанныеДокумента.БанковскийСчет.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК РасходСверхЛимита
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиЗаявки,
	|	НомерСтрокиВедомости
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказКлиента,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР КОГДА ЗаявкаНаВозврат.Ссылка ЕСТЬ NULL ТОГДА
	|		- ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	- ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|
	|	- ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	- ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	- ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаУпр,
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|		ПО ТаблицаРасшифровкаПлатежа.Заказ = ЗаявкаНаВозврат.Ссылка
	|			И ЗаявкаНаВозврат.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства)
	|			И ЗаявкаНаВозврат.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказКлиента,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	
	|	0 КАК КОплате,
	|	- ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|	И НЕ (&ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаУпр,
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|	)
	|	И &ПроведеноБанком
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная) КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	0 КАК Сумма,
	|	0 КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|	)
	|	И НЕ (&ОплатаПоЗаявкам И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаСНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДС,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаБезНДСУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаСНДСРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	"""" КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	Документ.СуммаДокумента КАК СуммаБезНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР КОГДА &Валюта = &ВалютаРегламентированногоУчета
	|		ТОГДА Документ.СуммаДокумента
	|		ИНАЧЕ Документ.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	0 КАК СуммаНДСРегл,
	|	ВЫБОР КОГДА &Валюта = &ВалютаУправленческогоУчета
	|		ТОГДА Документ.СуммаДокумента
	|		ИНАЧЕ Документ.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|	0 КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация НЕ В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	Строки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	Строки.Сумма КАК СуммаБезНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР КОГДА Строки.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|		ТОГДА Строки.СуммаВзаиморасчетов
	|		ИНАЧЕ Строки.Сумма * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	0 КАК СуммаНДСРегл,
	|	ВЫБОР КОГДА Строки.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА Строки.СуммаВзаиморасчетов
	|		ИНАЧЕ Строки.Сумма * &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|	0 КАК СуммаНДСУпр,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Строки
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоДоговорамКредитовИДепозитов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, &АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК Договор,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Сумма ЕСТЬ NULL ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	КОГДА &Валюта = &ВалютаЗаявки ТОГДА
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(
	|			ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|			* &КоэффициентПересчетаВВалютуЗаявки КАК ЧИСЛО(15,2)
	|		)
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалюте,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяАналитики,
	|	ВЫБОР
	|		КОГДА ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Транши)
	|	КОНЕЦ КАК ТипГрафика,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ИНАЧЕ ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита
	|	КОНЕЦ КАК ТипСуммы
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|			ПО ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита = ДанныеДоговора.Ссылка
	|	ПО
	|		ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор 
	|		И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		)
	|	И &ПроведеноБанком
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Стоимость,
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВтИсходныеПартииПрочихРасходов
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|	И &ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	|	И &ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК Статья,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))) КАК Сумма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|	И ТаблицаРасшифровкаПлатежа.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И &ПроведеноБанком
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.Подразделение,
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ИПН)
	|				ИЛИ ДанныеДокумента.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ОПВ)
	|				ИЛИ ДанныеДокумента.ТипНалога = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ВОСМС)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НалогиИВзносыСОплатыТруда)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|КОНЕЦ,
	|	ДанныеДокумента.ТипНалога КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))) КАК Сумма
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ТипНалога
	|";
	ТекстЗапроса = ТекстЗапроса + "ОБЪЕДИНИТЬ ВСЕ"
		+ РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|	ИНАЧЕ
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|		ТОГДА ДанныеДокумента.БанковскийСчетПолучатель.НаправлениеДеятельности
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|	КОНЕЦ КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ДанныеДокумента.ПодотчетноеЛицо
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК КорДенежныеСредства,
	|
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица)
	|		ИНАЧЕ
	|			Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути)
	|	КОНЕЦ КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА ВЫРАЗИТЬ(ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КОНЕЦ КАК Сумма,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА ВЫРАЗИТЬ(ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КОНЕЦ КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|	ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ КАК СуммаВВалюте,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|	ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|	ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ КАК СуммаВКорВалюте,
	|
	|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|		ТОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|		ИНАЧЕ ДанныеДокумента.СуммаДокумента КОНЕЦ
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ВЫБОР 
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ИсточникКорГФУДенежныхСредств,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО 
	|		ИСТИНА
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|	И ДанныеДокумента.ПроведеноБанком
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Операции выплаты по депозитам
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК КорДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Депозиты) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВКорВалюте,
	|
	|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ИсточникКорГФУДенежныхСредств,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО 
	|		ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|	И ДанныеДокумента.ПроведеноБанком
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	ТаблицаРасшифровкаПлатежа.Подразделение КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО 
	|		ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		)
	|		И ДанныеДокумента.ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|		ТОГДА ТаблицаРасшифровкаПлатежа.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ДанныеДокумента.ТипНалога КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|	ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО 
	|		ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|		)
	|		И ДанныеДокумента.ПроведеноБанком
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиСтатьи,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда) КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	&Организация КАК АналитикаАктивовПассивов,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	|		И ДанныеДокумента.ПроведеноБанком
	|		И НЕ &ИспользоватьНачислениеЗарплаты
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельностиДС КАК НаправлениеДеятельностиДС,
	|
	|	ДанныеДокумента.ДенежныеСредства КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|
	|	СУММА(ДанныеДокумента.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаОплатыРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеПлатежа) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПостоплаты) КАК СуммаПостоплаты,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыРегл) КАК СуммаПостоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеПлатежа) КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаПредоплаты) КАК СуммаПредоплаты,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыРегл) КАК СуммаПредоплатыРегл,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеПлатежа) КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	СУММА(ДанныеДокумента.СуммаКВыплатеСверхЛимита) КАК СуммаКВыплатеСверхЛимита,
	|	
	|	СУММА(ДанныеДокумента.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ДанныеДокумента.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	СУММА(ДанныеДокумента.СуммаНДСВВалютеПлатежа) КАК СуммаНДСВВалютеПлатежа,
	|	
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.СуммаОплатыВВалютеВзаиморасчетов) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПостоплатыВВалютеВзаиморасчетов) КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаПредоплатыВВалютеВзаиморасчетов) КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|
	|	ДанныеДокумента.СтатьяКалькуляции,
	|	ДанныеДокумента.СтавкаНДС,
	|
	|	ЛОЖЬ КАК ОтложенноеПроведение
	|
	|
	|ИЗ (
	|	// Операции по списанию денежных средств
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ТаблицаРасшифровкаПлатежа.Сумма
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции по списанию денежных средств в другую организацию
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ТаблицаРасшифровкаПлатежа.Сумма
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции внутренней передачи денежных средств
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		НЕОПРЕДЕЛЕНО КАК Партнер,
	|		ДанныеДокумента.БанковскийСчетПолучатель.Владелец КАК Контрагент,
	|		ДанныеДокумента.БанковскийСчетПолучатель.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО КАК Договор,
	|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаОплаты,
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаОплатыРегл,
	|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ДанныеДокумента.СуммаДокумента
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|		ДанныеДокумента.СуммаДокумента КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	// Операции оплаты по кредитам и выплатам по выданным займам
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ВЫБОР
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|				  И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСОсновногоДолга = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|					 ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПоступленияВыдачи = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА Значение(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|				  И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПроцентов = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|					 ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСКомиссии = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА Значение(Перечисление.ХозяйственныеОперации.ОплатаПроцентовПоКредитам)
	|			ИНАЧЕ 
	|				&ХозяйственнаяОперация
	|		КОНЕЦ  КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК Договор,
	|		НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК СуммаОплаты,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаОплатыРегл,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|		ВЫБОР КОГДА ЕстьNULL(ТаблицаРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка) ТОГДА
	|			ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|		КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	
	|		0 КАК СуммаНДС,
	|		0 КАК СуммаНДСРегл,
	|		0 КАК СуммаНДСВВалютеПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции,
	|		НЕОПРЕДЕЛЕНО КАК СтавкаНДС
	|
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// НДС
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|	
	|		0 КАК СуммаОплаты,
	|		0 КАК СуммаОплатыРегл,
	|		0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|		0 КАК СуммаПостоплаты,
	|		0 КАК СуммаПостоплатыРегл,
	|		0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|		0 КАК СуммаПредоплаты,
	|		0 КАК СуммаПредоплатыРегл,
	|		0 КАК СуммаПредоплатыВВалютеПлатежа,
	|	
	|		0 КАК СуммаКВыплатеСверхЛимита,
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСУпр КАК СуммаНДС,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДСРегл КАК СуммаНДСРегл,
	|		ТаблицаРасшифровкаПлатежа.СуммаНДС КАК СуммаНДСВВалютеПлатежа,
	|	
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	
	|		0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|		0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|	
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|		ДанныеДокумента.СтатьяКалькуляции,
	|		ТаблицаРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС
	|
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеДокумента.ПроведеноБанком
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|			)
	|		И ТаблицаРасшифровкаПлатежа.СуммаНДС <> 0
	|	
	|	) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.СтатьяКалькуляции,
	|	ДанныеДокумента.ТипПлатежаФЗ275,
	|	ДанныеДокумента.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.НаправлениеДеятельностиДС,
	|
	|	ДанныеРегистра.ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа,
	|
	|	ДанныеРегистра.Партнер,
	|	ДанныеРегистра.Контрагент,
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента,
	|	ДанныеРегистра.Договор,
	|	ДанныеРегистра.ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаКВыплатеСверхЛимита,
	|
	|	ДанныеРегистра.СуммаНДС,
	|	ДанныеРегистра.СуммаНДСРегл,
	|	ДанныеРегистра.СуммаНДСВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов,
	|
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов,
	|
	|	ДанныеРегистра.ТипПлатежаФЗ275,
	|	ДанныеРегистра.СтатьяКалькуляции,
	|	ДанныеРегистра.СтавкаНДС,
	|	
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Ссылка
	|	И ОтложенноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентКонтрагент";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	ДанныеДокумента.КорПартнер КАК КорПартнер,
	|	ДанныеДокумента.КорКонтрагент КАК КорКонтрагент,
	|	ДанныеДокумента.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.КорДоговор КАК КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	&Валюта КАК Валюта,
	|
	|	СУММА(ДанныеДокумента.Сумма) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.СуммаВВалюте) КАК СуммаВВалюте,
	|
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.СуммаВВалютеВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|	СУММА(ДанныеДокумента.КорСуммаВВалютеВзаиморасчетов) КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов КАК КорИсточникГФУРасчетов
	|
	|ИЗ (
	|	// Передали задолженность филиала в организацию
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|
	|		НЕОПРЕДЕЛЕНО КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.Организация КАК КорКонтрагент,
	|		&НаправлениеДеятельностиДС КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|		И ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
	|		И ДанныеДокумента.ПроведеноБанком
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// Погасили задолженность филиала перед поставщиком
	|	ВЫБРАТЬ
	|		&Период КАК Период,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|		ТаблицаРасшифровкаПлатежа.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.ПодразделениеЗаказа КАК Подразделение,
	|
	|		НЕОПРЕДЕЛЕНО КАК Партнер,
	|		ДанныеДокумента.Организация КАК Контрагент,
	|		&НаправлениеДеятельностиДС КАК НаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК КорПартнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК КорКонтрагент,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Договор КАК КорДоговор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК КорОбъектРасчетов,
	|		
	|	
	|		ТаблицаРасшифровкаПлатежа.СуммаУпр КАК Сумма,
	|		ТаблицаРасшифровкаПлатежа.СуммаРегл КАК СуммаРегл,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаВВалюте,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК КорВалютаВзаиморасчетов,
	|		ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК КорИсточникГФУРасчетов
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО ИСТИНА
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|		И ДанныеДокумента.Организация <> ТаблицаРасшифровкаПлатежа.Организация
	|		И ДанныеДокумента.ПроведеноБанком
	|
	|	) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|   ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.КорПартнер,
	|	ДанныеДокумента.КорКонтрагент,
	|	ДанныеДокумента.КорНаправлениеДеятельности,
	|	ДанныеДокумента.КорДоговор,
	|	ДанныеДокумента.КорОбъектРасчетов,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.КорВалютаВзаиморасчетов,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.КорИсточникГФУРасчетов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОплатаНДСВБюджет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПодтверждениеОплатыНДСВБюджет";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Субконто3 = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Ссылка.ДокументОснование
	|		ИНАЧЕ ДанныеДокумента.Субконто3
	|	КОНЕЦ КАК СчетФактура
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И (ДанныеДокумента.Ссылка.ТипНалога В
	|										(ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС_ВвозимыеТовары), 
    |										 ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС_Импорт),
    |										 ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДС_НалоговыйАгент))
	|		ИЛИ ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка.ДокументОснование) В
	|										(ТИП(Документ.ЗаявлениеОВвозеТоваров),
	|										 ТИП(Документ.ТаможеннаяДекларацияИмпорт),
	|										 ТИП(Документ.СчетФактураНалоговыйАгент)))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	&Контрагент                             КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	НЕОПРЕДЕЛЕНО                            КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	КОНЕЦ КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВзносов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	)
	// ЗУПК
	|	ИЛИ (ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПодотчетноеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	// ЗУПК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	&ПодотчетноеЛицо                        КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	НЕОПРЕДЕЛЕНО                            КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	КОНЕЦ КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	)
	// ЗУПК
	|	И НЕ (&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И &ПодотчетноеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	// ЗУПК
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	&Партнер                                КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	ДанныеДокумента.БанковскийСчетПолучатель.Владелец КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	НЕОПРЕДЕЛЕНО                            КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	&Договор                                КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	КОНЕЦ КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	&Организация                            КАК Организация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	&БанковскийСчет                         КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	&Подразделение                          КАК Подразделение,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Ссылка                                 КАК Ссылка,
	
	|	&Номер                                  КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	НЕОПРЕДЕЛЕНО                            КАК Ответственный,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	&НазначениеПлатежа                      КАК Дополнительно,
	|	&Комментарий                            КАК Комментарий,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента,
	|	&СуммаДокумента                         КАК Сумма,
	|	&Валюта                                 КАК Валюта,
	|	НЕОПРЕДЕЛЕНО                            КАК Договор,
	|	&НаправлениеДеятельности                КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА &ПроведеноБанком ТОГДА
	|		&Период
	|	КОНЕЦ КАК ДатаОтраженияВУчете
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СтатьяДвиженияДенежныхСредствДокумента(ДанныеДокумента)

	Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
	Иначе
		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(
			ДанныеДокумента.ХозяйственнаяОперация,
			ДанныеДокумента.Валюта);
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Платежное поручение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПлатежноеПоручение";
	КомандаПечати.Представление = НСтр("ru = 'Платежное поручение'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	// Банковские реквизиты
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеквизитыПлатежа";
	КомандаПечати.Представление = НСтр("ru = 'Реквизиты платежа'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПлатежноеПоручение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПлатежноеПоручение",
			НСтр("ru='Платежное поручение'"),
			СформироватьПлатежноеПоручение(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.СписаниеБезналичныхДенежныхСредств.ПФ_MXL_ПлатежноеПоручение");
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеквизитыПлатежа") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РеквизитыПлатежа",
			НСтр("ru='Банковские реквизиты'"),
			СформироватьРеквизитыПлатежа(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.СписаниеБезналичныхДенежныхСредств.ПФ_MXL_РеквизитыПлатежа");
	КонецЕсли;
	
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПлатежноеПоручение(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеБезналичныхДенежныхСредств_ПлатежноеПоручение";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеБезналичныхДенежныхСредств.ПФ_MXL_ПлатежноеПоручение");

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента
	|ПОМЕСТИТЬ БанковскиеСчетаКонтрагентовВрем
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ФормаОплатыБезналичная
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчетПолучатель КАК БанковскийСчетКонтрагента
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчетПолучатель КАК БанковскийСчетКонтрагента
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ФормаОплатыБезналичная
	|;
	|
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документ.БанковскийСчет КАК БанковскийСчет
	|ПОМЕСТИТЬ БанковскиеСчетаОрганизацийВрем
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК Документ
	|ГДЕ
	|	Документ.Ссылка В (&МассивДокументов)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчет
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ФормаОплатыБезналичная
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.БанковскийСчетКасса КАК БанковскийСчет
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Ссылка.ФормаОплатыБезналичная
	|;
	|
	|//////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Владелец КАК Владелец,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.НаименованиеБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.БИКБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.КоррСчетБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.КоррСчет
	|	КОНЕЦ КАК КоррСчет,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.ГородБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Город
	|	КОНЕЦ КАК Город,
	|	БанковскиеСчета.ТекстКорреспондента КАК ТекстКорреспондента,
	|	БанковскиеСчета.ИННКорреспондента КАК ИННКорреспондента,
	|	БанковскиеСчета.КППКорреспондента КАК КППКорреспондента
	|
	|ПОМЕСТИТЬ БанковскиеСчетаКонтрагентов
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов = ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			БанковскиеСчета.БанковскийСчетКонтрагента
	|		ИЗ
	|			БанковскиеСчетаКонтрагентовВрем КАК БанковскиеСчета
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка,
	|	БанковскиеСчета.Владелец,
	|	БанковскиеСчета.Банк.КоррСчет,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.НаименованиеБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.БИКБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Код
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.КоррСчетБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.КоррСчет
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.ГородБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Город
	|	КОНЕЦ,
	|	БанковскиеСчета.ТекстКорреспондента,
	|	БанковскиеСчета.ИННКорреспондента,
	|	БанковскиеСчета.КППКорреспондента
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			БанковскиеСчета.БанковскийСчетКонтрагента
	|		ИЗ
	|			БанковскиеСчетаКонтрагентовВрем КАК БанковскиеСчета
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка,
	|	БанковскиеСчета.Владелец,
	|	БанковскиеСчета.НомерСчета,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.НаименованиеБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Наименование
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.БИКБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Код
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.КоррСчетБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.КоррСчет
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.ГородБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Город
	|	КОНЕЦ,
	|	БанковскиеСчета.ТекстКорреспондента,
	|	"""",
	|	""""
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов = ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			БанковскиеСчета.БанковскийСчетКонтрагента
	|		ИЗ
	|			БанковскиеСчетаКонтрагентовВрем КАК БанковскиеСчета
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка,
	|	БанковскиеСчета.Владелец,
	|	БанковскиеСчета.Банк.КоррСчет,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.НаименованиеБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.БИКБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Код
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.КоррСчетБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.КоррСчет
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.ГородБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Город
	|	КОНЕЦ,
	|	БанковскиеСчета.ТекстКорреспондента,
	|	"""",
	|	""""
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			БанковскиеСчета.БанковскийСчетКонтрагента
	|		ИЗ
	|			БанковскиеСчетаКонтрагентовВрем КАК БанковскиеСчета
	|		)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Владелец КАК Владелец,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.НаименованиеБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.БИКБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.КоррСчетБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.КоррСчет
	|	КОНЕЦ КАК КоррСчет,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.ГородБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Город
	|	КОНЕЦ КАК Город
	|
	|ПОМЕСТИТЬ БанковскиеСчетаОрганизаций
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов = ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			БанковскиеСчета.БанковскийСчет КАК БанковскийСчет
	|		ИЗ
	|			БанковскиеСчетаОрганизацийВрем КАК БанковскиеСчета
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка,
	|	БанковскиеСчета.Владелец,
	|	БанковскиеСчета.Банк.КоррСчет,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.НаименованиеБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Наименование
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.БИКБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Код
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.КоррСчетБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.КоррСчет
	|	КОНЕЦ,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		БанковскиеСчета.ГородБанкаДляРасчетов
	|	ИНАЧЕ
	|		БанковскиеСчета.БанкДляРасчетов.Город
	|	КОНЕЦ
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов <> ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			БанковскиеСчета.БанковскийСчет КАК БанковскийСчет
	|		ИЗ
	|			БанковскиеСчетаОрганизацийВрем КАК БанковскиеСчета
	|		)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК ПлательщикНаименование,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ИННПлательщика = """" ТОГДА
	|			ДанныеДокумента.Организация.ИНН
	|		ИНАЧЕ
	|			ДанныеДокумента.ИННПлательщика
	|	КОНЕЦ КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КПППлательщика = """" ТОГДА
	|			ДанныеДокумента.Организация.КПП
	|		ИНАЧЕ
	|			ДанныеДокумента.КПППлательщика
	|	КОНЕЦ КАК КПППлательщика,
	|	ДанныеДокумента.ТекстПлательщика КАК ТекстПлательщика,
	|	ДанныеДокумента.БанковскийСчет.ТекстКорреспондента КАК ТекстКорреспондента,
	|	
	|	БанковскиеСчетаКонтрагентов.Владелец.Наименование КАК ПолучательНаименование,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеПолное КАК ПолучательНаименованиеПолное,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеСокращенное КАК ПолучательНаименованиеСокращенное,
	|	БанковскиеСчетаКонтрагентов.Владелец КАК Получатель,
	|	
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.ИННКорреспондента = """" ТОГДА
	|			БанковскиеСчетаКонтрагентов.Владелец.ИНН
	|		ИНАЧЕ
	|			БанковскиеСчетаКонтрагентов.ИННКорреспондента
	|	КОНЕЦ КАК ИННПолучателя,
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.КППКорреспондента = """" ТОГДА
	|			БанковскиеСчетаКонтрагентов.Владелец.КПП
	|		ИНАЧЕ
	|			БанковскиеСчетаКонтрагентов.КППКорреспондента
	|	КОНЕЦ КАК КПППолучателя,
	|	БанковскиеСчетаКонтрагентов.ТекстКорреспондента КАК ТекстПолучателя,
	|
	|	ДанныеДокумента.Организация.КБЕ КАК ПлательщикКБЕ,
	|	ДанныеДокумента.ДатаВалютирования КАК ДатаВалютирования,
	|	ДанныеДокумента.ДатаПолученияТовара КАК ДатаПолученияТовара,
	|	ДанныеДокумента.КодНазначенияПлатежа КАК КодНазначенияПлатежа,
	|	БанковскиеСчетаКонтрагентов.Владелец.КБЕ КАК ПолучательКБЕ,
	|
	|
	|	ДанныеДокумента.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ДанныеДокумента.ВидПлатежа КАК ВидПлатежа,
	|	ДанныеДокумента.ОчередностьПлатежа КАК Очередность,
	|	ДанныеДокумента.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
	|	ДанныеДокумента.КодБК КАК КодБК,
	|	ДанныеДокумента.КодОКАТО КАК КодОКАТО,
	|	ДанныеДокумента.ПоказательДаты КАК ПоказательДаты,
	|	ДанныеДокумента.ПоказательНомера КАК ПоказательНомера,
	|	ДанныеДокумента.ПоказательОснования КАК ПоказательОснования,
	|	ДанныеДокумента.ПоказательПериода КАК ПоказательПериода,
	|	ДанныеДокумента.ПоказательТипа КАК ПоказательТипа,
	|	ДанныеДокумента.СтатусСоставителя КАК СтатусСоставителя,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.ТипПлатежногоДокумента КАК ТипПлатежногоДокумента,
	|
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НомерСчета, """") КАК НомерСчетаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НаименованиеБанка, """") КАК НаименованиеБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.БИК, """") КАК БИКБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.КоррСчет, """") КАК СчетБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.Город, """") КАК ГородБанкаПолучателя,
	|
	|	ДанныеДокумента.БанковскийСчет.ВариантВыводаМесяца КАК ВариантВыводаМесяца,
	|	ДанныеДокумента.БанковскийСчет.ВыводитьСуммуБезКопеек КАК ВыводитьСуммуБезКопеек,
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		ДанныеДокумента.БанковскийСчет.НаименованиеБанкаДляРасчетов
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчет.БанкДляРасчетов.Наименование
	|	КОНЕЦ КАК БанкДляРасчетов,
	|	ДанныеДокумента.БанковскийСчет.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет.РучноеИзменениеРеквизитовБанка ТОГДА
	|		ДанныеДокумента.БанковскийСчет.НаименованиеБанка
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчет.Банк.Наименование
	|	КОНЕЦ КАК Банк,
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет.РучноеИзменениеРеквизитовБанка ТОГДА
	|		ДанныеДокумента.БанковскийСчет.ГородБанка
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчет.Банк.Город
	|	КОНЕЦ КАК Город,
	|
	|	ТаблицаОтветственныеЛица.РуководительНаименование  КАК ФИОРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ФИОГлавногоБухгалтера,
	|
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.НомерСчета, """") КАК НомерСчетаПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.НаименованиеБанка, """") КАК НаименованиеБанкаПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.БИК, """") КАК БИКБанкаПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.КоррСчет, """") КАК СчетБанкаПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.Город, """") КАК ГородБанкаПлательщика
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|	ПО
	|		ДанныеДокумента.БанковскийСчетКонтрагента = БанковскиеСчетаКонтрагентов.Ссылка
	|		ИЛИ 
	|		(ДанныеДокумента.БанковскийСчетПолучатель = БанковскиеСчетаКонтрагентов.Ссылка
	|		И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|	ПО
	|		ДанныеДокумента.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
    |
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК ПлательщикНаименование,
	|	
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ИННПлательщика = """" ТОГДА
	|			ДанныеДокумента.Организация.ИНН
	|		ИНАЧЕ
	|			ДанныеДокумента.ИННПлательщика
	|	КОНЕЦ КАК ИННПлательщика,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КПППлательщика = """" ТОГДА
	|			ДанныеДокумента.Организация.КПП
	|		ИНАЧЕ
	|			ДанныеДокумента.КПППлательщика
	|	КОНЕЦ КАК КПППлательщика,
	|	ДанныеДокумента.ТекстПлательщика КАК ТекстПлательщика,
	|	ЕстьNULL(Распределение.БанковскийСчетКасса.ТекстКорреспондента, ДанныеДокумента.БанковскийСчет.ТекстКорреспондента) КАК ТекстКорреспондента,
	|	
	|	БанковскиеСчетаКонтрагентов.Владелец.Наименование КАК ПолучательНаименование,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеПолное КАК ПолучательНаименованиеПолное,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеСокращенное КАК ПолучательНаименованиеСокращенное,
	|	БанковскиеСчетаКонтрагентов.Владелец КАК Получатель,
	|	
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.ИННКорреспондента = """" ТОГДА
	|			БанковскиеСчетаКонтрагентов.Владелец.ИНН
	|		ИНАЧЕ
	|			БанковскиеСчетаКонтрагентов.ИННКорреспондента
	|	КОНЕЦ КАК ИННПолучателя,
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.КППКорреспондента = """" ТОГДА
	|			БанковскиеСчетаКонтрагентов.Владелец.КПП
	|		ИНАЧЕ
	|			БанковскиеСчетаКонтрагентов.КППКорреспондента
	|	КОНЕЦ КАК КПППолучателя,
	|	БанковскиеСчетаКонтрагентов.ТекстКорреспондента КАК ТекстПолучателя,
	|
	|	ДанныеДокумента.Организация.КБЕ КАК ПлательщикКБЕ,
	|	"""" КАК ДатаВалютирования,
	|	"""" КАК ДатаПолученияТовара,
	|	"""" КАК КодНазначенияПлатежа,
	|	БанковскиеСчетаКонтрагентов.Владелец.КБЕ КАК ПолучательКБЕ,
	|
	|	ДанныеДокумента.НазначениеПлатежа КАК НазначениеПлатежа,
	|	"""" КАК ВидПлатежа,
	|	0 КАК Очередность,
	|	ДанныеДокумента.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
	|	ДанныеДокумента.КодБК КАК КодБК,
	|	ДанныеДокумента.КодОКАТО КАК КодОКАТО,
	|	ДанныеДокумента.ПоказательДаты КАК ПоказательДаты,
	|	ДанныеДокумента.ПоказательНомера КАК ПоказательНомера,
	|	ДанныеДокумента.ПоказательОснования КАК ПоказательОснования,
	|	ДанныеДокумента.ПоказательПериода КАК ПоказательПериода,
	|	ДанныеДокумента.ПоказательТипа КАК ПоказательТипа,
	|	ДанныеДокумента.СтатусСоставителя КАК СтатусСоставителя,
	|	ЕстьNULL(Распределение.Сумма, ДанныеДокумента.СуммаДокумента) КАК СуммаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение) КАК ТипПлатежногоДокумента,
	|
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НомерСчета, """") КАК НомерСчетаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НаименованиеБанка, """") КАК НаименованиеБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.БИК, """") КАК БИКБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.КоррСчет, """") КАК СчетБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.Город, """") КАК ГородБанкаПолучателя,
	|
	|	ЕСТЬNULL(ЕстьNULL(Распределение.БанковскийСчетКасса.ВариантВыводаМесяца, ДанныеДокумента.БанковскийСчет.ВариантВыводаМесяца), ЗНАЧЕНИЕ(Перечисление.ВариантыВыводаМесяцаВДатеДокумента.Числом)) КАК ВариантВыводаМесяца,
	|	ЕСТЬNULL(ЕстьNULL(Распределение.БанковскийСчетКасса.ВыводитьСуммуБезКопеек, ДанныеДокумента.БанковскийСчет.ВыводитьСуммуБезКопеек), ЛОЖЬ) КАК ВыводитьСуммуБезКопеек,
	|	ЕСТЬNULL(ЕстьNULL(Распределение.БанковскийСчетКасса.ВалютаДенежныхСредств, ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств), ДанныеДокумента.Валюта) КАК ВалютаДенежныхСредств,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет.РучноеИзменениеРеквизитовБанкаДляРасчетов ТОГДА
	|		ДанныеДокумента.БанковскийСчет.НаименованиеБанкаДляРасчетов
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчет.БанкДляРасчетов.Наименование
	|	КОНЕЦ КАК БанкДляРасчетов,
	|	ДанныеДокумента.БанковскийСчет.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет.РучноеИзменениеРеквизитовБанка ТОГДА
	|		ДанныеДокумента.БанковскийСчет.НаименованиеБанка
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчет.Банк.Наименование
	|	КОНЕЦ КАК Банк,
	|	ВЫБОР КОГДА ДанныеДокумента.БанковскийСчет.РучноеИзменениеРеквизитовБанка ТОГДА
	|		ДанныеДокумента.БанковскийСчет.ГородБанка
	|	ИНАЧЕ
	|		ДанныеДокумента.БанковскийСчет.Банк.Город
	|	КОНЕЦ КАК Город,
	|
	|	ТаблицаОтветственныеЛица.РуководительНаименование  КАК ФИОРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ФИОГлавногоБухгалтера,
	|
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.НомерСчета, БанковскиеСчетаОрганизаций.НомерСчета), """") КАК НомерСчетаПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.НаименованиеБанка, БанковскиеСчетаОрганизаций.НаименованиеБанка), """") КАК НаименованиеБанкаПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.БИК, БанковскиеСчетаОрганизаций.БИК), """") КАК БИКБанкаПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.КоррСчет, БанковскиеСчетаОрганизаций.КоррСчет), """") КАК СчетБанкаПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.Город, БанковскиеСчетаОрганизаций.Город), """") КАК ГородБанкаПлательщика
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|	ПО
	|		ДанныеДокумента.БанковскийСчетКонтрагента = БанковскиеСчетаКонтрагентов.Ссылка
	|		ИЛИ (ДанныеДокумента.БанковскийСчетПолучатель = БанковскиеСчетаКонтрагентов.Ссылка
	|			И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|	ПО
	|		ДанныеДокумента.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК Распределение
	|	ПО
	|		Распределение.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизацийРаспределение
	|	ПО
	|		Распределение.БанковскийСчетКасса = БанковскиеСчетаОрганизацийРаспределение.Ссылка
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ФормаОплатыБезналичная
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер
	|";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
		МассивОбъектов, 
		МенеджерВременныхТаблиц, 
		,
		Новый Структура(
		"Руководитель, ГлавныйБухгалтер",
		Перечисления.ОтветственныеЛицаОрганизаций.Руководитель,
		Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Выборка.ТипПлатежногоДокумента <> Перечисления.ТипыПлатежныхДокументов.ПлатежноеПоручение Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Платежное поручение не формируется для типа документа: %1'"),
				Выборка.ТипПлатежногоДокумента);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				Выборка.Ссылка.ПолучитьОбъект(),
				"ТипПлатежногоДокумента",
				, // ПутьКДанным
				// Отказ
			);
		Иначе
		
			ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, Выборка.Ссылка);
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			// Заполним текст плательщика.
			Если Не ПустаяСтрока(Выборка.ТекстПлательщика) Тогда
				ТекстПлательщика = Выборка.ТекстПлательщика;
			Иначе
				ТекстПлательщика = Выборка.ПлательщикНаименование;
				Если ЗначениеЗаполнено(Выборка.БанкДляРасчетов) Тогда
					ТекстПлательщика = ТекстПлательщика
					+ " р/с " + СокрЛП(Выборка.НомерСчета)
					+ " в " + Строка(Выборка.Банк)
					+ " " + Выборка.Город;
				КонецЕсли;
			КонецЕсли;
			ОбластьМакета.Параметры.ТекстПлательщика = ТекстПлательщика;
			
			Если ПустаяСтрока(ТекстПлательщика) Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'У организации %1 не заполнено поле ""Сокращенное наименование""'"),
					Выборка.Организация);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					Выборка.Организация.ПолучитьОбъект(),
					"НаименованиеСокращенное");
			КонецЕсли;
			
			// Заполним текст получателя.
			Если Не ПустаяСтрока(Выборка.ТекстПолучателя) Тогда
				ТекстПолучателя = Выборка.ТекстПолучателя;
			ИначеЕсли ТипЗнч(Выборка.Получатель) = Тип("СправочникСсылка.Организации") Тогда
				ТекстПолучателя = Выборка.ПолучательНаименованиеСокращенное;
			ИначеЕсли ТипЗнч(Выборка.Получатель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
				ТекстПолучателя = Выборка.ПолучательНаименование;
			Иначе
				ТекстПолучателя = Выборка.ПолучательНаименованиеПолное;
			КонецЕсли;
			ОбластьМакета.Параметры.ТекстПолучателя = ТекстПолучателя;
			
			Если ПустаяСтрока(ТекстПолучателя) И ЗначениеЗаполнено(Выборка.Получатель) Тогда
				Если ТипЗнч(Выборка.Получатель) = Тип("СправочникСсылка.Организации") Тогда
					ИмяПоля = "НаименованиеСокращенное";
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'У организации-получателя %1 не заполнено поле ""Сокращенное наименование""'"),
						Выборка.Получатель);
				ИначеЕсли ТипЗнч(Выборка.Получатель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
					ИмяПоля = "ФИО";
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'У физического лица %1 не заполнено поле ""ФИО""'"),
						Выборка.Получатель);
				Иначе
					ИмяПоля = "НаименованиеПолное";
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'У контрагента %1 не заполнено поле ""Сокращенное наименование""'"),
						Выборка.Получатель);
				КонецЕсли; 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					Выборка.Получатель.ПолучитьОбъект(),
					ИмяПоля);
			КонецЕсли;
			
			ОбластьМакета.Параметры.НаименованиеБанкаПлательщика = Выборка.НаименованиеБанкаПлательщика + " " + Выборка.ГородБанкаПлательщика;
			ОбластьМакета.Параметры.НаименованиеБанкаПолучателя = Выборка.НаименованиеБанкаПолучателя + " " + Выборка.ГородБанкаПолучателя;
			
			// Заполним ИНН
			ОбластьМакета.Параметры.ПлательщикБИН = "ИИН(БИН) " + Выборка.ИННПлательщика;
			ОбластьМакета.Параметры.ПолучательБИН = "ИИН(БИН) " + Выборка.ИННПолучателя;
			
			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") Тогда
				НомерДокументаДляПечати = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
					Выборка.Номер,
					Истина, // УдалитьПрефиксИнформационнойБазы
					Истина); // УдалитьПользовательскийПрефикс
				НомерДокументаДляПечати = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(
					Выборка.Номер,
					Истина, // УдалитьПрефиксИнформационнойБазы
					Истина); // УдалитьПользовательскийПрефикс
				ОбластьМакета.Параметры.НаименованиеНомер = НСтр("ru='ПЛАТЕЖНОЕ ПОРУЧЕНИЕ №'") + " " + НомерДокументаДляПечати;
			Иначе
				ОбластьМакета.Параметры.НаименованиеНомер = НСтр("ru='ОБРАЗЕЦ ПЛАТЕЖНОГО ПОРУЧЕНИЯ'");
			КонецЕсли;
			ОбластьМакета.Параметры.СуммаЧислом = ФормированиеПечатныхФорм.СуммаПлатежногоДокумента(
				Выборка.СуммаДокумента,
				Выборка.ВыводитьСуммуБезКопеек);
			ОбластьМакета.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
				Выборка.СуммаДокумента,
				Выборка.ВалютаДенежныхСредств,
				Выборка.ВыводитьСуммуБезКопеек);
			Если Выборка.ВариантВыводаМесяца = Перечисления.ВариантыВыводаМесяцаВДатеДокумента.Прописью Тогда
				ФорматДаты = "ДФ='дд ММММ гггг'";
			Иначе
				ФорматДаты = "ДФ='дд.ММ.гггг'";
			КонецЕсли;
			ОбластьМакета.Параметры.ДатаДокумента = Формат(Выборка.ДатаДокумента, ФорматДаты);
			
			ОбластьМакета.Параметры.НазначениеПлатежа         = СокрЛП(Выборка.НазначениеПлатежа);
			ОбластьМакета.Параметры.КодНазначенияПлатежа      = СокрЛП(Выборка.КодНазначенияПлатежа);
			ОбластьМакета.Параметры.КодБюджетнойКлассификации = СокрЛП(Выборка.КодБК);
			
			ОбластьМакета.Параметры.ДатаВалютирования	      = Формат(Выборка.ДатаВалютирования,"ДФ='дд.ММ.гггг'");
			
			ОбластьМакета.Параметры.ДатаПолученияТовара       = ?(ЗначениеЗаполнено(Выборка.ДатаПолученияТовара), Формат(Выборка.ДатаПолученияТовара,"ДФ='дд ММММ гггг'") + НСтр("ru = ' года'"), "");;
			
			ОбластьМакета.Параметры.ФИОРуководителя           = Выборка.ФИОРуководителя;
			ОбластьМакета.Параметры.ФИОГлавногоБухгалтера     = ?(НЕ ЗначениеЗаполнено(Выборка.ФИОГлавногоБухгалтера), НСтр("ru = 'Не предусмотрен'"), Выборка.ФИОГлавногоБухгалтера);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьРеквизитыПлатежа(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеБезналичныхДенежныхСредств_РеквизитыПлатежа";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеБезналичныхДенежныхСредств.ПФ_MXL_РеквизитыПлатежа");
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Владелец КАК Владелец,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.НаименованиеБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.БИКБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	БанковскиеСчета.СВИФТБанка КАК СВИФТБанка,
	|	БанковскиеСчета.АдресБанка КАК АдресБанка,
	|
	|	БанковскиеСчета.НаименованиеБанкаДляРасчетов КАК НаименованиеБанкаДляРасчетов,
	|	БанковскиеСчета.АдресБанкаДляРасчетов КАК АдресБанкаДляРасчетов,
	|	БанковскиеСчета.СВИФТБанкаДляРасчетов КАК СВИФТБанкаДляРасчетов,
	|	БанковскиеСчета.БИКБанкаДляРасчетов КАК БИКБанкаДляРасчетов,
	|	БанковскиеСчета.СчетВБанкеДляРасчетов КАК СчетВБанкеДляРасчетов,
	|
	|	БанковскиеСчета.ТекстКорреспондента КАК ТекстКорреспондента
	|
	|ПОМЕСТИТЬ БанковскиеСчетаКонтрагентов
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента
	|		ИЗ
	|			Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента
	|		ИЗ
	|			Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|			И ДанныеДокумента.ФормаОплатыБезналичная
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Владелец КАК Владелец,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.НаименованиеБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.БИКБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	БанковскиеСчета.СВИФТБанка КАК СВИФТБанка,
	|	БанковскиеСчета.АдресБанка КАК АдресБанка,
	|
	|	БанковскиеСчета.НаименованиеБанкаДляРасчетов КАК НаименованиеБанкаДляРасчетов,
	|	БанковскиеСчета.АдресБанкаДляРасчетов КАК АдресБанкаДляРасчетов,
	|	БанковскиеСчета.СВИФТБанкаДляРасчетов КАК СВИФТБанкаДляРасчетов,
	|	БанковскиеСчета.БИКБанкаДляРасчетов КАК БИКБанкаДляРасчетов,
	|	БанковскиеСчета.СчетВБанкеДляРасчетов КАК СчетВБанкеДляРасчетов,
	|
	|	БанковскиеСчета.ТекстКорреспондента КАК ТекстКорреспондента
	|
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.БанкДляРасчетов = ЗНАЧЕНИЕ(Справочник.КлассификаторБанков.ПустаяСсылка)
	|	И БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчетПолучатель КАК БанковскийСчет
	|		ИЗ
	|			Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчетПолучатель КАК БанковскийСчет
	|		ИЗ
	|			Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|			И ДанныеДокумента.ФормаОплатыБезналичная
	|		)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка КАК Ссылка,
	|	БанковскиеСчета.Владелец КАК Владелец,
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.НаименованиеБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	ВЫБОР КОГДА БанковскиеСчета.РучноеИзменениеРеквизитовБанка ТОГДА
	|		БанковскиеСчета.БИКБанка
	|	ИНАЧЕ
	|		БанковскиеСчета.Банк.Код
	|	КОНЕЦ КАК БИК,
	|	БанковскиеСчета.СВИФТБанка КАК СВИФТБанка,
	|	БанковскиеСчета.АдресБанка КАК АдресБанка
	|
	|ПОМЕСТИТЬ БанковскиеСчетаОрганизаций
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Ссылка В (
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчет КАК БанковскийСчет
	|		ИЗ
	|			Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчет КАК БанковскийСчет
	|		ИЗ
	|			Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|			И ДанныеДокумента.ФормаОплатыБезналичная
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ДанныеДокумента.БанковскийСчетКасса КАК БанковскийСчет
	|		ИЗ
	|			Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК ДанныеДокумента
	|		ГДЕ
	|			ДанныеДокумента.Ссылка В (&МассивДокументов)
	|			И ДанныеДокумента.Ссылка.ФормаОплатыБезналичная
	|		)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	Представление(ДанныеДокумента.ТипПлатежногоДокумента) КАК ТипПлатежногоДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК ПлательщикНаименование,
	|	ДанныеДокумента.БанковскийСчет.ТекстКорреспондента КАК ТекстПлательщика,
	|	
	|	БанковскиеСчетаКонтрагентов.Владелец.Наименование КАК ПолучательНаименование,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеПолное КАК ПолучательНаименованиеПолное,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеСокращенное КАК ПолучательНаименованиеСокращенное,
	|	БанковскиеСчетаКонтрагентов.ТекстКорреспондента КАК ТекстПолучателя,
	|	БанковскиеСчетаКонтрагентов.Владелец КАК Получатель,
	|	
	|	ДанныеДокумента.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НомерСчета, """") КАК НомерСчетаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НаименованиеБанка, """") КАК БанкПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.БИК, """") КАК КодБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.СВИФТБанка, """") КАК СВИФТБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.АдресБанка, """") КАК АдресБанкаПолучателя,
	|	
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НаименованиеБанкаДляРасчетов, """") КАК БанкКорреспондент,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.АдресБанкаДляРасчетов, """") КАК АдресБанкаКорреспондента,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.СВИФТБанкаДляРасчетов, """") КАК СВИФТБанкаКорреспондента,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.БИКБанкаДляРасчетов, """") КАК КодБанкаКорреспондента,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.СчетВБанкеДляРасчетов, """") КАК КоррСчет,
	|
	|	ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.НомерСчета, """") КАК НомерСчетаПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.НаименованиеБанка, """") КАК БанкПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.АдресБанка, """") КАК АдресБанкаПлательщика,
	|	ЕСТЬNULL(БанковскиеСчетаОрганизаций.СВИФТБанка, """") КАК СВИФТБанкаПлательщика
	|
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|	ПО
	|		ДанныеДокумента.БанковскийСчетКонтрагента = БанковскиеСчетаКонтрагентов.Ссылка
	|		ИЛИ 
	|		(ДанныеДокумента.БанковскийСчетПолучатель = БанковскиеСчетаКонтрагентов.Ссылка
	|		И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|	ПО
	|		ДанныеДокумента.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	Представление(ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение)) КАК ТипПлатежногоДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК ПлательщикНаименование,
	|	ЕстьNULL(Распределение.БанковскийСчетКасса.ТекстКорреспондента, ДанныеДокумента.БанковскийСчет.ТекстКорреспондента) КАК ТекстПлательщика,
	|	
	|	БанковскиеСчетаКонтрагентов.Владелец.Наименование КАК ПолучательНаименование,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеПолное КАК ПолучательНаименованиеПолное,
	|	БанковскиеСчетаКонтрагентов.Владелец.НаименованиеСокращенное КАК ПолучательНаименованиеСокращенное,
	|	БанковскиеСчетаКонтрагентов.ТекстКорреспондента КАК ТекстПолучателя,
	|	БанковскиеСчетаКонтрагентов.Владелец КАК Получатель,
	|	
	|	ДанныеДокумента.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ЕстьNULL(Распределение.Сумма, ДанныеДокумента.СуммаДокумента) КАК СуммаДокумента,
	|	
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НомерСчета, """") КАК НомерСчетаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НаименованиеБанка, """") КАК БанкПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.БИК, """") КАК КодБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.СВИФТБанка, """") КАК СВИФТБанкаПолучателя,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.АдресБанка, """") КАК АдресБанкаПолучателя,
	|	
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.НаименованиеБанкаДляРасчетов, """") КАК БанкКорреспондент,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.АдресБанкаДляРасчетов, """") КАК АдресБанкаКорреспондента,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.СВИФТБанкаДляРасчетов, """") КАК СВИФТБанкаКорреспондента,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.БИКБанкаДляРасчетов, """") КАК КодБанкаКорреспондента,
	|	ЕСТЬNULL(БанковскиеСчетаКонтрагентов.СчетВБанкеДляРасчетов, """") КАК КоррСчет,
	|
	|	ЕстьNULL(Распределение.БанковскийСчетКасса.ВалютаДенежныхСредств, ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств) КАК ВалютаДенежныхСредств,
	|
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.НомерСчета, БанковскиеСчетаОрганизаций.НомерСчета), """") КАК НомерСчетаПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.НаименованиеБанка, БанковскиеСчетаОрганизаций.НаименованиеБанка), """") КАК БанкПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.АдресБанка, БанковскиеСчетаОрганизаций.АдресБанка), """") КАК АдресБанкаПлательщика,
	|	ЕСТЬNULL(ЕстьNULL(БанковскиеСчетаОрганизацийРаспределение.СВИФТБанка, БанковскиеСчетаОрганизаций.СВИФТБанка), """") КАК СВИФТБанкаПлательщика
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|	ПО
	|		ДанныеДокумента.БанковскийСчетКонтрагента = БанковскиеСчетаКонтрагентов.Ссылка
	|		ИЛИ 
	|		(ДанныеДокумента.БанковскийСчетПолучатель = БанковскиеСчетаКонтрагентов.Ссылка
	|		И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|	ПО
	|		ДанныеДокумента.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК Распределение
	|	ПО
	|		Распределение.Ссылка = ДанныеДокумента.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизацийРаспределение
	|	ПО
	|		Распределение.БанковскийСчетКасса = БанковскиеСчетаОрганизацийРаспределение.Ссылка
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|	И ДанныеДокумента.ФормаОплатыБезналичная
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер
	|");
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Реквизиты");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		// Заполним текст плательщика
		Если Не ПустаяСтрока(Выборка.ТекстПлательщика) Тогда
			ТекстПлательщика = Выборка.ТекстПлательщика;
		Иначе
			ТекстПлательщика = Выборка.ПлательщикНаименование;
		КонецЕсли;
		ОбластьМакета.Параметры.Плательщик = ТекстПлательщика;
		
		СведенияОПлательщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.ДатаДокумента);
		ОбластьМакета.Параметры.АдресПлательщика = СведенияОПлательщике.ЮридическийАдрес;
		
		// Заполним текст получателя.
		Если Не ПустаяСтрока(Выборка.ТекстПолучателя) Тогда
			ТекстПолучателя = Выборка.ТекстПолучателя;
		ИначеЕсли ТипЗнч(Выборка.Получатель) = Тип("СправочникСсылка.Организации") Тогда
			ТекстПолучателя = Выборка.ПолучательНаименованиеСокращенное;
		ИначеЕсли ТипЗнч(Выборка.Получатель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ТекстПолучателя = Выборка.ПолучательНаименование;
		Иначе
			ТекстПолучателя = Выборка.ПолучательНаименованиеПолное;
		КонецЕсли;
		ОбластьМакета.Параметры.Получатель = ТекстПолучателя;
		
		СведенияОПолучателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Получатель, Выборка.ДатаДокумента);
		ОбластьМакета.Параметры.АдресПолучателя = СведенияОПолучателе.ЮридическийАдрес;
		
		ОбластьМакета.Параметры.СуммаПлатежа = Формат(Выборка.СуммаДокумента, "ЧЦ=15; ЧДЦ=2") + " " + Строка(Выборка.ВалютаДенежныхСредств);
		
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств") Тогда
			ОбластьМакета.Параметры.Документ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"%1 №%2 от %3",
				Выборка.ТипПлатежногоДокумента,
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер),
				Формат(Выборка.ДатаДокумента, "ДЛФ=Д")
			);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Контрагент";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("РасшифровкаПлатежа.Партнер");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl"
//                                      и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти 

#Область Прочее

Функция ДействуетФедеральныйЗакон345ФЗ(Период) Экспорт
	
	// Федеральный закон от 2 декабря 2013 г. N 345-ФЗ "О внесении изменения в статью 855 части второй Гражданского кодекса
	// Российской Федерации". Уточнена очередность списания денежных средств со счетов.
	
	ДатаВступленияВСилу = '20131214';
	
	Возврат Период >= ДатаВступленияВСилу Или (Период = '00010101' И ТекущаяДатаСеанса() >= ДатаВступленияВСилу);
	
КонецФункции

// Добавляет команду создания документа "Списание безналичных ДС".
//
// Параметры:
//   КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица с командами создания на основании. Для изменения.
//       См. описание 1 параметра процедуры СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании().
//
Функция ДобавитьКомандуСоздатьНаОснованииОтчетаПоКомиссии_Вознаграждение(КомандыСозданияНаОсновании) Экспорт
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) Тогда		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "СозданиеНаОснованииУТКлиент.СписаниеБезналичныхДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Идентификатор = "СписаниеБезналичныхДсНаОснованииОтчетаПоКомиссии_Вознаграждение";
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.СписаниеБезналичныхДенежныхСредств) 
			+ " " + НСтр("ru = 'комитента (вознаграждение комиссионеру)'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Функция ищет зеркальный документ ПоступлениеБДС для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - Документ СписаниеБДС, для которого необходимо найти зеркальный документ ПоступлениеБДС.
//
// Возвращаемые значения:
//	ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств
//  Неопределено - если документ не найден.
//
Функция НайтиЗеркальныйПлатеж(ДокументСсылка) Экспорт
	
	ЗеркальныйПлатеж = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ПоступлениеБезналичныхДенежныхСредств.Ссылка
	                |ИЗ
	                |	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
	                |ГДЕ
	                |	ПоступлениеБезналичныхДенежныхСредств.БанковскийСчет = &БанковскийСчет
	                |	И ПоступлениеБезналичныхДенежныхСредств.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	                |	И ПоступлениеБезналичныхДенежныхСредств.Валюта = &Валюта
	                |	И ПоступлениеБезналичныхДенежныхСредств.ДатаВходящегоДокумента = &ДатаВходящегоДокумента
	                |	И ПоступлениеБезналичныхДенежныхСредств.НомерВходящегоДокумента = &НомерВходящегоДокумента
	                |	И ПоступлениеБезналичныхДенежныхСредств.БанковскийСчетОтправитель = &БанковскийСчетОтправитель
	                |	И ПоступлениеБезналичныхДенежныхСредств.СуммаДокумента = &СуммаДокумента";
					
	Запрос.УстановитьПараметр("БанковскийСчет",ДокументСсылка.БанковскийСчетПолучатель);
	Запрос.УстановитьПараметр("БанковскийСчетОтправитель",ДокументСсылка.БанковскийСчет);
	Запрос.УстановитьПараметр("Валюта",ДокументСсылка.Валюта);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента", ДокументСсылка.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента", ДокументСсылка.НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("СуммаДокумента", ДокументСсылка.СуммаДокумента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		ЗеркальныйПлатеж = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ЗеркальныйПлатеж;

КонецФункции

// Проверяет соответствие расшифровок платежа в зеркальном ПоступленииБДС, 
// для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - СписаниеБДС
//  ЗеркальныйПлатежСсылка - ДокументСсылка - ПостулениеБДС.
//
Функция СоответствуетЗеркальномуПлатежу(ДокументСсылка,ЗеркальныйПлатежСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИСТИНА КАК ЕстьРазличия
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ПоступлениеБДСРасшифровка.Заказ КАК Заказ,
	               |		ПоступлениеБДСРасшифровка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	               |		СУММА(ПоступлениеБДСРасшифровка.Сумма) КАК СуммаПоступление,
	               |		СУММА(ПоступлениеБДСРасшифровка.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетовПоступление,
	               |		СУММА(0) КАК СуммаСписание,
	               |		СУММА(0) КАК СуммаВзаиморасчетовСписание,
	               |		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчет КАК БанковскийСчетПоступление,
	               |		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчетОтправитель КАК БанковскийСчетОтправительПоступление,
	               |		ПоступлениеБДСРасшифровка.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокументаПоступление,
	               |		ПоступлениеБДСРасшифровка.Ссылка.НомерВходящегоДокумента КАК НомерВходящегоДокументаПоступление,
	               |		NULL КАК БанковскийСчетПолучательСписание,
	               |		NULL КАК БанковскийСчетСписание,
	               |		NULL КАК ДатаВходящегоДокументаСписание,
	               |		NULL КАК НомерВходящегоДокументаСписание
	               |	ИЗ
	               |		Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБДСРасшифровка
	               |	ГДЕ
	               |		ПоступлениеБДСРасшифровка.Ссылка = &ПоступлениеБДС
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ПоступлениеБДСРасшифровка.ВалютаВзаиморасчетов,
	               |		ПоступлениеБДСРасшифровка.Заказ,
	               |		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчет,
	               |		ПоступлениеБДСРасшифровка.Ссылка.БанковскийСчетОтправитель,
	               |		ПоступлениеБДСРасшифровка.Ссылка.ДатаВходящегоДокумента,
	               |		ПоступлениеБДСРасшифровка.Ссылка.НомерВходящегоДокумента
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Заказ,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	               |		0,
	               |		0,
	               |		СУММА(СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Сумма),
	               |		СУММА(СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.СуммаВзаиморасчетов),
	               |		NULL,
	               |		NULL,
	               |		NULL,
	               |		NULL,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчетПолучатель,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчет,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.ДатаВходящегоДокумента,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.НомерВходящегоДокумента
	               |	ИЗ
	               |		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа
	               |	ГДЕ
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка = &СписаниеБДС
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Заказ,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчет,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.ДатаВходящегоДокумента,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.НомерВходящегоДокумента,
	               |		СписаниеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка.БанковскийСчетПолучатель) КАК РасшифровкаПоступлениеСписание
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасшифровкаПоступлениеСписание.Заказ,
	               |	РасшифровкаПоступлениеСписание.ВалютаВзаиморасчетов
	               |
	               |ИМЕЮЩИЕ
	               |	(СУММА(РасшифровкаПоступлениеСписание.СуммаПоступление) <> СУММА(РасшифровкаПоступлениеСписание.СуммаСписание)
	               |		ИЛИ СУММА(РасшифровкаПоступлениеСписание.СуммаВзаиморасчетовПоступление) <> СУММА(РасшифровкаПоступлениеСписание.СуммаВзаиморасчетовСписание)
	               |		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетПолучательСписание)
	               |		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетОтправительПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.БанковскийСчетСписание)
	               |		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.ДатаВходящегоДокументаПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.ДатаВходящегоДокументаСписание)
	               |		ИЛИ МАКСИМУМ(РасшифровкаПоступлениеСписание.НомерВходящегоДокументаПоступление) <> МАКСИМУМ(РасшифровкаПоступлениеСписание.НомерВходящегоДокументаСписание))";
		   
	Запрос.УстановитьПараметр("ПоступлениеБДС",ЗеркальныйПлатежСсылка);
	Запрос.УстановитьПараметр("СписаниеБДС",ДокументСсылка);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Не Выборка.Следующий();
	
КонецФункции

// Приводит в соответствие зеркальное ПоступленииБДС, 
// для операций между Организациями (Интеркампани).
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - СписаниеБДС
//  ЗеркальныйПлатежСсылка - ДокументОбъект - ПоступлениеБДС.
//
Функция ПривестиВСоответствиеЗеркальныйПлатеж(ДокументСсылка,ЗеркальныйПлатежОбъект) Экспорт
			
	Реквизиты = Новый Структура("РасшифровкаПлатежа, СуммаДокумента, БанковскийСчетПолучатель,
		|БанковскийСчет,ДатаВходящегоДокумента, НомерВходящегоДокумента");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, Реквизиты);
	
	ЗеркальныйПлатежОбъект.СуммаДокумента = Реквизиты.СуммаДокумента;
	ЗеркальныйПлатежОбъект.БанковскийСчет = Реквизиты.БанковскийСчетПолучатель;
	ЗеркальныйПлатежОбъект.БанковскийСчетОтправитель = Реквизиты.БанковскийСчет;
	ЗеркальныйПлатежОбъект.ДатаВходящегоДокумента= Реквизиты.ДатаВходящегоДокумента;
	ЗеркальныйПлатежОбъект.НомерВходящегоДокумента= Реквизиты.НомерВходящегоДокумента;
	
	РасшифровкаПлатежа = Реквизиты.РасшифровкаПлатежа.Выгрузить();
	РасшифровкаПлатежаЗеркальный = ЗеркальныйПлатежОбъект.РасшифровкаПлатежа;
	
	Если РасшифровкаПлатежа.Количество() = 1 И РасшифровкаПлатежаЗеркальный.Количество() = 1 Тогда
		ЗаполнитьЗначенияСвойств(РасшифровкаПлатежаЗеркальный[0], РасшифровкаПлатежа[0], "Заказ, Сумма, СуммаВзаиморасчетов, ВалютаВзаиморасчетов"); 
		Возврат Истина;
	КонецЕсли;
		
	СтатьяПоУмолчанию = Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ДокументСсылка.ХозяйственнаяОперация);
	Если Не ЗначениеЗаполнено(СтатьяПоУмолчанию) Тогда
		МассивСтатей = РасшифровкаПлатежаЗеркальный.ВыгрузитьКолонку("СтатьяДвиженияДенежныхСредств");
		МассивСтатей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивСтатей);

		Если МассивСтатей.Количество() = 1 Тогда
			СтатьяПоУмолчанию = МассивСтатей[0];
		КонецЕсли;
	КонецЕсли;	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РасшифровкаПлатежа.Заказ КАК Заказ,
	                      |	СУММА(РасшифровкаПлатежа.Сумма) КАК Сумма,
	                      |	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	                      |	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	                      |	ВЫБОР
	                      |		КОГДА РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	                      |				ИЛИ РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасшифровкаПлатежа.Заказ.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	                      |							ИЛИ РасшифровкаПлатежа.Заказ.Договор.СтатьяДвиженияДенежныхСредствПолучателя = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	                      |						ТОГДА &СтатьяПоУмолчанию
	                      |					ИНАЧЕ РасшифровкаПлатежа.Заказ.Договор.СтатьяДвиженияДенежныхСредствПолучателя
	                      |				КОНЕЦ
	                      |		ИНАЧЕ &СтатьяПоУмолчанию
	                      |	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	                      |	РасшифровкаПлатежа.Заказ КАК ОснованиеПлатежа
	                      |ИЗ
	                      |	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	                      |ГДЕ
	                      |	РасшифровкаПлатежа.Ссылка = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	РасшифровкаПлатежа.ВалютаВзаиморасчетов,
	                      |	РасшифровкаПлатежа.Заказ,
	                      |	ВЫБОР
	                      |		КОГДА РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	                      |				ИЛИ РасшифровкаПлатежа.Заказ ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасшифровкаПлатежа.Заказ.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	                      |							ИЛИ РасшифровкаПлатежа.Заказ.Договор.СтатьяДвиженияДенежныхСредствПолучателя = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	                      |						ТОГДА &СтатьяПоУмолчанию
	                      |					ИНАЧЕ РасшифровкаПлатежа.Заказ.Договор.СтатьяДвиженияДенежныхСредствПолучателя
	                      |				КОНЕЦ
	                      |		ИНАЧЕ &СтатьяПоУмолчанию
	                      |	КОНЕЦ,
	                      |	РасшифровкаПлатежа.Заказ");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СтатьяПоУмолчанию",СтатьяПоУмолчанию);
	
	РасшифровкаРезультат = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из РасшифровкаРезультат Цикл
		Если Не ЗначениеЗаполнено(Стр.СтатьяДвиженияДенежныхСредств) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не приведено в соответствие %1, 
					|не удалось заполнить статьи движения дс в расшифровке платежа.'"),ЗеркальныйПлатежОбъект.Ссылка));
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЗеркальныйПлатежОбъект.РасшифровкаПлатежа.Загрузить(РасшифровкаРезультат);
	
	Возврат Истина;
			
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ИННПлательщика = &СтрокаНеУказан
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|	И ДанныеДокумента.КратностьКурсаКонвертации = 0
	|";
	Запрос.УстановитьПараметр("СтрокаНеУказан", НСтр("ru = '<не указан>'"));
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.СписаниеБезналичныхДенежныхСредств";
	МетаданныеОбъекта = Метаданные.Документы.СписаниеБезналичныхДенежныхСредств;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписаниеДС.ВерсияДанных    КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка КАК Ссылка
	|ИЗ
	|	ВТДляОбработкиСписаниеБезналичныхДенежныхСредств КАК ОбъектыДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеДС
	|		ПО (СписаниеДС.Ссылка = ОбъектыДляОбработки.Ссылка)";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		УстановленаБлокировка = Ложь;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект =
				ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
				
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			УстановленаБлокировка = Истина;
			
			Если ДокументОбъект.ИННПлательщика = НСтр("ru = '<не указан>'") Тогда
				ДокументОбъект.ИННПлательщика = "";
			КонецЕсли;
			
			Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты
				И ДокументОбъект.КратностьКурсаКонвертации = 0 Тогда
				
				ПараметрыКонвертации = ДенежныеСредстваСервер.ИнициализироватьПараметрыКонвертации();
				ЗаполнитьЗначенияСвойств(ПараметрыКонвертации, ДокументОбъект);
				ПараметрыКонвертации.ВалютаРеглУчета = ВалютаРеглУчета;
				ДенежныеСредстваСервер.РассчитатьПараметрыКонвертации(ПараметрыКонвертации, "ВалютаКонвертации");
				Если ПараметрыКонвертации.КратностьКурсаКонвертации <> 0 Тогда
					ДокументОбъект.КратностьКурсаКонвертации = ПараметрыКонвертации.КратностьКурсаКонвертации;
				Иначе
					ДокументОбъект.КратностьКурсаКонвертации = 1;
				КонецЕсли;
			КонецЕсли;
			
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			Если УстановленаБлокировка Тогда
				ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Выборка.Ссылка);
				ВызватьИсключение;
			Иначе
				ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойБлокировке(Выборка.Ссылка);
				Продолжить;
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
