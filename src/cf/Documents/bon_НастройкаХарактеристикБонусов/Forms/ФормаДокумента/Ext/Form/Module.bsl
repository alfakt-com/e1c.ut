
Процедура ИзменениеПриВыбореНастройки()
	
	Если Объект.ВидНастроек = Перечисления.bon_Выды_Настроек.Каскадные Тогда
		Элементы.УсловиеКаскада.Видимость = Истина;	
		Элементы.Каскад_на_Сумму.Видимость = Истина;
		Каскад_Номенклотуре_НаПриИзмененииВыз();
		Каскад_НомГруппе_НаПриИзмененииВыз();
		Каскад_ЦенГруппе_НаПриИзмененииВыз();
		
		Каскад_Исключить_Из_ДокументаПриИзмененииВыз();

	Иначе
		Элементы.Каскад_на_Сумму.Видимость = Ложь;
		
		Элементы.УсловиеКаскада.Видимость = Ложь;
		Объект.Каскад_СуммаС = Число(0);
		Объект.Каскад_СуммаДо = Число(0);
		
		Объект.Каскад_Номенклотуре_На = Ложь;
		Объект.Каскад_НомГруппе_На = Ложь;
		Объект.Каскад_ЦенГруппе_На = Ложь;
		
		Каскад_Номенклотуре_НаПриИзмененииВыз();
		Каскад_НомГруппе_НаПриИзмененииВыз();
		Каскад_ЦенГруппе_НаПриИзмененииВыз();
		
		Объект.Каскад_Исключить_Из_Документа = Ложь;
		Каскад_Исключить_Из_ДокументаПриИзмененииВыз();
	КонецЕсли;

КонецПроцедуры

Процедура Каскад_Номенклотуре_НаПриИзмененииВыз()
	
	Если Объект.Каскад_Номенклотуре_На = Истина Тогда 
		Элементы.Группа_Каскад_на_Сумму_по_Номенклотуре.Видимость = Истина;
	Иначе
		Элементы.Группа_Каскад_на_Сумму_по_Номенклотуре.Видимость = Ложь;
		Объект.Каскад_на_Сумму_по_Номенклотуре.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура Каскад_НомГруппе_НаПриИзмененииВыз()
	
	Если Объект.Каскад_НомГруппе_На = Истина Тогда 
		Элементы.ГруппаКаскад_на_Сумму_по_НоменкГруппы.Видимость = Истина;
		Каскад_ЦенГруппы_в_НомГруппе_НаПриИзмененииВыз();
	Иначе
		Элементы.ГруппаКаскад_на_Сумму_по_НоменкГруппы.Видимость = Ложь;
		Объект.Каскад_на_Сумму_по_НоменкГруппы.Очистить();
		Объект.Каскад_ЦенГруппы_в_НомГруппе_На = Ложь;
		Каскад_ЦенГруппы_в_НомГруппе_НаПриИзмененииВыз();		
	КонецЕсли;
	
КонецПроцедуры

Процедура Каскад_ЦенГруппе_НаПриИзмененииВыз()
	
	Если Объект.Каскад_ЦенГруппе_На = Истина Тогда 
		Элементы.ГруппаКаскад_на_Сумму_по_ЦеновГруппа.Видимость = Истина;
	Иначе
		Элементы.ГруппаКаскад_на_Сумму_по_ЦеновГруппа.Видимость = Ложь;
		Объект.Каскад_на_Сумму_по_ЦеновГруппа.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура Каскад_ЦенГруппы_в_НомГруппе_НаПриИзмененииВыз()
	
	Если Объект.Каскад_ЦенГруппы_в_НомГруппе_На = Истина Тогда 
		Элементы.Каскад_на_Сумму_по_НоменкГруппы.ПодчиненныеЭлементы.Каскад_на_Сумму_по_НоменкГруппыЦенГрупп.Видимость = Истина;	
	Иначе
		Элементы.Каскад_на_Сумму_по_НоменкГруппы.ПодчиненныеЭлементы.Каскад_на_Сумму_по_НоменкГруппыЦенГрупп.Видимость = Ложь;
		Для Каждого Строка из Объект.Каскад_на_Сумму_по_НоменкГруппы  Цикл 
			Строка.ЦенГрупп = "";			
		КонецЦикла;		
	КонецЕсли;

КонецПроцедуры

///+++Каскад Исключить из суммы документа
Процедура Каскад_Исключить_Из_ДокументаПриИзмененииВыз()
	
	Если Объект.Каскад_Исключить_Из_Документа = Истина Тогда 
		Элементы.Каскад_Исключить_из_Суммы.Видимость = Истина;
		
		Каскад_Номенклотуре_ИсключПриИзмененииВыз();
		Каскад_НомГруппе_ИсключПриИзмененииВыз();
		Каскад_ЦенГруппе_ИсключПриИзмененииВыз();
	Иначе
		Элементы.Каскад_Исключить_из_Суммы.Видимость = Ложь;
		
		Объект.Каскад_Номенклотуре_Исключ = Ложь;
		Объект.Каскад_НомГруппе_Исключ = Ложь;
		Объект.Каскад_ЦенГруппе_Исключ = Ложь;

		Каскад_Номенклотуре_ИсключПриИзмененииВыз();
		Каскад_НомГруппе_ИсключПриИзмененииВыз();
		Каскад_ЦенГруппе_ИсключПриИзмененииВыз();
	КонецЕсли;
	
КонецПроцедуры

Процедура Каскад_Номенклотуре_ИсключПриИзмененииВыз()
	Если Объект.Каскад_Номенклотуре_Исключ = Истина Тогда 
		Элементы.ГруппаКаскад_Иск_на_Сумму_по_Номенклотуре.Видимость = Истина;
	Иначе
		Элементы.ГруппаКаскад_Иск_на_Сумму_по_Номенклотуре.Видимость = Ложь;
		Объект.Каскад_Иск_на_Сумму_по_Номенклотуре.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура Каскад_НомГруппе_ИсключПриИзмененииВыз()	
	Если Объект.Каскад_НомГруппе_Исключ = Истина Тогда 
		Элементы.ГруппаКаскад_Иск_на_Сумму_по_НоменкГруппы.Видимость = Истина;
		Каскад_ЦенГруппы_в_НомГруппе_ИсключПриИзмененииВыз();
	Иначе
		Элементы.ГруппаКаскад_Иск_на_Сумму_по_НоменкГруппы.Видимость = Ложь;
		Объект.Каскад_Иск_на_Сумму_по_НоменкГруппы.Очистить();
		Объект.Каскад_ЦенГруппы_в_НомГруппе_Исключ = Ложь;	
		Каскад_ЦенГруппы_в_НомГруппе_ИсключПриИзмененииВыз();		
	КонецЕсли;	
КонецПроцедуры

Процедура Каскад_ЦенГруппы_в_НомГруппе_ИсключПриИзмененииВыз()
	Если Объект.Каскад_ЦенГруппы_в_НомГруппе_Исключ = Истина Тогда 
		Элементы.Каскад_Иск_на_Сумму_по_НоменкГруппы.ПодчиненныеЭлементы.Каскад_Иск_на_Сумму_по_НоменкГруппыЦенГрупп.Видимость = Истина;	
	Иначе
		Элементы.Каскад_Иск_на_Сумму_по_НоменкГруппы.ПодчиненныеЭлементы.Каскад_Иск_на_Сумму_по_НоменкГруппыЦенГрупп.Видимость = Ложь;
		Для Каждого Строка из Объект.Каскад_Иск_на_Сумму_по_НоменкГруппы  Цикл 
			Строка.ЦенГрупп = "";			
		КонецЦикла;		
	КонецЕсли;		
КонецПроцедуры

Процедура Каскад_ЦенГруппе_ИсключПриИзмененииВыз()	
	Если Объект.Каскад_ЦенГруппе_Исключ = Истина Тогда 
		Элементы.ГруппаКаскад_Иск_на_Сумму_по_ЦеновГруппа.Видимость = Истина;
	Иначе
		Элементы.ГруппаКаскад_Иск_на_Сумму_по_ЦеновГруппа.Видимость = Ложь;
		Объект.Каскад_Иск_на_Сумму_по_ЦеновГруппа.Очистить();
	КонецЕсли;
КонецПроцедуры
///---Каскад Исключить из суммы документа


Процедура Иключ_Вкл_ЦенГруппе_Нач_НалПриИзмененииВыз()   //---
	
	Если Объект.Иключ_Вкл_ЦенГруппе_Нач_Нал = Истина Тогда 
		Элементы.Иключ_НоменкГруппы_Нач_Нал.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Нач_НалЦенГрупп.Видимость = Истина;	
	Иначе
		Элементы.Иключ_НоменкГруппы_Нач_Нал.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Нач_НалЦенГрупп.Видимость = Ложь;
		Для Каждого Строка из Объект.Иключ_НоменкГруппы_Нач_Нал  Цикл 
			Строка.ЦенГрупп = "";			
		КонецЦикла;		
	КонецЕсли;
	
КонецПроцедуры

Процедура Иключ_Вкл_ЦенГруппе_Спис_НалПриИзмененииВыз()
	
	Если Объект.Иключ_Вкл_ЦенГруппе_Спис_Нал = Истина Тогда 
		Элементы.Иключ_НоменкГруппы_Спис_Нал.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Спис_НалЦенГрупп.Видимость = Истина;	
	Иначе
		Элементы.Иключ_НоменкГруппы_Спис_Нал.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Спис_НалЦенГрупп.Видимость = Ложь;
		Для Каждого Строка из Объект.Иключ_НоменкГруппы_Спис_Нал  Цикл 
			Строка.ЦенГрупп = "";			
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура Иключ_Вкл_ЦенГруппе_Нач_КредПриИзмененииВыз()
	
	Если Объект.Иключ_Вкл_ЦенГруппе_Нач_Кред = Истина Тогда 
		Элементы.Иключ_НоменкГруппы_Нач_Кред.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Нач_КредЦенГрупп.Видимость = Истина;	
	Иначе
		Элементы.Иключ_НоменкГруппы_Нач_Кред.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Нач_КредЦенГрупп.Видимость = Ложь;
		Для Каждого Строка из Объект.Иключ_НоменкГруппы_Нач_Кред  Цикл 
			Строка.ЦенГрупп = "";			
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Процедура Иключ_Вкл_ЦенГруппе_Спис_КредитПриИзмененииВыз()
	
	Если Объект.Иключ_Вкл_ЦенГруппе_Спис_Кредит = Истина Тогда 
		Элементы.Иключ_НоменкГруппы_Спис_Кредит.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Спис_КредитЦенГрупп.Видимость = Истина;	
	Иначе
		Элементы.Иключ_НоменкГруппы_Спис_Кредит.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Спис_КредитЦенГрупп.Видимость = Ложь;
		Для Каждого Строка из Объект.Иключ_НоменкГруппы_Спис_Кредит  Цикл 
			Строка.ЦенГрупп = "";			
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСтруктурныеЕдиницы();
	ПолучитьДействующиеСтруктурныеЕдиницы();
	
	//Объект.НаЧтоНачНаТоИСпис = Истина;
	
	Если Объект.ПродажаЗаНал = Истина Тогда 
		Элементы.ПроцентНал.Доступность = Истина;
		Элементы.УсловияНал.Видимость = Истина;
		Элементы.ПоНоменклотуре.Доступность = Истина;
		Элементы.ПоНомГруппе.Доступность = Истина;
		Элементы.ПоЦенГруппе.Доступность = Истина;
	КонецЕсли;        
	
	Если Объект.ПродажаВКредит = Истина Тогда 
		Элементы.ПроцентКредит.Доступность = Истина;
		Элементы.НаКредПрог.Доступность = Истина;
		Элементы.УсловияКредит.Видимость = Истина;
		Элементы.АналогичноВКредит.Видимость = Истина;
		Элементы.ПоЦенГруппе_Кред.Доступность = Истина;
	КонецЕсли;
	
	Если Объект.НаКредПрог = Истина Тогда 
		Элементы.КредПрог.Видимость = Истина;
	КонецЕсли;
	
	Если Объект.ПоНоменклотуре_Нал = Истина Тогда 
		Элементы.ГруппаНач_Номенклотура.Видимость = Истина;
	КонецЕсли;
	
	Если Объект.ПоНомГруппе_Нал = Истина Тогда 
		Элементы.ГруппаНач_НоменкГруппы.Видимость = Истина;
	КонецЕсли;
	
	Если Объект.ПоЦенГруппе_Нал = Истина Тогда 
		Элементы.ГруппаНач_ЦеновГруппа.Видимость = Истина;
	КонецЕсли;
			
	Если Объект.НастройкаСписания = Истина Тогда 		
		Элементы.НастрСпис.Видимость = Истина;
		Если Объект.Спис_Номенклотуре = Истина Тогда 
			Элементы.ГруппаСпис_Номенклотура.Видимость = Истина;	
		КонецЕсли;
		Если Объект.Спис_НомГруппе = Истина Тогда
			Элементы.ГруппаСпис_НоменкГруппы.Видимость = Истина;
		КонецЕсли;
		Если Объект.Спис_ЦенГруппе = Истина Тогда
			Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Истина;
			Элементы.Спис_ЦенГруппе.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Приоритет = Число(0) Тогда
		Объект.Приоритет = Число(1);		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.АвторДок) Тогда 		
		Объект.АвторДок = ПользователиКлиентСервер.АвторизованныйПользователь();
		Объект.Автор = ПользователиКлиентСервер.АвторизованныйПользователь();
	КонецЕсли;
	
	Если Объект.НастройкаИсключения = Истина Тогда
		НастройкаИсключенияПриИзмененииВыз();
		Исключ_Нач_НалПриИзмененииВыз();
		Исключ_Спис_НалПриИзмененииВыз();
		Исключ_Нач_КредПриИзмененииВыз();
		Исключ_Спис_КредитПриИзмененииВыз();
		Иключ_Номенклотуре_Нач_НалПриИзмененииВыз();
		Иключ_НомГруппе_Нач_НалПриИзмененииВыз();
		Иключ_ЦенГруппе_Нач_НалПриИзмененииВыз();
		Иключ_Номенклотуре_Спис_НалПриИзмененииВыз();
		Иключ_НомГруппе_Спис_НалПриИзмененииВыз();
		Иключ_ЦенГруппе_Спис_НалПриИзмененииВыз();
		Иключ_Номенклотуре_Нач_КредПриИзмененииВыз();
		Иключ_НомГруппе_Нач_КредПриИзмененииВыз();
		Иключ_ЦенГруппе_Нач_КредПриИзмененииВыз();
		Иключ_Номенклотуре_Спис_КредитПриИзмененииВыз();
		Иключ_НомГруппе_Спис_КредитПриИзмененииВыз();
		Иключ_ЦенГруппе_Спис_КредитПриИзмененииВыз();
		
		Если Объект.Иключ_Нач_Кред_Аналогично_Нач_Нал = Истина Тогда 
			Иключ_Нач_Кред_Аналогично_Нач_НалПриИзмененииВыз();
		КонецЕсли;
		
		Если Объект.Иключ_Спис_Кредит_Аналогично_Спис_Нал = Истина Тогда 
			Иключ_Спис_Кредит_Аналогично_Спис_НалПриИзмененииВыз();
		КонецЕсли;

	КонецЕсли;
		
	ИзменениеПриВыбореНастройки();
		
КонецПроцедуры

//++ Новиков Сергей 07.08.2020 Добавление конпки просмотр истории в упр форму
&НаКлиенте
Процедура ПросмотрИстории(Команда)
	//ВнешняяФорма = Справочники.ВнешниеОбработки.НайтиПоКоду("120000059");
	//ИмяФайла = ПолучитьИмяВременногоФайла();
	//ДвоичныеДанные = ВнешняяФорма.ХранилищеВнешнейОбработки.Получить();
	//ДвоичныеДанные.Записать(ИмяФайла);
	//Форма = ВнешниеОбработки.ПолучитьФорму(ИмяФайла);
	//Форма.ЭлементыФормы.Ссылка.Значение = Объект.Ссылка;
	//Форма.Открыть();
	//Форма.ЗаполнитьИсторию(Объект.Ссылка)	
КонецПроцедуры

&НаКлиенте
Процедура ПродажаЗаНалПриИзменении(Элемент)
	
	Если Объект.ПродажаЗаНал = Истина Тогда 
		Элементы.ПроцентНал.Доступность = Истина;
		Элементы.ПоНоменклотуре.Доступность = Истина;
		Элементы.ПоНомГруппе.Доступность = Истина;
		Элементы.ПоЦенГруппе.Доступность = Истина;
		Элементы.УсловияНал.Видимость = Истина;
	Иначе                 
		Элементы.ПроцентНал.Доступность = Ложь;
	    Объект.ПроцентНал = Число(0);
		Элементы.ПоНоменклотуре.Доступность = Ложь;
		Элементы.ПоНомГруппе.Доступность = Ложь;
		Элементы.ПоЦенГруппе.Доступность = Ложь;
		Элементы.УсловияНал.Видимость = Ложь;
		Объект.ПоНоменклотуре_Нал = Ложь;
		Объект.ПоНомГруппе_Нал = Ложь;
		Объект.ПоЦенГруппе_Нал = Ложь;
		
		Элементы.ГруппаНач_Номенклотура.Видимость = Ложь;
		Элементы.ГруппаНач_НоменкГруппы.Видимость = Ложь;
		Элементы.ГруппаНач_ЦеновГруппа.Видимость = Ложь;
		
		Объект.Нач_Номенклотура_Нал.Очистить();
		Объект.Нач_НоменкГруппы_Нал.Очистить();
		Объект.Нач_ЦеновГруппа_Нал.Очистить();
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажаВКредитПриИзменении(Элемент)
	
	Если Объект.ПродажаВКредит = Истина Тогда 
		Элементы.ПроцентКредит.Доступность = Истина;
		Элементы.НаКредПрог.Доступность = Истина;
		Элементы.ПоЦенГруппе_Кред.Доступность = Истина;
		Элементы.УсловияКредит.Видимость = Истина;
		Элементы.АналогичноВКредит.Доступность = Истина;
	Иначе 
		Элементы.ПроцентКредит.Доступность = Ложь;
		Элементы.НаКредПрог.Доступность = Ложь;
		Объект.ПроцентКредит = Число(0);
		Объект.НаКредПрог = Ложь; 
		Элементы.КредПрог.Видимость = Ложь;
	    Объект.ОграничениеПоКредитнымПрограммам.Очистить();
		Элементы.УсловияКредит.Видимость = Ложь;		
		Элементы.ПоЦенГруппе_Кред.Доступность = Ложь;
		Объект.ПоНоменклотуре_Кред	=Ложь;
		Объект.ПоНомГруппе_Кред    =Ложь;
		Объект.ПоЦенГруппе_Кред   =Ложь;	
		Элементы.ГруппаНач_Номенклотура_Кред.Видимость = Ложь;
		Элементы.ГруппаНач_НоменкГруппы_Кред.Видимость = Ложь;
		Элементы.ГруппаНач_ЦеновГруппа_Кред.Видимость = Ложь;	
		Объект.Нач_Номенклотура_Кред.Очистить();
		Объект.Нач_НоменкГруппы_Кред.Очистить();
		Объект.Нач_ЦеновГруппа_Кред.Очистить();	
		Элементы.АналогичноВКредит.Доступность = Ложь;
		Объект.АналогичноВКредит    = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиСтруктурныеЕдиницы(Команда)
	УстановитьПометкиВоВсемДереве(СтруктураПодразделений, "Установить");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлагиСтруктурныеЕдиницы(Команда)
	УстановитьПометкиВоВсемДереве(СтруктураПодразделений, "Снять");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиВоВсемДереве(РодительскаяСтрока, ВыполняемоеДействие)
	
	мСтроки = РодительскаяСтрока.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из мСтроки Цикл
		
		Если ВыполняемоеДействие = "Установить" Тогда
			СтрокаДерева.Пометка = Истина;
		ИначеЕсли ВыполняемоеДействие = "Снять" Тогда
			СтрокаДерева.Пометка = Ложь;
		КонецЕсли;
		
		Если СтрокаДерева.ПолучитьЭлементы().Количество() > 0 Тогда
			УстановитьПометкиВоВсемДереве(СтрокаДерева, ВыполняемоеДействие);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // УстановитьПометкиВоВсемДереве()

&НаКлиенте
Процедура ИнтернетМагазин(Команда)
	УстановитьПометкиВПоляхСИнтернетМагазином(СтруктураПодразделений, "Установить");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиВПоляхСИнтернетМагазином(РодительскаяСтрока, ВыполняемоеДействие)
	
	мСтроки = РодительскаяСтрока.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из мСтроки Цикл
		СтрокаДерева.Пометка = Ложь;
		Если ВыполняемоеДействие = "Установить" 
			И СтрокаДерева.ПолучитьЭлементы().Количество() = 0 
			И Найти(СтрокаДерева.ПодразделениеОрганизации.Наименование,"Интернет")>0 Тогда
			СтрокаДерева.Пометка = Истина;
		КонецЕсли;
		
		Если СтрокаДерева.ПолучитьЭлементы().Количество() > 0 Тогда
			УстановитьПометкиВПоляхСИнтернетМагазином(СтрокаДерева, ВыполняемоеДействие);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьПометкиВПоляхСИнтернетМагазином() 

&НаКлиенте
Процедура НеИнтернетМагазин(Команда)
	УстановитьПометкиВПоляхБезИнтернетМагазина(СтруктураПодразделений, "Установить");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиВПоляхБезИнтернетМагазина(РодительскаяСтрока, ВыполняемоеДействие)
	
	мСтроки = РодительскаяСтрока.ПолучитьЭлементы();
	
	Для Каждого СтрокаДерева Из мСтроки Цикл
		СтрокаДерева.Пометка = Ложь;
		Если ВыполняемоеДействие = "Установить" 
			И СтрокаДерева.ПолучитьЭлементы().Количество() = 0 
			И Найти(СтрокаДерева.ПодразделениеОрганизации.Наименование,"Интернет")=0 Тогда
			СтрокаДерева.Пометка = Истина;
		КонецЕсли;
		
		Если СтрокаДерева.ПолучитьЭлементы().Количество() > 0 Тогда
			УстановитьПометкиВПоляхБезИнтернетМагазина(СтрокаДерева, ВыполняемоеДействие);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьПометкиВПоляхБезИнтернетМагазина() 

&НаСервере
Процедура ЗаполнитьСтруктурныеЕдиницы()
	
	мСтруктурныеЕдиницы = РеквизитФормыВЗначение("СтруктураПодразделений");
	//ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	Запрос = Новый Запрос;
	
	// составим список подразделений
	Запрос.Текст = "ВЫБРАТЬ
	               |	bon_ПодразделенияДляАкций.Организация КАК Владелец,
	               |	bon_ПодразделенияДляАкций.ПодразделениеОрганизации КАК ПодразделениеОрганизации
	               |ИЗ
	               |	РегистрСведений.bon_ПодразделенияДляАкций КАК bon_ПодразделенияДляАкций
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	bon_ПодразделенияДляАкций.Организация ИЕРАРХИЯ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	СоответствиеРодительскиеСтроки = Новый Соответствие();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Владелец) Тогда
			РодительскаяСтрока = СоответствиеРодительскиеСтроки[Выборка.Владелец];
			Если РодительскаяСтрока = Неопределено Тогда
				РодительскаяСтрока = СоответствиеРодительскиеСтроки[Выборка.Владелец];
				Если РодительскаяСтрока = Неопределено Тогда
					РодительскаяСтрока = мСтруктурныеЕдиницы.Строки.Добавить();
					РодительскаяСтрока.ПодразделениеОрганизации = Выборка.Владелец;
					СоответствиеРодительскиеСтроки.Вставить(Выборка.Владелец, РодительскаяСтрока);
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока = РодительскаяСтрока.Строки.Добавить();
			НоваяСтрока.ПодразделениеОрганизации = Выборка.ПодразделениеОрганизации;
			СоответствиеРодительскиеСтроки.Вставить(Выборка.ПодразделениеОрганизации, НоваяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	// удалим из дерева подразделений лишние строки, когда у подразделения нет дочерних
	Стек = Новый Массив();
	Для Каждого СтрокиДерева Из мСтруктурныеЕдиницы.Строки Цикл
		// верхний уровень всегда типа организации - их оставляем без изменения, а вот вложенные в них строки - чистим
		Стек.Добавить(СтрокиДерева.Строки);
	КонецЦикла;
	
	Пока Стек.Количество() > 0 Цикл
		СтрокиДерева = Стек[Стек.Количество() - 1];
		Стек.Удалить(Стек.Количество() - 1);
		Для Каждого СтрокаДерева Из СтрокиДерева Цикл
			Если СтрокаДерева.Строки.Количество() = 1 Тогда
				Если СтрокаДерева.ПодразделениеОрганизации = СтрокаДерева.Строки[0].ПодразделениеОрганизации Тогда
					// едиственная дочерняя ветвь полностью совпадает с текущей - удалим дочернюю
					СтрокаДерева.ЭтоГруппа = Ложь;
					СтрокаДерева.Строки.Удалить(0);
				Иначе
					// добавим в стек что бы проанализировать дочерние ветви
					Стек.Добавить(СтрокаДерева.Строки);
				КонецЕсли;
			Иначе
				// добавляем в стек, чтобы обработать на следующем шаге цикла
				Стек.Добавить(СтрокаДерева.Строки);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(мСтруктурныеЕдиницы, "СтруктураПодразделений");
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДействующиеСтруктурныеЕдиницы()
	
	Если Объект.ДействующиеСтруктурныеЕдиницы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли; 
	
	мСтруктурныеЕдиницы = СтруктураПодразделений.ПолучитьЭлементы();
	
	СоотвествтиеСтроки = Новый Соответствие;
	
	РазложитьСтруктурныеЕдиницыВСоответствие(мСтруктурныеЕдиницы, СоотвествтиеСтроки, Ложь);
	
	Для каждого стрТЧ Из Объект.ДействующиеСтруктурныеЕдиницы Цикл
		
		Если НЕ ЗначениеЗаполнено(стрТЧ.ПодразделениеОрганизации) Тогда
			элСтрокаДерева = СоотвествтиеСтроки[стрТЧ.Организация];
		Иначе
			элСтрокаДерева = СоотвествтиеСтроки[стрТЧ.ПодразделениеОрганизации];
		КонецЕсли; 
		Если не элСтрокаДерева = Неопределено ТОгда
			элСтрокаДерева.Пометка = Истина;
			УстановитьПометкиВоВсемДереве(элСтрокаДерева, "Установить");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазложитьСтруктурныеЕдиницыВСоответствие(Дерево, СоответствиеРезультат, ТолькоДействующие)
	
	Для каждого элСтрокаДерева Из Дерево Цикл
		
		Если ТолькоДействующие Тогда
			
			Если элСтрокаДерева.Пометка  И НЕ ТипЗнч(элСтрокаДерева.ПодразделениеОрганизации) = Тип("СправочникСсылка.Организации") Тогда
				СоответствиеРезультат.Вставить(элСтрокаДерева.ПодразделениеОрганизации, элСтрокаДерева);
			Иначе
				РазложитьСтруктурныеЕдиницыВСоответствие(элСтрокаДерева.ПолучитьЭлементы(), СоответствиеРезультат, ТолькоДействующие);	
			КонецЕсли;
			
		Иначе
			
			СоответствиеРезультат.Вставить(элСтрокаДерева.ПодразделениеОрганизации, элСтрокаДерева);
			РазложитьСтруктурныеЕдиницыВСоответствие(элСтрокаДерева.ПолучитьЭлементы(), СоответствиеРезультат, ТолькоДействующие);
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКредитныеПрограммы(Команда)
	
	ФормаПодбора = ПолучитьФорму("Справочник.мчт_КредитныеПрограммы.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	ФормаПодбора.ОткрытьМодально();

КонецПроцедуры

&НаКлиенте
Процедура ПоНоменклотуреПриИзменении(Элемент)
	
	Если Объект.ПоНоменклотуре_Нал = Истина Тогда 
		Элементы.ГруппаНач_Номенклотура.Видимость = Истина;
		Объект.ПоНомГруппе_Нал = Ложь;
		Объект.ПоЦенГруппе_Нал = Ложь;
		Элементы.ГруппаНач_НоменкГруппы.Видимость = Ложь;
	    Объект.Нач_НоменкГруппы_Нал.Очистить();
		Элементы.ГруппаНач_ЦеновГруппа.Видимость = Ложь;
	    Объект.Нач_ЦеновГруппа_Нал.Очистить();
	Иначе 
		Элементы.ГруппаНач_Номенклотура.Видимость = Ложь;
	    Объект.Нач_Номенклотура_Нал.Очистить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоНомГруппеПриИзменении(Элемент)
	
	Если Объект.ПоНомГруппе_Нал = Истина Тогда 
		Элементы.ГруппаНач_НоменкГруппы.Видимость = Истина;
		Объект.ПоНоменклотуре_Нал = Ложь;
		Элементы.ГруппаНач_Номенклотура.Видимость = Ложь;
	    Объект.Нач_Номенклотура_Нал.Очистить();
	Иначе 
		Элементы.ГруппаНач_НоменкГруппы.Видимость = Ложь;
	    Объект.Нач_НоменкГруппы_Нал.Очистить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПоЦенГруппеПриИзменении(Элемент)
	
	Если Объект.ПоЦенГруппе_Нал = Истина Тогда 
		Элементы.ГруппаНач_ЦеновГруппа.Видимость = Истина;
		Объект.ПоНоменклотуре_Нал = Ложь;
		Элементы.ГруппаНач_Номенклотура.Видимость = Ложь;
	    Объект.Нач_Номенклотура_Нал.Очистить();
	Иначе 
		Элементы.ГруппаНач_ЦеновГруппа.Видимость = Ложь;
	    Объект.Нач_ЦеновГруппа_Нал.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаКредПрогПриИзменении(Элемент)
	
	Если Объект.НаКредПрог = Истина Тогда 
		Элементы.КредПрог.Видимость = Истина;
	Иначе 
		Элементы.КредПрог.Видимость = Ложь;
	    Объект.ОграничениеПоКредитнымПрограммам.Очистить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаЧтоНачНаТоИСписПриИзменении(Элемент)
	
	Если Объект.НаЧтоНачНаТоИСпис = Истина Тогда 
		Объект.НастройкаСписания = Ложь;
		Элементы.НастрСпис.Видимость = Ложь;
		Элементы.ГруппаСпис_Номенклотура.Видимость = Ложь;
		Элементы.ГруппаСпис_НоменкГруппы.Видимость = Ложь;
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Ложь;
		Объект.Спис_Номенклотура.Очистить();
		Объект.Спис_НоменкГруппы.Очистить();
		Объект.Спис_ЦеновГруппа.Очистить();	
		Объект.Спис_Номенклотуре = Ложь;
		Объект.Спис_НомГруппе = Ложь;
		Объект.Спис_ЦенГруппе = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСписанияПриИзменении(Элемент)
	
	Если Объект.НастройкаСписания = Истина Тогда 
		Объект.НаЧтоНачНаТоИСпис = Ложь;
		Элементы.НастрСпис.Видимость = Истина;
	Иначе
		Элементы.НастрСпис.Видимость = Ложь;
		Элементы.ГруппаСпис_Номенклотура.Видимость = Ложь;
		Элементы.ГруппаСпис_НоменкГруппы.Видимость = Ложь;
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Ложь;
		Объект.Спис_Номенклотура.Очистить();
		Объект.Спис_НоменкГруппы.Очистить();
		Объект.Спис_ЦеновГруппа.Очистить();
		Объект.Спис_Номенклотуре = Ложь;
		Объект.Спис_НомГруппе = Ложь;
		Объект.Спис_ЦенГруппе = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПроверкаВидаНастройки() Тогда
		Отказ = Истина;	
		Сообщить("Не Заполнен 'Вид Настройи'!");
	КонецЕсли;
	
	ЗаписатьДействующиеСтруктурныеЕдиницы();
	
	Объект.АвторДок = ПользователиКлиентСервер.АвторизованныйПользователь();
		
КонецПроцедуры

&НаСервере
Функция ПроверкаВидаНастройки()
	
	Возврат Объект.ВидНастроек = Перечисления.bon_Выды_Настроек.ПустаяСсылка();
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьДействующиеСтруктурныеЕдиницы()
	
	мСтруктурныеЕдиницы = СтруктураПодразделений.ПолучитьЭлементы();
	
	Для Каждого Стр Из мСтруктурныеЕдиницы Цикл 
		Стр.Пометка = Ложь;		
	КонецЦикла;
	
	СоотвествтиеСтроки = Новый Соответствие;
	
	РазложитьСтруктурныеЕдиницыВСоответствие(мСтруктурныеЕдиницы, СоотвествтиеСтроки, Истина);
	
	Объект.ДействующиеСтруктурныеЕдиницы.Очистить();
	
	Если СоотвествтиеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого элСтрока Из СоотвествтиеСтроки Цикл
		
		стрТЧ = Объект.ДействующиеСтруктурныеЕдиницы.Добавить();
		
		//Если ТипЗнч(элСтрока.Ключ) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		//	стрТЧ.Организация = элСтрока.Ключ;
		//Иначе
			
			стрТЧ.ПодразделениеОрганизации = элСтрока.Ключ;
			
			стрРодитель = элСтрока.Значение.ПолучитьРодителя();
			буфРодитель = стрРодитель;
			
			// найдем родителя для определения организации
			Пока буфРодитель <> Неопределено Цикл
				
				буфРодитель = стрРодитель.ПолучитьРодителя();
				
				Если буфРодитель <> Неопределено Тогда
					стрРодитель = буфРодитель;	
				КонецЕсли; 
				
			КонецЦикла; 
			
			Если стрРодитель = Неопределено Тогда
				стрТЧ.Организация = элСтрока.Ключ	
			Иначе 
				стрТЧ.Организация = стрРодитель.ПодразделениеОрганизации;
			КонецЕсли;
			
		//КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПоНоменклотуре_КредПриИзменении(Элемент)
	
	Если Объект.ПоНоменклотуре_Кред = Истина Тогда 
		Объект.ПоНомГруппе_Кред = Ложь;
		Объект.ПоЦенГруппе_Кред = Ложь;
		Элементы.ГруппаНач_Номенклотура_Кред.Видимость = Истина;
		Объект.Нач_НоменкГруппы_Кред.Очистить();
		Объект.Нач_ЦеновГруппа_Кред.Очистить();
		Элементы.ГруппаНач_НоменкГруппы_Кред.Видимость = Ложь;
		Элементы.ГруппаНач_ЦеновГруппа_Кред.Видимость = Ложь;				
	Иначе 
		Элементы.ГруппаНач_Номенклотура_Кред.Видимость = Ложь;	
		Объект.Нач_Номенклотура_Кред.Очистить();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоНомГруппе_КредПриИзменении(Элемент)
	
	Если Объект.ПоНомГруппе_Кред = Истина Тогда 
		Объект.ПоНоменклотуре_Кред = Ложь;
		Элементы.ГруппаНач_Номенклотура_Кред.Видимость = Ложь;	
		Объект.Нач_Номенклотура_Кред.Очистить();
		Элементы.ГруппаНач_НоменкГруппы_Кред.Видимость = Истина;
	Иначе 
		Объект.Нач_НоменкГруппы_Кред.Очистить();	
		Элементы.ГруппаНач_НоменкГруппы_Кред.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПоЦенГруппе_КредПриИзменении(Элемент)
	
	Если Объект.ПоЦенГруппе_Кред = Истина Тогда 
		Объект.ПоНоменклотуре_Кред = Ложь;
		Элементы.ГруппаНач_Номенклотура_Кред.Видимость = Ложь;	
		Объект.Нач_Номенклотура_Кред.Очистить();
		Элементы.ГруппаНач_ЦеновГруппа_Кред.Видимость = Истина;
	Иначе 
		Объект.Нач_ЦеновГруппа_Кред.Очистить();	
		Элементы.ГруппаНач_ЦеновГруппа_Кред.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АналогичноВКредитПриИзменении(Элемент)
	
	Если Объект.АналогичноВКредит = Истина Тогда 
		Элементы.ГруппаНач_Номенклотура_Кред.Видимость = Ложь;
		Элементы.ГруппаНач_НоменкГруппы_Кред.Видимость = Ложь;
		Элементы.ГруппаНач_ЦеновГруппа_Кред.Видимость = Ложь;	
		Объект.Нач_Номенклотура_Кред.Очистить();
		Объект.Нач_НоменкГруппы_Кред.Очистить();
		Объект.Нач_ЦеновГруппа_Кред.Очистить();	
		Объект.ПоНоменклотуре_Кред	=Объект.ПоНоменклотуре_Нал;
		Объект.ПоНомГруппе_Кред		=Объект.ПоНомГруппе_Нал;
		Объект.ПоЦенГруппе_Кред		=Объект.ПоЦенГруппе_Нал;
		Элементы.ПоНоменклотуре_Кред.Доступность = Ложь;
		Элементы.ПоНомГруппе_Кред.Доступность = Ложь;
		Элементы.ПоЦенГруппе_Кред.Доступность = Ложь;	
	Иначе 
		Элементы.ПоНоменклотуре_Кред.Доступность = Истина;
		Элементы.ПоНомГруппе_Кред.Доступность = Истина;
		Элементы.ПоЦенГруппе_Кред.Доступность = Истина;
		Объект.ПоНоменклотуре_Кред	= Ложь;
		Объект.ПоНомГруппе_Кред		= Ложь;
		Объект.ПоЦенГруппе_Кред		= Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Спис_НоменклотуреПриИзменении(Элемент)
	
	Если Объект.Спис_Номенклотуре = Истина Тогда
		Элементы.ГруппаСпис_Номенклотура.Видимость = Истина;
		Элементы.ГруппаСпис_НоменкГруппы.Видимость = Ложь;
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Ложь;
		Объект.Спис_НоменкГруппы.Очистить();
		Объект.Спис_ЦеновГруппа.Очистить();
		Объект.Спис_НомГруппе = Ложь;
		Объект.Спис_ЦенГруппе = Ложь;
	Иначе
		Элементы.ГруппаСпис_Номенклотура.Видимость = Ложь;
		Объект.Спис_Номенклотура.Очистить();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Спис_НомГруппеПриИзменении(Элемент)
	
	Если Объект.Спис_НомГруппе = Истина Тогда
		Элементы.ГруппаСпис_Номенклотура.Видимость = Ложь;
		Элементы.ГруппаСпис_НоменкГруппы.Видимость = Истина;
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Ложь;
		Объект.Спис_ЦеновГруппа.Очистить();
		Объект.Спис_ЦенГруппе = Ложь;
		Объект.Спис_Номенклотура.Очистить();
		Объект.Спис_Номенклотуре = Ложь;		
	Иначе
		Элементы.ГруппаСпис_НоменкГруппы.Видимость = Ложь;
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Ложь;
		Объект.Спис_НоменкГруппы.Очистить();
		Объект.Спис_ЦеновГруппа.Очистить();
		Объект.Спис_ЦенГруппе = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Спис_ЦенГруппеПриИзменении(Элемент)
	
	Если Объект.Спис_ЦенГруппе = Истина Тогда
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Истина;	
	Иначе 	
		Объект.Спис_ЦеновГруппа.Очистить();
		Элементы.ГруппаСпис_ЦеновГруппа.Видимость = Ложь;	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПотборНомНач(Команда)
	ФормаПодбора							= ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе			= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Нач_Номенклотура_Нал";
	ФормаПодбора.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	//ИмяТаблицыПодбора = ИсточникВыбора.мТаблицаПереносаЗначений;
	//
	//Если ТипЗнч(ИсточникВыбора) = Тип("Форма") Тогда
	//	///+++Справочник Номенклотуры+++
	//	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда 
	//		Если  ВыбранноеЗначение.этоГруппа = Истина тогда
	//			СтандартнаяОбработка = Ложь;
	//			Запрос = Новый запрос; 
	//			Запрос.УстановитьПараметр("Папка",ВыбранноеЗначение); 
	//			Запрос.текст = "ВЫБРАТЬ
	//			|    номенклатура1.Ссылка 
	//			|ИЗ
	//			|    Справочник.Номенклатура КАК номенклатура1
	//			|ГДЕ
	//			|    номенклатура1.ЭтоГруппа = ЛОЖЬ
	//			|    И номенклатура1.Ссылка В ИЕРАРХИИ(&Папка)";
	//			Выборка =  запрос.Выполнить().Выбрать();				
	//			Пока Выборка.следующий() Цикл
	//				НоваяСТрока = Объект[ИмяТаблицыПодбора].Добавить();
	//				Новаястрока.Номенклотура = Выборка.Ссылка;
	//			Конеццикла;
	//		Иначе  
	//			ИмяКолонкиЗначение = ИмяТаблицыПодбора + ".Номенклатура";
	//			НоваяСтрока = ЭтаФорма.Объект[ИмяТаблицыПодбора].Добавить();
	//			НоваяСтрока.Номенклотура = ВыбранноеЗначение;
	//		КонецЕсли;
	//		///---Справочник Номенклотуры---
	//		
	//		///+++Справочник Ценовая Группа+++
	//	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ЦеновыеГруппы") Тогда 
	//		ИмяКолонкиЗначение = ИмяТаблицыПодбора + ".Номенклотура";
	//		МассивНоменклатуры = ПолуЗначГруппы(ВыбранноеЗначение, ИмяТаблицыПодбора);
	//		Для Каждого НомБренда Из МассивНоменклатуры Цикл 
	//			НоваяСтрока = ЭтаФорма.Объект[ИмяТаблицыПодбора].Добавить();
	//			НоваяСтрока.Номенклотура = НомБренда;
	//		КонецЦикла;
	//		///---Справочник Ценовая Группа---
	//	КонецЕсли;	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолуЗначГруппы(Бренд, Таб)

	Если Таб = Строка("Нач_Номенклотура_Нал") Тогда
		Таблиц = Объект.Нач_Номенклотура_Нал;
	ИначеЕсли Таб = Строка("Нач_Номенклотура_Кред") Тогда
		Таблиц = Объект.Нач_Номенклотура_Кред;
	ИначеЕсли Таб = Строка("Спис_Номенклотура") Тогда
		Таблиц = Объект.Спис_Номенклотура;
	ИначеЕсли Таб = Строка("Иключ_Номенклотура") Тогда
		Таблиц = Объект.Спис_Номенклотура;
	КонецЕсли;
	
	Для Каждого Строка Из Таблиц Цикл
		Отбор			= Новый Структура("Номенклотура", Строка.Номенклотура);
		НайденныеСтроки	= Таблиц.НайтиСтроки(Отбор);
		ВсеТовары		= СокрЛП(Строка.Номенклотура);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЦеноваяГруппа = &Бренд
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И Номенклатура.Наименование <> &всетовары
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.Ссылка";
	Запрос.УстановитьПараметр("Бренд", Бренд);
	Запрос.УстановитьПараметр("всетовары", ВсеТовары);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");	
	
КонецФункции

&НаКлиенте
Процедура ПотборЦенГруппыНач(Команда)
	ФормаПодбора 							= ПолучитьФорму("Справочник.ЦеновыеГруппы.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе 		= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Нач_Номенклотура_Нал";
	ФормаПодбора.ОткрытьМодально();	
КонецПроцедуры

&НаКлиенте
Процедура ПотборНомКред(Команда)
	ФормаПодбора							= ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе			= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Нач_Номенклотура_Кред";
	ФормаПодбора.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ПотборЦенГруппыКред(Команда)
	ФормаПодбора 							= ПолучитьФорму("Справочник.ЦеновыеГруппы.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе 		= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Нач_Номенклотура_Кред";
	ФормаПодбора.ОткрытьМодально();	
КонецПроцедуры

&НаКлиенте
Процедура ПотборНомСпис(Команда)
	ФормаПодбора							= ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе			= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Спис_Номенклотура";
	ФормаПодбора.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ПотборЦенГруппыСпис(Команда)
	ФормаПодбора 							= ПолучитьФорму("Справочник.ЦеновыеГруппы.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе 		= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Спис_Номенклотура";
	ФормаПодбора.ОткрытьМодально();	
КонецПроцедуры

&НаКлиенте
Процедура ПотборЦенГруппыИсключ(Команда)
	ФормаПодбора 							= ПолучитьФорму("Справочник.ЦеновыеГруппы.ФормаВыбора", , ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе 		= Ложь;
	ФормаПодбора.мТаблицаПереносаЗначений	= "Иключ_Номенклотура";
	ФормаПодбора.ОткрытьМодально();	
КонецПроцедуры

&НаКлиенте
Процедура Исключ_Нач_НалПриИзменении(Элемент)
		
	Исключ_Нач_НалПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Номенклотуре_Нач_НалПриИзменении(Элемент)
	
	Иключ_Номенклотуре_Нач_НалПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_НомГруппе_Нач_НалПриИзменении(Элемент)
	Иключ_НомГруппе_Нач_НалПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_ЦенГруппе_Нач_НалПриИзменении(Элемент)
	
	Иключ_ЦенГруппе_Нач_НалПриИзмененииВыз();

КонецПроцедуры

&НаКлиенте
Процедура Исключ_Спис_НалПриИзменении(Элемент)	
	Исключ_Спис_НалПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Номенклотуре_Спис_НалПриИзменении(Элемент)
	Иключ_Номенклотуре_Спис_НалПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_НомГруппе_Спис_НалПриИзменении(Элемент)
	Иключ_НомГруппе_Спис_НалПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_ЦенГруппе_Спис_НалПриИзменении(Элемент)
	Иключ_ЦенГруппе_Спис_НалПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Исключ_Нач_КредПриИзменении(Элемент)
	Исключ_Нач_КредПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Номенклотуре_Нач_КредПриИзменении(Элемент)
	Иключ_Номенклотуре_Нач_КредПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_НомГруппе_Нач_КредПриИзменении(Элемент)
	Иключ_НомГруппе_Нач_КредПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_ЦенГруппе_Нач_КредПриИзменении(Элемент)
	Иключ_ЦенГруппе_Нач_КредПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Нач_Кред_Аналогично_Нач_НалПриИзменении(Элемент)	
	Иключ_Нач_Кред_Аналогично_Нач_НалПриИзмененииВыз();		
КонецПроцедуры

&НаКлиенте
Процедура Исключ_Спис_КредитПриИзменении(Элемент)
	Исключ_Спис_КредитПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Номенклотуре_Спис_КредитПриИзменении(Элемент)
	Иключ_Номенклотуре_Спис_КредитПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_НомГруппе_Спис_КредитПриИзменении(Элемент)
	Иключ_НомГруппе_Спис_КредитПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_ЦенГруппе_Спис_КредитПриИзменении(Элемент)
	Иключ_ЦенГруппе_Спис_КредитПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Спис_Кредит_Аналогично_Спис_НалПриИзменении(Элемент)
	Иключ_Спис_Кредит_Аналогично_Спис_НалПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаИсключенияПриИзменении(Элемент)
	
	НастройкаИсключенияПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_НоменклотуреПриИзменении(Элемент)
	
	Если Объект.Иключ_Номенклотуре = Истина Тогда
		Элементы.ГруппаИсключ_Номенклотура.Видимость = Истина;
		Объект.Иключ_Номенклотура.Очистить();
	Иначе
		Элементы.ГруппаИсключ_Номенклотура.Видимость = Ложь;
		Объект.Иключ_Номенклотура.Очистить();		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_НомГруппеПриИзменении(Элемент)
	
	Если Объект.Иключ_НомГруппе = Истина Тогда
		Объект.Иключ_НоменкГруппы.Очистить();
		Элементы.ГруппаИсключ_НоменкГруппы.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_НоменкГруппы.Видимость = Ложь;
		Объект.Иключ_НоменкГруппы.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_ЦенГруппеПриИзменении(Элемент)
	
	Если Объект.Иключ_ЦенГруппе = Истина Тогда
		Объект.Иключ_ЦеновГруппа.Очистить();
		Элементы.ГруппаИсключ_ЦеновГруппа.Видимость = Истина;	
	Иначе 	
		Объект.Иключ_ЦеновГруппа.Очистить();
		Элементы.ГруппаИсключ_ЦеновГруппа.Видимость = Ложь;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Иключ_Вкл_ЦенГруппе_Нач_НалПриИзменении(Элемент)   //---
	
	Иключ_Вкл_ЦенГруппе_Нач_НалПриИзмененииВыз();

КонецПроцедуры

&НаКлиенте
Процедура Иключ_Вкл_ЦенГруппе_Спис_НалПриИзменении(Элемент)
	
	Иключ_Вкл_ЦенГруппе_Спис_НалПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Вкл_ЦенГруппе_Нач_КредПриИзменении(Элемент)
	
	Иключ_Вкл_ЦенГруппе_Нач_КредПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура Иключ_Вкл_ЦенГруппе_Спис_КредитПриИзменении(Элемент)
	
	Иключ_Вкл_ЦенГруппе_Спис_КредитПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНастроекПриИзменении(Элемент)
	ИзменениеПриВыбореНастройки();
КонецПроцедуры

&НаКлиенте
Процедура Каскад_ЦенГруппы_в_НомГруппе_НаПриИзменении(Элемент)
	
	Каскад_ЦенГруппы_в_НомГруппе_НаПриИзмененииВыз();

КонецПроцедуры

&НаКлиенте
Процедура Каскад_Номенклотуре_НаПриИзменении(Элемент)
	
	Каскад_Номенклотуре_НаПриИзмененииВыз();
	
КонецПроцедуры

&НаКлиенте
Процедура Каскад_НомГруппе_НаПриИзменении(Элемент)
	Каскад_НомГруппе_НаПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Каскад_ЦенГруппе_НаПриИзменении(Элемент)
	Каскад_ЦенГруппе_НаПриИзмененииВыз();
КонецПроцедуры

///+++Каскад Исключить из суммы документа
&НаКлиенте
Процедура Каскад_Исключить_Из_ДокументаПриИзменении(Элемент)
	Каскад_Исключить_Из_ДокументаПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Каскад_Номенклотуре_ИсключПриИзменении(Элемент)
	Каскад_Номенклотуре_ИсключПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Каскад_НомГруппе_ИсключПриИзменении(Элемент)
	Каскад_НомГруппе_ИсключПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Каскад_ЦенГруппы_в_НомГруппе_ИсключПриИзменении(Элемент)
	Каскад_ЦенГруппы_в_НомГруппе_ИсключПриИзмененииВыз();
КонецПроцедуры

&НаКлиенте
Процедура Каскад_ЦенГруппе_ИсключПриИзменении(Элемент)
	Каскад_ЦенГруппе_ИсключПриИзмененииВыз();
КонецПроцедуры

//Сагандыков 12/06/2020
//Загрузка Ексель
//+++
&НаКлиенте
Процедура ЗагрузкаИзЕксельНач_Номенклотура_Нал(Команда)
	ОбработкаExcel("Нач_Номенклотура_Нал");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзЕксельКаскад_на_Сумму_по_Номенклотуре(Команда)
	ОбработкаExcel("Каскад_на_Сумму_по_Номенклотуре");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзЕксельКаскад_Иск_на_Сумму_по_Номенклотуре(Команда)
	ОбработкаExcel("Каскад_Иск_на_Сумму_по_Номенклотуре");
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузкаИзЕксельНач_Номенклотура_Кред(Команда)
	ОбработкаExcel("Нач_Номенклотура_Кред");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзЕксельСпис_Номенклотура(Команда)
	ОбработкаExcel("Спис_Номенклотура");
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузкаИзЕксельИключ_Номенклотура_Нач_Нал(Команда)
	ОбработкаExcel("Иключ_Номенклотура_Нач_Нал");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзЕксельИключ_Номенклотура_Спис_Нал(Команда)
	ОбработкаExcel("Иключ_Номенклотура_Спис_Нал");
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузкаИзЕксельИключ_Номенклотура_Нач_Кред(Команда)
	ОбработкаExcel("ЗагрузкаИзЕксельИключ_Номенклотура_Нач_Кред");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаИзЕксельИключ_Номенклотура_Спис_Кредит(Команда)
	ОбработкаExcel("Иключ_Номенклотура_Спис_Кредит");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаExcel(НазваниеТаблицы)
	//МассивТипов				= Новый Массив();
	//мчт_ОбщегоНазначениеКлиентСервер.ЭксельДобавитьВБазовыйМассивМассив(МассивТипов, "Номенклатура"				, "Строка(150)"	, 2	, , );
	//
	//ПараметрыФормы 			= Новый Структура("ТипыДанных", МассивТипов);
	//ПараметрыНазвания 			= Новый Структура("НазваниеТаблицы", НазваниеТаблицы);
	//ОписаниеОповещения 		= Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияФормыЗагрузкаИзЭксель", ЭтаФорма, ПараметрыНазвания);
	//ОткрытьФорму("Обработка.ЗагрузкаИзExcel.Форма", ПараметрыФормы, ЭтотОбъект, , , ,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияФормыЗагрузкаИзЭксель(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;        
		 
	Для каждого ЭлЦикла из Результат Цикл
		НашелНоменклатуру = ПроверкаСправочника(ЭлЦикла.Номенклатура);
		Если НашелНоменклатуру.Пустая() тогда
			Сообщить("Номенклатура не найдена - НашелНоменклатуру "+ЭлЦикла.Номенклатура);
			Продолжить;
		КонецЕсли;
		ЗаполнениеТЧ = Объект[ДополнительныеПараметры.НазваниеТаблицы].Добавить();
		ЗаполнениеТЧ.Номенклотура = НашелНоменклатуру.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПроверкаСправочника(Ном)
	Возврат Справочники.Номенклатура.НайтиПоНаименованию(Ном , Истина);	
КонецФункции

&НаКлиенте
Процедура СтруктураПодразделенийПометкаПриИзменении(Элемент)
	
	ТекСтрока = Элементы.СтруктураПодразделений.ТекущиеДанные;
	
	УстановитьПометкиПодчиненных(ТекСтрока);
	УстановитьПометкиРодителей(ТекСтрока);

КонецПроцедуры
////---Каскад Исключить из суммы документа

&НаКлиенте 
Процедура УстановитьПометкиПодчиненных(ТекСтрока)
	
	Пометка	= ТекСтрока.Пометка;
	Подчиненные	= ТекСтрока.ПолучитьЭлементы();
	
	Если Подчиненные.Количество() > 0 Тогда
		
		Для каждого СтрокаДерева из Подчиненные Цикл
			
			СтрокаДерева.Пометка = Пометка;
			УстановитьПометкиПодчиненных(СтрокаДерева)
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьПометкиПодчиненных()

&НаКлиенте 
Процедура УстановитьПометкиРодителей(ТекСтрока)
	
	Родитель = ТекСтрока.ПолучитьРодителя();
	
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	мСтрокиРодителя = Родитель.ПолучитьЭлементы();
	
	ТекСостояние		= Родитель.Пометка;
	
	НайденыВключенные	= Ложь;
	НайденыВыключенные	= Ложь;
	
	Для каждого Строка из мСтрокиРодителя Цикл
		
		Если НЕ Строка.Пометка Тогда
			НайденыВыключенные	= Истина;
		Иначе
			НайденыВключенные	= Истина;						
		КонецЕсли; 
		
		Если НайденыВключенные И НайденыВыключенные Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	
	Если НайденыВключенные И (Не НайденыВыключенные) Тогда
		Пометка = Истина;
	ИначеЕсли (Не НайденыВключенные) И НайденыВыключенные Тогда
		Пометка = Ложь;
	КонецЕсли;
	
	Если Пометка = ТекСостояние Тогда
		Возврат;
	Иначе
		
		Родитель.Пометка = Пометка;
		УстановитьПометкиРодителей(Родитель);
		
	КонецЕсли; 
	
КонецПроцедуры // УстановитьПометкиРодителей()




//Сагандыков 12/06/2020
//Загрузка Ексель
//---


//////////////////////

Процедура Иключ_Нач_Кред_Аналогично_Нач_НалПриИзмененииВыз()	
	Если Объект.Иключ_Нач_Кред_Аналогично_Нач_Нал = Истина Тогда 
		Элементы.НастрИсключения_Нач_Кред.Видимость = Ложь;
		Объект.Иключ_Номенклотуре_Нач_Кред = Ложь;
		Объект.Иключ_НомГруппе_Нач_Кред = Ложь;
		Объект.Иключ_ЦенГруппе_Нач_Кред = Ложь;
		Элементы.ГруппаИсключ_Номенклотура_Нач_Кред.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Кред.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Кред.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Нач_Кред.Очистить();
		Объект.Иключ_НоменкГруппы_Нач_Кред.Очистить();
		Объект.Иключ_ЦеновГруппа_Нач_Кред.Очистить();
	Иначе
		Элементы.НастрИсключения_Нач_Кред.Видимость = Истина;
		Объект.Иключ_Номенклотуре_Нач_Кред = Ложь;
		Объект.Иключ_НомГруппе_Нач_Кред = Ложь;
		Объект.Иключ_ЦенГруппе_Нач_Кред = Ложь;
		Элементы.ГруппаИсключ_Номенклотура_Нач_Кред.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Кред.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Кред.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Нач_Кред.Очистить();
		Объект.Иключ_НоменкГруппы_Нач_Кред.Очистить();
		Объект.Иключ_ЦеновГруппа_Нач_Кред.Очистить();
	КонецЕсли;		
КонецПроцедуры

Процедура Иключ_Спис_Кредит_Аналогично_Спис_НалПриИзмененииВыз()
	
	Если Объект.Иключ_Спис_Кредит_Аналогично_Спис_Нал = Истина Тогда 
		Элементы.НастрИсключения_Спис_Кредит.Видимость = Ложь;
		Объект.Иключ_Номенклотуре_Спис_Кредит = Ложь;
		Объект.Иключ_НомГруппе_Спис_Кредит = Ложь;
		Объект.Иключ_ЦенГруппе_Спис_Кредит = Ложь;
		Элементы.ГруппаИсключ_Номенклотура_Спис_Кредит.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Кредит.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Кредит.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Спис_Кредит.Очистить();
		Объект.Иключ_НоменкГруппы_Спис_Кредит.Очистить();
		Объект.Иключ_ЦеновГруппа_Спис_Кредит.Очистить();
	Иначе
		Элементы.НастрИсключения_Спис_Кредит.Видимость = Истина;
		
		Объект.Иключ_Номенклотуре_Спис_Кредит = Ложь;
		Объект.Иключ_НомГруппе_Спис_Кредит = Ложь;
		Объект.Иключ_ЦенГруппе_Спис_Кредит = Ложь;
		
		Элементы.ГруппаИсключ_Номенклотура_Спис_Кредит.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Кредит.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Кредит.Видимость = Ложь;
		
		Объект.Иключ_Номенклотура_Спис_Кредит.Очистить();
		Объект.Иключ_НоменкГруппы_Спис_Кредит.Очистить();
		Объект.Иключ_ЦеновГруппа_Спис_Кредит.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура Исключ_Нач_НалПриИзмененииВыз()
		
	Если Объект.Исключ_Нач_Нал = Истина Тогда 
		Элементы.НастрИсключения_Нач_Нал.Видимость = Истина;
	Иначе
		Элементы.НастрИсключения_Нач_Нал.Видимость = Ложь;
		Объект.Иключ_Номенклотуре_Нач_Нал = Ложь;
		Объект.Иключ_НомГруппе_Нач_Нал = Ложь;
		Объект.Иключ_ЦенГруппе_Нач_Нал = Ложь;
		//	
		Элементы.ГруппаИсключ_Номенклотура_Нач_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Нал.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Нач_Нал.Очистить();
		Объект.Иключ_НоменкГруппы_Нач_Нал.Очистить();
		Объект.Иключ_ЦеновГруппа_Нач_Нал.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура Исключ_Спис_НалПриИзмененииВыз()	
	Если Объект.Исключ_Спис_Нал = Истина Тогда 
		Элементы.НастрИсключения_Спис_Нал.Видимость = Истина;
	Иначе
		Элементы.НастрИсключения_Спис_Нал.Видимость = Ложь;
		Объект.Иключ_Номенклотуре_Спис_Нал = Ложь;
		Объект.Иключ_НомГруппе_Спис_Нал = Ложь;
		Объект.Иключ_ЦенГруппе_Спис_Нал = Ложь;
		//	
		Элементы.ГруппаИсключ_Номенклотура_Спис_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Нал.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Спис_Нал.Очистить();
		Объект.Иключ_НоменкГруппы_Спис_Нал.Очистить();
		Объект.Иключ_ЦеновГруппа_Спис_Нал.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура Исключ_Нач_КредПриИзмененииВыз()
	//Если Объект.Исключ_Нач_Кред = Истина Тогда 
	//	Элементы.Иключ_Нач_Кред_Аналогично_Нач_Нал.Видимость = Истина;
	//	Элементы.НастрИсключения_Нач_Кред.Видимость = Истина;
	//Иначе
	//	Элементы.Иключ_Нач_Кред_Аналогично_Нач_Нал.Видимость = Ложь;
	//	Объект.Иключ_Нач_Кред_Аналогично_Нач_Нал = Ложь;
	//	Элементы.НастрИсключения_Нач_Кред.Видимость = Ложь;
	//	Объект.Иключ_Номенклотуре_Нач_Кред = Ложь;
	//	Объект.Иключ_НомГруппе_Нач_Кред = Ложь;
	//	Объект.Иключ_ЦенГруппе_Нач_Кред = Ложь;
	//	//	
	//	Элементы.ГруппаИсключ_Номенклотура_Нач_Кред.Видимость = Ложь;
	//	Элементы.ГруппаИсключ_НоменкГруппы_Нач_Кред.Видимость = Ложь;
	//	Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Кред.Видимость = Ложь;
	//	Объект.Иключ_Номенклотура_Нач_Кред.Очистить();
	//	Объект.Иключ_НоменкГруппы_Нач_Кред.Очистить();
	//	Объект.Иключ_ЦеновГруппа_Нач_Кред.Очистить();
	//КонецЕсли;
КонецПроцедуры

Процедура Исключ_Спис_КредитПриИзмененииВыз()
	
	//Если Объект.Исключ_Спис_Кредит = Истина Тогда 
	//	Элементы.Иключ_Спис_Кредит_Аналогично_Спис_Нал.Видимость = Истина;
	//	Элементы.НастрИсключения_Спис_Кредит.Видимость = Истина;
	//Иначе
	//	Элементы.Иключ_Спис_Кредит_Аналогично_Спис_Нал.Видимость = Ложь;
	//	Объект.Иключ_Спис_Кредит_Аналогично_Спис_Нал = Ложь;
	//	Элементы.НастрИсключения_Спис_Кредит.Видимость = Ложь;
	//	Объект.Иключ_Номенклотуре_Спис_Кредит = Ложь;
	//	Объект.Иключ_НомГруппе_Спис_Кредит = Ложь;
	//	Объект.Иключ_ЦенГруппе_Спис_Кредит = Ложь;
	//	//	
	//	Элементы.ГруппаИсключ_Номенклотура_Спис_Кредит.Видимость = Ложь;
	//	Элементы.ГруппаИсключ_НоменкГруппы_Спис_Кредит.Видимость = Ложь;
	//	Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Кредит.Видимость = Ложь;
	//	Объект.Иключ_Номенклотура_Спис_Кредит.Очистить();
	//	Объект.Иключ_НоменкГруппы_Спис_Кредит.Очистить();
	//	Объект.Иключ_ЦеновГруппа_Спис_Кредит.Очистить();
	//КонецЕсли;
КонецПроцедуры

Процедура Иключ_Номенклотуре_Нач_НалПриИзмененииВыз()
	
	Если Объект.Иключ_Номенклотуре_Нач_Нал = Истина Тогда 
		Элементы.ГруппаИсключ_Номенклотура_Нач_Нал.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_Номенклотура_Нач_Нал.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Нач_Нал.Очистить();
	КонецЕсли;
	
	Иключ_Вкл_ЦенГруппе_Нач_НалПриИзмененииВыз();
	
КонецПроцедуры

Процедура Иключ_НомГруппе_Нач_НалПриИзмененииВыз()
	
	Если Объект.Иключ_НомГруппе_Нач_Нал = Истина Тогда 
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Нал.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Нал.Видимость = Ложь;
		Объект.Иключ_НоменкГруппы_Нач_Нал.Очистить();
	КонецЕсли;

КонецПроцедуры

Процедура Иключ_ЦенГруппе_Нач_НалПриИзмененииВыз()
	
	Если Объект.Иключ_ЦенГруппе_Нач_Нал = Истина Тогда 
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Нал.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Нал.Видимость = Ложь;
		Объект.Иключ_ЦеновГруппа_Нач_Нал.Очистить();
	КонецЕсли;

КонецПроцедуры

Процедура Иключ_Номенклотуре_Спис_НалПриИзмененииВыз()
	Если Объект.Иключ_Номенклотуре_Спис_Нал = Истина Тогда 
		Элементы.ГруппаИсключ_Номенклотура_Спис_Нал.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_Номенклотура_Спис_Нал.Видимость = Ложь;
		Объект.Иключ_Номенклотура_Спис_Нал.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура Иключ_НомГруппе_Спис_НалПриИзмененииВыз()
	Если Объект.Иключ_НомГруппе_Спис_Нал = Истина Тогда 
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Нал.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Нал.Видимость = Ложь;
		Объект.Иключ_НоменкГруппы_Спис_Нал.Очистить();
	КонецЕсли;
	Иключ_Вкл_ЦенГруппе_Спис_НалПриИзмененииВыз();
КонецПроцедуры

Процедура Иключ_ЦенГруппе_Спис_НалПриИзмененииВыз()
	Если Объект.Иключ_ЦенГруппе_Спис_Нал = Истина Тогда 
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Нал.Видимость = Истина;
	Иначе
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Нал.Видимость = Ложь;
		Объект.Иключ_ЦеновГруппа_Спис_Нал.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура Иключ_Номенклотуре_Нач_КредПриИзмененииВыз()
	//Если Объект.Иключ_Номенклотуре_Нач_Кред = Истина Тогда 
	//	Элементы.ГруппаИсключ_Номенклотура_Нач_Кред.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаИсключ_Номенклотура_Нач_Кред.Видимость = Ложь;
	//	Объект.Иключ_Номенклотура_Нач_Кред.Очистить();
	//КонецЕсли;
КонецПроцедуры

Процедура Иключ_НомГруппе_Нач_КредПриИзмененииВыз()
	//Если Объект.Иключ_НомГруппе_Нач_Кред = Истина Тогда 
	//	Элементы.ГруппаИсключ_НоменкГруппы_Нач_Кред.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаИсключ_НоменкГруппы_Нач_Кред.Видимость = Ложь;
	//	Объект.Иключ_НоменкГруппы_Нач_Кред.Очистить();
	//КонецЕсли;
	//Иключ_Вкл_ЦенГруппе_Нач_КредПриИзмененииВыз();
КонецПроцедуры

Процедура Иключ_ЦенГруппе_Нач_КредПриИзмененииВыз()
	//Если Объект.Иключ_ЦенГруппе_Нач_Кред = Истина Тогда 
	//	Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Кред.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Кред.Видимость = Ложь;
	//	Объект.Иключ_ЦеновГруппа_Нач_Кред.Очистить();
	//КонецЕсли;
КонецПроцедуры

Процедура Иключ_Номенклотуре_Спис_КредитПриИзмененииВыз()
	//Если Объект.Иключ_Номенклотуре_Спис_Кредит = Истина Тогда 
	//	Элементы.ГруппаИсключ_Номенклотура_Спис_Кредит.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаИсключ_Номенклотура_Спис_Кредит.Видимость = Ложь;
	//	Объект.Иключ_Номенклотура_Спис_Кредит.Очистить();
	//КонецЕсли;
КонецПроцедуры

Процедура Иключ_НомГруппе_Спис_КредитПриИзмененииВыз()
	//Если Объект.Иключ_НомГруппе_Спис_Кредит = Истина Тогда 
	//	Элементы.ГруппаИсключ_НоменкГруппы_Спис_Кредит.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаИсключ_НоменкГруппы_Спис_Кредит.Видимость = Ложь;
	//	Объект.Иключ_НоменкГруппы_Спис_Кредит.Очистить();
	//КонецЕсли;
	//Иключ_Вкл_ЦенГруппе_Спис_КредитПриИзмененииВыз();
КонецПроцедуры

Процедура Иключ_ЦенГруппе_Спис_КредитПриИзмененииВыз()
	//Если Объект.Иключ_ЦенГруппе_Спис_Кредит = Истина Тогда 
	//	Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Кредит.Видимость = Истина;
	//Иначе
	//	Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Кредит.Видимость = Ложь;
	//	Объект.Иключ_ЦеновГруппа_Спис_Кредит.Очистить();
	//КонецЕсли;
КонецПроцедуры

Процедура НастройкаИсключенияПриИзмененииВыз()
	
	Если Объект.НастройкаИсключения = Истина Тогда
		Элементы.ИсключениеПоУсловию.Видимость = Истина;		
	Иначе
		Элементы.ИсключениеПоУсловию.Видимость = Ложь;
		
		///Эл Формы
		Объект.Иключ_Вкл_ЦенГруппе_Нач_Нал = Ложь;
		Объект.Иключ_Вкл_ЦенГруппе_Спис_Нал = Ложь;
		//Объект.Иключ_Вкл_ЦенГруппе_Нач_Кред = Ложь;
		//Объект.Иключ_Вкл_ЦенГруппе_Спис_Кредит = Ложь;
		
		Элементы.Иключ_НоменкГруппы_Нач_Нал.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Нач_НалЦенГрупп.Видимость = Ложь;
		Элементы.Иключ_НоменкГруппы_Спис_Нал.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Спис_НалЦенГрупп.Видимость = Ложь;
//		Элементы.Иключ_НоменкГруппы_Нач_Кред.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Нач_КредЦенГрупп.Видимость = Ложь;
//		Элементы.Иключ_НоменкГруппы_Спис_Кредит.ПодчиненныеЭлементы.Иключ_НоменкГруппы_Спис_КредитЦенГрупп.Видимость = Ложь;
		
		
		///Эл Формы
		Объект.Исключ_Нач_Нал = Ложь;
		Объект.Исключ_Спис_Нал = Ложь;
		//Объект.Исключ_Нач_Кред = Ложь;
		//Объект.Исключ_Спис_Кредит = Ложь;
		
		///Аналогично
		Элементы.Иключ_Нач_Кред_Аналогично_Нач_Нал.Видимость = Ложь;
		Объект.Иключ_Нач_Кред_Аналогично_Нач_Нал = Ложь;
		//
		Элементы.Иключ_Спис_Кредит_Аналогично_Спис_Нал.Видимость = Ложь;
		Объект.Иключ_Спис_Кредит_Аналогично_Спис_Нал = Ложь;		
		
		///Группы огран
		Элементы.НастрИсключения_Нач_Нал.Видимость = Ложь;
		Элементы.НастрИсключения_Спис_Нал.Видимость = Ложь;
		//Элементы.НастрИсключения_Нач_Кред.Видимость = Ложь;
		//Элементы.НастрИсключения_Спис_Кредит.Видимость = Ложь;
		
		///Групы
		Элементы.ГруппаИсключ_Номенклотура_Нач_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Нал.Видимость = Ложь;
		///
		Элементы.ГруппаИсключ_Номенклотура_Спис_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Нал.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Нал.Видимость = Ложь;
		///
		Элементы.ГруппаИсключ_Номенклотура_Нач_Кред.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Нач_Кред.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Нач_Кред.Видимость = Ложь;
		///
		Элементы.ГруппаИсключ_Номенклотура_Спис_Кредит.Видимость = Ложь;
		Элементы.ГруппаИсключ_НоменкГруппы_Спис_Кредит.Видимость = Ложь;
		Элементы.ГруппаИсключ_ЦеновГруппа_Спис_Кредит.Видимость = Ложь;
		
		///Значение
		Объект.Иключ_Номенклотуре_Нач_Нал = Ложь;
		Объект.Иключ_НомГруппе_Нач_Нал = Ложь;
		Объект.Иключ_ЦенГруппе_Нач_Нал = Ложь;
		//
		Объект.Иключ_Номенклотуре_Спис_Нал = Ложь;
		Объект.Иключ_НомГруппе_Спис_Нал = Ложь;
		Объект.Иключ_ЦенГруппе_Спис_Нал = Ложь;
		//
		//Объект.Иключ_Номенклотуре_Нач_Кред = Ложь;
		//Объект.Иключ_НомГруппе_Нач_Кред = Ложь;
		//Объект.Иключ_ЦенГруппе_Нач_Кред = Ложь;
		//
		//Объект.Иключ_Номенклотуре_Спис_Кредит = Ложь;
		//Объект.Иключ_НомГруппе_Спис_Кредит = Ложь;
		//Объект.Иключ_ЦенГруппе_Спис_Кредит = Ложь;
		
		////Таблицы////
		Объект.Иключ_Номенклотура_Нач_Нал.Очистить();
		Объект.Иключ_НоменкГруппы_Нач_Нал.Очистить();
		Объект.Иключ_ЦеновГруппа_Нач_Нал.Очистить();
		//
		Объект.Иключ_Номенклотура_Спис_Нал.Очистить();
		Объект.Иключ_НоменкГруппы_Спис_Нал.Очистить();
		Объект.Иключ_ЦеновГруппа_Спис_Нал.Очистить();
		//
		//Объект.Иключ_Номенклотура_Нач_Кред.Очистить();
		//Объект.Иключ_НоменкГруппы_Нач_Кред.Очистить();
		//Объект.Иключ_ЦеновГруппа_Нач_Кред.Очистить();
		////
		//Объект.Иключ_Номенклотура_Спис_Кредит.Очистить();
		//Объект.Иключ_НоменкГруппы_Спис_Кредит.Очистить();
		//Объект.Иключ_ЦеновГруппа_Спис_Кредит.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры;



























