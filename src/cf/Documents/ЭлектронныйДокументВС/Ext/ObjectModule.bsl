#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	ОбработкаОбменЭСФ.ДокументЭДВС_ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	ОбработкаОбменЭСФ.ДокументЭДВС_ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	                  
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	ОбработкаОбменЭСФ.ДокументЭДВС_ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	ОбработкаОбменЭСФ.ДокументЭДВС_ОбработкаУдаленияПроведения(Ссылка, Отказ);	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	ОбработкаОбменЭСФ.ДокументЭДВС_ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЗначениеЗаполнено(ОбъектКопирования.Идентификатор) Тогда
		Идентификатор = Неопределено;
	КонецЕсли;  	
	
	Если ЗначениеЗаполнено(ОбъектКопирования.ЭЦП) Тогда
		ЭЦП = Неопределено;
	КонецЕсли;  	
	
	Если ЗначениеЗаполнено(ОбъектКопирования.РегистрационныйНомер) Тогда
		РегистрационныйНомер = Неопределено;
	КонецЕсли;  	
	
	Если ЗначениеЗаполнено(ОбъектКопирования.Статус) Тогда
		Статус = Перечисления.СтатусыУТТН.Черновик; // по умолчанию новый документ имеет статус Черновик
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектКопирования.ДокументОснование) Тогда
		ДокументОснование = Неопределено; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектКопирования.НомерУчетногоДокумента) Тогда
		ПрефиксВидаДокумента = "";
		НомерУчетногоДокумента = "";
	КонецЕсли;
	
	//При обновлении ЭДВС очищать ИП не нужно
	ЭтоОбновлениеЭДВС = ОбъектКопирования.ДополнительныеСвойства.Свойство("ОбновлениеЭДВС") И ОбъектКопирования.ДополнительныеСвойства.ОбновлениеЭДВС;
	Если НЕ ЭтоОбновлениеЭДВС Тогда
		ПустоеЗначениеИсточниковПроисхождения = ВССерверПереопределяемый.ПолучитьПустоеЗначениеИсточниковПроисхождения();
		
		ОчиститьИсточникиПроисхождения(Товары			, ПустоеЗначениеИсточниковПроисхождения, Истина);
		ОчиститьИсточникиПроисхождения(ТоварыВС			, ПустоеЗначениеИсточниковПроисхождения, Истина);
		ОчиститьИсточникиПроисхождения(ИсходныеТовары	, ПустоеЗначениеИсточниковПроисхождения, Ложь);
		ОчиститьИсточникиПроисхождения(ИсходныеТоварыВС	, ПустоеЗначениеИсточниковПроисхождения, Ложь);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОчиститьИсточникиПроисхождения(ТабличнаяЧасть, ПустоеЗначениеИсточниковПроисхождения, ЕстьКолонкиПолучателя)
	
	Для Каждого Товар Из ТабличнаяЧасть Цикл 
		
		Если ЗначениеЗаполнено(Товар.ИсточникПроисхождения) Тогда
			Товар.ИсточникПроисхождения = ПустоеЗначениеИсточниковПроисхождения; 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Товар.ДополнительныйИдентификатор) Тогда
			Товар.ДополнительныйИдентификатор = 0;
		КонецЕсли;
		
		Если ЕстьКолонкиПолучателя Тогда
			
			Если ЗначениеЗаполнено(Товар.ИсточникПроисхожденияПолучатель) Тогда
				Товар.ИсточникПроисхожденияПолучатель = ПустоеЗначениеИсточниковПроисхождения; 
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Товар.ДополнительныйИдентификаторПолучатель) Тогда
				Товар.ДополнительныйИдентификаторПолучатель = 0;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Товар.ДатаСертификатаПроисхождения) Тогда
			Товар.ДатаСертификатаПроисхождения = Дата(1,1,1);
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры
#КонецЕсли
