#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ЗаполнитьПоДокументуКорректировки(Объект, КорректируемыйДокумент) Экспорт
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	ОбработкаОбменЭСФ.ДокументЭДВС_ЗаполнитьКорректировкаИП(Объект, КорректируемыйДокумент);	
	
КонецПроцедуры

Функция ПолучитьЗначенияПризнаковПроисхождения(ТаблицаТовары,Дата)Экспорт
	
	ТаблицаСтрок = Новый ТаблицаЗначений;
	ТаблицаСтрок.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число"));
	ТаблицаСтрок.Колонки.Добавить("ПризнакПроисхождения",Новый ОписаниеТипов("Строка"));
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	ТаблицаТовары.ГСВС,
	|	ТаблицаТовары.ТипПроисхождения,
	|	ТаблицаТовары.НомерСтроки
	|ПОМЕСТИТЬ вт_Товары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ТипПроисхождения,
	|	Товары.НомерСтроки,
	|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакПеречняИзьятий
	|ИЗ
	|	вт_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
	|				&Дата,
	|				НоменклатураГСВС В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						вт_Товары.ГСВС
	|					ИЗ
	|						вт_Товары КАК вт_Товары)) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ПО Товары.ГСВС = СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС
	|			И (СведенияОНоменклатуреГСВССрезПоследних.ПризнакАктивности)";
	
	Запрос.УстановитьПараметр("ТаблицаТовары"	, ТаблицаТовары);
	Запрос.УстановитьПараметр("Дата"			, Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ТаблицаСтрок.Добавить();
	    НоваяСтрока.НомерСтроки = ВыборкаДетальныеЗаписи.НомерСтроки;
		НоваяСтрока.ПризнакПроисхождения = ВСКлиентСервер.ОпределитьПризнакПроисхожденияТовара(ВыборкаДетальныеЗаписи.ТипПроисхождения,ВыборкаДетальныеЗаписи.ПризнакПеречняИзьятий);
	КонецЦикла;
	
	Возврат ТаблицаСтрок;
	
КонецФункции

Функция ПолучитьТоварыБезФизическойМетки(ОбъектЭДВС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", ОбъектЭДВС.Дата);
	Запрос.УстановитьПараметр("Организация",   ОбъектЭДВС.Организация);
	Запрос.УстановитьПараметр("Склад", 		   ОбъектЭДВС.СкладОтправитель);
	
	ИмяСправочника = ВСКлиентСерверПереопределяемый.ИмяСправочникаКлассификаторСтранМира(); 	
	ИмяРеквизита   = ВСКлиентСерверПереопределяемый.ИмяРеквизитаКодАльфа2СправочникаКлассификаторСтранМира();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникиПроисхождения.МеткаТовара КАК МеткаТовара,
	|	ИсточникиПроисхождения.Ссылка КАК ИсточникПроисхождения,
	|	ИсточникиПроисхождения.Номенклатура КАК Номенклатура,
	|	ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ИсточникиПроисхождения.ТипПошлины КАК ТипПошлины,
	|	ИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ИсточникиПроисхождения.ГСВС КАК ГСВС,
	|	ЕСТЬNULL(ИсточникиПроисхождения.ГСВС.Наименование, """") КАК СоставнойКодГСВС,
	|	ИсточникиПроисхождения.КодТНВЭД,
	|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
	|	ИсточникиПроисхождения.ТипПроисхождения,
	|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС
	|ПОМЕСТИТЬ ИсточникиПроисхождения
	|ИЗ
	|	Справочник.ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|ГДЕ
	|	ИсточникиПроисхождения.МеткаТовара = """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИсточникиПроисхождения.МеткаТовара КАК МеткаТовара,
	|	ИсточникиПроисхождения.Номенклатура КАК Номенклатура,
	|	ИсточникиПроисхождения.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ИсточникиПроисхождения.ТипПошлины КАК ТипПошлины,
	|	ИсточникиПроисхождения.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС КАК ГСВС,
	|	ЕСТЬNULL(ИсточникиПроисхождения.ГСВС.Наименование, """") КАК СоставнойКодГСВС,
	|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе,
	|	ИсточникиПроисхождения.КодТНВЭД,
	|	ИсточникиПроисхождения.НомерПозицииВДекларацииИлиЗаявлении,
	|	ИсточникиПроисхождения.ТипПроисхождения,
	|	ИсточникиПроисхождения.НомерЗаявленияВРамкахТС,
	|	ИсточникиПроисхождения.ИсточникПроисхождения
	|ПОМЕСТИТЬ ТоварыБезФизМетки
	|ИЗ
	|	РегистрСведений.СведенияОНоменклатуреГСВС.СрезПоследних(
	|			&ДатаДокумента,
	|			НоменклатураГСВС В
	|				(ВЫБРАТЬ
	|					ИсточникиПроисхождения.ГСВС
	|				ИЗ
	|					ИсточникиПроисхождения КАК ИсточникиПроисхождения)) КАК СведенияОНоменклатуреГСВССрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсточникиПроисхождения КАК ИсточникиПроисхождения
	|		ПО СведенияОНоменклатуреГСВССрезПоследних.НоменклатураГСВС = ИсточникиПроисхождения.ГСВС
	|ГДЕ
	|	СведенияОНоменклатуреГСВССрезПоследних.ПризнакУчетаНаВиртуальномСкладе = ИСТИНА
	|	И СведенияОНоменклатуреГСВССрезПоследних.ПризнакУникальногоТовара = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура КАК Товар,
	|	ТоварыНаВиртуальныхСкладахОстатки.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТоварыБезФизМетки.СоставнойКодГСВС,
	|	ТоварыБезФизМетки.МеткаТовара КАК ФизическаяМетка,
	|	ТоварыБезФизМетки.КодТНВЭД,
	|	ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток КАК Количество,
	|	ТоварыБезФизМетки.ТипПошлины КАК ТипПошлины,
	|	ТоварыБезФизМетки.НомерЗаявленияВРамкахТС,
	|	ТоварыБезФизМетки.ТоварНаименованиеВРамкахТС КАК ТоварНаименованиеВРамкахТС,
	|	ТоварыБезФизМетки.НомерПозицииВДекларацииИлиЗаявлении,
	|	ТоварыНаВиртуальныхСкладахОстатки.ЕдиницаИзмерения.Код,
	|	ТоварыБезФизМетки.ГСВС,
	|	ТоварыБезФизМетки.ПризнакУчетаНаВиртуальномСкладе,
	|	ТоварыБезФизМетки.ТипПроисхождения,
	|	ТоварыБезФизМетки.СтранаПроисхожденияТовара КАК СтранаПроисхожденияТовара,
	|	ТоварыНаВиртуальныхСкладахОстатки.Организация,
	|	ТоварыНаВиртуальныхСкладахОстатки.Склад,
	|	ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения,
	|	ТоварыНаВиртуальныхСкладахОстатки.ДокументПартии
	|ПОМЕСТИТЬ ОстаткиТоваровБезФизМетки
	|ИЗ
	|	РегистрНакопления.ТоварыНаВиртуальныхСкладах.Остатки(
	|			&ДатаДокумента,
	|			Организация = &Организация
	|				И Склад = &Склад
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ТоварыБезФизМетки.Номенклатура
	|					ИЗ
	|						ТоварыБезФизМетки КАК ТоварыБезФизМетки)) КАК ТоварыНаВиртуальныхСкладахОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыБезФизМетки КАК ТоварыБезФизМетки
	|		ПО ТоварыНаВиртуальныхСкладахОстатки.ИсточникПроисхождения = ТоварыБезФизМетки.ИсточникПроисхождения
	|ГДЕ
	|	ТоварыНаВиртуальныхСкладахОстатки.КоличествоОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|		ТоварыНаВиртуальныхСкладах.Цена КАК Цена,
	|		ОстаткиТоваровБезФизМетки.ИсточникПроисхождения КАК ИсточникПроисхождения
	|	ПОМЕСТИТЬ ЦеныТоваров
	|	ИЗ
	|	ОстаткиТоваровБезФизМетки КАК ОстаткиТоваровБезФизМетки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаВиртуальныхСкладах КАК ТоварыНаВиртуальныхСкладах
	|		ПО (ОстаткиТоваровБезФизМетки.Товар = ТоварыНаВиртуальныхСкладах.Номенклатура)
	|			И (ОстаткиТоваровБезФизМетки.Организация = ТоварыНаВиртуальныхСкладах.Организация)
	|			И (ОстаткиТоваровБезФизМетки.Склад = ТоварыНаВиртуальныхСкладах.Склад)
	|			И (ОстаткиТоваровБезФизМетки.ИсточникПроисхождения = ТоварыНаВиртуальныхСкладах.ИсточникПроисхождения)
	|			И (ОстаткиТоваровБезФизМетки.ЕдиницаИзмерения = ТоварыНаВиртуальныхСкладах.ЕдиницаИзмерения)
	|			И (ОстаткиТоваровБезФизМетки.ДокументПартии = ТоварыНаВиртуальныхСкладах.ДокументПартии);
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровБезФизМетки.Товар,
	|	ОстаткиТоваровБезФизМетки.ТоварНаименование,
	|	ОстаткиТоваровБезФизМетки.СоставнойКодГСВС,
	|	ОстаткиТоваровБезФизМетки.ФизическаяМетка,
	|	ОстаткиТоваровБезФизМетки.КодТНВЭД,
	|	ОстаткиТоваровБезФизМетки.ЕдиницаИзмерения,
	|	ОстаткиТоваровБезФизМетки.Количество,
	|	ОстаткиТоваровБезФизМетки.ТипПошлины,
	|	ОстаткиТоваровБезФизМетки.НомерЗаявленияВРамкахТС,
	|	ОстаткиТоваровБезФизМетки.ТоварНаименованиеВРамкахТС,
	|	ОстаткиТоваровБезФизМетки.НомерПозицииВДекларацииИлиЗаявлении,
	|	ОстаткиТоваровБезФизМетки.ЕдиницаИзмеренияКод,
	|	ОстаткиТоваровБезФизМетки.ГСВС,
	|	ОстаткиТоваровБезФизМетки.ПризнакУчетаНаВиртуальномСкладе,
	|	ОстаткиТоваровБезФизМетки.ТипПроисхождения,
	|	ОстаткиТоваровБезФизМетки.СтранаПроисхожденияТовара,
	|	КлассификаторСтранМира." + ИмяРеквизита + " КАК СтранаПроисхожденияТовараКод,
	|	ОстаткиТоваровБезФизМетки.ИсточникПроисхождения,
	|	ЦеныТоваров.Цена,
	|	ЦеныТоваров.Цена * ОстаткиТоваровБезФизМетки.Количество КАК Сумма
	|ИЗ
	|	ОстаткиТоваровБезФизМетки КАК ОстаткиТоваровБезФизМетки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник." + ИмяСправочника + " КАК КлассификаторСтранМира
	|		ПО ОстаткиТоваровБезФизМетки.СтранаПроисхожденияТовара = КлассификаторСтранМира.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныТоваров КАК ЦеныТоваров
	|		ПО ОстаткиТоваровБезФизМетки.ИсточникПроисхождения = ЦеныТоваров.ИсточникПроисхождения";
	
	Результат = Запрос.Выполнить().Выгрузить();
		
	Возврат Результат;
	
КонецФункции

#Область ОбработчикиОбновления

Процедура ДобавитьЛидирующиеНулиВНомерДокументаЭДВС() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭлектронныйДокументВС.Ссылка
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС";
	
	ДокументыЭДВС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Документ Из ДокументыЭДВС Цикл
		ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();	
		НомерДокумента = ДокументОбъект.Номер;
		Если СтрДлина(НомерДокумента) <> 30 Тогда
			
			Позиция = 0;
			
			Для Сч = 1 По СтрДлина(НомерДокумента) Цикл
				Символ = Сред(НомерДокумента, Сч, 1);
				КодСимвола = КодСимвола(Сред(НомерДокумента, Сч, 1));
				Если Не (КодСимвола >= 48 И КодСимвола <= 57) Тогда
					Позиция = Сч;		
				Конецесли;
			КонецЦикла;
	
			КоличествоНулей = 30 - СтрДлина(НомерДокумента);
			НеЦифры = Лев(НомерДокумента, Позиция);
			НомерДокумента = Сред(СтрЗаменить(Формат(НомерДокумента, "ЧГ="), " ", ""), Позиция+1);
			ЛидирующиеНули = Формат(0,"ЧЦ=" +КоличествоНулей + ";ЧН=; ЧВН=; ЧГ=0");
			ДокументОбъект.Номер = НеЦифры + ЛидирующиеНули + НомерДокумента;
			
			Попытка
				ДокументОбъект.Записать();
			Исключение
				ДокументОбъект.Номер = НомерДокумента;
				ТекстСообщения = НСтр("ru='При записи документа %1 произошла ошибка: %2'");
				ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументОбъект, ОписаниеОшибки());
				ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;	
		КонецЕсли;
		
		ДокументОбъект.НомерУчетногоДокумента = ДокументОбъект.Номер;
		
		Попытка
			ДокументОбъект.Записать();
		Исключение
			ТекстСообщения = НСтр("ru='При записи документа %1 произошла ошибка: %2'");
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументОбъект, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитСостояниеДокументаЭДВС() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭлектронныйДокументВС.Ссылка
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС";
	
	ДокументыЭДВС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Документ Из ДокументыЭДВС Цикл
		ДокументОбъект = Документ.Ссылка.ПолучитьОбъект();
		
		ДокументОбъект.Состояние = ВСКлиентСервер.ПолучитьСостояниеЭДВС(ДокументОбъект);
		
		Попытка
			ДокументОбъект.Записать();
		Исключение
			ТекстСообщения = НСтр("ru='При записи документа %1 произошла ошибка: %2'");
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументОбъект, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЭДВСЗаполнениеОрганизацииПолучатель() Экспорт
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	ЭлектронныйДокументВС.Ссылка КАК ЭДВС,
	|	ЭлектронныйДокументВС.ОтправительАдрес,
	|	ЭлектронныйДокументВС.ОтправительНаименование,
	|	ЭлектронныйДокументВС.ОтправительИдентификатор,
	|	ЭлектронныйДокументВС.Организация
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
	|ГДЕ
	|	ЭлектронныйДокументВС.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)";
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ЭДВС = ВыборкаЗапроса.ЭДВС.ПолучитьОбъект();
		
		ЭДВС.ОбменДанными.Загрузка 	 = Истина;
		ЭДВС.ОрганизацияПолучатель 	 = ВыборкаЗапроса.Организация;
		ЭДВС.ПолучательАдрес 		 = ВыборкаЗапроса.ОтправительАдрес;
		ЭДВС.ПолучательИдентификатор = ВыборкаЗапроса.ОтправительИдентификатор;
		ЭДВС.ПолучательНаименование	 = ВыборкаЗапроса.ОтправительНаименование;
		
		Попытка
			ЭДВС.Записать();
		Исключение
			ТекстСообщения = НСтр("ru='При записи документа %1 произошла ошибка: %2'");
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;	
		
КонецПроцедуры

Процедура ПерезаполнитьТабличныеЧастиЭДВС() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЭлектронныйДокументВСТовары.Ссылка КАК ЭДВС
		|ПОМЕСТИТЬ вт_ЭДВС
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.Товары КАК ЭлектронныйДокументВСТовары
		|ГДЕ
		|	ЭлектронныйДокументВСТовары.УдалитьПризнакУчетаНаВиртуальномСкладе
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЭлектронныйДокументВСИсходныеТовары.Ссылка
		|ИЗ
		|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭлектронныйДокументВСИсходныеТовары
		|ГДЕ
		|	ЭлектронныйДокументВСИсходныеТовары.УдалитьПризнакУчетаНаВиртуальномСкладе
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	вт_ЭДВС.ЭДВС
		|ИЗ
		|	вт_ЭДВС КАК вт_ЭДВС";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		ЭДВС = ВыборкаЗапроса.ЭДВС.ПолучитьОбъект();
		
		ЭДВС.ОбменДанными.Загрузка 	 = Истина;
		
		ЭДВС.ТоварыВС.Загрузить(ЭДВС.Товары.Выгрузить(ЭДВС.Товары.НайтиСтроки(Новый Структура("УдалитьПризнакУчетаНаВиртуальномСкладе", Истина))));
		ЭДВС.Товары.Загрузить(ЭДВС.Товары.Выгрузить(ЭДВС.Товары.НайтиСтроки(Новый Структура("УдалитьПризнакУчетаНаВиртуальномСкладе", Ложь))));
		
		ЭДВС.ИсходныеТоварыВС.Загрузить(ЭДВС.ИсходныеТовары.Выгрузить(ЭДВС.ИсходныеТовары.НайтиСтроки(Новый Структура("УдалитьПризнакУчетаНаВиртуальномСкладе", Истина))));
		ЭДВС.ИсходныеТовары.Загрузить(ЭДВС.ИсходныеТовары.Выгрузить(ЭДВС.ИсходныеТовары.НайтиСтроки(Новый Структура("УдалитьПризнакУчетаНаВиртуальномСкладе", Ложь))));
		
		Попытка
			ЭДВС.Записать();
		Исключение
			ТекстСообщения = НСтр("ru='При записи документа %1 произошла ошибка: %2'");
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьИП_ИД_ПолучательВКонвертацииЕИ(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	Если Параметры.Свойство("МассивОбработанныхЭДВС") Тогда
		МассивОбработанныхЭДВС = Параметры.МассивОбработанныхЭДВС;
	Иначе
		МассивОбработанныхЭДВС = Новый Массив;
		Параметры.Вставить("МассивОбработанныхЭДВС", МассивОбработанныхЭДВС);
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ЭДВС.Ссылка КАК Ссылка
		|
		|ИЗ
		|	Документ.ЭлектронныйДокументВС КАК ЭДВС
		|ГДЕ
		|	ЭДВС.ВидДетализации = ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)
		|	И НЕ ЭДВС.Ссылка В (&МассивОбработанныхЭДВС)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭДВС.Дата
		|";
	
	Запрос.УстановитьПараметр("МассивОбработанныхЭДВС", МассивОбработанныхЭДВС);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	ОбъектовОбработано = 0;
	
	Пока Выборка.Следующий() Цикл
		
		МассивОбработанныхЭДВС.Добавить(Выборка.Ссылка);
		ЭДВС = Выборка.Ссылка.ПолучитьОбъект();
		
		ЭДВС.ОбменДанными.Загрузка 	 = Истина;
		
		Для Каждого СтрокаТовары Из ЭДВС.Товары Цикл
			СтрокаТовары.ИсточникПроисхожденияПолучатель = СтрокаТовары.ИсточникПроисхождения;
		КонецЦикла;
		
		Для Каждого СтрокаТоварыВС Из ЭДВС.ТоварыВС Цикл
			СтрокаТоварыВС.ИсточникПроисхожденияПолучатель = СтрокаТоварыВС.ИсточникПроисхождения;
			СтрокаТоварыВС.ДополнительныйИдентификаторПолучатель = СтрокаТоварыВС.ДополнительныйИдентификатор;
		КонецЦикла;
		
		Попытка
			ЭДВС.Записать();
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
		Исключение
			ТекстСообщения = НСтр("ru='При записи документа %1 произошла ошибка: %2'");
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ОписаниеОшибки());
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
				
	КонецЦикла;
	Параметры.ПрогрессВыполнения.ОбработаноОбъектов = Параметры.ПрогрессВыполнения.ОбработаноОбъектов + ОбъектовОбработано;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли


