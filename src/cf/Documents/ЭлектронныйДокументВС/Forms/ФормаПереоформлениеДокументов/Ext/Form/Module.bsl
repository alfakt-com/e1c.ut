
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтображатьТолькоОтклонения = Истина;
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВС_ПроверятьОповещенияФоновогоЗадания"
		И ЭтаФорма.КлючУникальности = Источник Тогда
		
		ЗаполнитьДерево();
		
		ПараметрыОтбора = ПолучитьПараметрыОформления();
		Если ПараметрыОтбора = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		ПерезаполнитьТаблицыСравненияДокументов(ПараметрыОтбора);
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункции

#Область ПолучениеПараметров

&НаКлиенте
Функция ПолучитьПараметрыОформления()
	
	ТекущиеДанные = Элементы.ДеревоДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	ПереоформлятьПоСкладу 				= Ложь;
	ПереоформлятьПоПервичномуДокументу 	= Ложь;
	
	ЭлементДерева = ТекущиеДанные.ЭлементДерева;
	Если ТипЗнч(ЭлементДерева) = Тип("ДокументСсылка.ЭлектронныйДокументВС") Тогда
		Родитель 					= ТекущиеДанные.ПолучитьРодителя();
		Склад 						= Родитель.ЭлементДерева;
		Родитель 					= Родитель.ПолучитьРодителя();
		СтруктурноеПодразделение	= Родитель.ЭлементДерева;
		Родитель 					= Родитель.ПолучитьРодителя();
		Документ					= Родитель.ЭлементДерева;
		ПереоформлятьПоСкладу 	= Истина;
	ИначеЕсли ТипЗнч(ЭлементДерева) = Тип("СправочникСсылка.ВиртуальныеСклады") Тогда
		Склад 						= ЭлементДерева;
		Родитель 					= ТекущиеДанные.ПолучитьРодителя();
		СтруктурноеПодразделение	= Родитель.ЭлементДерева;
		Родитель 					= Родитель.ПолучитьРодителя();
		Документ					= Родитель.ЭлементДерева;
		ПереоформлятьПоСкладу 	= Истина;
	ИначеЕсли ТипЗнч(ЭлементДерева) = ВСКлиентСерверПереопределяемый.ТипПодразделенияОрганизаций() Тогда
		СтруктурноеПодразделение				= ЭлементДерева;
		Родитель 								= ТекущиеДанные.ПолучитьРодителя();
		Документ								= Родитель.ЭлементДерева;
		ПереоформлятьПоПервичномуДокументу 		= Истина;
	Иначе
		Склад		= Неопределено;	
		Документ = ЭлементДерева;
		СтруктурноеПодразделение = Неопределено;
		ПереоформлятьПоПервичномуДокументу 	= Истина;
	КонецЕсли;	
	
	//Если ТипЗнч(ЭлементДерева) = Тип("ДокументСсылка.ЭлектронныйДокументВС") Тогда
	//	Родитель 				= ТекущиеДанные.ПолучитьРодителя();
	//	Склад 					= Родитель.ЭлементДерева;
	//	Родитель 				= Родитель.ПолучитьРодителя();
	//	Документ 				= Родитель.ЭлементДерева;
	//	ПереоформлятьПоСкладу 	= Истина;
	//ИначеЕсли ТипЗнч(ЭлементДерева) = Тип("СправочникСсылка.ВиртуальныеСклады") Тогда
	//	Склад 					= ЭлементДерева;
	//	Родитель 				= ТекущиеДанные.ПолучитьРодителя();
	//	Документ 				= Родитель.ЭлементДерева;
	//	ПереоформлятьПоСкладу 	= Истина;
	//Иначе
	//	Склад								= Неопределено;	
	//	Документ 							= ЭлементДерева;
	//	ПереоформлятьПоПервичномуДокументу 	= Истина;
	//КонецЕсли;	
	
	МассивЭДВС	  = Новый Массив;
	МассивСкладов = Новый Массив;
	
	Для Каждого СтрокаДокумента из ДеревоДокументов.ПолучитьЭлементы() Цикл	
		Если СтрокаДокумента.ЭлементДерева = Документ Тогда
			Для Каждого СтрокаСП Из СтрокаДокумента.ПолучитьЭлементы() Цикл
				Если СтруктурноеПодразделение = Неопределено ИЛИ СтрокаСП.ЭлементДерева = СтруктурноеПодразделение Тогда
					Для Каждого СтрокаСклада из СтрокаСП.ПолучитьЭлементы() Цикл
						Если Склад = Неопределено ИЛИ СтрокаСклада.ЭлементДерева = Склад Тогда
							Если МассивСкладов.Найти(СтрокаСклада.ЭлементДерева) = Неопределено Тогда
								МассивСкладов.Добавить(СтрокаСклада.ЭлементДерева);
							КонецЕсли;	
							Для Каждого СтрокаЭДВС из СтрокаСклада.ПолучитьЭлементы() Цикл
								Если ЗначениеЗаполнено(СтрокаЭДВС.ЭлементДерева) 
									И МассивЭДВС.Найти(СтрокаЭДВС.ЭлементДерева) = Неопределено Тогда
									МассивЭДВС.Добавить(СтрокаЭДВС.ЭлементДерева);
								КонецЕсли;	
							КонецЦикла;	
						КонецЕсли;	
					КонецЦикла;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	ЕстьИсходныеТовары = ТипыДокументовДетализации.НайтиПоЗначению(ТипЗнч(Документ)) <> Неопределено;
	
	ПараметрыОформления = Новый Структура;
	ПараметрыОформления.Вставить("Склад"							 , Склад);
	ПараметрыОформления.Вставить("СтруктурноеПодразделение"			 , СтруктурноеПодразделение);
	ПараметрыОформления.Вставить("Документ"							 , Документ);
	ПараметрыОформления.Вставить("ПереоформлятьПоСкладу"			 , ПереоформлятьПоСкладу);
	ПараметрыОформления.Вставить("ПереоформлятьПоПервичномуДокументу", ПереоформлятьПоПервичномуДокументу);
	ПараметрыОформления.Вставить("МассивЭДВС"		 				 , МассивЭДВС);
	ПараметрыОформления.Вставить("МассивСкладов"	 				 , МассивСкладов);
	ПараметрыОформления.Вставить("ЕстьИсходныеТовары"				 , ЕстьИсходныеТовары);
	
	Возврат ПараметрыОформления;
	
КонецФункции	

&НаСервере
Функция ПолучитьПараметрыЗаполненияЭДВС(ПараметрыСоздания)
	
	ПараметрыСоздания.Вставить("ПроводитьСозданныеДокументы" 	, ПроводитьСозданныеДокументы);
	ПараметрыСоздания.Вставить("НеРазбиватьДокумент"			, Ложь);
	ПараметрыСоздания.Вставить("ПодбиратьИсточникиПроисхождения", Истина);
	ПараметрыСоздания.Вставить("ДатаОформления"				 	, ?(ЗначениеЗаполнено(ДатаОформления), ДатаОформления, ВСОбщегоНазначения.ТекущаяДатаПользователя()));
	ПараметрыСоздания.Вставить("СпособЗаполненияЦены"			, СпособЗаполненияЦены);
	ПараметрыСоздания.Вставить("ТипЦены"						, ТипЦены);
	ПараметрыСоздания.Вставить("ЗначениеЦены"					, ЗначениеЦены);
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	Возврат ОбработкаОбменЭСФ.ПолучитьПараметрыЗаполненияЭДВС(ПараметрыСоздания);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивСкладов(ПараметрыПереоформления)
	Если ПараметрыПереоформления.Склад = Справочники.ВиртуальныеСклады.ПустаяСсылка() Тогда
		Запрос 		 = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|		ПО Склады.Ссылка = СоответствиеСкладовИВиртуальныхСкладов.Склад.Ссылка
		|			И (&Организация = СоответствиеСкладовИВиртуальныхСкладов.Организация)
		|ГДЕ
		|	СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад ЕСТЬ NULL 
		|	И Склады.ЭтоГруппа = ЛОЖЬ";
	Иначе
		Запрос 		 = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеСкладовИВиртуальныхСкладов.Склад КАК Склад
		|ИЗ
		|	РегистрСведений.СоответствиеСкладовИВиртуальныхСкладов КАК СоответствиеСкладовИВиртуальныхСкладов
		|ГДЕ
		|	СоответствиеСкладовИВиртуальныхСкладов.Организация = &Организация
		|	И СоответствиеСкладовИВиртуальныхСкладов.ВиртуальныйСклад = &Склад";
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Организация"	, ПараметрыПереоформления.Документ);	
	Запрос.УстановитьПараметр("Склад"		, ПараметрыПереоформления.Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");
КонецФункции

#КонецОбласти

#Область СозданиеФормы

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ВызванаИзПомощникаПерехода = Ложь;
	
	Если Параметры.Свойство("ПомощникПерехода") И Параметры.ПомощникПерехода Тогда
		ВызванаИзПомощникаПерехода = Истина;
		ПараметрыСоздания = Параметры.ПараметрыСоздания;
		
		СписокПервичныхДокументов.Очистить();
		СписокПервичныхДокументов.Добавить(Неопределено);
		
		СписокВидовПервичныхДокументов.Очистить();
		СписокПервичныхДокументов.Добавить(Неопределено);
		
		ДатаПереходаНаУчетТоваровВС = ПараметрыСоздания.ДатаПереходаНаУчетТоваровВС;
		ДатаОформления				= НачалоДня(ДатаПереходаНаУчетТоваровВС) - 1;
		
		ПроводитьСозданныеДокументы   = ПараметрыСоздания.ПроводитьСозданныеДокументы;
		ЗначениеЦены 				  = ПараметрыСоздания.ЗначениеЦены;
		СпособЗаполненияЦены		  = ПараметрыСоздания.СпособЗаполненияЦены;
		ТипЦены 					  = ПараметрыСоздания.ТипЦены;
		ЗаполнятьПоТоварамОрганизации = ПараметрыСоздания.ЗаполнятьПоТоварамОрганизации; 
		ЗаполнятьЦены				  = ПараметрыСоздания.ЗаполнятьЦены; 
		
		ПереданныйМассивЭДВС.ЗагрузитьЗначения(ПараметрыСоздания.МассивЭДВС);
		Если ПараметрыСоздания.МассивСкладов = Неопределено Тогда
			ПереданныйМассивСкладов = Неопределено
		Иначе	
			ПереданныйМассивСкладов = Новый СписокЗначений;
			ПереданныйМассивСкладов.ЗагрузитьЗначения(ПараметрыСоздания.МассивСкладов);
		КонецЕсли;
		
		ПолучитьТаблицыДанныхДляЗаполненияЭДВС_ВводОстатков(ПараметрыСоздания);
		
		ПараметрыСоздания_ВводОстатков = ПараметрыСоздания;
		
	Иначе	
		ТипыДокументовСоСкладомПолучателем = ВССерверПереопределяемый.ТипыДокументовТаможеннойДекларации();
		
		ТипыДокументовДетализации = ВССерверПереопределяемый.ТипыДокументовДетализации();
		
		СписокПервичныхДокументов 		= Параметры.СписокПервичныхДокументов;
		СписокВидовПервичныхДокументов 	= Параметры.СписокВидовПервичныхДокументов;
		ДатаОформления					= Параметры.ДатаОформления;
		НачалоПериода					= Параметры.НачалоПериода; 
		КонецПериода					= Параметры.КонецПериода; 
		
		Если Не ЗначениеЗаполнено(ДатаОформления) Тогда
			ДатаОформления = ВСОбщегоНазначения.ТекущаяДатаПользователя();
		КонецЕсли;
		
		ПроводитьСозданныеДокументы = Параметры.ПроводитьСозданныеДокументы;
		ЗначениеЦены 				= Параметры.ЗначениеЦены;
		СпособЗаполненияЦены		= Параметры.СпособЗаполненияЦены;
		ТипЦены 					= Параметры.ТипЦены;
		
		ПолучитьТаблицыДанныхДляЗаполненияЭДВС();
		
	КонецЕсли;
	
	ЗаполнитьДерево(ПараметрыСоздания);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Если Форма.СпособЗаполненияЦены = ПредопределенноеЗначение("Перечисление.СпособЗаполненияЦеныЭДВС.ПоТипуЦены") Тогда
		Форма.Элементы.ТипЦены.Видимость 		= Истина;
		Форма.Элементы.ЗначениеЦены.Видимость 	= Ложь; 
		Форма.ЗначениеЦены						= 0;
	ИначеЕсли Форма.СпособЗаполненияЦены = ПредопределенноеЗначение("Перечисление.СпособЗаполненияЦеныЭДВС.ФиксированнымЗначением") Тогда
		Форма.Элементы.ТипЦены.Видимость 		= Ложь;
		Форма.Элементы.ЗначениеЦены.Видимость 	= Истина;
		Форма.ТипЦены							= Неопределено;
	Иначе
		Форма.Элементы.ТипЦены.Видимость 		= Ложь;
		Форма.Элементы.ЗначениеЦены.Видимость 	= Ложь; 
		Форма.ЗначениеЦены						= 0;
		Форма.ТипЦены							= Неопределено;
	КонецЕсли;	

	Форма.Элементы.НадписьСписокСозданныхЭДВС.Видимость = Форма.СписокЭДВС.Количество() <> 0;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОсновныеДокументы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТипыФорм.Документ КАК Документ,
	|	ТипыФорм.ТипФормы КАК ТипФормы
	|ПОМЕСТИТЬ вт_ТаблицаТиповФорм
	|ИЗ
	|	&ТаблицаТиповФорм КАК ТипыФорм
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипФормы,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлектронныйДокументВС.Ссылка КАК Ссылка,
	|	ЭлектронныйДокументВС.ДокументОснование КАК ДокументОснование,
	|	ЭлектронныйДокументВС.Проведен КАК Проведен,
	|	ЭлектронныйДокументВС.ПометкаУдаления КАК ПометкаУдаления,
	|	ЭлектронныйДокументВС.Организация КАК Организация,
	|	ЭлектронныйДокументВС.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЭлектронныйДокументВС.СкладПолучатель КАК СкладПолучатель,
	|	ЭлектронныйДокументВС.СкладОтправитель КАК СкладОтправитель,
	|	ВЫБОР
	|		КОГДА ЭлектронныйДокументВС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Обработанный)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЭДВСОбработан,
	|	ЭлектронныйДокументВС.Статус,
	|	ЭлектронныйДокументВС.ТипФормы КАК ТипФормы,
	|	ЭлектронныйДокументВС.ОрганизацияПолучатель
	|ПОМЕСТИТЬ вт_ДокументЭДВС
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
	|ГДЕ
	|	ЭлектронныйДокументВС.ДокументОснование В(&СписокПервичныхДокументов)
	|	И НЕ ЭлектронныйДокументВС.Статус В (&ИсключаемыеСтатусЭДВС)
	|	И ЭлектронныйДокументВС.ВидДетализации <> ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипФормы,
	|	Ссылка,
	|	СкладПолучатель,
	|	СкладОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыОформленияДокументов.Организация,
	|	СтатусыОформленияДокументов.Документ,
	|	СтатусыОформленияДокументов.Склад
	|ПОМЕСТИТЬ вт_СтатусыОформления
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументов КАК СтатусыОформленияДокументов
	|ГДЕ
	|	СтатусыОформленияДокументов.Документ В(&СписокПервичныхДокументов)
	|	И СтатусыОформленияДокументов.ДатаДокумента МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА вт_ДокументЭДВС.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
	|			ТОГДА вт_ДокументЭДВС.ДокументОснование.Организация
	|		ИНАЧЕ вт_ДокументЭДВС.Организация
	|	КОНЕЦ,
	|	вт_ДокументЭДВС.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(вт_ДокументЭДВС.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА вт_ДокументЭДВС.СкладПолучатель
	|		ИНАЧЕ вт_ДокументЭДВС.СкладОтправитель
	|	КОНЕЦ
	|ИЗ
	|	вт_ДокументЭДВС КАК вт_ДокументЭДВС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Товар,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаТовары.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ТаблицаТовары.СкладПолучатель
	|		ИНАЧЕ ТаблицаТовары.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	ТаблицаТовары.ДокументОснование КАК Документ,
	|	ТаблицаТовары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ТаблицаТовары.Количество КАК КоличествоПервичныйДокумент
	|ПОМЕСТИТЬ вт_ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭДВСТовары.Ссылка.ДокументОснование КАК Документ,
	|	ЭДВСТовары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСТовары.Ссылка.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	ЭДВСТовары.Товар,
	|	ЭДВСТовары.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСТовары.Ссылка.ТипФормы = ЕСТЬNULL(вт_ТаблицаТиповФорм.ТипФормы, ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПустаяСсылка))
	|					ИЛИ ЭДВСТовары.Ссылка.СкладОтправитель = ЭДВСТовары.Ссылка.СкладПолучатель
	|					ИЛИ ЭДВСТовары.Ссылка.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание)
	|						И ЭДВСТовары.Ссылка.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Производство)
	|				ТОГДА ЭДВСТовары.Количество
	|			ИНАЧЕ -ЭДВСТовары.Количество
	|		КОНЕЦ) КАК КоличествоЭДВС
	|ПОМЕСТИТЬ вт_ТоварыЭДВС
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСТовары.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСТовары.Ссылка.ДокументОснование,
	|	ЭДВСТовары.Ссылка.СтруктурноеПодразделение,
	|	ЭДВСТовары.Товар,
	|	ЭДВСТовары.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСТовары.Ссылка.СкладОтправитель
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТоварыВС.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСТоварыВС.Ссылка.СкладОтправитель
	|	КОНЕЦ,
	|	ЭДВСТоварыВС.Товар,
	|	ЭДВСТоварыВС.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСТоварыВС.Ссылка.ТипФормы = ЕСТЬNULL(вт_ТаблицаТиповФорм.ТипФормы, ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПустаяСсылка))
	|					ИЛИ ЭДВСТоварыВС.Ссылка.СкладОтправитель = ЭДВСТоварыВС.Ссылка.СкладПолучатель
	|					ИЛИ ЭДВСТоварыВС.Ссылка.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Списание)
	|						И ЭДВСТоварыВС.Ссылка.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричинаСписанияВС.Производство)
	|				ТОГДА ЭДВСТоварыВС.Количество
	|			ИНАЧЕ -ЭДВСТоварыВС.Количество
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТоварыВС
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСТоварыВС.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСТоварыВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ЭДВСТоварыВС.Товар,
	|	ЭДВСТоварыВС.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТоварыВС.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСТоварыВС.Ссылка.СкладОтправитель
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСТовары.Ссылка.ДокументОснование,
	|	ЭДВСТовары.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТовары.Ссылка.СкладОтправитель
	|		ИНАЧЕ ЭДВСТовары.Ссылка.СкладПолучатель
	|	КОНЕЦ,
	|	ЭДВСТовары.Товар,
	|	ЭДВСТовары.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСТовары.Ссылка.СкладПолучатель = ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ -ЭДВСТовары.Количество
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСТовары.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСТовары.Ссылка.ДокументОснование,
	|	ЭДВСТовары.Ссылка.СтруктурноеПодразделение,
	|	ЭДВСТовары.Товар,
	|	ЭДВСТовары.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТовары.Ссылка.СкладОтправитель
	|		ИНАЧЕ ЭДВСТовары.Ссылка.СкладПолучатель
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТоварыВС.Ссылка.СкладОтправитель
	|		ИНАЧЕ ЭДВСТоварыВС.Ссылка.СкладПолучатель
	|	КОНЕЦ,
	|	ЭДВСТоварыВС.Товар,
	|	ЭДВСТоварыВС.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСТоварыВС.Ссылка.СкладПолучатель = ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	|				ТОГДА 0
	|			ИНАЧЕ -ЭДВСТоварыВС.Количество
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТоварыВС
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСТоварыВС.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСТоварыВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ЭДВСТоварыВС.Товар,
	|	ЭДВСТоварыВС.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСТоварыВС.Ссылка.СкладОтправитель
	|		ИНАЧЕ ЭДВСТоварыВС.Ссылка.СкладПолучатель
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТовары.Документ,
	|	вт_ТаблицаТовары.СтруктурноеПодразделение,
	|	вт_ТаблицаТовары.Товар,
	|	вт_ТаблицаТовары.ЕдиницаИзмерения,
	|	СУММА(вт_ТаблицаТовары.КоличествоПервичныйДокумент) КАК КоличествоПервичныйДокумент,
	|	СУММА(0) КАК КоличествоЭДВС,
	|	вт_ТаблицаТовары.Склад
	|ПОМЕСТИТЬ вт_Товары
	|ИЗ
	|	вт_ТаблицаТовары КАК вт_ТаблицаТовары
	|ГДЕ
	|	вт_ТаблицаТовары.Документ В(&СписокПервичныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТовары.Документ,
	|	вт_ТаблицаТовары.СтруктурноеПодразделение,
	|	вт_ТаблицаТовары.ЕдиницаИзмерения,
	|	вт_ТаблицаТовары.Товар,
	|	вт_ТаблицаТовары.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_ТоварыЭДВС.Документ,
	|	вт_ТоварыЭДВС.СтруктурноеПодразделение,
	|	вт_ТоварыЭДВС.Товар,
	|	вт_ТоварыЭДВС.ЕдиницаИзмерения,
	|	СУММА(0),
	|	СУММА(вт_ТоварыЭДВС.КоличествоЭДВС),
	|	вт_ТоварыЭДВС.Склад
	|ИЗ
	|	вт_ТоварыЭДВС КАК вт_ТоварыЭДВС
	|ГДЕ
	|	(вт_ТоварыЭДВС.Документ, вт_ТоварыЭДВС.Склад) В
	|			(ВЫБРАТЬ
	|				вт_ТаблицаТовары.Документ,
	|				вт_ТаблицаТовары.Склад
	|			ИЗ
	|				вт_ТаблицаТовары КАК вт_ТаблицаТовары)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТоварыЭДВС.Документ,
	|	вт_ТоварыЭДВС.СтруктурноеПодразделение,
	|	вт_ТоварыЭДВС.Товар,
	|	вт_ТоварыЭДВС.ЕдиницаИзмерения,
	|	вт_ТоварыЭДВС.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Товары.Товар,
	|	вт_Товары.ЕдиницаИзмерения,
	|	СУММА(вт_Товары.КоличествоПервичныйДокумент) КАК КоличествоПервичныйДокумент,
	|	СУММА(вт_Товары.КоличествоЭДВС) КАК КоличествоЭДВС,
	|	СУММА(вт_Товары.КоличествоПервичныйДокумент - вт_Товары.КоличествоЭДВС) КАК Отклонение,
	|	вт_Товары.Склад КАК Склад,
	|	вт_Товары.Документ КАК Документ,
	|	вт_Товары.СтруктурноеПодразделение КАК СтруктурноеПодразделение
	|ПОМЕСТИТЬ вт_СгруппированыеТовары
	|ИЗ
	|	вт_Товары КАК вт_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Товары.ЕдиницаИзмерения,
	|	вт_Товары.Товар,
	|	вт_Товары.Склад,
	|	вт_Товары.Документ,
	|	вт_Товары.СтруктурноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СгруппированыеТовары.Склад КАК Склад,
	|	вт_СгруппированыеТовары.Документ КАК Документ,
	|	СУММА(ВЫБОР
	|			КОГДА вт_СгруппированыеТовары.Отклонение = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьОтклонение
	|ПОМЕСТИТЬ вт_ОтклоненияТовары
	|ИЗ
	|	вт_СгруппированыеТовары КАК вт_СгруппированыеТовары
	|ГДЕ
	|	вт_СгруппированыеТовары.Отклонение <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_СгруппированыеТовары.Документ,
	|	вт_СгруппированыеТовары.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИсходныеТовары.Товар,
	|	ТаблицаИсходныеТовары.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТаблицаИсходныеТовары.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ТаблицаИсходныеТовары.СкладПолучатель
	|		ИНАЧЕ ТаблицаИсходныеТовары.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	ТаблицаИсходныеТовары.ДокументОснование КАК Документ,
	|	ТаблицаИсходныеТовары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ТаблицаИсходныеТовары.Количество КАК КоличествоПервичныйДокумент
	|ПОМЕСТИТЬ вт_ТаблицаИсходныеТовары
	|ИЗ
	|	&ТаблицаИсходныеТовары КАК ТаблицаИсходныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭДВСИсходныеТовары.Ссылка.ДокументОснование КАК Документ,
	|	ЭДВСИсходныеТовары.Ссылка.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТовары.Ссылка.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	ЭДВСИсходныеТовары.Товар,
	|	ЭДВСИсходныеТовары.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСИсходныеТовары.Ссылка.ТипФормы = ЕСТЬNULL(вт_ТаблицаТиповФорм.ТипФормы, ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПустаяСсылка))
	|				ТОГДА ЭДВСИсходныеТовары.Количество
	|			ИНАЧЕ -ЭДВСИсходныеТовары.Количество
	|		КОНЕЦ) КАК КоличествоЭДВС
	|ПОМЕСТИТЬ вт_ИсходныеТоварыЭДВС
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭДВСИсходныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСИсходныеТовары.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСИсходныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСИсходныеТовары.Товар,
	|	ЭДВСИсходныеТовары.ЕдиницаИзмерения,
	|	ЭДВСИсходныеТовары.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТовары.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТовары.Ссылка.СкладОтправитель
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТоварыВС.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТоварыВС.Ссылка.СкладОтправитель
	|	КОНЕЦ,
	|	ЭДВСИсходныеТоварыВС.Товар,
	|	ЭДВСИсходныеТоварыВС.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСИсходныеТоварыВС.Ссылка.ТипФормы = ЕСТЬNULL(вт_ТаблицаТиповФорм.ТипФормы, ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ПустаяСсылка))
	|				ТОГДА ЭДВСИсходныеТоварыВС.Количество
	|			ИНАЧЕ -ЭДВСИсходныеТоварыВС.Количество
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭДВСИсходныеТоварыВС
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСИсходныеТоварыВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСИсходныеТоварыВС.Товар,
	|	ЭДВСИсходныеТоварыВС.ЕдиницаИзмерения,
	|	ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТоварыВС.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТоварыВС.Ссылка.СкладОтправитель
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСИсходныеТовары.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТовары.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТовары.Ссылка.СкладОтправитель
	|	КОНЕЦ,
	|	ЭДВСИсходныеТовары.Товар,
	|	ЭДВСИсходныеТовары.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСИсходныеТовары.Ссылка.СкладПолучатель = ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	|					ИЛИ ЭДВСИсходныеТовары.Ссылка.СкладОтправитель = ЭДВСИсходныеТовары.Ссылка.СкладПолучатель
	|				ТОГДА 0
	|			ИНАЧЕ -ЭДВСИсходныеТовары.Количество
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ИсходныеТовары КАК ЭДВСИсходныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСИсходныеТовары.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСИсходныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСИсходныеТовары.Товар,
	|	ЭДВСИсходныеТовары.ЕдиницаИзмерения,
	|	ЭДВСИсходныеТовары.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТовары.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТовары.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТовары.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТовары.Ссылка.СкладОтправитель
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТоварыВС.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТоварыВС.Ссылка.СкладОтправитель
	|	КОНЕЦ,
	|	ЭДВСИсходныеТоварыВС.Товар,
	|	ЭДВСИсходныеТоварыВС.ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСИсходныеТоварыВС.Ссылка.СкладПолучатель = ЗНАЧЕНИЕ(Справочник.ВиртуальныеСклады.ПустаяСсылка)
	|					ИЛИ ЭДВСИсходныеТоварыВС.Ссылка.СкладОтправитель = ЭДВСИсходныеТоварыВС.Ссылка.СкладПолучатель
	|				ТОГДА 0
	|			ИНАЧЕ -ЭДВСИсходныеТоварыВС.Количество
	|		КОНЕЦ)
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ИсходныеТоварыВС КАК ЭДВСИсходныеТоварыВС
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТаблицаТиповФорм КАК вт_ТаблицаТиповФорм
	|		ПО ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование = вт_ТаблицаТиповФорм.Документ
	|ГДЕ
	|	ЭДВСИсходныеТоварыВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСИсходныеТоварыВС.Товар,
	|	ЭДВСИсходныеТоварыВС.ЕдиницаИзмерения,
	|	ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование,
	|	ЭДВСИсходныеТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЭДВСИсходныеТоварыВС.Ссылка.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|			ТОГДА ЭДВСИсходныеТоварыВС.Ссылка.СкладПолучатель
	|		ИНАЧЕ ЭДВСИсходныеТоварыВС.Ссылка.СкладОтправитель
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаИсходныеТовары.Документ,
	|	вт_ТаблицаИсходныеТовары.СтруктурноеПодразделение,
	|	вт_ТаблицаИсходныеТовары.Склад,
	|	вт_ТаблицаИсходныеТовары.Товар,
	|	вт_ТаблицаИсходныеТовары.ЕдиницаИзмерения,
	|	СУММА(вт_ТаблицаИсходныеТовары.КоличествоПервичныйДокумент) КАК КоличествоПервичныйДокумент,
	|	СУММА(0) КАК КоличествоЭДВС
	|ПОМЕСТИТЬ вт_ИсходныеТовары
	|ИЗ
	|	вт_ТаблицаИсходныеТовары КАК вт_ТаблицаИсходныеТовары
	|ГДЕ
	|	вт_ТаблицаИсходныеТовары.Документ В(&СписокПервичныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаИсходныеТовары.ЕдиницаИзмерения,
	|	вт_ТаблицаИсходныеТовары.Товар,
	|	вт_ТаблицаИсходныеТовары.Склад,
	|	вт_ТаблицаИсходныеТовары.Документ,
	|	вт_ТаблицаИсходныеТовары.СтруктурноеПодразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	вт_ИсходныеТоварыЭДВС.Документ,
	|	вт_ИсходныеТоварыЭДВС.СтруктурноеПодразделение,
	|	вт_ИсходныеТоварыЭДВС.Склад,
	|	вт_ИсходныеТоварыЭДВС.Товар,
	|	вт_ИсходныеТоварыЭДВС.ЕдиницаИзмерения,
	|	СУММА(0),
	|	СУММА(вт_ИсходныеТоварыЭДВС.КоличествоЭДВС)
	|ИЗ
	|	вт_ИсходныеТоварыЭДВС КАК вт_ИсходныеТоварыЭДВС
	|ГДЕ
	|	(вт_ИсходныеТоварыЭДВС.Документ, вт_ИсходныеТоварыЭДВС.Склад) В
	|			(ВЫБРАТЬ
	|				вт_ТаблицаИсходныеТовары.Документ,
	|				вт_ТаблицаИсходныеТовары.Склад
	|			ИЗ
	|				вт_ТаблицаИсходныеТовары КАК вт_ТаблицаИсходныеТовары)
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ИсходныеТоварыЭДВС.Документ,
	|	вт_ИсходныеТоварыЭДВС.СтруктурноеПодразделение,
	|	вт_ИсходныеТоварыЭДВС.Склад,
	|	вт_ИсходныеТоварыЭДВС.Товар,
	|	вт_ИсходныеТоварыЭДВС.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ИсходныеТовары.Товар,
	|	вт_ИсходныеТовары.ЕдиницаИзмерения,
	|	СУММА(вт_ИсходныеТовары.КоличествоПервичныйДокумент) КАК КоличествоПервичныйДокумент,
	|	СУММА(вт_ИсходныеТовары.КоличествоЭДВС) КАК КоличествоЭДВС,
	|	СУММА(вт_ИсходныеТовары.КоличествоПервичныйДокумент - вт_ИсходныеТовары.КоличествоЭДВС) КАК Отклонение,
	|	вт_ИсходныеТовары.Склад КАК Склад,
	|	вт_ИсходныеТовары.Документ КАК Документ,
	|	вт_ИсходныеТовары.СтруктурноеПодразделение КАК СтруктурноеПодразделение
	|ПОМЕСТИТЬ вт_СгруппированыеИсходныеТовары
	|ИЗ
	|	вт_ИсходныеТовары КАК вт_ИсходныеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ИсходныеТовары.ЕдиницаИзмерения,
	|	вт_ИсходныеТовары.Товар,
	|	вт_ИсходныеТовары.Склад,
	|	вт_ИсходныеТовары.Документ,
	|	вт_ИсходныеТовары.СтруктурноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СгруппированыеИсходныеТовары.Документ КАК Документ,
	|	вт_СгруппированыеИсходныеТовары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	вт_СгруппированыеИсходныеТовары.Склад КАК Склад,
	|	СУММА(ВЫБОР
	|			КОГДА вт_СгруппированыеИсходныеТовары.Отклонение = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьОтклонение
	|ПОМЕСТИТЬ вт_ОтклоненияИсходныеТовары
	|ИЗ
	|	вт_СгруппированыеИсходныеТовары КАК вт_СгруппированыеИсходныеТовары
	|ГДЕ
	|	вт_СгруппированыеИсходныеТовары.Отклонение <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_СгруппированыеИсходныеТовары.Склад,
	|	вт_СгруппированыеИсходныеТовары.Документ,
	|	вт_СгруппированыеИсходныеТовары.СтруктурноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СгруппированыеТовары.Товар,
	|	вт_СгруппированыеТовары.ЕдиницаИзмерения,
	|	вт_СгруппированыеТовары.КоличествоПервичныйДокумент,
	|	вт_СгруппированыеТовары.КоличествоЭДВС,
	|	вт_СгруппированыеТовары.Отклонение,
	|	вт_СгруппированыеТовары.Склад,
	|	вт_СгруппированыеТовары.Документ,
	|	вт_СгруппированыеТовары.СтруктурноеПодразделение
	|ИЗ
	|	вт_СгруппированыеТовары КАК вт_СгруппированыеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СгруппированыеИсходныеТовары.Товар,
	|	вт_СгруппированыеИсходныеТовары.ЕдиницаИзмерения,
	|	вт_СгруппированыеИсходныеТовары.КоличествоПервичныйДокумент,
	|	вт_СгруппированыеИсходныеТовары.КоличествоЭДВС,
	|	вт_СгруппированыеИсходныеТовары.Отклонение,
	|	вт_СгруппированыеИсходныеТовары.Склад,
	|	вт_СгруппированыеИсходныеТовары.Документ,
	|	вт_СгруппированыеИсходныеТовары.СтруктурноеПодразделение
	|ИЗ
	|	вт_СгруппированыеИсходныеТовары КАК вт_СгруппированыеИсходныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_СтатусыОформления.Организация,
	|	вт_СтатусыОформления.Документ КАК Документ,
	|	вт_СтатусыОформления.Склад КАК Склад,
	|	ЕСТЬNULL(ДокументЭДВС.Ссылка, ЗНАЧЕНИЕ(Документ.ЭлектронныйДокументВС.ПустаяСсылка)) КАК ЭлектронныйДокументВС,
	|	ВЫБОР
	|		КОГДА ДокументЭДВС.Проведен
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументЭДВС.ПометкаУдаления
	|					ТОГДА 1
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ДокументЭДВС.Ссылка ЕСТЬ NULL 
	|							ТОГДА 3
	|						ИНАЧЕ 2
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СостояниеДокумента,
	|	ВЫБОР
	|		КОГДА вт_СтатусыОформления.Документ.Проведен
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА вт_СтатусыОформления.Документ.ПометкаУдаления
	|					ТОГДА 1
	|				ИНАЧЕ 2
	|			КОНЕЦ
	|	КОНЕЦ КАК СостояниеПервичногоДокумента,
	|	ДокументЭДВС.ДокументОснование,
	|	ДокументЭДВС.СтруктурноеПодразделение,
	|	ЕСТЬNULL(ДокументЭДВС.ЭДВСОбработан, 0) КАК КоличествоОбработанныхЭДВС,
	|	ВЫБОР
	|		КОГДА ДокументЭДВС.Ссылка ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоЭДВС,
	|	ВЫБОР
	|		КОГДА ДокументЭДВС.Ссылка ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНеОформленныхЭДВС,
	|	ЕСТЬNULL(ДокументЭДВС.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.ПустаяСсылка)) КАК Статус,
	|	ЕСТЬNULL(вт_ОтклоненияТовары.ЕстьОтклонение, 0) КАК КоличествоОтклоненийТовары,
	|	ЕСТЬNULL(вт_ОтклоненияИсходныеТовары.ЕстьОтклонение, 0) КАК КоличествоОтклоненийИсходныеТовары
	|ИЗ
	|	вт_СтатусыОформления КАК вт_СтатусыОформления
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ДокументЭДВС КАК ДокументЭДВС
	|		ПО (ВЫБОР
	|				КОГДА ДокументЭДВС.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ вт_СтатусыОформления.Организация = ДокументЭДВС.Организация
	|			КОНЕЦ)
	|			И вт_СтатусыОформления.Документ = ДокументЭДВС.ДокументОснование
	|			И (вт_СтатусыОформления.Склад = ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(ДокументЭДВС.ДокументОснование) В (&ТипыДокументовСоСкладомПолучателем)
	|					ТОГДА ДокументЭДВС.СкладПолучатель
	|				ИНАЧЕ ДокументЭДВС.СкладОтправитель
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОтклоненияТовары КАК вт_ОтклоненияТовары
	|		ПО вт_СтатусыОформления.Документ = вт_ОтклоненияТовары.Документ
	|			И вт_СтатусыОформления.Склад = вт_ОтклоненияТовары.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОтклоненияИсходныеТовары КАК вт_ОтклоненияИсходныеТовары
	|		ПО вт_СтатусыОформления.Документ = вт_ОтклоненияИсходныеТовары.Документ
	|			И вт_СтатусыОформления.Склад = вт_ОтклоненияИсходныеТовары.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Склад
	|ИТОГИ
	|	СУММА(КоличествоОбработанныхЭДВС),
	|	СУММА(КоличествоЭДВС),
	|	СУММА(КоличествоНеОформленныхЭДВС),
	|	СУММА(КоличествоОтклоненийТовары),
	|	СУММА(КоличествоОтклоненийИсходныеТовары)
	|ПО
	|	Документ,
	|	Склад";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаВводОстатков()
	ТекстЗапроса = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлектронныйДокументВС.Ссылка КАК Ссылка,
	|	ЭлектронныйДокументВС.Проведен КАК Проведен,
	|	ЭлектронныйДокументВС.ПометкаУдаления КАК ПометкаУдаления,
	|	ЭлектронныйДокументВС.Организация КАК Организация,
	|	ЭлектронныйДокументВС.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ЭлектронныйДокументВС.СкладПолучатель КАК СкладПолучатель,
	|	ЭлектронныйДокументВС.СкладОтправитель КАК СкладОтправитель,
	|	ВЫБОР
	|		КОГДА ЭлектронныйДокументВС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.Обработанный)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЭДВСОбработан,
	|	ЭлектронныйДокументВС.Статус,
	|	ЭлектронныйДокументВС.ТипФормы
	|ПОМЕСТИТЬ вт_ДокументЭДВС
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
	|ГДЕ
	|	НЕ ЭлектронныйДокументВС.Статус В (&ИсключаемыеСтатусЭДВС)
	|	И ЭлектронныйДокументВС.Ссылка В(&МассивЭДВС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СкладОтправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Организация КАК Документ,
	|	ТаблицаТовары.СтруктурноеПодразделение КАК СтруктурноеПодразделение,
	|	ТаблицаТовары.СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Товар,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК КоличествоПервичныйДокумент
	|ПОМЕСТИТЬ вт_ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вт_ТаблицаТовары.Склад,
	|	вт_ТаблицаТовары.Товар,
	|	вт_ТаблицаТовары.ЕдиницаИзмерения,
	|	СУММА(вт_ТаблицаТовары.КоличествоПервичныйДокумент) КАК КоличествоПервичныйДокумент,
	|	СУММА(0) КАК КоличествоЭДВС,
	|	вт_ТаблицаТовары.Документ,
	|	вт_ТаблицаТовары.СтруктурноеПодразделение
	|ПОМЕСТИТЬ вт_Товары
	|ИЗ
	|	вт_ТаблицаТовары КАК вт_ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ТаблицаТовары.ЕдиницаИзмерения,
	|	вт_ТаблицаТовары.Товар,
	|	вт_ТаблицаТовары.Склад,
	|	вт_ТаблицаТовары.СтруктурноеПодразделение,
	|	вт_ТаблицаТовары.Документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСТовары.Ссылка.СкладОтправитель,
	|	ЭДВСТовары.Товар,
	|	ЭДВСТовары.ЕдиницаИзмерения,
	|	СУММА(0),
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСТовары.Ссылка.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки)
	|				ТОГДА ЭДВСТовары.Количество
	|			ИНАЧЕ -ЭДВСТовары.Количество
	|		КОНЕЦ),
	|	ЭДВСТовары.Ссылка.Организация,
	|	ЭДВСТовары.Ссылка.СтруктурноеПодразделение
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.Товары КАК ЭДВСТовары
	|ГДЕ
	|	ЭДВСТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСТовары.Товар,
	|	ЭДВСТовары.ЕдиницаИзмерения,
	|	ЭДВСТовары.Ссылка.СкладОтправитель,
	|	ЭДВСТовары.Ссылка.СтруктурноеПодразделение,
	|	ЭДВСТовары.Ссылка.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭДВСТоварыВС.Ссылка.СкладОтправитель,
	|	ЭДВСТоварыВС.Товар,
	|	ЭДВСТоварыВС.ЕдиницаИзмерения,
	|	СУММА(0),
	|	СУММА(ВЫБОР
	|			КОГДА ЭДВСТоварыВС.Ссылка.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки)
	|				ТОГДА ЭДВСТоварыВС.Количество
	|			ИНАЧЕ -ЭДВСТоварыВС.Количество
	|		КОНЕЦ),
	|	ЭДВСТоварыВС.Ссылка.Организация,
	|	ЭДВСТоварыВС.Ссылка.СтруктурноеПодразделение
	|ИЗ
	|	Документ.ЭлектронныйДокументВС.ТоварыВС КАК ЭДВСТоварыВС
	|ГДЕ
	|	ЭДВСТоварыВС.Ссылка В
	|			(ВЫБРАТЬ
	|				вт_ДокументЭДВС.Ссылка
	|			ИЗ
	|				вт_ДокументЭДВС КАК вт_ДокументЭДВС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДВСТоварыВС.Товар,
	|	ЭДВСТоварыВС.ЕдиницаИзмерения,
	|	ЭДВСТоварыВС.Ссылка.СкладОтправитель,
	|	ЭДВСТоварыВС.Ссылка.СтруктурноеПодразделение,
	|	ЭДВСТоварыВС.Ссылка.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Товары.Склад,
	|	вт_Товары.Товар,
	|	вт_Товары.ЕдиницаИзмерения,
	|	СУММА(вт_Товары.КоличествоПервичныйДокумент) КАК КоличествоПервичныйДокумент,
	|	СУММА(вт_Товары.КоличествоЭДВС) КАК КоличествоЭДВС,
	|	СУММА(вт_Товары.КоличествоПервичныйДокумент - вт_Товары.КоличествоЭДВС) КАК Отклонение,
	|	вт_Товары.Документ,
	|	вт_Товары.СтруктурноеПодразделение
	|ПОМЕСТИТЬ вт_СгруппированыеТовары
	|ИЗ
	|	вт_Товары КАК вт_Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Товары.ЕдиницаИзмерения,
	|	вт_Товары.Товар,
	|	вт_Товары.Склад,
	|	вт_Товары.СтруктурноеПодразделение,
	|	вт_Товары.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СгруппированыеТовары.Склад КАК Склад,
	|	СУММА(ВЫБОР
	|			КОГДА вт_СгруппированыеТовары.Отклонение = 0
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ЕстьОтклонение
	|ПОМЕСТИТЬ вт_ОтклоненияТовары
	|ИЗ
	|	вт_СгруппированыеТовары КАК вт_СгруппированыеТовары
	|ГДЕ
	|	вт_СгруппированыеТовары.Отклонение <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_СгруппированыеТовары.Склад
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_СгруппированыеТовары.Склад,
	|	вт_СгруппированыеТовары.Товар,
	|	вт_СгруппированыеТовары.ЕдиницаИзмерения,
	|	вт_СгруппированыеТовары.КоличествоПервичныйДокумент,
	|	вт_СгруппированыеТовары.КоличествоЭДВС,
	|	вт_СгруппированыеТовары.Отклонение,
	|	вт_СгруппированыеТовары.СтруктурноеПодразделение,
	|	вт_СгруппированыеТовары.Документ
	|ИЗ
	|	вт_СгруппированыеТовары КАК вт_СгруппированыеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументЭДВС.Организация,
	|	ДокументЭДВС.СтруктурноеПодразделение,
	|	ДокументЭДВС.Организация КАК Документ,
	|	ДокументЭДВС.СкладОтправитель КАК Склад,
	|	ДокументЭДВС.Ссылка.Дата КАК ДатаДокумента,
	|	ЕСТЬNULL(ДокументЭДВС.Ссылка, ЗНАЧЕНИЕ(Документ.ЭлектронныйДокументВС.ПустаяСсылка)) КАК ЭлектронныйДокументВС,
	|	ДокументЭДВС.Ссылка.Номер КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА ДокументЭДВС.Проведен
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДокументЭДВС.ПометкаУдаления
	|					ТОГДА 1
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ДокументЭДВС.Ссылка ЕСТЬ NULL 
	|							ТОГДА 3
	|						ИНАЧЕ 2
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СостояниеДокумента,
	|	3 КАК СостояниеПервичногоДокумента,
	|	ЕСТЬNULL(ДокументЭДВС.ЭДВСОбработан, 0) КАК КоличествоОбработанныхЭДВС,
	|	ВЫБОР
	|		КОГДА ДокументЭДВС.Ссылка ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоЭДВС,
	|	ВЫБОР
	|		КОГДА ДокументЭДВС.Ссылка ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНеОформленныхЭДВС,
	|	ЕСТЬNULL(ДокументЭДВС.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыУТТН.ПустаяСсылка)) КАК Статус,
	|	ЕСТЬNULL(вт_ОтклоненияТовары.ЕстьОтклонение, 0) КАК КоличествоОтклоненийТовары,
	|	0 КАК КоличествоОтклоненийИсходныеТовары
	|ИЗ
	|	вт_ДокументЭДВС КАК ДокументЭДВС
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОтклоненияТовары КАК вт_ОтклоненияТовары
	|		ПО ДокументЭДВС.СкладОтправитель = вт_ОтклоненияТовары.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ,
	|	Склад
	|ИТОГИ
	|	СУММА(КоличествоОбработанныхЭДВС),
	|	СУММА(КоличествоЭДВС),
	|	СУММА(КоличествоНеОформленныхЭДВС),
	|	СУММА(КоличествоОтклоненийТовары),
	|	СУММА(КоличествоОтклоненийИсходныеТовары)
	|ПО
	|	Документ,
	|	СтруктурноеПодразделение,
	|	Склад";
	
	Возврат ТекстЗапроса;
КонецФункции	
	
&НаСервере
Процедура ЗаполнитьДерево(ПараметрыСоздания = Неопределено, ОбновлениеДанных = Ложь)
	
	Если ВызванаИзПомощникаПерехода Тогда
		ПолучитьТаблицыДанныхДляЗаполненияЭДВС_ВводОстатков(ПараметрыСоздания_ВводОстатков)
	Иначе	
		ПолучитьТаблицыДанныхДляЗаполненияЭДВС();
	КонецЕсли;
	
	ТаблицаДокументаИсходныеТовары 	= ПолучитьИзВременногоХранилища(АдресХранилищаТаблицыИсходныеТовары);
	ТаблицаДокументаТовары			= ПолучитьИзВременногоХранилища(АдресХранилищаТаблицыТовары);

	Запрос = Новый Запрос;
	
	Если ВызванаИзПомощникаПерехода Тогда
		Запрос.Текст = ПолучитьТекстЗапросаВводОстатков();
	Иначе	
		Запрос.Текст = ПолучитьТекстЗапросаОсновныеДокументы();
	КонецЕсли;	
	
	ИсключаемыеСтатусЭДВС = Новый Массив;
	ИсключаемыеСтатусЭДВС.Добавить(Перечисления.СтатусыУТТН.Ошибочный);
	
	Запрос.УстановитьПараметр("СписокПервичныхДокументов"			, СписокПервичныхДокументов);
	Запрос.УстановитьПараметр("ТипыДокументовСоСкладомПолучателем"	, ТипыДокументовСоСкладомПолучателем);
	Запрос.УстановитьПараметр("ИсключаемыеСтатусЭДВС"				, ИсключаемыеСтатусЭДВС);
	Запрос.УстановитьПараметр("ТаблицаТовары"						, ТаблицаДокументаТовары);
	Запрос.УстановитьПараметр("ТаблицаИсходныеТовары"				, ТаблицаДокументаИсходныеТовары);
	Запрос.УстановитьПараметр("НачалоПериода"						, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"						, КонецПериода);
	
	Если ВызванаИзПомощникаПерехода Тогда
		Запрос.УстановитьПараметр("МассивЭДВС", ПереданныйМассивЭДВС);
	КонецЕсли;	
	
	Если СписокПервичныхДокументов = Неопределено Тогда
		Возврат
	КонецЕсли;	
	
	ТаблицаТиповФорм.Очистить();
	Для Каждого СтрокаМассива Из СписокПервичныхДокументов Цикл
		НоваяСтрока = ТаблицаТиповФорм.Добавить();
		НоваяСтрока.Документ = СтрокаМассива.Значение;
		НоваяСтрока.ТипФормы = ВССерверПереопределяемый.ТипФормыПоТипуДокумента(ТипЗнч(СтрокаМассива.Значение));
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("ТаблицаТиповФорм", ТаблицаТиповФорм.Выгрузить());
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РезультатЗапроса 	= Запрос.ВыполнитьПакет();
	КоличествоПакетов 	= РезультатЗапроса.Количество();
	РезультатДляДерева 	= РезультатЗапроса[КоличествоПакетов-1];
	
	Если ВызванаИзПомощникаПерехода Тогда
		ЗначениеВРеквизитФормы(РезультатЗапроса[КоличествоПакетов-2].Выгрузить(), "ТаблицаТовары");
	Иначе	
		ЗначениеВРеквизитФормы(РезультатЗапроса[КоличествоПакетов-3].Выгрузить(), "ТаблицаТовары");
		ЗначениеВРеквизитФормы(РезультатЗапроса[КоличествоПакетов-2].Выгрузить(), "ТаблицаИсходныеТовары");
	КонецЕсли;
	
	ВыборкаЗапросаУровень1 = РезультатДляДерева.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Дерево = РеквизитФормыВЗначение("ДеревоДокументов");
	Дерево.Строки.Очистить();
	
	Пока ВыборкаЗапросаУровень1.Следующий() Цикл
		СтрокаУровня1 					 = Дерево.Строки.Добавить();
		СтрокаУровня1.ЭлементДерева 	 = ВыборкаЗапросаУровень1.Документ;
		СтрокаУровня1.СостояниеДокумента = ВыборкаЗапросаУровень1.СостояниеПервичногоДокумента;
		
		Если ВыборкаЗапросаУровень1.КоличествоОбработанныхЭДВС = 0 И ВыборкаЗапросаУровень1.КоличествоЭДВС = 0 Тогда
			СтрокаУровня1.Команда = "Оформить";
		ИначеЕсли ВыборкаЗапросаУровень1.КоличествоОбработанныхЭДВС = 0 И ВыборкаЗапросаУровень1.КоличествоЭДВС > 0 Тогда 
			СтрокаУровня1.Команда = "Переоформить";
		ИначеЕсли ВыборкаЗапросаУровень1.КоличествоОбработанныхЭДВС > 0 И ВыборкаЗапросаУровень1.КоличествоОбработанныхЭДВС = ВыборкаЗапросаУровень1.КоличествоЭДВС  Тогда	
			СтрокаУровня1.Команда = "Отменить";
		КонецЕсли;	
		
		ВыборкаЗапросаУровень2 = ВыборкаЗапросаУровень1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗапросаУровень2.Следующий() Цикл
			СтрокаУровня2 					 = СтрокаУровня1.Строки.Добавить();
			СтрокаУровня2.ЭлементДерева 	 = ВыборкаЗапросаУровень2.СтруктурноеПодразделение;
			СтрокаУровня2.СостояниеДокумента = ВыборкаЗапросаУровень2.СостояниеПервичногоДокумента;
			
			Если ВыборкаЗапросаУровень2.КоличествоОбработанныхЭДВС = 0 И ВыборкаЗапросаУровень2.КоличествоЭДВС = 0 Тогда
				СтрокаУровня2.Команда = "Оформить";
			ИначеЕсли ВыборкаЗапросаУровень2.КоличествоОбработанныхЭДВС = 0 И ВыборкаЗапросаУровень2.КоличествоЭДВС > 0 Тогда 
				СтрокаУровня2.Команда = "Переоформить";
			ИначеЕсли ВыборкаЗапросаУровень2.КоличествоОбработанныхЭДВС > 0 И ВыборкаЗапросаУровень2.КоличествоОбработанныхЭДВС = ВыборкаЗапросаУровень2.КоличествоЭДВС  Тогда
				СтрокаУровня2.Команда = "Отменить";
			КонецЕсли;	
			
			ВыборкаЗапросаУровень3 = ВыборкаЗапросаУровень2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЗапросаУровень3.Следующий() Цикл
				СтрокаУровня3 					 = СтрокаУровня2.Строки.Добавить();
				СтрокаУровня3.ЭлементДерева 	 = ВыборкаЗапросаУровень3.Склад;
				СтрокаУровня3.СостояниеДокумента = ?(ВыборкаЗапросаУровень3.Склад.ПометкаУдаления,1,3);
				
				Если ВыборкаЗапросаУровень3.КоличествоОбработанныхЭДВС = 0 И ВыборкаЗапросаУровень3.КоличествоЭДВС = 0 Тогда
					СтрокаУровня3.Команда = "Оформить";
				ИначеЕсли ВыборкаЗапросаУровень3.КоличествоОбработанныхЭДВС = 0 И ВыборкаЗапросаУровень3.КоличествоЭДВС > 0 Тогда 
					СтрокаУровня3.Команда = "Переоформить";
				ИначеЕсли ВыборкаЗапросаУровень3.КоличествоОбработанныхЭДВС > 0 И ВыборкаЗапросаУровень3.КоличествоОбработанныхЭДВС = ВыборкаЗапросаУровень3.КоличествоЭДВС  Тогда
					СтрокаУровня3.Команда = "Отменить";
				КонецЕсли;	
				
				ВыборкаЗапросаУровень4 = ВыборкаЗапросаУровень3.Выбрать();
				Пока ВыборкаЗапросаУровень4.Следующий() Цикл
					СтрокаУровня4 					= СтрокаУровня3.Строки.Добавить();
					СтрокаУровня4.ЭлементДерева 	= ВыборкаЗапросаУровень4.ЭлектронныйДокументВС;
					СтрокаУровня4.СостояниеДокумента= ВыборкаЗапросаУровень4.СостояниеДокумента;
					СтрокаУровня4.Статус			= ВыборкаЗапросаУровень4.Статус;
					СтрокаУровня4.Команда 			= ?(ВыборкаЗапросаУровень4.КоличествоОбработанныхЭДВС > 0, "Отменить", "");
				КонецЦикла;	
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоДокументов");
	
КонецПроцедуры	

&НаСервере
Процедура ПолучитьТаблицыДанныхДляЗаполненияЭДВС()
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("МассивДокументов"	 	, СписокПервичныхДокументов.ВыгрузитьЗначения());
	ПараметрыСоздания.Вставить("МассивВидовДокумента"	, СписокВидовПервичныхДокументов.ВыгрузитьЗначения());
	ПараметрыСоздания.Вставить("ДатаОформления"		 	, ДатаОформления);
	
	ПараметрыСоздания.Вставить("СпособЗаполненияЦены"	, СпособЗаполненияЦены);
	ПараметрыСоздания.Вставить("ТипЦены"				, ТипЦены);
	ПараметрыСоздания.Вставить("ЗначениеЦены"			, ЗначениеЦены);
	ПараметрыСоздания.Вставить("ЗаполнятьЦены"			, Ложь);
	ПараметрыСоздания.Вставить("ТипыФормЦены"			, ВСВызовСервера.ТипыФормЭДВСВКоторыхУстанавливаютсяЦены());
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	
	ПараметрыЗаполненияЭДВС 		= ОбработкаОбменЭСФ.ПолучитьПараметрыЗаполненияЭДВС(ПараметрыСоздания);
	ТаблицыДанныхДляЗаполненияЭДВС 	= ОбработкаОбменЭСФ.ПодготовитьТаблицыДанныхДляЗаполненияЭДВС(ПараметрыЗаполненияЭДВС);

	АдресХранилищаТаблицыРеквизиты		= ПоместитьВоВременноеХранилище(ТаблицыДанныхДляЗаполненияЭДВС.ТаблицаРеквизитов	 , Новый УникальныйИдентификатор);
	АдресХранилищаТаблицыТовары 		= ПоместитьВоВременноеХранилище(ТаблицыДанныхДляЗаполненияЭДВС.ТаблицаТовары		 , Новый УникальныйИдентификатор);
	АдресХранилищаТаблицыИсходныеТовары = ПоместитьВоВременноеХранилище(ТаблицыДанныхДляЗаполненияЭДВС.ТаблицаИсходныеТовары , Новый УникальныйИдентификатор);
	
КонецПроцедуры	

&НаСервере
Процедура ПолучитьТаблицыДанныхДляЗаполненияЭДВС_ВводОстатков(ПараметрыСоздания)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	
	ТаблицыДанныхДляЗаполненияЭДВС = ОбработкаОбменЭСФ.ПодготовитьТаблицыДанныхДляЗаполненияЭДВСДляЗаполненияВводаНачальныхОстатков(ПараметрыСоздания);
	
	АдресХранилищаТаблицыРеквизиты		= ПоместитьВоВременноеХранилище(ТаблицыДанныхДляЗаполненияЭДВС.ТаблицаРеквизитов	, Новый УникальныйИдентификатор);
	АдресХранилищаТаблицыТовары 		= ПоместитьВоВременноеХранилище(ТаблицыДанныхДляЗаполненияЭДВС.ТаблицаТовары		, Новый УникальныйИдентификатор);
	АдресХранилищаТаблицыИсходныеТовары = ПоместитьВоВременноеХранилище(ТаблицыДанныхДляЗаполненияЭДВС.ТаблицаИсходныеТовары, Новый УникальныйИдентификатор);
	
КонецПроцедуры	

&НаСервере
Процедура ПерезаполнитьТаблицыСравненияДокументов(ПараметрыОтбора)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Документ,
	|	ТаблицаТовары.СтруктурноеПодразделение,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Товар,
	|	ТаблицаТовары.ЕдиницаИзмерения,
	|	ТаблицаТовары.КоличествоПервичныйДокумент,
	|	ТаблицаТовары.КоличествоЭДВС,
	|	ТаблицаТовары.Отклонение
	|ПОМЕСТИТЬ вт_ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Документ = &Документ
	|	И ТаблицаТовары.СтруктурноеПодразделение = &СтруктурноеПодразделение
	|	И ТаблицаТовары.Склад = &Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаИсходныеТовары.Документ,
	|	ТаблицаИсходныеТовары.СтруктурноеПодразделение,
	|	ТаблицаИсходныеТовары.Склад,
	|	ТаблицаИсходныеТовары.Товар,
	|	ТаблицаИсходныеТовары.ЕдиницаИзмерения,
	|	ТаблицаИсходныеТовары.КоличествоПервичныйДокумент,
	|	ТаблицаИсходныеТовары.КоличествоЭДВС,
	|	ТаблицаИсходныеТовары.Отклонение
	|ПОМЕСТИТЬ вт_ТаблицаИсходныеТовары
	|ИЗ
	|	&ТаблицаИсходныеТовары КАК ТаблицаИсходныеТовары
	|ГДЕ
	|	ТаблицаИсходныеТовары.Документ = &Документ
	|	И ТаблицаИсходныеТовары.СтруктурноеПодразделение = &СтруктурноеПодразделение
	|	И ТаблицаИсходныеТовары.Склад = &Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ТаблицаТовары.Склад КАК Склад,
	|	вт_ТаблицаТовары.СтруктурноеПодразделение,
	|	вт_ТаблицаТовары.Товар,
	|	вт_ТаблицаТовары.ЕдиницаИзмерения,
	|	вт_ТаблицаТовары.КоличествоПервичныйДокумент,
	|	вт_ТаблицаТовары.КоличествоЭДВС,
	|	вт_ТаблицаТовары.Отклонение
	|ИЗ
	|	вт_ТаблицаТовары КАК вт_ТаблицаТовары
	|ГДЕ
	|	вт_ТаблицаТовары.Отклонение <> 0
	|ИТОГИ ПО
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ТаблицаИсходныеТовары.Склад КАК Склад,
	|	вт_ТаблицаИсходныеТовары.СтруктурноеПодразделение,
	|	вт_ТаблицаИсходныеТовары.Товар,
	|	вт_ТаблицаИсходныеТовары.ЕдиницаИзмерения,
	|	вт_ТаблицаИсходныеТовары.КоличествоПервичныйДокумент,
	|	вт_ТаблицаИсходныеТовары.КоличествоЭДВС,
	|	вт_ТаблицаИсходныеТовары.Отклонение
	|ИЗ
	|	вт_ТаблицаИсходныеТовары КАК вт_ТаблицаИсходныеТовары
	|ГДЕ
	|	вт_ТаблицаИсходныеТовары.Отклонение <> 0
	|ИТОГИ ПО
	|	Склад";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТаблицаТовары"			, РеквизитФормыВЗначение("ТаблицаТовары"));
	Запрос.УстановитьПараметр("ТаблицаИсходныеТовары"	, РеквизитФормыВЗначение("ТаблицаИсходныеТовары"));
	Запрос.УстановитьПараметр("Склад"					, ПараметрыОтбора.Склад);
	Запрос.УстановитьПараметр("Документ"				, ПараметрыОтбора.Документ);
	Запрос.УстановитьПараметр("СтруктурноеПодразделение", ПараметрыОтбора.СтруктурноеПодразделение);
	
	Элементы.ИсходныеТовары.Видимость = ПараметрыОтбора.ЕстьИсходныеТовары;
	
	Если Не ОтображатьТолькоОтклонения Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ГДЕ
													|	вт_ТаблицаТовары.Отклонение <> 0", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ГДЕ
		                                            |	вт_ТаблицаИсходныеТовары.Отклонение <> 0", "");	
	КонецЕсли;
	
	Если ПараметрыОтбора.Склад = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ТаблицаТовары.Склад = &Склад", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ТаблицаИсходныеТовары.Склад = &Склад", "");	
	КонецЕсли;

	Если ПараметрыОтбора.СтруктурноеПодразделение = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ТаблицаТовары.СтруктурноеПодразделение = &СтруктурноеПодразделение", "");	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ТаблицаИсходныеТовары.СтруктурноеПодразделение = &СтруктурноеПодразделение", "");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;

	РезультатЗапроса  = Запрос.ВыполнитьПакет();
	КоличествоПакетов = РезультатЗапроса.Количество();
	
	ЗначениеВРеквизитФормы(РезультатЗапроса[КоличествоПакетов-2].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам), "Товары");
	ЗначениеВРеквизитФормы(РезультатЗапроса[КоличествоПакетов-1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам), "ИсходныеТовары");
	
КонецПроцедуры	

#КонецОбласти

#Область ПроведениеОтменаПроведенияЗаполнениеЭДВС

&НаСервере
Процедура ПровестиНаСервере(МассивДокументов)
	
	Для Каждого ЭлементМассив Из МассивДокументов Цикл
		ЭДВС = ЭлементМассив.ПолучитьОбъект();
		Попытка 
			ЭДВС.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстСообщения = НСтр("ru = 'При проведении документа ""%1"" произошла ошибка: %2'");
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ПодробноеПредставлениеОшибки);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеНаСервере(МассивДокументов)
	
	Для Каждого ЭлементМассив Из МассивДокументов Цикл
		ЭДВС = ЭлементМассив.ПолучитьОбъект();
		Попытка 
			ЭДВС.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Исключение
			ТекстСообщения = НСтр("ru = 'При отмене проведения документа ""%1"" произошла ошибка: %2'");
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ПодробноеПредставлениеОшибки);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументЭДВС(ЭДВС, ЭлементМассива, Отказ) 
	//Заполняем шапку документа
	НомерДокумента 	= ЭДВС.Номер;
	ДатаДокумента	= ЭДВС.Дата;	
	ЗаполнитьЗначенияСвойств(ЭДВС,ЭлементМассива.Реквизиты[0]);
	
	//Если дата документа не изменилась то востанавливаем старый номер
	Если ЗначениеЗаполнено(НомерДокумента) И НачалоДня(ДатаДокумента) = НачалоДня(ЭДВС.Дата) Тогда
		ЭДВС.Номер = НомерДокумента;
	КонецЕсли;	
	
	ЭДВС.Товары.Очистить();
	ЭДВС.ТоварыВС.Очистить();
	ЭДВС.ИсходныеТовары.Очистить();
	ЭДВС.ИсходныеТоварыВС.Очистить();
	
	//Заполняем табличную часть "Товары"
	Для Каждого СтрокаТЧ Из ЭлементМассива.Товары Цикл
		НоваяСтрокаТЧ = ЭДВС.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,СтрокаТЧ);
	КонецЦикла;	
	
	//Заполняем табличную часть "Товары ВС"
	Для Каждого СтрокаТЧ Из ЭлементМассива.ТоварыВС Цикл
		НоваяСтрокаТЧ = ЭДВС.ТоварыВС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,СтрокаТЧ);
	КонецЦикла;	
	
	//Заполняем табличную часть "Исходные товары"
	Для Каждого СтрокаТЧ Из ЭлементМассива.ИсходныеТовары Цикл
		НоваяСтрокаТЧ = ЭДВС.ИсходныеТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,СтрокаТЧ);
	КонецЦикла;	
	
	//Заполняем табличную часть "Исходные товары ВС"
	Для Каждого СтрокаТЧ Из ЭлементМассива.ИсходныеТоварыВС Цикл
		НоваяСтрокаТЧ = ЭДВС.ИсходныеТоварыВС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,СтрокаТЧ);
	КонецЦикла;	
	
	Попытка 
		ЭДВС.УстановитьВремя();
		ЭДВС.Записать(РежимЗаписиДокумента.Запись);
		Если ЭДВС.ПометкаУдаления Тогда
			ЭДВС.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;	
	Исключение
		ТекстСообщения = НСтр("ru = 'При записи документа ""%1"" произошла ошибка: %2'");
		ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ПодробноеПредставлениеОшибки);
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	Если ПроводитьСозданныеДокументы  И Не ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().ЗапрещеноПроводитьЭДВС(ЭДВС) Тогда
		Попытка 
			ЭДВС.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ТекстСообщения = НСтр("ru = 'При проведении документа ""%1"" произошла ошибка: %2. Выполнение обработки ввода прервано!!!'");
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения, ЭДВС, ПодробноеПредставлениеОшибки);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОформитьЭДВС

&НаКлиенте
Процедура ОформитьДокументы()
	
	ПараметрыОформления = ПолучитьПараметрыОформления();
	Если ПараметрыОформления = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Склад 	= ПараметрыОформления.Склад;
	Документ= ПараметрыОформления.Документ;
	
	МассивДокументовПриход		= Новый Массив;
	МассивДокументовЭСФ			= Новый Массив;
	МассивДокументовРасходПриход= Новый Массив;
	МассивДокументовРасход		= Новый Массив;
	
	МассивВидовДокументаПриход		= Новый Массив;
	МассивВидовДокументаЭСФ			= Новый Массив;
	МассивВидовДокументаРасходПриход= Новый Массив;
	МассивВидовДокументаРасход		= Новый Массив;
	МассивСкладовДокумента			= Новый Массив;
	
	СоответсвиеДляОтбораПоСкладу = Новый Соответствие;
	
	МассивВидовДвижений = Новый Массив;
	МассивВидовДвижений.Добавить("Приход");
	МассивВидовДвижений.Добавить("ЭСФ");
	МассивВидовДвижений.Добавить("РасходПриход");
	МассивВидовДвижений.Добавить("Расход");
	
	Для Каждого СтрокаДокумента из ДеревоДокументов.ПолучитьЭлементы() Цикл	
		Если СтрокаДокумента.ЭлементДерева = Документ Тогда
			Для Каждого СтрокаСклада из СтрокаДокумента.ПолучитьЭлементы() Цикл
				Если Склад = Неопределено ИЛИ СтрокаСклада.ЭлементДерева = Склад Тогда
					Для Каждого СтрокаЭДВС из СтрокаСклада.ПолучитьЭлементы() Цикл
						Если Не ЗначениеЗаполнено(СтрокаЭДВС.ЭлементДерева)  Тогда
							МассивСкладовДокумента.Добавить(СтрокаСклада.ЭлементДерева);	
							Прервать;
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;	
	
	Если МассивСкладовДокумента.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ТипДокумента = ТипЗнч(Документ);
	
	СоответствиеТипДокументаВидДвижения = ВСКлиентСерверПереопределяемый.ПолучитьСоответствиеТипДокументаВидДвижения();
	ВидДвижения =  СоответствиеТипДокументаВидДвижения.Получить(ТипДокумента);
	
	Если ВидДвижения = Неопределено Тогда
		 Возврат;
	КонецЕсли;
	
	Если ВидДвижения = "Приход" Тогда
		МассивВидовДокумента 	= МассивВидовДокументаПриход;
		МассивДокументов		= МассивДокументовПриход;
	ИначеЕсли ВидДвижения = "ЭСФ" Тогда
		МассивВидовДокумента 	= МассивВидовДокументаЭСФ;
		МассивДокументов		= МассивДокументовЭСФ;
	ИначеЕсли ВидДвижения = "РасходПриход" Тогда
		МассивВидовДокумента 	= МассивВидовДокументаРасходПриход;
		МассивДокументов		= МассивДокументовРасходПриход;
	Иначе
		МассивВидовДокумента 	= МассивВидовДокументаРасход;
		МассивДокументов		= МассивДокументовРасход;
	КонецЕсли;	
	
	МассивВидовДокумента.Добавить(ТипДокумента);
	МассивДокументов.Добавить(Документ);
	
	СоответсвиеДляОтбораПоСкладу.Вставить(Документ, ?(МассивСкладовДокумента.Количество() > 0, МассивСкладовДокумента, Неопределено));

	СоответсвиеМассивовДокументов = Новый Соответствие;
	СоответсвиеМассивовДокументов.Вставить("Приход"			, МассивДокументовПриход);
	СоответсвиеМассивовДокументов.Вставить("ЭСФ"			, МассивДокументовЭСФ);
	СоответсвиеМассивовДокументов.Вставить("РасходПриход"	, МассивДокументовРасходПриход);
	СоответсвиеМассивовДокументов.Вставить("Расход"			, МассивДокументовРасход);
	
	СоответсвиеМассивовВидовДокумента = Новый Соответствие;
	СоответсвиеМассивовВидовДокумента.Вставить("Приход"			, МассивВидовДокументаПриход);
	СоответсвиеМассивовВидовДокумента.Вставить("ЭСФ"			, МассивВидовДокументаЭСФ);
	СоответсвиеМассивовВидовДокумента.Вставить("РасходПриход"	, МассивВидовДокументаРасходПриход);
	СоответсвиеМассивовВидовДокумента.Вставить("Расход"			, МассивВидовДокументаРасход);
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("СоответсвиеМассивовДокументов"		, СоответсвиеМассивовДокументов);
	ПараметрыСоздания.Вставить("СоответсвиеМассивовВидовДокумента"	, СоответсвиеМассивовВидовДокумента);
	ПараметрыСоздания.Вставить("МассивВидовДвижений"				, МассивВидовДвижений);
	ПараметрыСоздания.Вставить("СоответсвиеДляОтбораПоСкладу"		, СоответсвиеДляОтбораПоСкладу);
	ПараметрыСоздания.Вставить("ФормироватьСписокДокументов" 		, Истина);
	
	ПараметрыЗаполненияЭДВС = ПолучитьПараметрыЗаполненияЭДВС(ПараметрыСоздания);
	
	ОформитьДокументыНаСервере(ПараметрыЗаполненияЭДВС);
	
	ОбновитьДанныеФормы();
КонецПроцедуры

&НаСервере
Процедура ОформитьДокументыНаСервере(ПараметрыСоздания)
	
	СписокЭДВС.ЗагрузитьЗначения(ЭСФСерверПовтИсп.ОбработкаОбменЭСФ().СоздатьСписокЭлектронныхДокументовВС(ПараметрыСоздания));
	
	Элементы.НадписьСписокСозданныхЭДВС.Видимость = СписокЭДВС.Количество() <> 0;
КонецПроцедуры

#КонецОбласти

#Область ПереоформитьЭДВС

&НаКлиенте
Процедура Переоформить()
	
	ПараметрыПереоформления = ПолучитьПараметрыОформления();
	
	Если ПараметрыПереоформления = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если ПараметрыПереоформления.ПереоформлятьПоСкладу Тогда
		ПереоформитьНаСервере(ПараметрыПереоформления);
	ИначеЕсли ПараметрыПереоформления.ПереоформлятьПоПервичномуДокументу Тогда
		ПереоформитьНаСервере(ПараметрыПереоформления);
		ОформитьДокументы();
	Иначе
		Возврат
	КонецЕсли;	
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПереоформитьНаСервере(ПараметрыПереоформления)
	
	ОбработкаОбменЭСФ = ЭСФСерверПовтИсп.ОбработкаОбменЭСФ();
	
	Документ 	 = ПараметрыПереоформления.Документ;
	Склад		 = ПараметрыПереоформления.Склад;
	
	МассивДокументов 	 = Новый Массив;
	МассивВидовДокумента = Новый Массив;
	МассивСкладов		 = Новый Массив;
	
	МассивДокументов.Добавить(Документ);
	МассивВидовДокумента.Добавить(ТипЗнч(Документ));
	
	СоответсвиеДляОтбораПоСкладу= Новый Соответствие;
	ПараметрыСоздания 			= Новый Структура;
	
	Если ВызванаИзПомощникаПерехода Тогда
		Запрос 		 = Новый Запрос;
		ТекстЗапроса = 	
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектронныйДокументВС.Ссылка КАК ЭДВС,
		|	ЭлектронныйДокументВС.СкладОтправитель КАК Склад,
		|	ЭлектронныйДокументВС.Организация,
		|	Ложь КАК Использован
		|ИЗ
		|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
		|ГДЕ
		|	ЭлектронныйДокументВС.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЭлектронныйДокументВС.Ссылка В(&МассивЭДВС)		
		|	%ТекстОтбораПоскладу
		|	И ЭлектронныйДокументВС.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.Остатки)";
		
		Запрос.УстановитьПараметр("ДатаНачала"		, НачалоДня(ДатаПереходаНаУчетТоваровВС - 1) );
		Запрос.УстановитьПараметр("ДатаОкончания"	, КонецДня(ДатаПереходаНаУчетТоваровВС - 1));
		Запрос.УстановитьПараметр("МассивЭДВС"		, ПараметрыПереоформления.МассивЭДВС);
		
		ПараметрыСоздания.Вставить("ДатаНачала"		, НачалоДня(ДатаПереходаНаУчетТоваровВС - 1));
		ПараметрыСоздания.Вставить("ДатаОкончания"	, КонецДня(ДатаПереходаНаУчетТоваровВС - 1));
		
		ПараметрыСоздания.Вставить("ЗаполнятьПоТоварамОрганизации"	, ЗаполнятьПоТоварамОрганизации);
		ПараметрыСоздания.Вставить("ДатаПереходаНаУчетТоваровВС"	, НачалоДня(ДатаПереходаНаУчетТоваровВС));
		ПараметрыСоздания.Вставить("ПоДвижениямДокумента"			, Ложь) ;
		
	Иначе	
		Запрос 		 = Новый Запрос;
		ТекстЗапроса = 	
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭлектронныйДокументВС.Ссылка КАК ЭДВС,
		|	ВЫБОР
		|		КОГДА ЭлектронныйДокументВС.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
		|				И ЭлектронныйДокументВС.Организация <> ЭлектронныйДокументВС.ОрганизацияПолучатель
		|			ТОГДА ЭлектронныйДокументВС.СкладПолучатель
		|		ИНАЧЕ ЭлектронныйДокументВС.СкладОтправитель
		|	КОНЕЦ КАК Склад,
		|	Ложь КАК Использован
		|ИЗ
		|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
		|ГДЕ
		|	ЭлектронныйДокументВС.ДокументОснование = &Документ
		|	%ТекстОтбораПоскладу
		|	И ЭлектронныйДокументВС.ВидДетализации <> ЗНАЧЕНИЕ(Перечисление.ВидДетализации.КонвертацияМеждуЕИ)";
		
		ДатаДокумента = Документ.Дата;
		ПараметрыСоздания.Вставить("ДатаНачала"		, НачалоДня(ДатаДокумента));
		ПараметрыСоздания.Вставить("ДатаОкончания"	, КонецДня(ДатаДокумента));
		
	КонецЕсли;
	
	Если Склад = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстОтбораПоскладу", "");
	ИначеЕсли ВызванаИзПомощникаПерехода Тогда
		
		Если Склад = Справочники.ВиртуальныеСклады.ПустаяСсылка() Тогда
			МассивСкладов = ПолучитьМассивСкладов(ПараметрыПереоформления);
			ТекстЗапроса  = СтрЗаменить(ТекстЗапроса, "%ТекстОтбораПоскладу", "И ЭлектронныйДокументВС.СкладОтправитель В (&МассивСкладов)");	
		Иначе	
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстОтбораПоскладу", "И ЭлектронныйДокументВС.СкладОтправитель = &Склад");	
		КонецЕсли;
	
	Иначе	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстОтбораПоскладу", " И ВЫБОР
																		|		КОГДА ЭлектронныйДокументВС.ТипФормы = ЗНАЧЕНИЕ(Перечисление.ТипыФормВС.ВнутреннееПеремещение)
																		|				И ЭлектронныйДокументВС.ДокументОснование.Организация <> ЭлектронныйДокументВС.Организация
																		|			ТОГДА ЭлектронныйДокументВС.СкладПолучатель
																		|		ИНАЧЕ ЭлектронныйДокументВС.СкладОтправитель
																		|	КОНЕЦ = &Склад");
	КонецЕсли;
	
	ЭтоИмпорт =  ВССерверПереопределяемый.ТипДокументаТаможеннойДекларации(ТипЗнч(Документ));
	Если ЭтоИмпорт Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СкладОтправитель", "СкладПолучатель"); 	
	КонецЕсли;
	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("Склад"	,Склад);
	Запрос.УстановитьПараметр("МассивСкладов",МассивСкладов);
	
	Результат = Запрос.Выполнить();
	
	ТаблицаДокументов = Результат.Выгрузить();
	
	МассивДоступныхЭДВС 	= ТаблицаДокументов.ВыгрузитьКолонку("ЭДВС");
	МассивСкладовДокумента 	= ТаблицаДокументов.ВыгрузитьКолонку("Склад");
		
	Если МассивДоступныхЭДВС.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru = 'Отсутствуют данные для перезаполнения.'");
		ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
		Возврат
	КонецЕсли;	
	
	СоответсвиеДляОтбораПоСкладу.Вставить(Документ, МассивСкладовДокумента);
	НачатьТранзакцию();
	Отказ = Ложь;
	ВыборкаЗапроса = Результат.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ЭДВС = ВыборкаЗапроса.ЭДВС.ПолучитьОбъект();
		ЭДВС.Товары.Очистить();
		ЭДВС.ТоварыВС.Очистить();
		ЭДВС.ИсходныеТовары.Очистить();
		ЭДВС.ИсходныеТоварыВС.Очистить();
		Попытка 
			
			Если ЭДВС.Проведен Тогда
				ОтменаПроведения = Истина;
				ЭДВС.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Иначе
				ОтменаПроведения = Ложь;
				ЭДВС.Записать();
			КонецЕсли;	
			ЭДВС.УстановитьПометкуУдаления(Истина);
		Исключение
			ТекстСообщения = НСтр("ru = 'При %1 документа ""%2"" произошла ошибка: %3. перезаполнение документов прервано.'");
			ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстСообщения = ЭСФКлиентСерверПереопределяемый.ПодставитьПараметрыВСтроку(ТекстСообщения,
						?(ОтменаПроведения, "отмене проведения", "записи"),ЭДВС, ПодробноеПредставлениеОшибки);
			ЭСФКлиентСерверПереопределяемый.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
			Прервать;
		КонецПопытки;
	КонецЦикла;	
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;	
		
	ПараметрыСоздания.Вставить("МассивДокументов"		, МассивДокументов);
	ПараметрыСоздания.Вставить("МассивВидовДокумента"	, МассивВидовДокумента);
	
	Если ВызванаИзПомощникаПерехода Тогда
		МассивОрганизаций = ТаблицаДокументов.ВыгрузитьКолонку("Организация");
		ПараметрыСоздания.Вставить("МассивОрганизаций"	, МассивОрганизаций);
		ПараметрыПереоформления.Вставить("Организация"	, МассивОрганизаций[0]);
		ПараметрыСоздания.Вставить("МассивСкладов"		, ?(ПараметрыПереоформления.Склад = Неопределено, ПереданныйМассивСкладов, ПолучитьМассивСкладов(ПараметрыПереоформления)));		
	КонецЕсли;	
	
	ПараметрыСоздания.Вставить("СоответсвиеДляОтбораПоСкладу"	, СоответсвиеДляОтбораПоСкладу);
	ПараметрыСоздания.Вставить("ФормироватьСписокДокументов" 	, Ложь);
	
	ПараметрыЗаполненияЭДВС = ПолучитьПараметрыЗаполненияЭДВС(ПараметрыСоздания);
	
	Если ВызванаИзПомощникаПерехода Тогда
		
		МассивДанныхДляЗаполнения = ОбработкаОбменЭСФ.ПодготовитьДанныеДляЗаполненияЭДВС_ВводНачальныхОстатков(ПараметрыЗаполненияЭДВС);
		
	Иначе
		ВидДвижения = ВСКлиентСерверПереопределяемый.ПолучитьСоответствиеТипДокументаВидДвижения().Получить(ТипЗнч(Документ));
		
		Если ВидДвижения = Неопределено Тогда
			 Возврат;
		КонецЕсли;
	
		Если ВидДвижения = "Приход" Тогда
			ПараметрыЗаполненияЭДВС.Вставить("ЗаполнятьЦены" 			, Ложь);
			ПараметрыЗаполненияЭДВС.Вставить("ПоДвижениямДокумента" 	, Ложь);
			МассивДанныхДляЗаполнения = ОбработкаОбменЭСФ.ПодготовитьДанныеДляЗаполненияЭДВС(ПараметрыЗаполненияЭДВС);
		Иначе 
			ПараметрыЗаполненияЭДВС.Вставить("ЗаполнятьЦены" 			, ВидДвижения <> "ЭСФ");
			ПараметрыЗаполненияЭДВС.Вставить("ПоДвижениямДокумента" 	, ВидДвижения <> "ЭСФ");
			МассивДанныхДляЗаполнения = ОбработкаОбменЭСФ.ПодготовитьДанныеДляЗаполненияЭДВС_Расход(ПараметрыЗаполненияЭДВС);
		КонецЕсли;
	КонецЕсли;
	
	НомерДокумента = 0;
	Для каждого ЭлементМассива Из МассивДанныхДляЗаполнения Цикл
		Реквизиты = ЭлементМассива.Реквизиты[0];
		Если Реквизиты.ТипФормы = Перечисления.ТипыФормВС.ВнутреннееПеремещение
				И Реквизиты.Организация <> Реквизиты.ОрганизацияПолучатель	ИЛИ ЭтоИмпорт Тогда		
			СкладОтбора = Реквизиты.СкладПолучатель;
		Иначе	
			СкладОтбора = Реквизиты.СкладОтправитель;
		КонецЕсли;	
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Использован"	, Ложь);
		ПараметрыОтбора.Вставить("Склад"	 	, СкладОтбора);
		МассивНайденыхСтрок = ТаблицаДокументов.НайтиСтроки(ПараметрыОтбора);
		Если МассивНайденыхСтрок.Количество() > 0 Тогда
			СтрокаТаблицаДокументов = МассивНайденыхСтрок[0];
			СтрокаТаблицаДокументов.Использован = Истина;
			ЭДВС = СтрокаТаблицаДокументов.ЭДВС.ПолучитьОбъект();
		Иначе	
			ЭДВС = Документы.ЭлектронныйДокументВС.СоздатьДокумент();
		КонецЕсли;	
		ЗаполнитьДокументЭДВС(ЭДВС, ЭлементМассива, Отказ);
		Если Отказ Тогда
			Прервать
		КонецЕсли;	
	КонецЦикла;
	
	Если Отказ Тогда
		ОтменитьТранзакцию();
		Возврат;
	Иначе
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	
КонецПроцедуры


#КонецОбласти

#Область ОтменитьЭДВС

&НаСервере
Функция ПолучитьМассивЭДВСДляОтменыНаСервере(ПараметрыПереоформления)
	Документ 	 = ПараметрыПереоформления.Документ;
	Склад		 = ПараметрыПереоформления.Склад;

	Запрос 		 = Новый Запрос;
	ТекстЗапроса = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлектронныйДокументВС.Ссылка КАК ЭДВС
	|ИЗ
	|	Документ.ЭлектронныйДокументВС КАК ЭлектронныйДокументВС
	|ГДЕ
	|	ЭлектронныйДокументВС.ДокументОснование = &Документ
	|	И ЭлектронныйДокументВС.СкладОтправитель = &Склад
	|	И ЭлектронныйДокументВС.Статус В(&СтатусДокуметовДляОтмены)
	|	И ЭлектронныйДокументВС.Ссылка В(&МассивЭДВС)";
	

	Если Склад = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ЭлектронныйДокументВС.СкладОтправитель = &Склад", ""); 	
	КонецЕсли;
	
	Если ВызванаИзПомощникаПерехода Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументОснование", "Организация");
		Запрос.УстановитьПараметр("МассивЭДВС", ПереданныйМассивЭДВС);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ЭлектронныйДокументВС.Ссылка В(&МассивЭДВС)", "");
	КонецЕсли;
	
	ЭтоИмпорт =  ВССерверПереопределяемый.ТипДокументаТаможеннойДекларации(ТипЗнч(Документ));
	Если ЭтоИмпорт Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СкладОтправитель", "СкладПолучатель"); 	
	КонецЕсли;
	СтатусДокуметовДляОтмены = Новый Массив;
	СтатусДокуметовДляОтмены.Добавить(Перечисления.СтатусыУТТН.Обработанный);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Документ"				, Документ);
	Запрос.УстановитьПараметр("Склад"					, Склад);
	Запрос.УстановитьПараметр("СтатусДокуметовДляОтмены", СтатусДокуметовДляОтмены);
	Результат = Запрос.Выполнить();
	
	РезультатЗапроса = Результат.Выгрузить();
	
	Возврат РезультатЗапроса.ВыгрузитьКолонку("ЭДВС");
КонецФункции

&НаКлиенте
Процедура ОтменитьДокументы()
	ПараметрыОформления = ПолучитьПараметрыОформления();
	Если ПараметрыОформления = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	МассивЭДВСДляОтмены = ПолучитьМассивЭДВСДляОтменыНаСервере(ПараметрыОформления);
	
	Если МассивЭДВСДляОтмены.Количество() <> 0 Тогда
		ВСКлиент.ОткрытьФормуИзменениеСтатусовЭДВС(ВСКлиентСервер.ДействиеОтмена(), МассивЭДВСДляОтмены, ЭСФКлиентСерверПереопределяемый.ИспользоватьФоновуюОтправкуЭСФ());
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбработатьКомандуДереваДокументов(ТекущаяКоманда)
	Если ТекущаяКоманда = "Оформить" Тогда
		ОформитьДокументы();
	ИначеЕсли ТекущаяКоманда = "Переоформить" Тогда
		Переоформить()	
	ИначеЕсли ТекущаяКоманда = "Отменить" Тогда
		ОтменитьДокументы();
	КонецЕсли;	
КонецПроцедуры	

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ОбновитьДанныеФормы()
	
	ЗаполнитьДерево(,Истина);
	
	ПараметрыОтбора = ПолучитьПараметрыОформления();
	Если ПараметрыОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПерезаполнитьТаблицыСравненияДокументов(ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура Провести(Команда)
	ПараметрыОтбора = ПолучитьПараметрыОформления();
	Если ПараметрыОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	ПровестиНаСервере(ПараметрыОтбора.МассивЭДВС);
	
	ОбновитьДанныеФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПроведение(Команда)
	
	ПараметрыОтбора = ПолучитьПараметрыОформления();
	Если ПараметрыОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ОтменитьПроведениеНаСервере(ПараметрыОтбора.МассивЭДВС);
	
	ОбновитьДанныеФормы()
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовПриАктивизацииСтроки(Элемент)
	
	ПараметрыОтбора = ПолучитьПараметрыОформления();
	Если ПараметрыОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ПерезаполнитьТаблицыСравненияДокументов(ПараметрыОтбора);
	
	Если ОтображатьТолькоОтклонения Тогда
		Для Каждого СтрокаДерева Из Товары.ПолучитьЭлементы() Цикл
			ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
			Элементы.Товары.Развернуть(ИдентификаторСтроки,Истина);
		КонецЦикла;	
		
		Для Каждого СтрокаДерева Из ИсходныеТовары.ПолучитьЭлементы() Цикл
			ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
			Элементы.ИсходныеТовары.Развернуть(ИдентификаторСтроки,Истина);
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = ДеревоДокументов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если Поле.Имя = "ДеревоДокументовКоманда" Тогда
		ТекущаяКоманда = ТекущиеДанные.Команда;
		Если ЗначениеЗаполнено(ТекущаяКоманда) Тогда
			ОбработатьКомандуДереваДокументов(ТекущаяКоманда)
		КонецЕсли;	
			
	Иначе
		ЭлементДерева = ТекущиеДанные.ЭлементДерева;
		Если ЗначениеЗаполнено(ЭлементДерева) Тогда 
			ПоказатьЗначение(, ЭлементДерева);
		КонецЕсли;	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьТолькоОтклоненияПриИзменении(Элемент)
	ПараметрыОтбора = ПолучитьПараметрыОформления();
	Если ПараметрыОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ПерезаполнитьТаблицыСравненияДокументов(ПараметрыОтбора);
КонецПроцедуры

&НаКлиенте
Процедура НадписьСписокСозданныхЭДВСНажатие(Элемент)
	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", Новый ФиксированныйМассив(СписокЭДВС.ВыгрузитьЗначения())));
	ОткрытьФорму("Документ.ЭлектронныйДокументВС.Форма.ФормаСписка", ПараметрыФормы,ЭтаФорма, Истина,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СпособЗаполненияЦеныПриИзменении(Элемент)
	
	ПараметрыЭДВС = ВСВызовСервераПовтИсп.ПолучитьПараметрыЭДВС();
	ЗначениеЦены  = ПараметрыЭДВС.ЗначениеЦены;
	ТипЦены 	  = ПараметрыЭДВС.ТипЦены;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


