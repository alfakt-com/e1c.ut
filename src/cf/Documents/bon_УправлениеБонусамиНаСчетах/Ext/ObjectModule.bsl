
Процедура Автозаполнение(Документ = Неопределено) Экспорт 
	
	Если ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ЗачислениеБонусныхБалловИзБуфера Тогда 
		ЗачислитьБонусы();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.СписаниеБонусныхБаллов Тогда 
		СписатьБонусы();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.СписаниеОтрицательныхБонусныхБалловВОстатке Тогда 
		СписаниеОтрицательныхБонусныхБалловВОстатке();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.КорректировкаБуфера Тогда 
		ЗаполнитьПартиюКорректировкиБуфера();		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.КорректировкаОстатка Тогда 
		ЗаполнитьПартиюКорректировкиОстатка();	
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ОтправкаСМСоПредстоящемСписание и
		Документ = Неопределено Тогда 
		ЗаполнитьДляОтправкиСМСАвтоматом();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ОтправкаСМСоПредстоящемСписание и
		Документ <> Неопределено Тогда 
		ОтправитьСМСУведомлениеОсписание(Документ);
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.АнонсированиеСписанияБонусов Тогда 
		//ЗаполнитьДляОтправкиСМСПольз();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.АвтоформированиеНачислениеОстаткаПеренос Тогда 
		ЗаполнитьДляПереносаИзСписания(Документ);
	КонецЕсли;
		
КонецПроцедуры                                               

Процедура ВозвратНоменальнойСкидкиПроц(ВыводИзОборота, Номинал, БонуснаяКарта) Экспорт 
	
		Строка = ЭтотОбъект.ПартииБонусовДляКонвертации.Добавить();
	    Строка.НоминальныйОбъект = БонуснаяКарта;
		Строка.ДатаНачисления  = ТекущаяДата();
		Строка.Партия = ВыводИзОборота.ССылка;
		Строка.Остаток = Номинал;
		Строка.Содержание  = "Возврат Бонусов на Остаток";
		Строка.ХарактеристикаБонуса = Справочники.мчт_ХарактеристикиБонусов.Стандартные;
	
КонецПроцедуры

///////////////////////////////////////////////////////////
///////ТУТ КОНВЕРТАЦИЯ БОНУСОВ ИЗ БУФЕРА В ОСТАТОК/////////
//////////////////////////////////////////////////////////

Процедура ЗачислитьБонусы()
	
	ТабДляСМС = Новый ТаблицаЗначений;	
	ТабДляСМС.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТабДляСМС.Колонки.Добавить("Держатель",,"Держатель");
	ТабДляСМС.Колонки.Добавить("ТелефонСотовыйДержателя",,"ТелефонСотовыйДержателя");
	ТабДляСМС.Колонки.Добавить("НомерСчетаНомОбъект",,"НомерСчетаНомОбъект");
	ТабДляСМС.Колонки.Добавить("Характеристика",,"Характеристика");	
	ТабДляСМС.Колонки.Добавить("Остаток",,"Остаток");
	ТабДляСМС.Колонки.Добавить("ДатаОтправкиСМС",,"ДатаОтправкиСМС");	
	ТабДляСМС.Колонки.Добавить("Содержание",,"Содержание");
	ТабДляСМС.Колонки.Добавить("ТекстСМС",,"ТекстСМС");
	ТабДляСМС.Колонки.Добавить("ДатаСписания",,"ДатаСписания");
	
	///Характеристики для Отправки СМС о начислении
	ХарактОтправикСМСОНачис();                                   
	
	Если ЭтотОбъект.ХарактеристикиДляОтправкиСМСОНачис.Количество() > 0 Тогда
		Для Каждого Наст Из ЭтотОбъект.ХарактеристикиДляОтправкиСМСОНачис Цикл
			Если Наст.ДоСуммы = Число(0) Тогда
				Наст.ДоСуммы = Число(999999999);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	///Список для конвертации бонусов из Буфера в Остаток
	//КоличествоДнейВБуфере = Константы.мчт_КоличествоДнейПередАктивациейБонусов.Получить();	
	Запрос = Новый Запрос;   
	Запрос.Текст = "ВЫБРАТЬ
	               |	bon_ПартииБонусовНаСчетахОстатки.НоминальныйОбъект,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(bon_ПартииБонусовНаСчетахОстатки.Партия) = ТИП(Документ.РеализацияТоваровУслуг)
				   |			ТОГДА ВЫБОР
	               |					КОГДА bon_ПартииБонусовНаСчетахОстатки.Партия.bon_ДатаПроведенияПервДляБон <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |						ТОГДА bon_ПартииБонусовНаСчетахОстатки.Партия.bon_ДатаПроведенияПервДляБон
	               |					ИНАЧЕ bon_ПартииБонусовНаСчетахОстатки.Партия.Дата
	               |				КОНЕЦ
	               |		ИНАЧЕ bon_ПартииБонусовНаСчетахОстатки.Партия.Дата
	               |	КОНЕЦ КАК ДатаНачисления,
	               |	bon_ПартииБонусовНаСчетахОстатки.Партия,
	               |	bon_ПартииБонусовНаСчетахОстатки.Номенклатура,
	               |	bon_ПартииБонусовНаСчетахОстатки.КлючПримВыдано,
	               |	bon_ПартииБонусовНаСчетахОстатки.БуферОстаток,
	               |	ВЫБОР
	               |		КОГДА ТИПЗНАЧЕНИЯ(bon_ПартииБонусовНаСчетахОстатки.Партия) = ТИП(Документ.РеализацияТоваровУслуг)
	               |			ТОГДА ВЫБОР
	               |					КОГДА bon_ПартииБонусовНаСчетахОстатки.Партия.bon_ДатаПроведенияПервДляБон <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |						ТОГДА РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.bon_ДатаПроведенияПервДляБон, &ТекущаяДата, ДЕНЬ)
	               |					ИНАЧЕ РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ)
	               |				КОНЕЦ
	               |		ИНАЧЕ РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ)
	               |	КОНЕЦ КАК ДнейПослеНачисления,
	               |	bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	РегистрНакопления.bon_ПартииБонусовНаСчетах.Остатки(&ТекущаяДата, ) КАК bon_ПартииБонусовНаСчетахОстатки
	               |ГДЕ
	               |	bon_ПартииБонусовНаСчетахОстатки.БуферОстаток > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.НоминальныйОбъект КАК НоминальныйОбъект,
	               |	Данные.ДатаНачисления КАК ДатаНачисления,
	               |	Данные.Партия,
	               |	Данные.Номенклатура,
	               |	Данные.КлючПримВыдано,
	               |	Данные.ДнейПослеНачисления КАК ДнейПослеНачисления,
	               |	Данные.БуферОстаток КАК Буфер,
	               |	СУММА(Данные.БуферОстаток) КАК Остаток,
	               |	Данные.ХарактеристикаБонуса,
	               |	ВЫБОР
	               |		КОГДА bon_ХарактеристикиБонусов.ПоДате = ИСТИНА
	               |			ТОГДА РАЗНОСТЬДАТ(Данные.ДатаНачисления, bon_ХарактеристикиБонусов.ДатаПереводаИзБуферавОстаток, ДЕНЬ)
	               |		ИНАЧЕ bon_ХарактеристикиБонусов.ВремяЖизниБуфера
	               |	КОНЕЦ КАК ВремяЖизниБуфера
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.bon_ХарактеристикиБонусов КАК bon_ХарактеристикиБонусов
	               |		ПО Данные.ХарактеристикаБонуса = bon_ХарактеристикиБонусов.Ссылка
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА bon_ХарактеристикиБонусов.ПоДате = ИСТИНА
	               |				ТОГДА bon_ХарактеристикиБонусов.ДатаПереводаИзБуферавОстаток <= &ТекущаяДата
	               |			ИНАЧЕ Данные.ДнейПослеНачисления >= bon_ХарактеристикиБонусов.ВремяЖизниБуфера
	               |		КОНЕЦ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Данные.НоминальныйОбъект,
	               |	Данные.Партия,
	               |	Данные.БуферОстаток,
	               |	Данные.ДнейПослеНачисления,
	               |	Данные.ХарактеристикаБонуса,
	               |	Данные.ДатаНачисления,
	               |	ВЫБОР
	               |		КОГДА bon_ХарактеристикиБонусов.ПоДате = ИСТИНА
	               |			ТОГДА РАЗНОСТЬДАТ(Данные.ДатаНачисления, bon_ХарактеристикиБонусов.ДатаПереводаИзБуферавОстаток, ДЕНЬ)
	               |		ИНАЧЕ bon_ХарактеристикиБонусов.ВремяЖизниБуфера
	               |	КОНЕЦ,
	               |	Данные.Номенклатура,
	               |	Данные.КлючПримВыдано
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаНачисления";
	
	Если ЭтотОбъект.ИспользоватьУсловие = Истина Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИНАЧЕ Данные.ДнейПослеНачисления >= bon_ХарактеристикиБонусов.ВремяЖизниБуфера КОНЕЦ", "ИНАЧЕ bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток "+ ЭтотОбъект.Условие + " bon_ХарактеристикиБонусов.ВремяЖизниБуфера КОНЕЦ");
	КонецЕсли;
	
	//Запрос.УстановитьПараметр("ДнейПослеНачисления", КоличествоДнейВБуфере);
	Запрос.УстановитьПараметр("ТекущаяДата", ЭтотОбъект.ДатаОперации);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	//Врем таблица для СМС (для Свертывания)
	ТабДляСуммы = Новый ТаблицаЗначений;	
	ТабДляСуммы.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТабДляСуммы.Колонки.Добавить("Партия",,"Партия");
	ТабДляСуммы.Колонки.Добавить("Буфер",,"Буфер");	
	ТабДляСуммы.Колонки.Добавить("Остаток",,"Остаток");
	ТабДляСуммы.Колонки.Добавить("ХарактеристикаБонуса",,"ХарактеристикаБонуса");

		
	///Обрабоатываем список с Запроса
	Для каждого СтрокаТЗ Из Результат Цикл
		Строка = ЭтотОбъект.ПартииБонусовДляКонвертации.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЗ);
		СТР = ТабДляСуммы.Добавить();
		СТР.НоминальныйОбъект 		= СтрокаТЗ.НоминальныйОбъект;
		СТР.Партия 					= СтрокаТЗ.Партия;
		СТР.Буфер 					= СтрокаТЗ.Буфер;
		СТР.Остаток					= СтрокаТЗ.Остаток;
		СТР.ХарактеристикаБонуса 	= СтрокаТЗ.ХарактеристикаБонуса;
	КонецЦикла;	
	
	///Потготовка Для отправки СМС
	ТабДляСуммы.Свернуть("НоминальныйОбъект, Партия, ХарактеристикаБонуса","Остаток");
	Для каждого СтрокаТЗ Из ТабДляСуммы Цикл
		Если СотовыйПолучить(СтрокаТЗ.НоминальныйОбъект) <> Неопределено Тогда
			Если СтрокаТЗ.НоминальныйОбъект.Держатель <> Справочники.Контрагенты.ПустаяСсылка() Тогда 
				Для Каждого Характ Из ЭтотОбъект.ХарактеристикиДляОтправкиСМСОНачис Цикл 
					Если Характ.Характеристика = СтрокаТЗ.ХарактеристикаБонуса Тогда
						Если СтрокаТЗ.Остаток > Характ.ОтСуммы и СтрокаТЗ.Остаток < Характ.ДоСуммы Тогда 
							Строка1 = ТабДляСМС.Добавить();
							Строка1.НоминальныйОбъект 		= СтрокаТЗ.НоминальныйОбъект;
							Строка1.Держатель				= СтрокаТЗ.НоминальныйОбъект.Держатель;
							Строка1.ТелефонСотовыйДержателя	= СотовыйПолучить(СтрокаТЗ.НоминальныйОбъект);
							//Строка1.НомерСчетаНомОбъект 	= СтрЗаменить(СтрЗаменить(СокрЛП(СтрокаТЗ.НоминальныйОбъект.код), ";", ""), "?", "");
							Строка1.Характеристика			= Характ.Характеристика;
							Строка1.Остаток 				= СтрокаТЗ.Остаток;
							Строка1.ДатаОтправкиСМС 		= ЭтотОбъект.ДатаОперации;
							Строка1.Содержание 				= "Отправка СМС о Начислении";	
							Строка1.ТекстСМС				= Характ.ТекстСМС;
							Если СтрокаТЗ.ХарактеристикаБонуса.ВремяЖизниОстатков = 0 Тогда
								Строка1.ДатаСписания =  Формат(СтрокаТЗ.ХарактеристикаБонуса.ДатаСписанияОстаток, "ДФ=dd.MM.гггг");
							Иначе 
								Строка1.ДатаСписания = Формат(ТекущаяДата() + СтрокаТЗ.ХарактеристикаБонуса.ВремяЖизниОстатков*3600*24, "ДФ=dd.MM.гггг");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ТабДляСМС.Свернуть("НоминальныйОбъект, Характеристика, Держатель, ТелефонСотовыйДержателя, НомерСчетаНомОбъект, ТекстСМС, Содержание, ДатаСписания", "Остаток");
	Для каждого СтрокаТЗР Из ТабДляСМС Цикл
		СтрокаТ = ЭтотОбъект.ПартииБонусовДляСМС.Добавить();
		СтрокаТ.НоминальныйОбъект 		= СтрокаТЗР.НоминальныйОбъект;
		СтрокаТ.Держатель				= СтрокаТЗР.Держатель;        
		СтрокаТ.ТелефонСотовыйДержателя	= СтрокаТЗР.ТелефонСотовыйДержателя;
		СтрокаТ.НомерСчетаНомОбъект 	= СтрокаТЗР.НомерСчетаНомОбъект;     
		СтрокаТ.Характеристика			= СтрокаТЗР.Характеристика;           
		СтрокаТ.Остаток 				= СтрокаТЗР.Остаток;                  
		СтрокаТ.ДатаОтправкиСМС 		= ЭтотОбъект.ДатаОперации;
		СтрокаТ.Содержание 				= СтрокаТЗР.Содержание;	
		///Проверка на Дату
		ТекРед	=	СтрокаТЗР.ТекстСМС;
		Если Найти(ТекРед, "Дата") > 0 Тогда
			ДатаСпи = СтрокаТЗР.ДатаСписания; 
			ТекРед = СтрЗаменить(Строка(ТекРед), "Дата", Строка(ДатаСпи));	
		КонецЕсли;
		///Проверка на Сумму
		Если Найти(ТекРед, "Сумма") > 0 Тогда
			Оста = СтрокаТЗР.Остаток; 
			ТекРед = СтрЗаменить(Строка(ТекРед), "Сумма", Строка(Оста));
		КонецЕсли;	
		СтрокаТ.ТекстСМС = ТекРед;
	КонецЦикла;
	
КонецПроцедуры

Функция СотовыйПолучить(НомОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	bon_ТелефоныНомОбъектов.Сотовый КАК Сотовый
	|ИЗ
	|	РегистрСведений.bon_ТелефоныНомОбъектов КАК bon_ТелефоныНомОбъектов
	|ГДЕ
	|	bon_ТелефоныНомОбъектов.Основной = ИСТИНА
	|	И bon_ТелефоныНомОбъектов.bon_НоминальныеОбъекты = &bon_НоминальныеОбъекты";
	Запрос.УстановитьПараметр("bon_НоминальныеОбъекты", НомОбъект);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество() > 0 Тогда
		Возврат Рез[0].Сотовый;
	Иначе 
		Возврат Неопределено;	
	КонецЕсли;
		
КонецФункции

Процедура ЗаполнитьДляОтправкиСМСАвтоматом()
	
	///Если дней после начисления "=" дней жизни бонусов
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	bon_ПартииБонусовНаСчетахОстатки.НоминальныйОбъект КАК НоминальныйОбъект,
	               |	bon_ПартииБонусовНаСчетахОстатки.Партия.Дата КАК ДатаНачисления,
	               |	ВЫБОР
	               |		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	               |			ТОГДА НАЧАЛОПЕРИОДА(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаСписанияОстаток, ДЕНЬ)
	               |		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ, bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниОстатков + bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера), ДЕНЬ)
	               |	КОНЕЦ КАК ДатаСписанияОстатков,
	               |	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток КАК ОстатокОстаток,
	               |	bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса КАК ХарактеристикаБонуса,
	               |	bon_ПартииБонусовНаСчетахОстатки.Партия КАК Партия,
	               |	""Отправка СМС за 14 дней до списания"" КАК Содержание
	               |ПОМЕСТИТЬ Таб1
	               |ИЗ
	               |	РегистрНакопления.bon_ПартииБонусовНаСчетах.Остатки(&ТекущаяДата, ) КАК bon_ПартииБонусовНаСчетахОстатки
	               |ГДЕ
	               |	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток > &СуммаУвед
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таб1.НоминальныйОбъект КАК НоминальныйОбъект,
	               |	Таб1.ДатаНачисления КАК ДатаНачисления,
	               |	Таб1.ДатаСписанияОстатков КАК ДатаСписанияОстатков,
	               |	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Таб1.ДатаСписанияОстатков, ДЕНЬ, -14), ДЕНЬ) КАК ДатаОтправкиСМС,
	               |	Таб1.ХарактеристикаБонуса КАК ХарактеристикаБонуса,
	               |	Таб1.Содержание КАК Содержание,
	               |	Таб1.Партия КАК Партия,
	               |	Таб1.НоминальныйОбъект.Код КАК НоминальныйОбъектКод,
	               |	Таб1.НоминальныйОбъект.Держатель КАК НоминальныйОбъектДержатель,
	               |	Таб1.ОстатокОстаток КАК ОстатокОстаток
	               |ПОМЕСТИТЬ Таб2
	               |ИЗ
	               |	Таб1 КАК Таб1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таб2.НоминальныйОбъект КАК НоминальныйОбъект,
	               |	Таб2.ДатаОтправкиСМС КАК ДатаОтправкиСМС,
	               |	Таб2.ОстатокОстаток КАК Остаток,
	               |	Таб2.Содержание КАК Содержание,
	               |	Таб2.Партия КАК Партия,
	               |	Таб2.НоминальныйОбъектДержатель КАК Держатель,
	               |	Таб2.НоминальныйОбъектКод КАК НомерСчета,
	               |	Таб2.ДатаНачисления КАК ДатаНачисления,
	               |	Таб2.ДатаСписанияОстатков КАК ДатаСписанияОстаток,
	               |	Таб2.ХарактеристикаБонуса КАК ХарактеристикаБонуса,
	               |	Таб2.ХарактеристикаБонуса.ПоДате КАК ПоДате
	               |ПОМЕСТИТЬ Данные
	               |ИЗ
	               |	Таб2 КАК Таб2
	               |ГДЕ
	               |	Таб2.ДатаОтправкиСМС = &ТекущаяДата
	               |	И Таб2.НоминальныйОбъектДержатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Данные.НоминальныйОбъект КАК НоминальныйОбъект,
	               |	Данные.ДатаОтправкиСМС КАК ДатаОтправкиСМС,
	               |	Данные.Остаток КАК Остаток,
	               |	Данные.Содержание КАК Содержание,
	               |	Данные.Партия КАК Партия,
	               |	Данные.Держатель КАК Держатель,
	               |	bon_ТелефоныНомОбъектов.Сотовый КАК ТелефонСотовый,
	               |	Данные.НомерСчета КАК НомерСчета,
	               |	Данные.ДатаНачисления КАК ДатаНачисления,
	               |	Данные.ДатаСписанияОстаток КАК ДатаСписанияОстаток,
	               |	Данные.ХарактеристикаБонуса КАК ХарактеристикаБонуса,
	               |	Данные.ПоДате КАК ПоДате
	               |ИЗ
	               |	Данные КАК Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.bon_ТелефоныНомОбъектов КАК bon_ТелефоныНомОбъектов
	               |		ПО Данные.НоминальныйОбъект = bon_ТелефоныНомОбъектов.bon_НоминальныеОбъекты
	               |ГДЕ
	               |	bon_ТелефоныНомОбъектов.Основной = ИСТИНА";				   						  
	Если ЭтотОбъект.ОтобратьЗаПериод = Истина Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Таб2.ДатаОтправкиСМС = &ТекущаяДата", "Таб2.ДатаСписанияОстатков МЕЖДУ &ДатаНач И &ДатаКон");
		Запрос.УстановитьПараметр("ДатаНач", ЭтотОбъект.ДатаНачПериода);
		Запрос.УстановитьПараметр("ДатаКон", ЭтотОбъект.ДатаКонПериода);
	КонецЕсли;
	Запрос.УстановитьПараметр("ТекущаяДата", ЭтотОбъект.ДатаОперации);       
	Запрос.УстановитьПараметр("СуммаУвед", ЭтотОбъект.СуммаУвед);
	
	//Номоб = Справочники.ма_НоминальныеОбъекты.НайтиПоКоду("7759259468");
	//Запрос.УстановитьПараметр("НоминальныйОбъект", Номоб);
	
	Результат1 = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТЗ1 Из Результат1 Цикл 			
		Если ЭтотОбъект.ДатаСписанияДляСМС = '00010101' тогда
			Строка1 = ЭтотОбъект.ПартииБонусовДляСМС.Добавить();
			Строка1.НоминальныйОбъект = СтрокаТЗ1.НоминальныйОбъект;
			Строка1.ДатаОтправкиСМС = СтрокаТЗ1.ДатаОтправкиСМС;
			Строка1.ДатаСписания = СтрокаТЗ1.ДатаСписанияОстаток;
			Строка1.Остаток = СтрокаТЗ1.Остаток;
			Строка1.Содержание = "Отправка СМС о списание через 14 дней";	
			///ДополнительныеСведения
			Строка1.Партия	= СтрокаТЗ1.Партия; 
			Строка1.Держатель	=  СтрокаТЗ1.Держатель;
			Строка1.ТелефонСотовыйДержателя	=  СокрЛП(СтрокаТЗ1.ТелефонСотовый);
			Строка1.НомерСчетаНомОбъект =  СтрЗаменить(СтрЗаменить(СокрЛП(СтрокаТЗ1.НомерСчета), ";", ""), "?", "");
		ИначеЕсли ЭтотОбъект.ДатаСписанияДляСМС = СтрокаТЗ1.ДатаСписанияОстаток Тогда
			Строка1 = ЭтотОбъект.ПартииБонусовДляСМС.Добавить();
			Строка1.НоминальныйОбъект = СтрокаТЗ1.НоминальныйОбъект;
			Строка1.ДатаОтправкиСМС = СтрокаТЗ1.ДатаОтправкиСМС;
			Строка1.ДатаСписания = СтрокаТЗ1.ДатаСписанияОстаток;
			Строка1.Остаток = СтрокаТЗ1.Остаток;
			Строка1.Содержание = "Дата Списания "+СтрокаТЗ1.ДатаСписанияОстаток;
			///ДополнительныеСведения
			Строка1.Партия	= СтрокаТЗ1.Партия; 
			//Строка1.ВремяЖизниБуфера  = СтрокаТЗ1.ВремяЖизниБуфера;
			Строка1.Держатель	=  СтрокаТЗ1.Держатель;
			Строка1.ТелефонСотовыйДержателя	=  СокрЛП(СтрокаТЗ1.ТелефонСотовый);
			Строка1.НомерСчетаНомОбъект =  СтрЗаменить(СтрЗаменить(СокрЛП(СтрокаТЗ1.НомерСчета), ";", ""), "?", "");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьСМС() Экспорт 
	
	Если ЭтотОбъект.ОтправитьСМС = Истина Тогда  
		Для Каждого Клиента Из ЭтотОбъект.ПартииБонусовДляСМС Цикл 
			Если Клиента.ОтправленоСМС = Ложь Тогда 
				
				ТелефонСотовый = Клиента.ТелефонСотовыйДержателя;
				НомерСчета = Клиента.НомерСчетаНомОбъект;
				ТекстСМСПол = Константы.bon_НовПатБонТексСМСОСпис.Получить();
				
				
				///Проверка на Дату
				Если Найти(ТекстСМСПол, "Дата") > 0 Тогда
					ДатаСпи = Формат(Клиента.ДатаСписания, "ДФ=dd.MM.yyyy"); 
					ТекстСМСПол = СтрЗаменить(Строка(ТекстСМСПол), "Дата", Строка(ДатаСпи));	
				КонецЕсли;
				///Проверка на Сумму
				Если Найти(ТекстСМСПол, "Сумма") > 0 Тогда
					Оста = Формат(Клиента.Остаток, "ЧДЦ=0; ЧГ=");
					ТекстСМСПол = СтрЗаменить(Строка(ТекстСМСПол), "Сумма", Строка(Оста));
				КонецЕсли;
				ТекстСообщения = ТекстСМСПол;
				
				Если ЭтотОбъект.ИзменитьТекстСМС = Истина Тогда			
					ТекстСМСПол =	ЭтотОбъект.ТекстСМС; 
					Оста = Формат(Клиента.Остаток, "ЧДЦ=0; ЧГ=");
					ДатаСпи = Формат(Клиента.ДатаСписания, "ДФ=dd.MM"); 
					
					ТекстСМСПол1 = СтрЗаменить(Строка(ТекстСМСПол), "Остаток", Строка(Оста));
					ТекстСМСПол2 = СтрЗаменить(Строка(ТекстСМСПол1), "ДатаСписания", Строка(ДатаСпи));
					ТекстСообщения = ТекстСМСПол2;
				КонецЕсли;
				
				//Оста = Формат(Клиента.Остаток, "ЧДЦ=0; ЧГ=");
				//ДатаСпи = Формат(Клиента.ДатаСписания, "ДФ=dd.MM.yyyy"); 
				//ТекстСообщения = "Успей потратить до "+ДатаСпи+"! Доступно: "+Оста+" бонусов clck.ru/FGeuZ";
				//ТекстСообщения = "Успей потратить бонусы до "+ДатаСпи+"! Проверить баланс: clck.ru/GEyyU";
				
				Дост=Число(88);
				ТелефонСотовыйСМС	= "7"+Прав(ТелефонСотовый, 10);
				Структура = смсТрафик.ОтправитьСМССообщениеПоНомеру(ТелефонСотовыйСМС, ТекстСообщения, Дост);
				Ответ = Структура.Описание + " " + Структура.Ид;
				Если Структура.Результат = Истина Тогда
					Клиента.ОтправленоСМС = Истина;
					ЭтотОбъект.Записать();
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СписатьБонусы()
	
	///Если дней после начисления "=" дней жизни бонусов
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	bon_ПартииБонусовНаСчетахОстатки.НоминальныйОбъект,
	|	bon_ПартииБонусовНаСчетахОстатки.Партия.Дата КАК ДатаНачисления,
	|	ВЫБОР
	|		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	|			ТОГДА НАЧАЛОПЕРИОДА(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаСписанияОстаток, ДЕНЬ)
	|		ИНАЧЕ 
	|			НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ, bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниОстатков + bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера), ДЕНЬ)
	|	КОНЕЦ КАК ДатаСписания,
	|	НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ТекущаяДата,
	|	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток,
	|	ВЫБОР
	|		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	|			ТОГДА РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаПереводаИзБуферавОстаток, bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ)
	|		ИНАЧЕ РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера
	|	КОНЕЦ КАК ДнейПослеНачисления,
	|	bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса,
	|	bon_ПартииБонусовНаСчетахОстатки.Партия,
	|	bon_ПартииБонусовНаСчетахОстатки.Номенклатура,
	|	bon_ПартииБонусовНаСчетахОстатки.КлючПримВыдано
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	РегистрНакопления.bon_ПартииБонусовНаСчетах.Остатки(&ТекущаяДата, ) КАК bon_ПартииБонусовНаСчетахОстатки
	|ГДЕ
	|	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	bon_ПартииБонусовНаСчетахОстатки.Партия,
	|	bon_ПартииБонусовНаСчетахОстатки.НоминальныйОбъект,
	|	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток,
	|	bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса,
	|	bon_ПартииБонусовНаСчетахОстатки.Партия.Дата,
	|	ВЫБОР
	|		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	|			ТОГДА НАЧАЛОПЕРИОДА(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаСписанияОстаток, ДЕНЬ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ, bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниОстатков + bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера), ДЕНЬ)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	|			ТОГДА РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаПереводаИзБуферавОстаток, bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ)
	|		ИНАЧЕ РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера
	|	КОНЕЦ,
	|	bon_ПартииБонусовНаСчетахОстатки.Номенклатура,
	|	bon_ПартииБонусовНаСчетахОстатки.КлючПримВыдано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.НоминальныйОбъект,
	|	Данные.ДатаНачисления КАК ДатаНачисления,
	|	Данные.ДатаСписания,
	|	Данные.ТекущаяДата,
	|	Данные.ОстатокОстаток КАК Остаток,
	|	Данные.Партия,
	|	Данные.ДнейПослеНачисления,
	|	Данные.ХарактеристикаБонуса,
	|	""Списание по сроку жизни"" КАК Содержание,
	|	ВЫБОР
	|		КОГДА Данные.ХарактеристикаБонуса.ПоДате = ИСТИНА
	|			ТОГДА РАЗНОСТЬДАТ(Данные.ДатаНачисления, Данные.ХарактеристикаБонуса.ДатаСписанияОстаток, ДЕНЬ)
	|		ИНАЧЕ Данные.ХарактеристикаБонуса.ВремяЖизниОстатков
	|	КОНЕЦ КАК ВремяЖизниБонусов,
	|	Данные.Номенклатура,
	|	Данные.КлючПримВыдано
	|ИЗ
	|	Данные КАК Данные
	|ГДЕ
	|	Данные.ДатаСписания <= Данные.ТекущаяДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачисления";
	Если ЭтотОбъект.ИспользоватьУсловие = Истина Тогда 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток > 0", "bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток"+ ЭтотОбъект.Условие + Строка(ЭтотОбъект.СуммаУсловия));
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("ТекущаяДата", ЭтотОбъект.ДатаОперации);	
	
	Результат1 = Запрос.Выполнить().Выгрузить();
	
	Счетчик = Число(0);
	Для каждого СтрокаТЗ1 Из Результат1 Цикл
		Если Счетчик < 90000 Тогда
			Счетчик = Счетчик + Число(1);
			Если Число(ЭтотОбъект.Остаток) = Число(0) Тогда
				Строка1 = ЭтотОбъект.ПартииБонусовДляКонвертации.Добавить();
				ЗаполнитьЗначенияСвойств(Строка1, СтрокаТЗ1);
			ИначеЕсли Число(СтрокаТЗ1.Остаток) >= Число(ЭтотОбъект.Остаток) Тогда
				Строка1 = ЭтотОбъект.ПартииБонусовДляКонвертации.Добавить();
				ЗаполнитьЗначенияСвойств(Строка1, СтрокаТЗ1);			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭтотОбъект.РучнаяКорректировка = Истина Тогда	
		Сообщить(ЭтотОбъект.ПартииБонусовДляКонвертации.Количество());
		Если ЭтотОбъект.ПартииБонусовДляКонвертации.Количество() > Число(100000) Тогда
			ЭтотОбъект.ПартииБонусовДляКонвертации.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ДвиженияЗачисленияИзБуфера()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИСТИНА КАК Активность,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НоминальныйОбъект,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВидБонусов,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Номенклатура,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НакопительнаяПрограмма,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Буфер,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВремяЖизниБонусов,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.МаркетинговаяАкция,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Подразделение,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Партия,
	               |	0 КАК Остаток,
	               |	""Зачисление бонусных баллов на счет"" КАК Содержание,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ХарактеристикаБонуса,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка.ДатаОперации КАК Период,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.КлючПримВыдано
	               |ИЗ
	               |	Документ.bon_УправлениеБонусамиНаСчетах.ПартииБонусовДляКонвертации КАК bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации
	               |ГДЕ
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ИСТИНА,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НоминальныйОбъект,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВидБонусов,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Номенклатура,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НакопительнаяПрограмма,
	               |	0,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВремяЖизниБонусов,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.МаркетинговаяАкция,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Подразделение,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Партия,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Буфер,
	               |	""Зачисление бонусных баллов на счет"",
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ХарактеристикаБонуса,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка.ДатаОперации,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.КлючПримВыдано
	               |ИЗ
	               |	Документ.bon_УправлениеБонусамиНаСчетах.ПартииБонусовДляКонвертации КАК bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации
	               |ГДЕ
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДвиженияСписание()
	                                         
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИСТИНА КАК Активность,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НоминальныйОбъект,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВидБонусов,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Номенклатура,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.КлючПримВыдано,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НакопительнаяПрограмма,
	               |	0 КАК Буфер,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВремяЖизниБонусов,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.МаркетинговаяАкция,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Подразделение,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Партия,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Остаток КАК Остаток,
	               |	""Списание по сроку жизни"" КАК Содержание,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ХарактеристикаБонуса,
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка.ДатаОперации КАК Период
	               |ИЗ
	               |	Документ.bon_УправлениеБонусамиНаСчетах.ПартииБонусовДляКонвертации КАК bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации
	               |ГДЕ
	               |	bon_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДвиженияЗАчисление()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИСТИНА КАК Активность,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НоминальныйОбъект,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВидБонусов,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Номенклатура,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.НакопительнаяПрограмма,
	               |	0 КАК Буфер,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ВремяЖизниБонусов,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.МаркетинговаяАкция,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Подразделение,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Партия,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Остаток КАК Остаток,
	               |	""Возврат Номенальной Скидки"" КАК Содержание,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.ХарактеристикаБонуса,
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка.ДатаОперации КАК Период
	               |ИЗ
	               |	Документ.мчт_УправлениеБонусамиНаСчетах.ПартииБонусовДляКонвертации КАК мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации
	               |ГДЕ
	               |	мчт_УправлениеПартиямиБонусовПартииБонусовДляКонвертации.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ДвиженияОтрицОстатковСпис()
			
	ТаблицаДвижений = Новый ТаблицаЗначений;	
	ТаблицаДвижений.Колонки.Добавить("Активность",,"Активность");
	ТаблицаДвижений.Колонки.Добавить("Период",,"Период");
	ТаблицаДвижений.Колонки.Добавить("ВидДвижения",,"ВидДвижения");
	ТаблицаДвижений.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТаблицаДвижений.Колонки.Добавить("ДатаНачисления",,"ДатаНачисления");
	ТаблицаДвижений.Колонки.Добавить("Номенклатура",,"Номенклатура");
	ТаблицаДвижений.Колонки.Добавить("ХарактеристикаБонуса",,"ХарактеристикаБонуса");
	ТаблицаДвижений.Колонки.Добавить("Партия",,"Партия");
	ТаблицаДвижений.Колонки.Добавить("Остаток",,"Остаток");
	ТаблицаДвижений.Колонки.Добавить("Содержание",,"Содержание");
	ТаблицаДвижений.Колонки.Добавить("Буфер",,"Буфер");
		
	Для Каждого Строки Из ТаблицаДляСписанияОтрицательныхОстатков Цикл  
		Строка = ТаблицаДвижений.Добавить();
		Строка.Активность = Истина;	
		Строка.Период = Строки.ДатаНачисления; 
		Строка.ВидДвижения = ВидДвиженияНакопления.Приход;	
		Строка.НоминальныйОбъект = Строки.НоминальныйОбъект;
		Строка.ДатаНачисления = ЭтотОбъект.ДатаОперации;   	
		Строка.Партия = Строки.Партия;		
		Строка.ХарактеристикаБонуса = Строки.ХарактеристикаБонуса;
		Строка.Номенклатура = Строки.Номенклатура; 
		Строка.Остаток = Число(СтрЗаменить(Формат(Строки.Остаток,"ЧРД=.; ЧГ="),"-","")); 
		Строка.Содержание = Строки.Содержание;
		Строка.Буфер = Строки.Буфер;
	КонецЦикла;
	                               
	Возврат ТаблицаДвижений;
	
КонецФункции

///Отрицательный остаток для списания по сроку годности
Процедура СписаниеОтрицательныхБонусныхБалловВОстатке()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	 "ВЫБРАТЬ
	 |	bon_ПартииБонусовНаСчетахОстатки.НоминальныйОбъект,
	 |	bon_ПартииБонусовНаСчетахОстатки.Партия.Дата КАК ДатаНачисления,
	 |	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ, bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниОтрицательныхОстатков + bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера), ДЕНЬ) КАК ДатаСписания,
	 |	НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ТекущаяДата,
	 |	bon_ПартииБонусовНаСчетахОстатки.Номенклатура,
	 |	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток,
	 |	ВЫБОР
	 |		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	 |			ТОГДА РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаПереводаИзБуферавОстаток, bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ)
	 |		ИНАЧЕ РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера
	 |	КОНЕЦ КАК ДнейПослеНачисления,
	 |	bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса,
	 |	bon_ПартииБонусовНаСчетахОстатки.Партия
	 |ПОМЕСТИТЬ Данные
	 |ИЗ
	 |	РегистрНакопления.bon_ПартииБонусовНаСчетах.Остатки(&ТекущаяДата, ) КАК bon_ПартииБонусовНаСчетахОстатки
	 |ГДЕ
	 |	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток < 0
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	bon_ПартииБонусовНаСчетахОстатки.Партия,
	 |	bon_ПартииБонусовНаСчетахОстатки.НоминальныйОбъект,
	 |	bon_ПартииБонусовНаСчетахОстатки.Партия.Дата,
	 |	bon_ПартииБонусовНаСчетахОстатки.Номенклатура,
	 |	bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток,
	 |	bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса,
	 |	ВЫБОР
	 |		КОГДА bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ПоДате = ИСТИНА
	 |			ТОГДА РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ДатаПереводаИзБуферавОстаток, bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ)
	 |		ИНАЧЕ РАЗНОСТЬДАТ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, &ТекущаяДата, ДЕНЬ) - bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера
	 |	КОНЕЦ,
	 |	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(bon_ПартииБонусовНаСчетахОстатки.Партия.Дата, ДЕНЬ, bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниОтрицательныхОстатков + bon_ПартииБонусовНаСчетахОстатки.ХарактеристикаБонуса.ВремяЖизниБуфера), ДЕНЬ)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Данные.НоминальныйОбъект,
	 |	Данные.ДатаНачисления КАК ДатаНачисления,
	 |	Данные.ДатаСписания,
	 |	0 КАК Буфер,
	 |	Данные.ОстатокОстаток КАК Остаток,
	 |	Данные.Партия,
	 |	Данные.ХарактеристикаБонуса,
	 |	Данные.Номенклатура,
	 |	Данные.ДнейПослеНачисления,
	 |	Данные.ХарактеристикаБонуса.ВремяЖизниОтрицательныхОстатков КАК ВремяЖизни,
	 |	""Списание по сроку жизни Отрицательные Остатки"" КАК Содержание
	 |ИЗ
	 |	Данные КАК Данные
	 |ГДЕ
	 |	Данные.ДатаСписания <= Данные.ТекущаяДата
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	ДатаНачисления,
	 |	Остаток";
	 Запрос.УстановитьПараметр("ТекущаяДата", ЭтотОбъект.ДатаОперации);
	 Результат2 = Запрос.Выполнить().Выгрузить();
	 
	Для каждого СтрокаТЗ Из Результат2 Цикл
		Строка = ЭтотОбъект.ТаблицаДляСписанияОтрицательныхОстатков.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЗ);
	КонецЦикла;	

	
КонецПроцедуры

////////////////////////////////////////////
///Временно для переноса
Процедура ЗаполнитьДляПереносаИзСписания(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Ссылка,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НомерСтроки,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НоминальныйОбъект КАК НоминальныйОбъект,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ДатаНачисления,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Буфер,
	|	СУММА(мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Остаток) КАК Остаток,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Номенклатура,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НакопительнаяПрограмма,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Подразделение,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Содержание,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ВидБонусов,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НоменклатураПрименения,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.МаркетинговаяАкция,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ВремяЖизниБонусов,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Партия,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ХарактеристикаБонуса
	|ИЗ
	|	Документ.мчт_УправлениеБонусамиНаСчетах.ПартииБонусовДляКонвертации КАК мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации
	|ГДЕ
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Ссылка = &Ссылка
	|	И мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НоминальныйОбъект.Владелец = &Владелец
	|
	|СГРУППИРОВАТЬ ПО
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ВидБонусов,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Содержание,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Партия,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Ссылка,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ДатаНачисления,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Номенклатура,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НакопительнаяПрограмма,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Подразделение,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.МаркетинговаяАкция,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НоменклатураПрименения,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ХарактеристикаБонуса,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НоминальныйОбъект,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НомерСтроки,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.Буфер,
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.ВремяЖизниБонусов
	|
	|УПОРЯДОЧИТЬ ПО
	|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляКонвертации.НоминальныйОбъект.Наименование";
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("Владелец", Справочники.ма_ВидыНоминальныхОбъектов.НайтиПоКоду("03"));
	
	Результат1 = Запрос.Выполнить().Выгрузить();
	
	//Настройки
	ЭтотОбъект.РучнаяКорректировка			= Документ.РучнаяКорректировка;
	ЭтотОбъект.СоздатьНачислениеНаОстаток   = Документ.СоздатьНачислениеНаОстаток;
	ЭтотОбъект.СоздатьАвтоОтправкуСМС       = Документ.СоздатьАвтоОтправкуСМС;
	ЭтотОбъект.Характеристика	            = Документ.Характеристика;
	ЭтотОбъект.ИспользоватьУсловие          = Документ.ИспользоватьУсловие;
	ЭтотОбъект.Условие                      = Документ.Условие;
	ЭтотОбъект.ОтправитьСМС                 = Документ.ОтправитьСМС;
	ЭтотОбъект.Остаток                      = Документ.Остаток;
	ЭтотОбъект.ДокСвязки                    = Документ.Ссылка;
	ЭтотОбъект.Записать();
	
	Характ = Справочники.мчт_ХарактеристикиБонусов.Стандартные;	
	Если ЗначениеЗаполнено(Документ.Характеристика) Тогда
		Характ = Документ.Характеристика;	
	КонецЕсли;
	
	Для Каждого ПереборСтрок Из Результат1 Цикл 
		НовСтрока = ЭтотОбъект.ПартииБонусовДляРедактирования.Добавить();	
	    НовСтрока.НоминальныйОбъект		= ПереборСтрок.НоминальныйОбъект;
		НовСтрока.ДатаНачисления        = ЭтотОбъект.Дата;
		НовСтрока.Буфер                 = Число(0);
		НовСтрока.Остаток               = ПереборСтрок.Остаток;
		НовСтрока.Номенклатура          = Строка("");
		НовСтрока.Содержание            = Строка("Начисление вручную Перенос Бонусной");
		НовСтрока.Партия                = ЭтотОбъект.Ссылка;
		НовСтрока.ХарактеристикаБонуса  = Характ;
		НовСтрока.Действие              = Строка("Прибавить");
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьСМСУведомлениеОсписание(Документ)
	
	ЭтотОбъект.РучнаяКорректировка			= Документ.РучнаяКорректировка;
	ЭтотОбъект.СоздатьНачислениеНаОстаток   = Документ.СоздатьНачислениеНаОстаток;
	ЭтотОбъект.СоздатьАвтоОтправкуСМС       = Документ.СоздатьАвтоОтправкуСМС;
	ЭтотОбъект.Характеристика	            = Документ.Характеристика;
	ЭтотОбъект.ИспользоватьУсловие          = Документ.ИспользоватьУсловие;
	ЭтотОбъект.Условие                      = Документ.Условие;
	ЭтотОбъект.ОтправитьСМС                 = Документ.ОтправитьСМС;
	ЭтотОбъект.Остаток                      = Документ.Остаток;
	ЭтотОбъект.ДокСвязки                    = Документ.Ссылка;
	ЭтотОбъект.Записать();
	
	Для Каждого СтрокаТЗ Из Документ.ПартииБонусовДляРедактирования Цикл 
		Если ЗначениеЗаполнено(СтрокаТЗ.НоминальныйОбъект.Держатель) и ЗначениеЗаполнено(СтрокаТЗ.НоминальныйОбъект.Держатель.ТелефонСотовый) Тогда
			НовСтрока = ЭтотОбъект.ПартииБонусовДляСМС.Добавить();
			НовСтрока.НоминальныйОбъект = СтрокаТЗ.НоминальныйОбъект;
			НовСтрока.ДатаОтправкиСМС = ЭтотОбъект.ДатаОперации;
			Если СтрокаТЗ.ХарактеристикаБонуса.ПоДате = Истина Тогда  
				НовСтрока.ДатаСписания = СтрокаТЗ.ХарактеристикаБонуса.ДатаСписанияОстаток;
				НовСтрока.Содержание = "Отправка СМС о списание: "+СтрокаТЗ.ХарактеристикаБонуса.ДатаСписанияОстаток;
			Иначе 
				НовСтрока.ДатаСписания = ЭтотОбъект.ДатаОперации + (60 * 60 * 24*СтрокаТЗ.ХарактеристикаБонуса.ВремяЖизниОстатков);	
				НовСтрока.Содержание = "Отправка СМС о списание через "+СтрокаТЗ.ХарактеристикаБонуса.ВремяЖизниОстатков+ " дней";
			КонецЕсли;
			НовСтрока.Остаток =СтрокаТЗ.Остаток;
			                                                                 
			///ДополнительныеСведения
			НовСтрока.Партия	= Документ.Ссылка; 
			НовСтрока.Держатель	=  СтрокаТЗ.НоминальныйОбъект.Держатель;
			НовСтрока.ТелефонСотовыйДержателя	=  СокрЛП(СтрокаТЗ.НоминальныйОбъект.Держатель.ТелефонСотовый);
			НовСтрока.НомерСчетаНомОбъект =  СтрЗаменить(СтрЗаменить(СокрЛП(СтрокаТЗ.НоминальныйОбъект.Код), ";", ""), "?", "");
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

///////////////////////////////////////////////////////////
////////////////ТУТ КОРРЕКТИРОВКА БУФЕРА///////////////////
//////////////////////////////////////////////////////////

Процедура ЗаполнитьПартиюКорректировкиБуфера()

	Если ЭтотОбъект.Партия.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ bon_ПартииБонусовНаСчетахОстаткиИОбороты.Регистратор) КАК Регистратор
	               |ПОМЕСТИТЬ Конвертации
	               |ИЗ
	               |	РегистрНакопления.bon_ПартииБонусовНаСчетах.ОстаткиИОбороты(, &КонПериода, Регистратор, , Партия = &Партия) КАК bon_ПартииБонусовНаСчетахОстаткиИОбороты
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(bon_ПартииБонусовНаСчетахОстаткиИОбороты.Регистратор) = ТИП(Документ.мчт_УправлениеБонусамиНаСчетах)
	               |	И bon_ПартииБонусовНаСчетахОстаткиИОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.bon_ВидыОперацийУправленияБонусами.ЗачислениеБонусныхБалловИзБуфера)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(Конвертации.Регистратор, 0) > 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК БылаКонвертация
	               |ИЗ
	               |	Конвертации КАК Конвертации";
				   
	Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("Партия", ЭтотОбъект.Партия);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат[0].БылаКонвертация Тогда 
		Сообщить("По данной партии уже произведена конвертация из буфера на остаток. Воспользуйтесь видом операции ""Корректировка остатка по партии""!");
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	bon_ПартииБонусовНаСчетах.Период,
	               |	bon_ПартииБонусовНаСчетах.Регистратор,
	               |	bon_ПартииБонусовНаСчетах.НомерСтроки,
	               |	bon_ПартииБонусовНаСчетах.Активность,
	               |	bon_ПартииБонусовНаСчетах.ВидДвижения,
	               |	bon_ПартииБонусовНаСчетах.НоминальныйОбъект,
	               |	bon_ПартииБонусовНаСчетах.ДатаНачисления,
	               |	bon_ПартииБонусовНаСчетах.ВидБонусов,
	               |	bon_ПартииБонусовНаСчетах.Номенклатура,
	               |	bon_ПартииБонусовНаСчетах.НакопительнаяПрограмма,
	               |	bon_ПартииБонусовНаСчетах.Партия,
	               |	bon_ПартииБонусовНаСчетах.Буфер КАК БуферСтарый,
	               |	bon_ПартииБонусовНаСчетах.Остаток,
	               |	bon_ПартииБонусовНаСчетах.НоменклатураПрименения,
	               |	bon_ПартииБонусовНаСчетах.Подразделение,
	               |	bon_ПартииБонусовНаСчетах.МаркетинговаяАкция,
	               |	bon_ПартииБонусовНаСчетах.ВремяЖизниБонусов,
	               |	""Корректировка остатка"" КАК Содержание,
	               |	0 КАК БуферНовый
	               |ИЗ
	               |	РегистрНакопления.bon_ПартииБонусовНаСчетах КАК bon_ПартииБонусовНаСчетах
	               |ГДЕ
	               |	bon_ПартииБонусовНаСчетах.Партия = &Партия
	               |	И bon_ПартииБонусовНаСчетах.Регистратор = &Партия";
				   
	Запрос.УстановитьПараметр("Партия", ЭтотОбъект.Партия);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТЗ Из Результат Цикл
		Строка = ЭтотОбъект.ПартииБонусовДляРедактированияБуфера.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЗ);
	КонецЦикла;

КонецПроцедуры

Функция ДвиженияКорректировки()
	
	ТаблицаДвижений = Новый ТаблицаЗначений;	
	ТаблицаДвижений.Колонки.Добавить("Активность",,"Активность");
	ТаблицаДвижений.Колонки.Добавить("Период",,"Период");
	ТаблицаДвижений.Колонки.Добавить("ВидДвижения",,"ВидДвижения");
	ТаблицаДвижений.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТаблицаДвижений.Колонки.Добавить("ДатаНачисления",,"ДатаНачисления");
	ТаблицаДвижений.Колонки.Добавить("Номенклатура",,"Номенклатура");
	ТаблицаДвижений.Колонки.Добавить("КлючПримВыдано",,"КлючПримВыдано");
	ТаблицаДвижений.Колонки.Добавить("ХарактеристикаБонуса",,"ХарактеристикаБонуса");
	ТаблицаДвижений.Колонки.Добавить("Партия",,"Партия");
	ТаблицаДвижений.Колонки.Добавить("Остаток",,"Остаток");
	ТаблицаДвижений.Колонки.Добавить("Содержание",,"Содержание");
	ТаблицаДвижений.Колонки.Добавить("Буфер",,"Буфер");
	
	
	Для Каждого Строки Из ПартииБонусовДляРедактирования Цикл  
		Строка = ТаблицаДвижений.Добавить();
		Строка.Активность = Истина;	
		Строка.Период = Строки.ДатаНачисления; 
		Если Строки.Действие = "Прибавить" Тогда 
			Строка.ВидДвижения = ВидДвиженияНакопления.Приход;
		ИначеЕсли Строки.Действие = "Отнять" Тогда 
			Строка.ВидДвижения = ВидДвиженияНакопления.Расход;
		КонецЕсли;
		
		Строка.НоминальныйОбъект = Строки.НоминальныйОбъект;
		Строка.ДатаНачисления = Строки.ДатаНачисления; 
		Если Строки.Партия = Неопределено или Строки.Партия.Пустая() Тогда
			Строка.Партия = ЭтотОбъект.Ссылка;
		Иначе 
			Строка.Партия = Строки.Партия;		
		КонецЕсли;
		Строка.Номенклатура = Строки.Номенклатура; 
		Строка.КлючПримВыдано = Строки.КлючПримВыдано; 
		Строка.ХарактеристикаБонуса = Строки.ХарактеристикаБонуса;
		Строка.Остаток = Строки.Остаток; 
		Строка.Содержание = Строки.Содержание;
		Строка.Буфер = Строки.Буфер;
	КонецЦикла;
		
	
		
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция ДвижРезультатаМаркАктивности()
	
	ТаблицаДвижений = Новый ТаблицаЗначений;	
	ТаблицаДвижений.Колонки.Добавить("Активность",,"Активность");
	ТаблицаДвижений.Колонки.Добавить("Период",,"Период");
	ТаблицаДвижений.Колонки.Добавить("ВидДвижения",,"ВидДвижения");
	ТаблицаДвижений.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТаблицаДвижений.Колонки.Добавить("ДатаНачисления",,"ДатаНачисления");
	ТаблицаДвижений.Колонки.Добавить("Номенклатура",,"Номенклатура");
	ТаблицаДвижений.Колонки.Добавить("КлючПримВыдано",,"КлючПримВыдано");
	ТаблицаДвижений.Колонки.Добавить("ХарактеристикаБонуса",,"ХарактеристикаБонуса");
	ТаблицаДвижений.Колонки.Добавить("Партия",,"Партия");
	ТаблицаДвижений.Колонки.Добавить("Остаток",,"Остаток");
	ТаблицаДвижений.Колонки.Добавить("Содержание",,"Содержание");
	ТаблицаДвижений.Колонки.Добавить("Буфер",,"Буфер");
	
	
	Для Каждого Строки Из Результаты_маркетинговой_активности Цикл  
		Строка = ТаблицаДвижений.Добавить();
		Строка.Активность = Истина;	
		Строка.Период = Строки.ДатаНачисления;
		
		Если Строки.Действие = "Прибавить" Тогда 
			Строка.ВидДвижения = ВидДвиженияНакопления.Приход;
		ИначеЕсли Строки.Действие = "Отнять" Тогда 
			Строка.ВидДвижения = ВидДвиженияНакопления.Расход;
		КонецЕсли;
	
		Строка.НоминальныйОбъект = Строки.НоминальныйОбъект;
		Строка.ДатаНачисления = Строки.ДатаНачисления; 
		Строка.Партия = ЭтотОбъект.Ссылка;
		Строка.ХарактеристикаБонуса = Строки.ХарактеристикаБонуса;
		Строка.Остаток = Строки.Остаток; 
		Строка.Содержание = Строки.Содержание;
		Строка.Буфер = Строки.Буфер;
	КонецЦикла;
		
	
		
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция КорректировкаБуфераAdmin()
	
	ТаблицаДвижений = Новый ТаблицаЗначений;	
	ТаблицаДвижений.Колонки.Добавить("Активность",,"Активность");
	ТаблицаДвижений.Колонки.Добавить("Период",,"Период");
	ТаблицаДвижений.Колонки.Добавить("ВидДвижения",,"ВидДвижения");
	ТаблицаДвижений.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТаблицаДвижений.Колонки.Добавить("ДатаНачисления",,"ДатаНачисления");
	ТаблицаДвижений.Колонки.Добавить("Номенклатура",,"Номенклатура");
	ТаблицаДвижений.Колонки.Добавить("КлючПримВыдано",,"КлючПримВыдано");
	ТаблицаДвижений.Колонки.Добавить("ХарактеристикаБонуса",,"ХарактеристикаБонуса");
	ТаблицаДвижений.Колонки.Добавить("Партия",,"Партия");
	ТаблицаДвижений.Колонки.Добавить("Остаток",,"Остаток");
	ТаблицаДвижений.Колонки.Добавить("Содержание",,"Содержание");
	ТаблицаДвижений.Колонки.Добавить("Буфер",,"Буфер");
	
	Для Каждого Строки Из ПартииБонусовДляРедактирования_Admin Цикл  
		Строка = ТаблицаДвижений.Добавить();
		Строка.Активность 			= Истина;	
		Строка.Период 				= Строки.ДатаНачисления;
		
		Если Строки.Действие = "Прибавить" Тогда 
			Строка.ВидДвижения 		= ВидДвиженияНакопления.Приход;
		ИначеЕсли Строки.Действие = "Отнять" Тогда 
			Строка.ВидДвижения 		= ВидДвиженияНакопления.Расход;
		КонецЕсли;
		
		Строка.НоминальныйОбъект 	= Строки.НоминальныйОбъект;
		Строка.ДатаНачисления 		= Строки.ДатаНачисления; 
		Строка.Партия 				= Строки.Партия;
		Строка.Номенклатура 		= Строки.Номенклатура;
		Строка.КлючПримВыдано 		= Строки.КлючПримВыдано;
		Строка.ХарактеристикаБонуса = Строки.ХарактеристикаБонуса;
		//Строка.Остаток = Строки.Остаток; 
		Строка.Содержание 			= Строки.Содержание;
		Строка.Буфер 				= Строки.Буфер;
	КонецЦикла;		
	
	Возврат ТаблицаДвижений;
	
КонецФункции

Функция КорректировкаОстаткаAdmin()
	
	ТаблицаДвижений = Новый ТаблицаЗначений;	
	ТаблицаДвижений.Колонки.Добавить("Активность",,"Активность");
	ТаблицаДвижений.Колонки.Добавить("Период",,"Период");
	ТаблицаДвижений.Колонки.Добавить("ВидДвижения",,"ВидДвижения");
	ТаблицаДвижений.Колонки.Добавить("НоминальныйОбъект",,"НоминальныйОбъект");
	ТаблицаДвижений.Колонки.Добавить("ДатаНачисления",,"ДатаНачисления");
	ТаблицаДвижений.Колонки.Добавить("Номенклатура",,"Номенклатура");
	ТаблицаДвижений.Колонки.Добавить("КлючПримВыдано",,"КлючПримВыдано");
	ТаблицаДвижений.Колонки.Добавить("ХарактеристикаБонуса",,"ХарактеристикаБонуса");
	ТаблицаДвижений.Колонки.Добавить("Партия",,"Партия");
	ТаблицаДвижений.Колонки.Добавить("Остаток",,"Остаток");
	ТаблицаДвижений.Колонки.Добавить("Содержание",,"Содержание");
	ТаблицаДвижений.Колонки.Добавить("Буфер",,"Буфер");
	
	Для Каждого Строки Из ПартииБонусовДляРедактирования_Admin Цикл  
		Строка = ТаблицаДвижений.Добавить();
		Строка.Активность 			= Истина;	
		Строка.Период 				= Строки.ДатаНачисления;
		
		Если Строки.Действие = "Прибавить" Тогда 
			Строка.ВидДвижения 		= ВидДвиженияНакопления.Приход;
		ИначеЕсли Строки.Действие = "Отнять" Тогда 
			Строка.ВидДвижения 		= ВидДвиженияНакопления.Расход;
		КонецЕсли;
		
		Строка.НоминальныйОбъект 	= Строки.НоминальныйОбъект;
		Строка.ДатаНачисления 		= Строки.ДатаНачисления; 
		Строка.Партия 				= Строки.Партия;
		Строка.Номенклатура 		= Строки.Номенклатура;
		Строка.КлючПримВыдано 		= Строки.КлючПримВыдано;
		Строка.ХарактеристикаБонуса = Строки.ХарактеристикаБонуса;
		Строка.Остаток = Строки.Остаток; 
		Строка.Содержание 			= Строки.Содержание;
		//Строка.Буфер 				= Строки.Буфер;
	КонецЦикла;		
	
	Возврат ТаблицаДвижений;
	
КонецФункции

//////////////////////////////////////////////////////////
////////////////ТУТ КОРРЕКТИРОВКА ОСТАТКА///////////////////
//////////////////////////////////////////////////////////

Процедура ЗаполнитьПартиюКорректировкиОстатка()
	
	Если ЭтотОбъект.Партия.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ bon_ПартииБонусовНаСчетахОстаткиИОбороты.Регистратор) КАК Регистратор
	               |ПОМЕСТИТЬ Конвертации
	               |ИЗ
	               |	РегистрНакопления.bon_ПартииБонусовНаСчетах.ОстаткиИОбороты(, &КонПериода, Регистратор, , Партия = &Партия) КАК bon_ПартииБонусовНаСчетахОстаткиИОбороты
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(bon_ПартииБонусовНаСчетахОстаткиИОбороты.Регистратор) = ТИП(Документ.мчт_УправлениеБонусамиНаСчетах)
	               |	И bon_ПартииБонусовНаСчетахОстаткиИОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.bon_ВидыОперацийУправленияБонусами.ЗачислениеБонусныхБалловИзБуфера)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(Конвертации.Регистратор, 0) > 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК БылаКонвертация
	               |ИЗ
	               |	Конвертации КАК Конвертации";
				   
	Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("Партия", ЭтотОбъект.Партия);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Если НЕ Результат[0].БылаКонвертация Тогда 
		Сообщить("По данной партии не было произведено конвертации номинала. Воспользуйтесь видом операции ""Корректировка остатков в буфере""!");
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	bon_ПартииБонусовНаСчетахОстатки.Партия,
					|	ЕСТЬNULL(bon_ПартииБонусовНаСчетахОстатки.ОстатокОстаток, 0) КАК КонечныйОстаток
					|ИЗ
					|	РегистрНакопления.bon_ПартииБонусовНаСчетах.Остатки(, ) КАК bon_ПартииБонусовНаСчетахОстатки
					|ГДЕ
					|	bon_ПартииБонусовНаСчетахОстатки.Партия = &Партия";
					
	Запрос.УстановитьПараметр("Партия", ЭтотОбъект.Партия);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Сообщить("По данной партии нет нераспределенного остатка. Заполните табличную часть вручную для корректировки данной партии");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	bon_ПартииБонусовНаСчетах.Период,
	               |	bon_ПартииБонусовНаСчетах.Регистратор,
	               |	bon_ПартииБонусовНаСчетах.НоминальныйОбъект,
	               |	bon_ПартииБонусовНаСчетах.ДатаНачисления,
	               |	bon_ПартииБонусовНаСчетах.ВидБонусов,
	               |	bon_ПартииБонусовНаСчетах.Номенклатура,
	               |	bon_ПартииБонусовНаСчетах.НакопительнаяПрограмма,
	               |	bon_ПартииБонусовНаСчетах.Партия,
	               |	СУММА(bon_ПартииБонусовНаСчетах.Остаток) КАК Остаток,
	               |	bon_ПартииБонусовНаСчетах.НоменклатураПрименения,
	               |	bon_ПартииБонусовНаСчетах.Подразделение,
	               |	bon_ПартииБонусовНаСчетах.МаркетинговаяАкция,
	               |	bon_ПартииБонусовНаСчетах.ВремяЖизниБонусов,
	               |	bon_ПартииБонусовНаСчетах.Содержание
	               |ПОМЕСТИТЬ врем
	               |ИЗ
	               |	РегистрНакопления.bon_ПартииБонусовНаСчетах.ОстаткиИОбороты КАК bon_ПартииБонусовНаСчетахОстаткиИОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.bon_ПартииБонусовНаСчетах КАК bon_ПартииБонусовНаСчетах
	               |		ПО bon_ПартииБонусовНаСчетахОстаткиИОбороты.Партия = bon_ПартииБонусовНаСчетах.Партия
	               |			И bon_ПартииБонусовНаСчетахОстаткиИОбороты.НоминальныйОбъект = bon_ПартииБонусовНаСчетах.НоминальныйОбъект
	               |			И bon_ПартииБонусовНаСчетахОстаткиИОбороты.ДатаНачисления = bon_ПартииБонусовНаСчетах.ДатаНачисления
	               |			И bon_ПартииБонусовНаСчетахОстаткиИОбороты.ВидБонусов = bon_ПартииБонусовНаСчетах.ВидБонусов
	               |			И bon_ПартииБонусовНаСчетахОстаткиИОбороты.Номенклатура = bon_ПартииБонусовНаСчетах.Номенклатура
	               |			И bon_ПартииБонусовНаСчетахОстаткиИОбороты.НакопительнаяПрограмма = bon_ПартииБонусовНаСчетах.НакопительнаяПрограмма
	               |ГДЕ
	               |	bon_ПартииБонусовНаСчетахОстаткиИОбороты.Партия = &Партия
	               |	И ТИПЗНАЧЕНИЯ(bon_ПартииБонусовНаСчетах.Регистратор) = ТИП(Документ.мчт_УправлениеБонусамиНаСчетах)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	bon_ПартииБонусовНаСчетах.Содержание,
	               |	bon_ПартииБонусовНаСчетах.Подразделение,
	               |	bon_ПартииБонусовНаСчетах.МаркетинговаяАкция,
	               |	bon_ПартииБонусовНаСчетах.Период,
	               |	bon_ПартииБонусовНаСчетах.НоминальныйОбъект,
	               |	bon_ПартииБонусовНаСчетах.ДатаНачисления,
	               |	bon_ПартииБонусовНаСчетах.Регистратор,
	               |	bon_ПартииБонусовНаСчетах.Партия,
	               |	bon_ПартииБонусовНаСчетах.НоменклатураПрименения,
	               |	bon_ПартииБонусовНаСчетах.Номенклатура,
	               |	bon_ПартииБонусовНаСчетах.НакопительнаяПрограмма,
	               |	bon_ПартииБонусовНаСчетах.ВидБонусов,
	               |	bon_ПартииБонусовНаСчетах.ВремяЖизниБонусов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	врем.Период,
	               |	врем.Регистратор,
	               |	врем.НоминальныйОбъект,
	               |	врем.ДатаНачисления,
	               |	врем.ВидБонусов,
	               |	врем.Номенклатура,
	               |	врем.НакопительнаяПрограмма,
	               |	врем.Партия,
	               |	врем.Остаток КАК ОстатокСтарый,
	               |	врем.НоменклатураПрименения,
	               |	врем.Подразделение,
	               |	врем.МаркетинговаяАкция,
	               |	врем.ВремяЖизниБонусов,
	               |	врем.Содержание,
	               |	0 КАК ОстатокНовый
	               |ИЗ
	               |	врем КАК врем";
				   
	Запрос.УстановитьПараметр("Партия", ЭтотОбъект.Партия);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТЗ Из Результат Цикл
		Строка = ЭтотОбъект.ПартииБонусовДляРедактированияОстатка.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЗ);
	КонецЦикла;

КонецПроцедуры

Функция ДвиженияКорректировкиОстатка()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.Ссылка,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.НоминальныйОбъект,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.ДатаНачисления,
					|	ЕСТЬNULL(мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.ОстатокСтарый, 0) КАК ОстатокСтарый,
					|	ЕСТЬNULL(мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.ОстатокНовый, 0) КАК ОстатокНовый,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.Номенклатура,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.НакопительнаяПрограмма,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.Подразделение,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.Содержание,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.ВидБонусов,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.НоменклатураПрименения,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.МаркетинговаяАкция,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.ВремяЖизниБонусов,
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.Партия,
					|	0 КАК Буфер
					|ПОМЕСТИТЬ Буферная
					|ИЗ
					|	Документ.мчт_УправлениеБонусамиНаСчетах.ПартииБонусовДляРедактированияОстатка КАК мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка
					|ГДЕ
					|	мчт_УправлениеБонусамиНаСчетахПартииБонусовДляРедактированияОстатка.Ссылка = &Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	Буферная.Ссылка,
					|	Буферная.НоминальныйОбъект,
					|	Буферная.ДатаНачисления,
					|	Буферная.ОстатокСтарый,
					|	Буферная.ОстатокНовый,
					|	Буферная.Номенклатура,
					|	Буферная.НакопительнаяПрограмма,
					|	Буферная.Подразделение,
					|	Буферная.Содержание,
					|	Буферная.ВидБонусов,
					|	Буферная.НоменклатураПрименения,
					|	Буферная.МаркетинговаяАкция,
					|	Буферная.ВремяЖизниБонусов,
					|	Буферная.Партия,
					|	Буферная.Буфер,
					|	ВЫБОР
					|		КОГДА Буферная.ОстатокСтарый - Буферная.ОстатокНовый < 0
					|			ТОГДА -1 * (Буферная.ОстатокСтарый - Буферная.ОстатокНовый)
					|		ИНАЧЕ Буферная.ОстатокСтарый - Буферная.ОстатокНовый
					|	КОНЕЦ КАК Остаток,
					|	Буферная.Ссылка.ДатаОперации КАК Период,
					|	ВЫБОР
					|		КОГДА Буферная.ОстатокСтарый - Буферная.ОстатокНовый < 0
					|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
					|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
					|	КОНЕЦ КАК ВидДвижения
					|ИЗ
					|	Буферная КАК Буферная
					|ГДЕ
					|	Буферная.ОстатокНовый <> 0";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

////////////////////////////////////////////////////////
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движение = РегистрыНакопления.bon_ПартииБонусовНаСчетах.СоздатьНаборЗаписей();
	Движение.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	
	ЭтотОбъект.Движения.bon_ПартииБонусовНаСчетах.Записывать = Истина;
	ЭтотОбъект.Движения.bon_ПартииБонусовНаСчетах.Очистить();
	
	Если ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ЗачислениеБонусныхБалловИзБуфера Тогда
		ТаблицаДвижений = ДвиженияЗачисленияИзБуфера();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.КорректировкаБуфера или 
		ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.КорректировкаОстатка Или 
		ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.АвтоформированиеНачислениеОстаткаПеренос Тогда 
		ТаблицаДвижений = ДвиженияКорректировки();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.СписаниеБонусныхБаллов Тогда
		ТаблицаДвижений = ДвиженияСписание();	
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ВозвратНоменальнойСкидки Тогда
		ТаблицаДвижений = ДвиженияЗАчисление();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.СписаниеОтрицательныхБонусныхБалловВОстатке Тогда
		ТаблицаДвижений = ДвиженияОтрицОстатковСпис();
	///+++Результат_маркетинговой_активности+++	
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.Результат_маркетинговой_активности  Тогда 
		ТаблицаДвижений = ДвижРезультатаМаркАктивности();
	///---Результат_маркетинговой_активности---	
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.КорректировкаБуфераAdmin  Тогда 
		ТаблицаДвижений = КорректировкаБуфераAdmin();
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.КорректировкаОстаткаAdmin  Тогда 
		ТаблицаДвижений = КорректировкаОстаткаAdmin();
	КонецЕсли;
	
	Если Не ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ОтправкаСМСоПредстоящемСписание и 
		Не ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.Отправка_СМС_о_Начислении Тогда
		ЭтотОбъект.Движения.bon_ПартииБонусовНаСчетах.Загрузить(ТаблицаДвижений);	
	КонецЕсли;
	
	///Отправляем документ в офис с движением
	//Если НЕ мчт_БонуснаяПрограммаСервер.ПередатьДокументВЦентрДанПоБонусам(ЭтотОбъект) Тогда		
	//	Ответ     = "Ошибка при отправки данных оп накопительной системе (веб)!";
	//	Ухзел  = Константы.мчт_ЭтотУзелИБ_Бонусов.Получить();
	//	МЧТ_МодульСПолнымиПравами.ЗаписьОбъектаВОчередьДляОтправкиПоWS(ЭтотОбъект.Ссылка, Ухзел);
	//КонецЕсли;
	
	Если ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.СписаниеБонусныхБаллов и
		ЭтотОбъект.РучнаяКорректировка = Истина Тогда
		Если ЭтотОбъект.СоздатьНачислениеНаОстаток = Истина Тогда	
			Док					= Документы.мчт_УправлениеБонусамиНаСчетах.СоздатьДокумент();	
			Док.ВидОперации		= Перечисления.bon_ВидыОперацийУправленияБонусами.АвтоформированиеНачислениеОстаткаПеренос;
			Док.ДатаОперации	= ТекущаяДата()+80;
			Попытка
				Док.Автор		= Справочники.Пользователи.НайтиПоКоду("admin");
			Исключение
			КонецПопытки;
			Док.Комментарий		= "Автоформирование Начисление Остатка 'Перенос'";
			Док.Автозаполнение(ЭтотОбъект);	
			Док.Записать(РежимЗаписиДокумента.Проведение);				
		КонецЕсли;
	КонецЕсли;
	
	Если  ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.СписаниеБонусныхБаллов и
		ЭтотОбъект.РучнаяКорректировка = Истина Тогда
		Если ЭтотОбъект.СоздатьАвтоОтправкуСМС = Истина Тогда	
			ДокСМС					= Документы.мчт_УправлениеБонусамиНаСчетах.СоздатьДокумент();	
			ДокСМС.ВидОперации		= Перечисления.bon_ВидыОперацийУправленияБонусами.ОтправкаСМСоПредстоящемСписание;
			ДокСМС.ДатаОперации	= ТекущаяДата()+80;
			Попытка
				Док.Автор		= Справочники.Пользователи.НайтиПоКоду("admin");
			Исключение
			КонецПопытки;
			ДокСМС.Комментарий		= "Автоформирование Отправки СМС Рассылки";
			ДокСМС.Автозаполнение(Док);	
			ДокСМС.Записать(РежимЗаписиДокумента.Проведение);				
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.ВидОперации = Перечисления.bon_ВидыОперацийУправленияБонусами.ЗачислениеБонусныхБалловИзБуфера и 
		ЭтотОбъект.ДляОправкиСМССоздано = Ложь Тогда		
		Если ЭтотОбъект.ПартииБонусовДляСМС.Количество() > 0 Тогда 
			
			ДокСМСНач				= Документы.bon_УправлениеБонусамиНаСчетах.СоздатьДокумент();	
			ДокСМСНач.ВидОперации	= Перечисления.bon_ВидыОперацийУправленияБонусами.Отправка_СМС_о_Начислении;
			ДокСМСНач.ДатаОперации	= ТекущаяДата()+300;
			Попытка
				ДокСМСНач.Автор		= Справочники.Пользователи.НайтиПоНаименованию("Рудобаба Сергей");
			Исключение
			КонецПопытки;
			ДокСМСНач.Комментарий	= "Авто формирование списка для Отправки СМС о Начислении";
			
			
			Для Каждого ОтправСМС  Из ЭтотОбъект.ПартииБонусовДляСМС Цикл 
				ПоСтрок = ДокСМСНач.ПартииБонусовДляСМС.Добавить();	
				ПоСтрок.ОтправленоСМС  			= ОтправСМС.ОтправленоСМС;	
				ПоСтрок.НоминальныйОбъект 		= ОтправСМС.НоминальныйОбъект;
				ПоСтрок.ТекстСМС            	= ОтправСМС.ТекстСМС;
				ПоСтрок.Остаток             	= ОтправСМС.Остаток;
				ПоСтрок.Характеристика          = ОтправСМС.Характеристика;
				ПоСтрок.ДатаОтправкиСМС         = ОтправСМС.ДатаОтправкиСМС;
				ПоСтрок.Держатель               = ОтправСМС.Держатель;
				ПоСтрок.ТелефонСотовыйДержателя = ОтправСМС.ТелефонСотовыйДержателя;
				ПоСтрок.НомерСчетаНомОбъект		= ОтправСМС.НомерСчетаНомОбъект;
			КонецЦикла;
			
			ДокСМСНач.Записать(РежимЗаписиДокумента.Проведение);
			
			Если  ДокСМСНач.Проведен = Истина Тогда 
				ЭтотОбъект.ДляОправкиСМССоздано = Истина;
				ЭтотОбъект.Записать();
			КонецЕсли;		
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Дата) Тогда 
		ЭтотОбъект.Дата = ТекущаяДата();
	КонецЕсли;

КонецПроцедуры

///28.03.2018 +++
///Отмена проведения
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//Если РольДоступна("мчт_РедакторБонусов") Тогда
		УдолитьДвиж();	
		//Если Не мчт_БонуснаяПрограммаСервер.ПередатьДокументВЦентрДанПоБонусам(ЭтотОбъект) Тогда
		//	Ухзел  = Константы.мчт_ЭтотУзелИБ_Бонусов.Получить();
		//	МЧТ_МодульСПолнымиПравами.ЗаписьОбъектаВОчередьДляОтправкиПоWS(ЭтотОбъект.Ссылка, Ухзел);
		//КонецЕсли;	
	//Иначе 
	//	Если ЭтотОбъект.Проведен = Истина и НачалоДня(ЭтотОбъект.Дата) < НачалоДня(ТекущаяДата()) Тогда 
	//		Отказ = Истина;
	//		Сообщить("Документ старого периода не может быть отменет!!!");
	//	Иначе	
	//		УдолитьДвиж();	
	//		//Если Не мчт_БонуснаяПрограммаСервер.ПередатьДокументВЦентрДанПоБонусам(ЭтотОбъект) Тогда
	//		//	Ухзел  = Константы.мчт_ЭтотУзелИБ_Бонусов.Получить();
	//		//	МЧТ_МодульСПолнымиПравами.ЗаписьОбъектаВОчередьДляОтправкиПоWS(ЭтотОбъект.Ссылка, Ухзел);
	//		//КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

///Удоление движения
Процедура УдолитьДвиж()
	
	Набор = РегистрыНакопления.bon_ПартииБонусовНаСчетах.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Значение= ЭтотОбъект.Ссылка;
	Набор.Прочитать();
	Набор.Очистить();
	Набор.Записать();
	
КонецПроцедуры

Процедура ХарактОтправикСМСОНачис()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	bon_ХарактеристикиБонусов.ВключитьОНачисление КАК ОНачислении,
	|	bon_ХарактеристикиБонусов.Ссылка КАК Характеристика,
	|	bon_ХарактеристикиБонусов.ТекстСМСОНачислении КАК ТекстСМС,
	|	bon_ХарактеристикиБонусов.ОтСуммыБонусовУведОНачисл КАК ОтСуммы,
	|	bon_ХарактеристикиБонусов.ДоСуммыБонусовУведОНачисл КАК ДоСуммы
	|ИЗ
	|	Справочник.bon_ХарактеристикиБонусов КАК bon_ХарактеристикиБонусов
	|ГДЕ
	|	bon_ХарактеристикиБонусов.ВключитьОНачисление = ИСТИНА
	|	И bon_ХарактеристикиБонусов.ПометкаУдаления = ЛОЖЬ";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТЗ Из Результат Цикл
		Строка = ЭтотОбъект.ХарактеристикиДляОтправкиСМСОНачис.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЗ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьСМСОНачисл() Экспорт 
	
	Если ЭтотОбъект.ОтправитьСМС = Истина Тогда  
		Для Каждого Клиента Из ЭтотОбъект.ПартииБонусовДляСМС Цикл 
			Если Клиента.ОтправленоСМС = Ложь Тогда 
				
				ТелефонСотовый	= "7"+Прав(Клиента.ТелефонСотовыйДержателя, 10);
				НомерСчета		= Клиента.НомерСчетаНомОбъект;
				ТекстСообщения 	= Клиента.ТекстСМС;
				
				Дост=Число(88);
				Структура = смсТрафик.ОтправитьСМССообщениеПоНомеру(ТелефонСотовый, ТекстСообщения, Дост);
				Ответ = Структура.Описание + " " + Структура.Ид;
				Если Структура.Результат = Истина Тогда
					Клиента.ОтправленоСМС = Истина;
					Клиента.ДатаОтправкиСМС = ТекущаяДата();
					ЭтотОбъект.Записать();
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
	
