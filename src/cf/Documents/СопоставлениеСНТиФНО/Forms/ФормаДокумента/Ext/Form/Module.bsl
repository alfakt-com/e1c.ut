
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СНТСерверПереопределяемый.ПриСозданииНаСервереДокументаСопоставления(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
		ВСОбщегоНазначения.УстановитьЗаголовокФормыДокумента("", Объект.Ссылка, ЭтаФорма);
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ЗаполнитьТаблицуОшибок(Объект.Ошибки);
	КонецЕсли;

	ТекущаяДатаДокумента = Объект.Дата;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	СНТСерверПереопределяемый.ПриЧтенииНаСервере(ТекущийОбъект, ЭтотОбъект);
	
	ЗаполнитьТаблицуОшибок(ТекущийОбъект.Ошибки);
	УправлениеФормой();
	ЗаполнитьВспомогательныеДанныеФормы();
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи) 
	
	СНТСерверПереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);

	ЗаполнитьВспомогательныеДанныеФормы();
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьТоварыСНТ(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьТоварыСНТЗавершение", ЭтотОбъект, Параметры);
	ПроверитьЗаписьДокумента(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТоварыСНТЗавершение(Результат, Параметры) Экспорт
	
	МассивСтрокФНО = ПолучитьМассивСтрокТабличнойЧастиСУчетомОтборов(Элементы.ТоварыФНО, Объект.ТоварыФНО);
	МассивСтрокСНТ = ПолучитьМассивСтрокТабличнойЧастиСУчетомОтборов(Элементы.ТоварыСНТ, Объект.ТоварыСНТ);
	
	ЗаполнитьРеквизитыТоваровСНТПоРеквизитамТоваровФНО(МассивСтрокФНО,МассивСтрокСНТ);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыФНОПоказатьВсе(Команда)
	
	Элементы.ТоварыФНОПоказатьВсе.Пометка = Не Элементы.ТоварыФНОПоказатьВсе.Пометка;
	
	ПоказатьВсеТоварыФНО = Элементы.ТоварыФНОПоказатьВсе.Пометка;
	
	Если ПоказатьВсеТоварыФНО Тогда
		УбратьОтборТабличнойЧасти(Элементы.ТоварыФНО);
	Иначе
		ТекущиеДанные = Элементы.ФНО.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			УстановитьОтборТабличнойЧасти(Элементы.ТоварыФНО,Новый Структура("НомерРазделаФНО",ТекущиеДанные.НомерСтроки));
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСНТПоказатьВсе(Команда)
	
	Элементы.ТоварыСНТПоказатьВсе.Пометка = Не Элементы.ТоварыСНТПоказатьВсе.Пометка;
	
	ПоказатьВсеТоварыСНТ = Элементы.ТоварыСНТПоказатьВсе.Пометка;
	
	Если ПоказатьВсеТоварыСНТ Тогда
		УбратьОтборТабличнойЧасти(Элементы.ТоварыСНТ,"НомерРазделаСНТ");
	Иначе
		ТекущиеДанные = Элементы.СНТ.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			УстановитьОтборТабличнойЧасти(Элементы.ТоварыСНТ,Новый Структура("НомерРазделаСНТ",ТекущиеДанные.НомерСтроки),Истина);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСНТПоказатьСвязанныеСФНО(Команда)
	
	Элементы.ТоварыСНТПоказатьСвязанныеСФНО.Пометка = Не Элементы.ТоварыСНТПоказатьСвязанныеСФНО.Пометка;
	ПоказатьТоварыСНТСвязанныеСФНО = Элементы.ТоварыСНТПоказатьСвязанныеСФНО.Пометка;
	
	Если ПоказатьТоварыСНТСвязанныеСФНО Тогда
		УстановитьОтборТоваровСНТСвязанныхСФНО();
	Иначе
		УбратьОтборТабличнойЧасти(Элементы.ТоварыСНТ,"НомерПозицииВЗаявлении");
		УбратьОтборТабличнойЧасти(Элементы.ТоварыСНТ,"НомерЗаявленияВРамкахТС");
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСНТОчиститьВсе(Команда)
	
	ТекстВопроса = НСтр("ru='Данные табличной части будут очищены продолжить?'");
	
	ДополнительныеПараметры = Новый Структура("МассивСтрокСНТ", ПолучитьМассивСтрокТабличнойЧастиСУчетомОтборов(Элементы.ТоварыСНТ, Объект.ТоварыСНТ));
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ТоварыСНТОчиститьВсеПоказатьВопросЗавершение", 
		ЭтотОбъект, ДополнительныеПараметры);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСНТОчиститьВсеПоказатьВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого Строка ИЗ ДополнительныеПараметры.МассивСтрокСНТ Цикл
		
		Строка.НомерПозицииВЗаявлении = 0;
		Строка.НомерЗаявленияВРамкахТС = "";
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьОтборТабличнойЧасти(Таблица,КлючОтбора = "")
	
	Если КлючОтбора = "" Тогда
		Таблица.ОтборСтрок = Неопределено;
	Иначе
		НовыйОтбор = Новый Структура;
		Для Каждого ЭлементСтруктурыОтбора Из Таблица.ОтборСтрок Цикл
			Если ЭлементСтруктурыОтбора.Ключ <> КлючОтбора Тогда
				НовыйОтбор.Вставить(ЭлементСтруктурыОтбора.Ключ, ЭлементСтруктурыОтбора.Значение);
			КонецЕсли;
		КонецЦикла;
		Таблица.ОтборСтрок = Новый ФиксированнаяСтруктура(НовыйОтбор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборТабличнойЧасти(Таблица, Знач ДанныеОтбора, ДополнитьОтбор = Ложь)
	
	Если Не ДополнитьОтбор
		ИЛИ Таблица.ОтборСтрок = Неопределено Тогда
		Таблица.ОтборСтрок = Новый ФиксированнаяСтруктура(ДанныеОтбора);
	Иначе
		Для Каждого ЭлементСтруктурыОтбора Из Таблица.ОтборСтрок Цикл
			Если ДанныеОтбора.Свойство(ЭлементСтруктурыОтбора.Ключ) = Неопределено Тогда
				ДанныеОтбора.Вставить(ЭлементСтруктурыОтбора.Ключ, ЭлементСтруктурыОтбора.Значение);
			КонецЕсли;
		КонецЦикла;
		Таблица.ОтборСтрок = Новый ФиксированнаяСтруктура(ДанныеОтбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборТоваровСНТСвязанныхСФНО()
	
	ТекущиеДанные = Элементы.ТоварыФНО.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		НовыйОтбор = Новый Структура;
		НовыйОтбор.Вставить("НомерПозицииВЗаявлении", ТекущиеДанные.НомерПозицииВЗаявлении);
		НовыйОтбор.Вставить("НомерЗаявленияВРамкахТС",ТекущиеДанные.РегистрационныйНомерФНО);
		УстановитьОтборТабличнойЧасти(Элементы.ТоварыСНТ,НовыйОтбор,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивСтрокТабличнойЧастиСУчетомОтборов(ЭлементТаблица,РеквизитТаблица)
	
	Отборы = ЭлементТаблица.ОтборСтрок;
	Если Отборы = Неопределено Тогда
		МассивСтрокТаблицы = Новый Массив;
		Для Каждого Строка Из РеквизитТаблица Цикл
			МассивСтрокТаблицы.Добавить(Строка);
		КонецЦикла;
		Возврат МассивСтрокТаблицы;
	Иначе
		Возврат РеквизитТаблица.НайтиСтроки(Новый Структура(Отборы));
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТоварыСНТЗаполнитьОстатки(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ТоварыСНТЗаполнитьОстаткиЗавершение", ЭтотОбъект, Параметры);
	ПроверитьЗаписьДокумента(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСНТЗаполнитьОстаткиЗавершение(Результат, Параметры) Экспорт
	
	ТоварыСНТЗаполнитьОстаткиНаСервере();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
		
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ОрганизацияПриИзмененииНаСервере();
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	Объект.ИдентификационныйНомер = СНТСерверПереопределяемый.ПолучитьИдентификаторОрганизации(Объект.Организация);
			
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВСКлиентПереопределяемый.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияГруппаДокументыСвернутьРазвернутьНажатие(Элемент)
	Если Элементы.ГруппаДокументыСворачиваемая.Видимость = Истина Тогда
		Элементы.ГруппаДокументыСворачиваемая.Видимость = Ложь;
		Элемент.Заголовок = НСтр("ru='Развернуть (документы)'")
	Иначе
		Элементы.ГруппаДокументыСворачиваемая.Видимость = Истина;
		Элемент.Заголовок = НСтр("ru='Свернуть (документы)'")
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияГруппаТоварыСвернутьРазвернутьНажатие(Элемент)
	Если Элементы.ГруппаТоварыСворачиваемая.Видимость = Истина Тогда
		Элементы.ГруппаТоварыСворачиваемая.Видимость = Ложь;
		Элемент.Заголовок = НСтр("ru='Развернуть (товары)'")
	Иначе
		Элементы.ГруппаТоварыСворачиваемая.Видимость = Истина;
		Элемент.Заголовок = НСтр("ru='Свернуть (товары)'")
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизация) Тогда 
		Объект.Организация = Неопределено;
		Объект.СтруктурноеПодразделение = Неопределено;
	Иначе 
		Результат = ВСКлиентПереопределяемый.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация Тогда
			Объект.Организация = СтруктурноеПодразделениеОрганизация;
			ОрганизацияПриИзмененииНаСервере();
		КонецЕсли;
		Если Результат.ИзмененоСтруктурноеПодразделение Тогда
			Если ТипЗнч(СтруктурноеПодразделениеОрганизация) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
				Объект.СтруктурноеПодразделение = СтруктурноеПодразделениеОрганизация;
			КонецЕсли;
			СтруктурноеПодразделениеПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтруктурноеПодразделениеОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВСКлиентПереопределяемый.СтруктурноеПодразделениеНачалоВыбора(ЭтаФорма, СтандартнаяОбработка, Объект.Организация, Объект.СтруктурноеПодразделение, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораСтруктурногоПодразделения(Результат, Параметры) Экспорт
	
	ВСКлиентПереопределяемый.ПослеВыбораСтруктурногоПодразделения(Результат, Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация);
	
	//При изменении Организации очищаем все ТЧ
	Если СтруктурноеПодразделениеОрганизацияДоИзменения <> СтруктурноеПодразделениеОрганизация Тогда
		Если Объект.ФНО.Количество() > 0 ИЛИ Объект.СНТ.Количество() > 0 Тогда
			ПоказатьВопросПроОчисткуТаблиц(СтруктурноеПодразделениеОрганизация);
		КонецЕсли;	
	КонецЕсли;

	Если Результат.ИзмененаОрганизация Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;
	Если Результат.ИзмененоСтруктурноеПодразделение Тогда
		СтруктурноеПодразделениеПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СтруктурноеПодразделениеПриИзмененииНаСервере()
	
	//Объект.ИдентификационныйНомер = СНТСерверПереопределяемый.ПолучитьИдентификаторОрганизации(Объект.СтруктурноеПодразделение);
	Если ЗначениеЗаполнено(Объект.СтруктурноеПодразделение) Тогда
		СтруктураДанных = ВССерверПереопределяемый.ПолучитьРеквизитыОрганизации(Неопределено, "Отправитель", Объект.СтруктурноеПодразделение);
		Объект.ИдентификационныйНомер = СтруктураДанных.ОтправительИдентификатор;
	Иначе
		СтруктураДанных = ВССерверПереопределяемый.ПолучитьРеквизитыОрганизации(Объект.Организация, "Отправитель", Неопределено);
		Объект.ИдентификационныйНомер = СтруктураДанных.ОтправительИдентификатор;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФНО

&НаКлиенте
Процедура ФНОДокументЗаявлениеОВвозеТоваровПриИзменении(Элемент)
	
	//Заполняем текущую строку ТЧ ФНО
	ТекущиеДанныеФНО = Элементы.ФНО.ТекущиеДанные;
	ДокументФНО = ТекущиеДанныеФНО.ДокументЗаявлениеОВвозеТоваров;
	НомерРазделаФНО = ТекущиеДанныеФНО.НомерСтроки;
	
	ДанныеДокумента = ПолучитьСведенияОДокументеФНО(ДокументФНО);
	ЗаполнитьЗначенияСвойств(ТекущиеДанныеФНО, ДанныеДокумента);
	
	//Заполняем ТЧ ТоварыФНО данными текущей строки
	УдалитьСтрокиТаблицыТоваров(Объект.ТоварыФНО, Объект.ТоварыФНО.НайтиСтроки(Новый Структура("СсылкаФНО", СНТКлиентПереопределяемый.ПустаяСсылкаЗаявлениеОВвозеТоваров())));
	УдалитьСтрокиТаблицыТоваров(Объект.ТоварыФНО, Объект.ТоварыФНО.НайтиСтроки(Новый Структура("НомерРазделаФНО", НомерРазделаФНО)));
	ФНОДокументЗаявлениеОВвозеТоваровПриИзмененииНаСервере(ДокументФНО, НомерРазделаФНО, ТекущиеДанныеФНО.РегистрационныйНомер);
	
КонецПроцедуры

&НаСервере
Процедура ФНОДокументЗаявлениеОВвозеТоваровПриИзмененииНаСервере(ДокументФНО, НомерРазделаФНО, РегистрационныйНомер)
	
	ДанныеДокументаФНО = СНТСерверПереопределяемый.ПолучитьДанныеТЧИзФНО(ДокументФНО);
	
	Для Каждого СтрокаТовар Из ДанныеДокументаФНО Цикл
		
		НоваяСтрокаТоварыФНО = Объект.ТоварыФНО.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТоварыФНО, СтрокаТовар); 
		НоваяСтрокаТоварыФНО.НомерРазделаФНО = НомерРазделаФНО; //Номер строки документа в ТЧ ФНО
		НоваяСтрокаТоварыФНО.СсылкаФНО = ДокументФНО;
		НоваяСтрокаТоварыФНО.РегистрационныйНомерФНО = РегистрационныйНомер;
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокиТаблицыТоваров(ТаблицаРеквизит, МассивСтрокКУдалению)
	
	Если МассивСтрокКУдалению = Неопределено
		 ИЛИ МассивСтрокКУдалению.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из МассивСтрокКУдалению Цикл
		ТаблицаРеквизит.Удалить(ЭлементМассива);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ФНОДокументЗаявлениеОВвозеТоваровНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Отбор.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	
	ИмяФормыЗаявления = ПолучитьИмяФормыНаСервере();
	Если ИмяФормыЗаявления <> Неопределено Тогда
		ОткрытьФорму(ИмяФормыЗаявления, ПараметрыФормы, Элементы.ФНОДокументЗаявлениеОВвозеТоваров);
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяФормыНаСервере()
	
	ОбъектМетаданных = СНТСерверПереопределяемый.ПолучитьОбъектМетаданныхДокументЗаявлениеОВвозеТоваров();
	
	Если ОбъектМетаданных <> Неопределено Тогда
		ФормаВыбораЗаявления = ОбъектМетаданных.Формы.Найти("ФормаВыбора");
		Если ФормаВыбораЗаявления <> Неопределено Тогда
			Возврат ФормаВыбораЗаявления.ПолноеИмя();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ФНОПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ФНО.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерРазделаФНО = ТекущиеДанные.НомерСтроки;
	
	//Удаляем все записи этого раздела
	УдалитьСтрокиТаблицыТоваров(Объект.ТоварыФНО, Объект.ТоварыФНО.НайтиСтроки(Новый Структура("НомерРазделаФНО", НомерРазделаФНО)));
	
	// Нужно переименовать все последующие разделы
	Для Сч = НомерРазделаФНО + 1 По Объект.ФНО.Количество() Цикл
		
		МассивСтрок = Объект.ТоварыФНО.НайтиСтроки(Новый Структура("НомерРазделаФНО", Сч));
		Если МассивСтрок.Количество() <> 0 Тогда
			Для Каждого ЭлементМассива Из МассивСтрок Цикл
				ЭлементМассива.НомерРазделаФНО = Сч - 1;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ФНОПриАктивизацииСтроки(Элемент)
	
	Если НЕ ПоказатьВсеТоварыФНО Тогда
		ТекущиеДанные = Элементы.ФНО.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			УстановитьОтборТабличнойЧасти(Элементы.ТоварыФНО,Новый Структура("НомерРазделаФНО",ТекущиеДанные.НомерСтроки));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСНТ

&НаКлиенте
Процедура СНТДокументСНТНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		Отбор.Вставить("Организация", Объект.Организация);	
	КонецЕсли;
	
	Отбор.Вставить("Направление", ПредопределенноеЗначение("Перечисление.НаправленияСНТ.Исходящий"));
	Отбор.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийСНТ.Ввоз"));	
	
	ПараметрыФормы = Новый Структура("Отбор", Отбор);
	
	ОткрытьФорму("Документ.СНТ.ФормаВыбора", ПараметрыФормы, Элементы.СНТДокументСНТ);

КонецПроцедуры

&НаКлиенте
Процедура СНТДокументСНТПриИзменении(Элемент)
	
	//Заполняем текущую строку ТЧ СНТ
	ТекущиеДанныеСНТ = Элементы.СНТ.ТекущиеДанные;
	ДокументСНТ = ТекущиеДанныеСНТ.ДокументСНТ;
	НомерРазделаСНТ = ТекущиеДанныеСНТ.НомерСтроки;
	
	ДанныеДокумента = ПолучитьСведенияОДокументеСНТ(ДокументСНТ);
	ЗаполнитьЗначенияСвойств(ТекущиеДанныеСНТ, ДанныеДокумента);
	
	//Заполняем ТЧ ТоварыСНТ данными текущей строки
	УдалитьСтрокиТаблицыТоваров(Объект.ТоварыСНТ, Объект.ТоварыСНТ.НайтиСтроки(Новый Структура("СсылкаСНТ", ПредопределенноеЗначение("Документ.СНТ.ПустаяСсылка"))));
	УдалитьСтрокиТаблицыТоваров(Объект.ТоварыСНТ, Объект.ТоварыСНТ.НайтиСтроки(Новый Структура("НомерРазделаСНТ", НомерРазделаСНТ)));
	
	СНТДокументСНТПриИзмененииНаСервере(ДокументСНТ, НомерРазделаСНТ);
	
КонецПроцедуры

&НаСервере
Процедура СНТДокументСНТПриИзмененииНаСервере(ДокументСНТ, НомерРазделаСНТ)

	ДанныеДокументаСНТ = СНТСерверПереопределяемый.ПолучитьДанныеТЧИзСНТ(ДокументСНТ);
	
	Для Каждого СтрокаТовар Из ДанныеДокументаСНТ Цикл
		
		НоваяСтрокаТоварыСНТ = Объект.ТоварыСНТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТоварыСНТ, СтрокаТовар); 
		НоваяСтрокаТоварыСНТ.НомерРазделаСНТ = НомерРазделаСНТ; //Номер строки документа в ТЧ СНТ
		НоваяСтрокаТоварыСНТ.СсылкаСНТ = ДокументСНТ;
		НоваяСтрокаТоварыСНТ.Склад = ДокументСНТ.СкладПолучатель;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СНТПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.СНТ.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерРазделаСНТ = ТекущиеДанные.НомерСтроки;
	
	//Удаляем все записи этого раздела
	УдалитьСтрокиТаблицыТоваров(Объект.ТоварыСНТ, Объект.ТоварыСНТ.НайтиСтроки(Новый Структура("НомерРазделаСНТ", НомерРазделаСНТ)));
	
	// Нужно переименовать все последующие разделы
	Для Сч = НомерРазделаСНТ + 1 По Объект.СНТ.Количество() Цикл
		
		МассивСтрок = Объект.ТоварыСНТ.НайтиСтроки(Новый Структура("НомерРазделаСНТ", Сч));
		Если МассивСтрок.Количество() <> 0 Тогда
			Для Каждого ЭлементМассива Из МассивСтрок Цикл
				ЭлементМассива.НомерРазделаСНТ = Сч - 1;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СНТПриАктивизацииСтроки(Элемент)
	
	Если НЕ ПоказатьВсеТоварыСНТ Тогда
		ТекущиеДанные = Элементы.СНТ.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			УстановитьОтборТабличнойЧасти(Элементы.ТоварыСНТ,Новый Структура("НомерРазделаСНТ",ТекущиеДанные.НомерСтроки));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыТоваровФНО

&НаКлиенте
Процедура ТоварыФНОПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыФНОПриАктивизацииСтроки(Элемент)
	
	Если ПоказатьТоварыСНТСвязанныеСФНО Тогда
		УстановитьОтборТоваровСНТСвязанныхСФНО();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыТоваровСНТ

&НаКлиенте
Процедура ТоварыСНТПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСНТПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Возврат
	КонецЕсли;
	
	РегистрационныйНомерФНО = "";
	НомерПозицииВЗаявлении = "";
	ТоварНаименование = "";
	
	Если ПараметрыПеретаскивания.Значение[0].Свойство("РегистрационныйНомерФНО",РегистрационныйНомерФНО)
		 И ПараметрыПеретаскивания.Значение[0].Свойство("НомерПозицииВЗаявлении",НомерПозицииВЗаявлении) 
		 И ПараметрыПеретаскивания.Значение[0].Свойство("ТоварНаименование",ТоварНаименование)Тогда
		
		ТекущаяСтрокаТоварыСНТ = Объект.ТоварыСНТ.НайтиПоИдентификатору(Строка);
		ТекущаяСтрокаТоварыСНТ.НомерЗаявленияВРамкахТС = РегистрационныйНомерФНО;
		ТекущаяСтрокаТоварыСНТ.НомерПозицииВЗаявлении = НомерПозицииВЗаявлении;
		ТекущаяСтрокаТоварыСНТ.ТоварНаименованиеВРамкахТС = ТоварНаименование;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьЗаписьДокумента(ДействиеПослеЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru = 'Для выполнения команды необходимо записать документ. Продолжить?
		|Записать?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		
		Оповещение = Новый ОписаниеОповещения("ЗаписьДокументаЗавершение", ЭтотОбъект, Новый Структура("ДействиеПослеЗаписи", ДействиеПослеЗаписи));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ДействиеПослеЗаписи);
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ЗаписьДокументаЗавершение(Результат, Параметры) Экспорт
	
	Записан = Ложь;
	Если Результат = КодВозвратаДиалога.Да Тогда
		Попытка
			Если Записать() Тогда
				Записан = Истина;
			КонецЕсли;
		Исключение
			ПоказатьПредупреждение(,ОписаниеОшибки());
		КонецПопытки;
		
		Если Записан Тогда
			ВыполнитьОбработкуОповещения(Параметры.ДействиеПослеЗаписи);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции


&НаСервере
Процедура УправлениеФормой()
		
	Элементы.Ошибки.Видимость = ?(Объект.Ошибки.Количество() = 0, Ложь, Истина);
	
	ПоддержкаРаботыСоСтруктурнымиПодразделениями = ВССерверПереопределяемый.ПолучитьПараметрРаботыСоСтруктурнымиПодразделениями();
	ВССерверПереопределяемый.УстановитьСвойстваЭлементаСтруктурноеПодразделение(Объект.Организация, Объект.СтруктурноеПодразделение, СтруктурноеПодразделениеОрганизация,
	Элементы.СтруктурноеПодразделениеОрганизация, ПоддержкаРаботыСоСтруктурнымиПодразделениями);
	
	Элементы.Организация.Видимость = Не ПоддержкаРаботыСоСтруктурнымиПодразделениями;
	Элементы.СтруктурноеПодразделениеОрганизация.Видимость = ПоддержкаРаботыСоСтруктурнымиПодразделениями;
	
	//Для контроля перезаполнения структурное подразделение
	Если Не ЗначениеЗаполнено(СтруктурноеПодразделениеОрганизацияДоИзменения) Тогда
		СтруктурноеПодразделениеОрганизацияДоИзменения = СтруктурноеПодразделениеОрганизация;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()

		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТовары()
	
	//
	//НомерРаздела = Элементы.Товары.ОтборСтрок.НомерРаздела;
	//
	////Удаляем все записи этого раздела
	//МассивСтрокТовары = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));
	//МассивСтрокОС = Объект.ОС.НайтиСтроки(Новый Структура("НомерРаздела", НомерРаздела));

	//Для каждого ЭлементМассива Из МассивСтрокТовары Цикл
	//	Объект.Товары.Удалить(ЭлементМассива);
	//КонецЦикла;
	//
	//Для каждого ЭлементМассива Из МассивСтрокОС Цикл
	//	Объект.ОС.Удалить(ЭлементМассива);
	//КонецЦикла;
	//
	//// Нужно переименовать все последующие разделы
	//Для Сч = НомерРаздела + 1 По Объект.Разделы.Количество()+ 1 Цикл
	//    
	//	МассивСтрок = Объект.Товары.НайтиСтроки(Новый Структура("НомерРаздела", Сч));
	//	КоличествоСтрок = МассивСтрок.Количество();
	//	Для каждого ЭлементМассива Из МассивСтрок Цикл
	//		ЭлементМассива.НомерРаздела = Сч - 1;
	//	КонецЦикла;
	//	
	//	МассивСтрокОС = Объект.ОС.НайтиСтроки(Новый Структура("НомерРаздела", Сч));
	//	КоличествоСтрок = МассивСтрокОС.Количество();
	//	Для каждого ЭлементМассива Из МассивСтрокОС Цикл
	//		ЭлементМассива.НомерРаздела = Сч - 1;
	//	КонецЦикла;

	//КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОшибок(ИсточникДляЗаполненияТаблицыОшибок)
	
	Ошибки.Очистить();	
	
	ТаблицаЛокализацииОшибок = ЭСФСерверПовтИсп.НоваяТаблицаОшибокИСЭСФ();
	
	Для Каждого Ошибка Из ИсточникДляЗаполненияТаблицыОшибок Цикл
		
		ИнформацияОбОшибке = ЭСФСервер.ИнформацияОбОшибкеБизнесЛогикиИСЭСФ(ТаблицаЛокализацииОшибок, Ошибка.Текст, Ошибка.Поле);
		
		НоваяСтрока = Ошибки.Добавить();
		
		НоваяСтрока.ТекстИСЭСФ  = ИнформацияОбОшибке.ТекстИСЭСФ;
		НоваяСтрока.ПолеИСЭСФ   = ИнформацияОбОшибке.ПолеИСЭСФ;
		НоваяСтрока.ТекстИБ     = ИнформацияОбОшибке.ТекстИБ;
		НоваяСтрока.ПолеИБ      = ИнформацияОбОшибке.ПолеИБ;
		НоваяСтрока.ИмяСтраницы = ИнформацияОбОшибке.ИмяСтраницы;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСведенияОДокументеФНО(ДокументФНО)
	
	Возврат СНТСерверПереопределяемый.ПолучитьДанныеШапкиДокументаФНО(ДокументФНО);
	
КонецФункции

&НаСервере
Функция ПолучитьСведенияОДокументеСНТ(Документ)
	
	ДанныеДокумента = Новый Структура();
	ДанныеДокумента.Вставить("РегистрационныйНомер", Документ.РегистрационныйНомерИСЭСФ);
	ДанныеДокумента.Вставить("Дата", 				 Документ.Дата);
	ДанныеДокумента.Вставить("Сумма", 				 Документ.ТоварыВС.Итог("СуммаБезНалогов") + Документ.ЭтиловыйСпирт.Итог("СуммаБезНалогов") + Документ.Виноматериал.Итог("СуммаБезНалогов")
	                                                 			   + Документ.ПивоПивныеНапитки.Итог("СуммаБезНалогов") + Документ.АлкогольнаяпродукцияКромеПива.Итог("СуммаБезНалогов") 
																   + Документ.ДанныеПоНефтепродуктам.Итог("СуммаБезНалогов") + Документ.ДанныеПоБиотопливу.Итог("СуммаБезНалогов") 
																   + Документ.ТабачнаяПродукция.Итог("СуммаБезНалогов") + Документ.ДругиеТоварыЦифроваяМаркировка.Итог("СуммаБезНалогов")
													  			   + Документ.ТоварыЭкспортныйКонтроль.Итог("СуммаБезНалогов"));
	
	Возврат ДанныеДокумента;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьВопросПроОчисткуТаблиц(Параметры)
	
	ТекстВопроса = НСтр("ru='Изменить организацию и очистить табличные части документа?'");
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаПроОчисткуТаблиц", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, ТекстВопроса, Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаПроОчисткуТаблиц(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.ФНО.Очистить();
		Объект.ТоварыФНО.Очистить();
		Объект.СНТ.Очистить();
		Объект.ТоварыСНТ.Очистить();
		
		//Перезаполняем служебный ревизит
		СтруктурноеПодразделениеОрганизацияДоИзменения = СтруктурноеПодразделениеОрганизация;
	Иначе
		СтруктурноеПодразделениеОрганизация = СтруктурноеПодразделениеОрганизацияДоИзменения;
		Результат = ВСКлиентПереопределяемый.ПроверитьИзменениеЗначенийОрганизацииСтруктурногоПодразделения(СтруктурноеПодразделениеОрганизация, Объект.Организация, Объект.СтруктурноеПодразделение);
		Если Результат.ИзмененаОрганизация Тогда
			Объект.Организация = СтруктурноеПодразделениеОрганизация;
			ОрганизацияПриИзмененииНаСервере();
		КонецЕсли;
		Если Результат.ИзмененоСтруктурноеПодразделение Тогда
			Если ТипЗнч(СтруктурноеПодразделениеОрганизация) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
				Объект.СтруктурноеПодразделение = СтруктурноеПодразделениеОрганизация;
			Иначе
				Объект.СтруктурноеПодразделение = Неопределено;
			КонецЕсли;
			СтруктурноеПодразделениеПриИзмененииНаСервере();
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОПустойОрганизации()
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено поле Организация!'");
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыТоваровСНТПоРеквизитамТоваровФНО(МассивСтрокФНО,МассивСтрокСНТ)
	
	Если МассивСтрокФНО.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого СтрокаФНО Из МассивСтрокФНО Цикл
		
		Для Каждого СтрокаСНТ Из МассивСтрокСНТ Цикл
			
			Если СтрокаФНО.Товар = СтрокаСНТ.Товар
				 И СтрокаФНО.КодТНВЭД = СтрокаСНТ.КодТНВЭД
				 И СтрокаФНО.ЕдиницаИзмерения = СтрокаСНТ.ЕдиницаИзмерения
				 И СтрокаФНО.ЕдиницаИзмеренияКод = СтрокаСНТ.ЕдиницаИзмеренияКод Тогда
				
				СтрокаСНТ.НомерПозицииВЗаявлении = СтрокаФНО.НомерПозицииВЗаявлении;
				СтрокаСНТ.НомерЗаявленияВРамкахТС = СтрокаФНО.РегистрационныйНомерФНО;
				СтрокаСНТ.ТоварНаименованиеВРамкахТС = СтрокаФНО.ТоварНаименование;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	Элементы.ТоварыСНТЗаполнитьТоварыСНТ.Доступность = Не ПоказатьТоварыСНТСвязанныеСФНО;
	Элементы.ТоварыФНОСсылкаФНО.Видимость = ПоказатьВсеТоварыФНО;
	Элементы.ТоварыСНТСсылкаСНТ.Видимость = ПоказатьВсеТоварыСНТ;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВспомогательныеДанныеФормы()
	
	Для Каждого Строка Из Объект.ТоварыФНО Цикл
		МассивСтрок = Объект.ФНО.НайтиСтроки(Новый Структура("НомерСтроки",Строка.НомерРазделаФНО));
		Если МассивСтрок.Количество() <> 0 Тогда
			Строка.СсылкаФНО = МассивСтрок[0].ДокументЗаявлениеОВвозеТоваров;
			Строка.РегистрационныйНомерФНО = МассивСтрок[0].РегистрационныйНомер;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Объект.ТоварыСНТ Цикл
		МассивСтрок = Объект.СНТ.НайтиСтроки(Новый Структура("НомерСтроки",Строка.НомерРазделаСНТ));
		Если МассивСтрок.Количество() <> 0 Тогда
			Строка.СсылкаСНТ = МассивСтрок[0].ДокументСНТ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = СНТКлиентСервер.ИмяСобытияЗаписьСопоставленияСНТиФНО() Тогда
		
		Если Объект.Ссылка.Пустая() Тогда
			УправлениеФормой();
		Иначе
			ЭтаФорма.Прочитать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТоварыСНТЗаполнитьОстаткиНаСервере()
	
	СНТСерверПереопределяемый.ЗаполнитьОстаткиТоваровВС(Объект, "ТоварыСНТ");
	
КонецПроцедуры


#КонецОбласти

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте 
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры 

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры 
