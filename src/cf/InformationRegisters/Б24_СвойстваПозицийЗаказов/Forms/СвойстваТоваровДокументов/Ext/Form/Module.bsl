
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидДокумента = "Заказ"; 
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	ВидДокументаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВидДокументаПриИзмененииНаСервере()
	
	Если ВидДокумента = "Заказ" тогда
		
		СписокДокументов.ТекстЗапроса 		= ПолучитьЗапросСпискаДокументов("ЗаказПокупателя");
		СписокДокументов.ОсновнаяТаблица 	= "Документ.ЗаказПокупателя";
		
	ИначеЕсли ВидДокумента = "Отгрузка" тогда
		
		СписокДокументов.ТекстЗапроса 		= ПолучитьЗапросСпискаДокументов("РасходнаяНакладная");
		СписокДокументов.ОсновнаяТаблица 	= "Документ.РасходнаяНакладная";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
	
	ВыбранныйДокумент = Элемент.ТекущаяСтрока;
	
	Если ЗначениеЗаполнено(ВыбранныйДокумент) тогда
		
		лНомер = ПолучитьНомерДокумента(ВыбранныйДокумент);
		
		Если НомерВыделенногоДокумента = "" ИЛИ НомерВыделенногоДокумента <> лНомер  тогда
			НомерВыделенногоДокумента = лНомер;
		Иначе
			НомерВыделенногоДокумента = "";
			Возврат;
		КонецЕсли;
		
		ПриАктивизацииСтрокиДокумента(); 
	Иначе
		ВыбранныйДокумент = Неопределено;      
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыДокументаПриАктивизацииСтроки(Элемент)
	
	лТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если лТекущиеДанные <> неопределено тогда
		ЗаполнениеСвойствВыбранногоТовара(лТекущиеДанные.Номенклатура, лТекущиеДанные.Характеристика, лТекущиеДанные.КлючСвязи);
	Иначе
		ВыбранныйИдентификаторПозиции   = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваТовараЗначениеПриИзменении(Элемент)
	
	ИнформацияОПозиции = Элементы.ТоварыДокумента.ТекущиеДанные;
	Если ИнформацияОПозиции = Неопределено тогда
		Возврат;
	КонЕцЕсли;
	
	ОбновитьИнформациюПоТовару(ИнформацияОПозиции.Номенклатура, ИнформацияОПозиции.Характеристика, ИнформацияОПозиции.КлючСвязи);
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваТовараСвойствоПриИзменении(Элемент)
	
	ИнформацияОПозиции = Элементы.ТоварыДокумента.ТекущиеДанные;
	Если ИнформацияОПозиции = Неопределено тогда
		Возврат;
	КонЕцЕсли;
	
	ОбновитьИнформациюПоТовару(ИнформацияОПозиции.Номенклатура, ИнформацияОПозиции.Характеристика, ИнформацияОПозиции.КлючСвязи);
	
КонецПроцедуры

&НаКлиенте
Процедура СвойстваТовараПослеУдаления(Элемент)
	
	ИнформацияОПозиции = Элементы.ТоварыДокумента.ТекущиеДанные;
	Если ИнформацияОПозиции = Неопределено тогда
		Возврат;
	КонЕцЕсли;
	
	ОбновитьИнформациюПоТовару(ИнформацияОПозиции.Номенклатура, ИнформацияОПозиции.Характеристика, ИнформацияОПозиции.КлючСвязи);
	
КонецПроцедуры

#КонецОбласти


#Область ПроцедурыИФункцииСлужебные

&НаСервере
Функция ПолучитьЗапросСпискаДокументов(ТипДокумента)
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Контрагент,
	|	Документ.Организация,
	|	Документ.СуммаДокумента
	|ИЗ
	|	Документ."+ТипДокумента+" КАК Документ";  	
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ПриАктивизацииСтрокиДокумента()
	
	ТоварыДокумента.Очистить();
	
		Для Каждого ТекСтрока из ВыбранныйДокумент.Запасы цикл
			НоваяПозиция 						= ТоварыДокумента.Добавить();	
			НоваяПозиция.Номенклатура 			= ТекСтрока.Номенклатура;
			НоваяПозиция.Характеристика 		= ТекСтрока.Характеристика;
			НоваяПозиция.Количество 			= ТекСтрока.Количество;
			НоваяПозиция.Цена 					= ТекСтрока.Цена;
			НоваяПозиция.КлючСвязи 				= ТекСтрока.КлючСвязи;
		КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеСвойствВыбранногоТовара(Номенклатура, Характеристика, КлючСвязи)
	
	СвойстваТовара.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ВыбранныйДокумент) тогда
		Возврат;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Б24_СвойстваПозицийЗаказов.НаименованиеСвойства КАК Свойство,
	               |	Б24_СвойстваПозицийЗаказов.ИдентификаторПозиции КАК ИдентификаторПозиции,
	               |	Б24_СвойстваПозицийЗаказов.ИдентификаторСвойства КАК ИдентификаторСвойства,
	               |	Б24_СвойстваПозицийЗаказов.Значение КАК Значение
	               |ИЗ
	               |	РегистрСведений.Б24_СвойстваПозицийЗаказов КАК Б24_СвойстваПозицийЗаказов
	               |ГДЕ
	               |	Б24_СвойстваПозицийЗаказов.Документ = &Документ
	               |	И Б24_СвойстваПозицийЗаказов.Номенклатура = &Номенклатура
	               |	И Б24_СвойстваПозицийЗаказов.Характеристика = &Характеристика";
	
	Запрос.УстановитьПараметр("Документ"			, ВыбранныйДокумент);
	Запрос.УстановитьПараметр("Номенклатура"		, Номенклатура);
	Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
	//Запрос.УстановитьПараметр("КлючСвязи"			, "%" + КлючСвязи + "%");
	
	Запрос.Выполнить().Выгрузить();	
	
	СвойстваТовара.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПоТовару(Номенклатура, Характеристика, КлючСвязи);
	
	Для каждого ТекСтрока из СвойстваТовара Цикл
		
		НоваяЗапись = РегистрыСведений.Б24_СвойстваПозицийЗаказов.СоздатьМенеджерЗаписи();
		
		НоваяЗапись.Документ 				= ВыбранныйДокумент;
		НоваяЗапись.ИдентификаторПозиции 	= ТекСтрока.ИдентификаторПозиции;
		НоваяЗапись.ИдентификаторСвойства 	= ТекСтрока.ИдентификаторСвойства;
		НоваяЗапись.НаименованиеСвойства 	= ТекСтрока.Свойство;
		НоваяЗапись.Номенклатура 			= Номенклатура;
		НоваяЗапись.Характеристика 			= Характеристика;
		НоваяЗапись.КлючСвязи 				= КлючСвязи;
		НоваяЗапись.Значение 				= ТекСтрока.Значение;
		
		НоваяЗапись.Записать(Истина);	
		
	КонецЦикла;
	
	//Регистрируем изменение документа и меняем его версию	
	лОбъект = ВыбранныйДокумент.ПолучитьОбъект();
	лОбъект.Записать();

КонецПроцедуры

&НаСервере
Функция	ПолучитьНомерДокумента(Документ)
	Возврат Документ.Номер;
КонецФункции
#КонецОбласти

