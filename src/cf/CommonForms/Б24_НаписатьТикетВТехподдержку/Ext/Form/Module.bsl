
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Версия 			= Б24_ОбщегоНазначенияСервер.Версия();
	НазваниеМодуля 	= Б24_ОбщегоНазначенияСервер.ПолучитьНазваниеМодуля();

	Если Параметры.Свойство("ОписаниеОшибки") тогда
		Сообщение = Параметры.ОписаниеОшибки; 
	КонецЕсли;
	
	Если Параметры.Свойство("Протокол") тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".txt");
		НовыйЛог = Новый ЗаписьТекста(ИмяВременногоФайла);
		НовыйЛог.ЗаписатьСтроку(Параметры.Протокол);
		НовыйЛог.Закрыть();
		АдресЛогФайла = ИмяВременногоФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПолучитьСписокТикетов();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокТикетов()
	
	Выборка = РегистрыСведений.Б24_ИнформацияООтправленныхТикетах.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Элементы.НомерТикета.СписокВыбора.Добавить(Выборка.НомерТикета, Выборка.Сообщение);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьТикет(Команда)
	Если Не ЗначениеЗаполнено(ЭлектронныйЯщик) тогда
		Сообщить("Не указан адрес электронной почты");
		Возврат;
	КонецЕсли;
	
	ОтправитьТикетСервер();	
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьТикетСервер()
	
	ОсновныеПараметры = Новый Структура;	
	ОсновныеПараметры.Вставить("ИмяПользователя", "");	
	ОсновныеПараметры.Вставить("Пароль"			, "");	
	ОсновныеПараметры.Вставить("ИмяФайлаЛога"	, "");	
	ОсновныеПараметры.Вставить("АдресСайта"		, "https://www.1c-bitrix.ru/rest/support.php");	
	
	ОписаниеОшибки = "";	
	НастройкиПодключения = Новый Структура;
	
	Если НЕ ПолучитьНастройкиПодключения(НастройкиПодключения, ОсновныеПараметры) Тогда
		Сообщить(ОписаниеОшибки);	
		Возврат;
	КонецЕсли;

	Соединение = ПолучитьСоединениеССервером(НастройкиПодключения, Неопределено);
	
	ПараметрыHTTPЗапроса = ПолучитьТелоСообщения();
	
	АдресСкрипта = "/rest/support.php";
	
	Boundary = СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");

	ИмяФайлаОтправки = КаталогВременныхФайлов() + "post.txt";

	МассивФайловДляОбъединения = Новый Массив;

	Если ЗначениеЗаполнено(АдресЛогФайла) тогда	
		ДобавитьФайл(Boundary, МассивФайловДляОбъединения, АдресЛогФайла, "file");	
	КонецЕсли;
	
	Счетчик = 0;
	Для каждого ТекСтрока из ПриложенныеФайлы Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Файл) тогда	
			ДобавитьФайл(Boundary, МассивФайловДляОбъединения, ТекСтрока.Файл, "screens" + ?(Счетчик = 0, "", Строка(Счетчик)));
			Счетчик = Счетчик + 1;
		КонецЕсли;
	КонецЦикла;
	
	ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
	ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.UTF8, Символы.ПС, Ложь);

    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""submit""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку("1");

    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""decode""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку("0");

    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""message""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.message);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""action""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.action);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""ticket""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.ticket);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""email""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.email);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""unique_id""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.unique_id);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""hash""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.hash);
	
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.ЗаписатьСтроку("Content-disposition: form-data; name=""TestParam""" + Символы.ПС);
    ФайлОтправкиКонец.ЗаписатьСтроку(ПараметрыHTTPЗапроса.TestParam);
	
    ФайлОтправкиКонец.Закрыть();
    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец);

    ОбъединитьФайлы(МассивФайловДляОбъединения, ИмяФайлаОтправки);

    ЗаголовокHTTP = Новый Соответствие();
    ЗаголовокHTTP.Вставить("Content-Type", "multipart/form-data; boundary=" + Boundary);

    ФайлОтправки = Новый Файл(ИмяФайлаОтправки);
    РазмерФайлаОтправки = XMLСтрока(ФайлОтправки.Размер());
    ЗаголовокHTTP.Вставить("Content-Length", РазмерФайлаОтправки);

	Попытка
		
		ЗапросHTTP = Новый HTTPЗапрос(АдресСкрипта, ЗаголовокHTTP);
		ЗапросHTTP.УстановитьИмяФайлаТела(ИмяФайлаОтправки);  
		
		ОтветHTTP = Соединение.ОтправитьДляОбработки(ЗапросHTTP);
	Исключение
		Сообщить("Неудачная попытка отправки тикета в техподдержку");
		Возврат;
	КонецПопытки;
	
	ОтветСтрокой = ОтветHTTP.ПолучитьТелоКакСтроку(); 
	
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветСтрокой);
		
	лСтруктураОтвета = ПрочитатьJSON(ЧтениеJSON, Истина);
	
	link = лСтруктураОтвета.Получить("link");
	
	УспешноОтправлен = Ложь;
	
	Если ЗначениеЗаполнено(link) тогда
		НоваяЗапись = РегистрыСведений.Б24_ИнформацияООтправленныхТикетах.СоздатьМенеджерЗаписи();
		НоваяЗапись.НомерТикета = СокрЛП(link);
		НоваяЗапись.Сообщение = Сообщение;
		НоваяЗапись.Записать();
		
		УспешноОтправлен = Истина;
	КонецЕсли;
	
	Если УспешноОтправлен тогда
		
		Если СуществующийТикет тогда
			Сообщить("Добавлена информация в тикет:" + СокрЛП(link));
		Иначе
			Сообщить("Тикет отправлен. Номер тикета:" + СокрЛП(link));
		КонецЕсли;
		
		НомерТикета = СокрЛП(link);
		ПолучитьСписокТикетов();
		
	Иначе
		
		Если СуществующийТикет тогда
			Сообщить("Не удалось добавить информацию в тикет:" + НомерТикета);
		Иначе
			Сообщить("Не удалось отправить тикет в техподдержку.");
		КонецЕсли;
		
	КонецЕсли;
	
	ЗапросHTTP = Неопределено;
	
	УдалитьФайлы(ИмяФайлаОтправки);
	Для каждого ЭлементМассива Из МассивФайловДляОбъединения Цикл
		УдалитьФайлы(ЭлементМассива);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьФайл(Boundary, МассивФайловДляОбъединения, ИмяФайлаДляЗагрузки, НазваниеПеременной)
	
	ИнформацияОФайле = новый Файл(ИмяФайлаДляЗагрузки);
	НазваниеФайла = ИнформацияОФайле.Имя;
	
	Если НазваниеПеременной = "file" тогда
		НазваниеФайла = "Log_"+ НазваниеФайла;	
	КонецЕсли;
	
	//Формируем начальный фрагмент файла POST-запроса
    ИмяФайлаОтправкиНачало = ПолучитьИмяВременногоФайла("txt");
    ФайлОтправкиНачало = Новый ЗаписьТекста(ИмяФайлаОтправкиНачало, КодировкаТекста.ANSI, Символы.ПС, Ложь);
	
	//Определяем раздел двоичных данных
    ФайлОтправкиНачало.ЗаписатьСтроку("--" + Boundary);
	
	ФайлОтправкиНачало.ЗаписатьСтроку("Content-Disposition: form-data; name="""+НазваниеПеременной+"""; filename=""" + НазваниеФайла + """");
	
	ФайлОтправкиНачало.ЗаписатьСтроку("Content-Type: application/x-octet-stream");
    ФайлОтправкиНачало.ЗаписатьСтроку("");
    ФайлОтправкиНачало.Закрыть();

    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиНачало);

    //Копируем файл для загрузки во временный и добавляем в массив файлов для объединения
    ИмяФайлаДляЗагрузкиВременный = ПолучитьИмяВременногоФайла("tmp");
    КопироватьФайл(ИмяФайлаДляЗагрузки, ИмяФайлаДляЗагрузкиВременный);
    МассивФайловДляОбъединения.Добавить(ИмяФайлаДляЗагрузкиВременный);

    //Формируем конечный фрагмент файла POST-запроса
    ИмяФайлаОтправкиКонец = ПолучитьИмяВременногоФайла("txt");
    ФайлОтправкиКонец = Новый ЗаписьТекста(ИмяФайлаОтправкиКонец, КодировкаТекста.UTF8, Символы.ПС, Ложь);
	//Завершение раздела двоичных данных
    ФайлОтправкиКонец.ЗаписатьСтроку("--" + Boundary);
    ФайлОтправкиКонец.Закрыть();

    МассивФайловДляОбъединения.Добавить(ИмяФайлаОтправкиКонец);
КонецПроцедуры

&НаСервере
Функция ПолучитьТелоСообщения()
	
	лРелиз 					= Метаданные.Версия;
	лПрикладноеРешение 		= Метаданные.Синоним;
	лЛокализация            = ТекущийКодЛокализации();
	лТипБазы		        = ?(Б24_ОбщегоНазначенияСервер.ПолучитьПараметрыСоединения().Тип = "Файл", "Файловая", "Клиент-серверная");
	
	лСистемнаяИнформация = новый СистемнаяИнформация;
	лВерсияПлатформы1С		= лСистемнаяИнформация.ВерсияПриложения;
	лВерсияОС				= лСистемнаяИнформация.ВерсияОС;	
	
	лВерсияМодуля 			= Версия;
	лНазваниеМодуля 		= НазваниеМодуля;
	лМодульДляКонфигурации 	= Б24_ОбщегоНазначенияСервер.ПолучитьНазваниеМодуля();
	лЛокализацияМодуля 		= Б24_ОбщегоНазначенияСервер.ПолучитьЛокализациюКонфигурации();
	
	лУникальныйКод = Строка(Новый УникальныйИдентификатор);
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
	ХешированиеДанных.Добавить(Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(лУникальныйКод + "BX_1C"));
	лХэш = НРег(СтрЗаменить(ХешированиеДанных.ХешСумма, " ", ""));
	
	СуществующийТикет = Ложь;
	Выборка = РегистрыСведений.Б24_ИнформацияООтправленныхТикетах.Выбрать(Новый Структура("НомерТикета", НомерТикета)); 
	СуществующийТикет = Выборка.Следующий();
	
	СообщениеВТехподдержку = "";
	
	Если НЕ СуществующийТикет тогда
	
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Версия ОС: " + лВерсияОС + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Версия платформы 1С: " + лВерсияПлатформы1С + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Тип базы 1С: " + лТипБазы + Символы.ПС;
		
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Прикладное решение 1С: " + лПрикладноеРешение + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Локализация прикладного решения 1С" + лЛокализация + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Релиз прикладного решения 1С: " + лРелиз + Символы.ПС;
		
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Название модуля для 1С: " + лНазваниеМодуля + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Версия модуля для 1С: " + лВерсияМодуля + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Модуль разрабатывался для конфигурации : " + лМодульДляКонфигурации + Символы.ПС;
		СообщениеВТехподдержку = СообщениеВТехподдержку + "Локализация модуля для 1С: " + лЛокализацияМодуля + Символы.ПС;
	КонецЕсли;
	
	СообщениеВТехподдержку = СообщениеВТехподдержку + Символы.ПС;
	СообщениеВТехподдержку = СообщениеВТехподдержку + Символы.ПС;
	
	СообщениеВТехподдержку = СообщениеВТехподдержку + Сообщение;
		  
	//СообщениеВТехподдержку = Б24_RestApiВызовСервера.ЗакодироватьСтрокуСервер(СообщениеВТехподдержку);
	
	
	ТелоHTTPЗапроса = новый Структура;
	ТелоHTTPЗапроса.Вставить("ticket"	, ?(ЗначениеЗаполнено(НомерТикета),НомерТикета, ""));
	ТелоHTTPЗапроса.Вставить("email"	, ЭлектронныйЯщик);
	ТелоHTTPЗапроса.Вставить("message"	, СообщениеВТехподдержку);
	ТелоHTTPЗапроса.Вставить("unique_id", лУникальныйКод);
	ТелоHTTPЗапроса.Вставить("hash"		, лХэш);
	ТелоHTTPЗапроса.Вставить("action"	, "1CLogs");
	ТелоHTTPЗапроса.Вставить("TestParam", "test");
	
	Возврат ТелоHTTPЗапроса;	
	
КонецФункции


&НаКлиенте
Процедура АдресЛогФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Диалог.Заголовок = НСтр("ru = 'Укажите лог файла'");
	Диалог.ПолноеИмяФайла   = АдресЛогФайла;

	ОбработкаОкончанияЗагрузки = Новый ОписаниеОповещения("АдресЛогФайлаНачалоВыбораЗавершениеЗагрузки", ЭтаФорма, Диалог); 
	НачатьПомещениеФайла(ОбработкаОкончанияЗагрузки, , Диалог, Истина, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура АдресЛогФайлаНачалоВыбораЗавершениеЗагрузки(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		
		 АдресЛогФайла = ПолучитьАдресВременногоФайлаСервер(Адрес, ВыбранноеИмяФайла); 
	Иначе
		Сообщить("Файл не был указан.");
	КонецЕсли 
КонецПроцедуры


&НаКлиенте
Процедура ПриложенныеФайлыФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Диалог.Заголовок = НСтр("ru = 'Укажите лог файла'");
	Диалог.ПолноеИмяФайла   = Элементы.ПриложенныеФайлы.ТекущиеДанные.Файл;
	
	ОбработкаОкончанияЗагрузки = Новый ОписаниеОповещения("ПриложенныйФайлЗавершениеЗагрузки", ЭтаФорма, Диалог); 
	НачатьПомещениеФайла(ОбработкаОкончанияЗагрузки, , Диалог, Истина, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ПриложенныйФайлЗавершениеЗагрузки(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		 Элементы.ПриложенныеФайлы.ТекущиеДанные.Файл = ПолучитьАдресВременногоФайлаСервер(Адрес, ВыбранноеИмяФайла); 
	Иначе
		Сообщить("Файл не был указан.");
	КонецЕсли 
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресВременногоФайлаСервер(Адрес, ИмяФайла = "") 
	
	Если ИмяФайла <> "" тогда
		
		ИнфФайл = Новый Файл(ИмяФайла);
		ИмяВременногоФайла = КаталогВременныхФайлов() + ИнфФайл.Имя;
		
	Иначе
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Б24_ОбщегоНазначенияСервер.ПолучитьРасширениеФайлаПоНаименованию(ИмяФайла));
	КонецЕсли;
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(Адрес);	
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	
	Возврат ИмяВременногоФайла;
	
КонецФункции


&НаСервере
Функция ПолучитьНастройкиПодключения(НастройкиПодключения, ОбщиеНастройки,АдресПереадресации = "")
	
	НастройкиПодключения.Вставить("Пользователь", ОбщиеНастройки.ИмяПользователя);
	НастройкиПодключения.Вставить("Пароль", ОбщиеНастройки.Пароль);
	
	Если НЕ АдресСайтаРазобран(НастройкиПодключения, ОбщиеНастройки, АдресПереадресации) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Прокси = Неопределено;
 	Прокси = ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси(ВРЕГ(?(НастройкиПодключения.ЗащищенноеСоединение, "HTTPS", "HTTP")));	
	НастройкиПодключения.Вставить("Прокси", Прокси);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьСоединениеССервером(ПараметрыПодключения, ОбщиеНастройки)
	
	Соединение = НеОпределено;
	
	Попытка
		
		СисИнфо = Новый СистемнаяИнформация;
		
		Если ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СисИнфо.ВерсияПриложения, "8.3.3.721") < 0  тогда	
			Выполнить("Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер, ПараметрыПодключения.Порт, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль, ПараметрыПодключения.Прокси, ПараметрыПодключения.ЗащищенноеСоединение)");
		Иначе

			Выполнить("Если НЕ ПараметрыПодключения.ЗащищенноеСоединение тогда
			|	ssl = Неопределено;
			|Иначе
			|	
			|	ssl = Новый ЗащищенноеСоединениеOpenSSL(
			|	Неопределено,
			|	Неопределено); 
			|КонецЕсли;
			|Соединение = Новый HTTPСоединение(ПараметрыПодключения.Сервер, ПараметрыПодключения.Порт, ПараметрыПодключения.Пользователь, ПараметрыПодключения.Пароль, ПараметрыПодключения.Прокси, ,ssl)");	
		КонецЕсли;	
		
	Исключение
		
		Сообщить("Не удалось установить соединение с сервером. Проверьте правильность адреса сервера, порт, имя пользователя и пароль.");
		
		Соединение = Неопределено;
		
	Конецпопытки;
	
	Возврат Соединение;
	
КонецФункции

Функция АдресСайтаРазобран(НастройкиПодключения, ОбщиеНастройки, АдресПереадресации = "")
	
	АдресСайта = ?(АдресПереадресации = "", СокрЛП(ОбщиеНастройки.АдресСайта) , СокрЛП(АдресПереадресации)); 
	
	Сервер = ""; 
	
	Порт = 0;
	
	АдресСкрипта = "";
	
	ЗащищенноеСоединение = Ложь;
	
	Если НЕ ПустаяСтрока(АдресСайта) Тогда
		
		АдресСайта = СтрЗаменить(АдресСайта, "\", "/");
		АдресСайта = СтрЗаменить(АдресСайта, " ", "");
		
		Если НРег(Лев(АдресСайта, 7)) = "http://" Тогда
			АдресСайта = Сред(АдресСайта, 8);
		ИначеЕсли НРег(Лев(АдресСайта, 8)) = "https://" Тогда
			АдресСайта = Сред(АдресСайта, 9);
			ЗащищенноеСоединение = Истина;
		КонецЕсли;
		
		ПозицияСлэша = Найти(АдресСайта, "/");
		
		Если ПозицияСлэша > 0 Тогда
			Сервер = Лев(АдресСайта, ПозицияСлэша - 1);
			АдресСкрипта = Прав(АдресСайта, СтрДлина(АдресСайта) - ПозицияСлэша);
		Иначе	
			Сервер = АдресСайта;
			АдресСкрипта = "";
		КонецЕсли;
		
		ПозицияДвоеточия = Найти(Сервер, ":");
		ПортСтрока = "0";
		Если ПозицияДвоеточия > 0 Тогда
			СерверСПортом = Сервер;
			Сервер = Лев(СерверСПортом, ПозицияДвоеточия - 1);
			ПортСтрока = Прав(СерверСПортом, СтрДлина(СерверСПортом) - ПозицияДвоеточия);
		КонецЕсли;
		
		Попытка
			Порт = Число(ПортСтрока);
		Исключение
			Сообщить("Не удалось получить номер порта: " + ПортСтрока + Символы.ПС + "Проверьте правильность ввода адреса сайта.");
			Возврат Ложь;
			
		КонецПопытки;
		
		Если Порт = 0 Тогда
			Порт = ?(ЗащищенноеСоединение, 443, 80);
		КонецЕсли;
		
	КонецЕсли;
	
	НастройкиПодключения.Вставить("Сервер", Сервер); 
	НастройкиПодключения.Вставить("Порт", Порт);
	НастройкиПодключения.Вставить("АдресСкрипта", АдресСкрипта);
	НастройкиПодключения.Вставить("ЗащищенноеСоединение", ЗащищенноеСоединение);
	
	Возврат Истина;
	
КонецФункции



