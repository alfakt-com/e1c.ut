
Перем ТабДеталПоСпис Экспорт; 
Перем ТзПарт Экспорт;

Процедура ПриОткрытии()
	
	ТабДеталПоСпис = Новый ТаблицаЗначений;
	ТабДеталПоСпис.Колонки.Добавить("ВидБонусов",,"ВидБонусов");
	ТабДеталПоСпис.Колонки.Добавить("Сумма",,"Сумма");
	ТабДеталПоСпис.Колонки.Добавить("ДнейДоСписания",,"ДнейДоСписания");
	ТабДеталПоСпис.Колонки.Добавить("Партия",,"Партия");
		
	///Сергей 11.02.2019 (Новая бонусная) +++
	СтарБон = Константы.мчт_СтараяБонуснаяСистема.Получить();
	///Сергей 11.02.2019 (Новая бонусная) ---
	
	КодКарты = СтрЗаменить(СтрЗаменить(БонуснаяКарта.Код, ";", ""), "?", "");	
	Сведения = ма_МаркетинговыеОбъекты.ПолучитьСведенияОНоминальномОбъекте(БонуснаяКарта.Код);	
	Держатель = Сведения.Держатель;	
	Если ЗначениеЗаполнено(Держатель) Тогда	
		ФИО = Держатель.Наименование;
		Телефон = Держатель.ТелефонСотовый;	
	КонецЕсли; 
	
	///ДоступныйНоминал = ма_МаркетинговыеОбъекты.ПолучитьДоступныйНоминалОбъектаВэб(БонуснаяКарта);
	
	///Сергей 11.02.2019 (Новая бонусная) +++
	Если СтарБон = Ложь Тогда
		ДоступныйНоминал = ма_МаркетинговыеОбъекты.ПолучитьДоступныйНоминалОбъектаВэб(БонуснаяКарта);
	ИначеЕсли СтарБон = Истина Тогда 
		ТзПарт1 = ма_МаркетинговыеОбъекты.ПолучитьДоступныйНоминалОбъектаВэбПарт(БонуснаяКарта, ТзПарт);
		
		ТабВрем1 = Новый ТаблицаЗначений;
		ТабВрем1.Колонки.Добавить("ВидБонусов",,"ВидБонусов");
		ТабВрем1.Колонки.Добавить("Сумма",,"Сумма");
		ТабВрем1.Колонки.Добавить("ДнейДоСписания",,"ДнейДоСписания");   
		
		Если ТзПарт1<> Неопределено Тогда
			Если ТзПарт1.DataPartPoNomObj.Количество() > 0 Тогда
				Итого = Число(0);
				Для Каждого ПеребДан Из ТзПарт1.DataPartPoNomObj Цикл 
					
					НовСт = ТабВрем1.Добавить();
					НовСт2 = ТабДеталПоСпис.Добавить();
					///Остаток
					Остаток = Число(ПеребДан.Ostatok);
					Итого = Итого + Остаток;
					НовСт.Сумма = Остаток;
					НовСт2.Сумма = Остаток;
					///
					///Характеристика Бонусов
					УникальныйИдентификатор = Новый УникальныйИдентификатор(ПеребДан.Guid_Xarakteristika);
					ХарактеристикиБонусов = Справочники.мчт_ХарактеристикиБонусов.ПолучитьСсылку(УникальныйИдентификатор);
					НовСт.ВидБонусов = ХарактеристикиБонусов;
					НовСт2.ВидБонусов = ХарактеристикиБонусов;
					
					///Дней досписания
					ДнейДоСписания = Число(ПеребДан.DoSpisania);
					НовСт.ДнейДоСписания = ДнейДоСписания;
					НовСт2.ДнейДоСписания = ДнейДоСписания;
					
					///Тип Докума
					ТипДок = Строка(ПеребДан.Tip_Part);
					Если ТипДок ="Корректировка номинальных объектов" тогда
						ТипДок1 = "МА: Корректировка номинальных объектов";
					ИначеЕсли ТипДок ="Управление бонусами на счетах по партиям" тогда
						ТипДок1 = "МЕЧТА: Управление бонусами на счетах по партиям";
					ИначеЕсли ТипДок ="Ввод в оборот номинальных объектов" тогда                         
						ТипДок1 = "МА: Ввод в оборот номинальных объектов";
					ИначеЕсли ТипДок ="Вывод из оборота номинальных объектов" тогда
						ТипДок1 = "МА: Вывод из оборота номинальных объектов";
					ИначеЕсли ТипДок ="Конвертация буферного номинала" тогда
						ТипДок1 = "МА: Конвертация буферного номинала";
					Иначе 
						ТипДок1 = ТипДок;
					КонецЕсли;
					
					
					///
					
					///Партия
					УникальныйИдентификатор = Новый УникальныйИдентификатор(ПеребДан.Guid_Part);
					Док = "";
					Для Каждого Документ Из Документы Цикл 
						Разделитель = "Документ менеджер: ";
						Строки = СтрЗаменить(Строка(Тип(Документ)), Разделитель, Символы.ПС);
						Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
							Если Индекс = 2 Тогда
								Док = СтрПолучитьСтроку(Строки, Индекс);
							КонецЕсли;
						КонецЦикла;	
						
						Если Док  = ТипДок1 Тогда	
							НужныйДок = Документ.ПолучитьСсылку(УникальныйИдентификатор);
							Если НужныйДок.ПолучитьОбъект() <> Неопределено Тогда	
								НовСт2.Партия = НужныйДок.Ссылка;
							Иначе 
								НовСт2.Партия = НужныйДок;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					///
					
					
					
				КонецЦикла;	
				ДоступныйНоминал = Итого;
			Иначе 
				ДоступныйНоминал = Число(0);	
			КонецЕсли;
		Иначе 
			ДоступныйНоминал =	 Число(0);	
		КонецЕсли;		
	КонецЕсли;	
	///Сергей 11.02.2019 (Новая бонусная) ---
	
	//ЭтаФорма.ТабХаракт.Колонки.Добавить("ВидБонусов", Новый ОписаниеТипов("СправочникСсылка.мчт_ХарактеристикиБонусов"), "Вид Бонусов");
	//ЭтаФорма.ТабХаракт.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"), "Сумма");
	
	Для Каждого ст Из ТабВрем1 Цикл 
		Если ЭтаФорма.ТабХаракт.Количество() >= Число(1) Тогда
			ЕстьСовпад = Ложь;
			Для Каждого ПровСт Из ЭтаФорма.ТабХаракт Цикл 
				Если  ПровСт.ВидБонусов = ст.ВидБонусов Тогда
					ПровСт.Сумма = ПровСт.Сумма + ст.Сумма;
					ЕстьСовпад = Истина;
				КонецЕсли;				
			КонецЦикла;	
			Если ЕстьСовпад = Ложь Тогда 
				НовС = ЭтаФорма.ТабХаракт.Добавить();
				НовС.ВидБонусов = ст.ВидБонусов;
				НовС.Сумма =      ст.Сумма;	
				НовС.СписЧерез =      ст.ДнейДоСписания;
			КонецЕсли;
		Иначе 
			НовС = ЭтаФорма.ТабХаракт.Добавить();
			НовС.ВидБонусов = ст.ВидБонусов;
			НовС.Сумма =      ст.Сумма;
			НовС.СписЧерез =  ст.ДнейДоСписания;
		КонецЕсли;
	КонецЦикла;
	
	
	Для Каждого ПровСт Из ЭтаФорма.ТабХаракт Цикл
		ПровНаогра = Новый Запрос;
		ПровНаогра.Текст = 
		"ВЫБРАТЬ
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Списывать,
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоНоменклотуре,
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Номенклотура,
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоГруппе,
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.НомГруппа,
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоЦенГруппе,
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ЦенГруппа
		|ИЗ
		|	РегистрСведений.мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре КАК мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре
		|ГДЕ
		|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Списывать = ИСТИНА
		|	И (мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоГруппе = ИСТИНА
		|			ИЛИ мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоНоменклотуре = ИСТИНА
		|			ИЛИ мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоЦенГруппе = ИСТИНА)
		|	И мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Характеристика = &Характеристика";
		ПровНаогра.УстановитьПараметр("Характеристика", ПровСт.ВидБонусов);
	
		Результат = ПровНаогра.Выполнить().Выгрузить();
		
		Если Результат.Количество() > 0 Тогда
			ПровСт.ЕстОгран = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ТабХаракт.Сортировать("СписЧерез [убыв], Партия [убыв]");
	ТабДеталПоСпис.Сортировать("ДнейДоСписания [убыв]");
	
	ЭлементыФормы.ТабХаракт.ТолькоПросмотр = Истина;
КонецПроцедуры

Процедура ТабХарактПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока.ЕстОгран = Истина Тогда
		ЭлементыФормы.СписОгран.Доступность = Истина;
	Иначе 
		ЭлементыФормы.СписОгран.Доступность = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

Процедура СписОгранНажатие(Элемент)
	
	ТабСпис = Новый ТаблицаЗначений;
	ТабСпис.Колонки.Добавить("ПоНоменклотуре",,"ПоНоменклотуре");
	ТабСпис.Колонки.Добавить("Номенклотура",,"Номенклотура");
	ТабСпис.Колонки.Добавить("ПоГруппе",,"ПоГруппе");
	ТабСпис.Колонки.Добавить("НомГруппа",,"НомГруппа");
	ТабСпис.Колонки.Добавить("ПоЦенГруппе",,"ПоЦенГруппе");
	ТабСпис.Колонки.Добавить("ЦенГруппа",,"ЦенГруппа");
	
	Характ = ЭлементыФормы.ТабХаракт.ТекущиеДанные.ВидБонусов;	
	
	СписОгран = Новый Запрос;
	СписОгран.Текст = 
	"ВЫБРАТЬ
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоНоменклотуре,
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Номенклотура,
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоГруппе,
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.НомГруппа,
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоЦенГруппе,
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ЦенГруппа
	|ИЗ
	|	РегистрСведений.мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре КАК мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре
	|ГДЕ
	|	мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Списывать = ИСТИНА
	|	И (мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоГруппе = ИСТИНА
	|			ИЛИ мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоНоменклотуре = ИСТИНА
	|			ИЛИ мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.ПоЦенГруппе = ИСТИНА)
	|	И мчт_Наст_Нач_и_Спис_Бонусов_ПоНоменклотуре.Характеристика = &Характеристика";
	СписОгран.УстановитьПараметр("Характеристика", Характ);	
	СписокПолуч = СписОгран.Выполнить().Выгрузить();
	
	Если СписокПолуч.Количество() > 0 Тогда
		Для Каждого Переб Из СписокПолуч Цикл 
			ЗаполнитьЗначенияСвойств(ТабСпис.Добавить(), Переб);
		КонецЦикла;
	КонецЕсли;
	
	ФормаИнфо = ПолучитьОбщуюФорму("мчт_Форма_Списка_Ограничений_New_Bonus");
	ФормаИнфо.Характеристика = Характ;
	Для Каждого Запол Из ТабСпис Цикл 
		ЗаполнитьЗначенияСвойств(ФормаИнфо.Список.Добавить(), Запол);
	КонецЦикла;
	ФормаИнфо.Элементы.ОграничениеПоХаракт.Видимость = Истина;
	ФормаИнфо.ОткрытьМодально();

	
КонецПроцедуры

Процедура ДетПоСписНажатие(Элемент)
	
	ФормаИнфо = ПолучитьОбщуюФорму("мчт_Форма_Списка_Ограничений_New_Bonus");
	
	ТабДеталПоСпис.Сортировать("ДнейДоСписания Возр, Партия убыв");
	
	Для Каждого Запол Из ТабДеталПоСпис Цикл 
		ЗаполнитьЗначенияСвойств(ФормаИнфо.РасшПоСпис.Добавить(), Запол);
	КонецЦикла;
	ФормаИнфо.Элементы.РасшифровкаПоСписанию.Видимость = Истина;
	ФормаИнфо.ОткрытьМодально();
	
КонецПроцедуры
