////////////////////////////////////////////////////////////////////////////////
// Описание формы
// Параметры фомры:
//  ИмяМакета - Строка - передается имя макета.
//  ИмяСекции - Строка - передается имя секции макета.
//  ПолучатьПолныеДанные - Булево - признак возврата полных данных. Если Истина то возвращается структура "Код" и "Наименование" если Ложь то возвращается только "Код".
//  ПолныйПоиск - Булево - признак поиска по коду и наименованию.
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоГрупп = 2;
	
	Если НЕ ЗначениеЗаполнено(Параметры.ИмяМакета) ИЛИ НЕ ЗначениеЗаполнено(Параметры.ИмяСекции) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ИмяМакета = Параметры.ИмяМакета;
	ИмяСекции = Параметры.ИмяСекции;
	ТекущийКодСтроки = Параметры.ТекущийКодСтроки;
	
	ПолучатьПолныеДанные = Параметры.ПолучатьПолныеДанные;
	
	Если Параметры.Свойство("ПолныйПоиск") Тогда
		ПолныйПоиск = Параметры.ПолныйПоиск;
	КонецЕсли; 
	
	Дерево = РеквизитФормыВЗначение("Таблица",Тип("ДеревоЗначений"));
	Дерево.Строки.Очистить();
	
	Если Не Параметры.Свойство("ИмяОтчета") Тогда
		Макет = ПолучитьОбщийМакет(СокрЛП(Параметры.ИмяМакета));
	Иначе
		Макет = Отчеты[Параметры.ИмяОтчета].ПолучитьМакет(СокрЛП(Параметры.ИмяМакета));
	КонецЕсли;
	
	ТекстШапки = Макет.ПолучитьОбласть("Шапка|Наименование").ТекущаяОбласть.Текст;
	
	Область = Макет.Области[Параметры.ИмяСекции];
	
	Для Ном = Область.Верх По Область.Низ Цикл
		Если НЕ СокрЛП(Макет.Область(Ном, 5).Текст) = "" Тогда
			Если НЕ СокрЛП(Макет.Область(Ном, 1).Текст) = "" Тогда
				НоваяСтрока = Дерево.Строки.Добавить();
				НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
				НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				НоваяСтрока.Группа = 0;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "" Тогда
				Подстрока = НоваяСтрока.Строки.Добавить();
				Подстрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 2).Текст);
				Подстрока.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				Подстрока.Группа = 1;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" Тогда
				ПодстрокаПодстроки = Подстрока.Строки.Добавить();
				ПодстрокаПодстроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 3).Текст);
				ПодстрокаПодстроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				ПодстрокаПодстроки.Группа = 2;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 4).Текст) = "" Тогда
				ПодстрокаПодстрокиСтроки = ПодстрокаПодстроки.Строки.Добавить();
				ПодстрокаПодстрокиСтроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 4).Текст);
				ПодстрокаПодстрокиСтроки.Наименование = СокрЛП(Макет.Область(Ном, 5).Текст);
				ПодстрокаПодстрокиСтроки.Группа = 3;
				Группировать = Истина;
			КонецЕсли;
			КоличествоГрупп = 3;
			
		ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 4).Текст) = "" Тогда
			Если НЕ СокрЛП(Макет.Область(Ном, 1).Текст) = "" Тогда
				НоваяСтрока = Дерево.Строки.Добавить();
				НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
				НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 4).Текст);
				НоваяСтрока.Группа = 0;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 2).Текст) = "" Тогда
				Подстрока = НоваяСтрока.Строки.Добавить();
				Подстрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 2).Текст);
				Подстрока.Наименование = СокрЛП(Макет.Область(Ном, 4).Текст);
				Подстрока.Группа = 1;
			ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" Тогда
				ПодстрокаПодстроки = Подстрока.Строки.Добавить();
				ПодстрокаПодстроки.КодСтроки    = СокрЛП(Макет.Область(Ном, 3).Текст);
				ПодстрокаПодстроки.Наименование = СокрЛП(Макет.Область(Ном, 4).Текст);
				ПодстрокаПодстроки.Группа = 2;
				Группировать = Истина;
			КонецЕсли;
			КоличествоГрупп = 2;
			
		ИначеЕсли НЕ СокрЛП(Макет.Область(Ном, 3).Текст) = "" Тогда 
			НоваяСтрока = Дерево.Строки.Добавить();
			НоваяСтрока.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
			НоваяСтрока.Наименование = СокрЛП(Макет.Область(Ном, 2).Текст);
			НоваяСтрока.Группа = 1;
			ОбластьПодстроки = Макет.Области[Параметры.ИмяСекции + "_" + СтрЗаменить(НоваяСтрока.КодСтроки,".","_")];
			Для НомПодСекции = ОбластьПодстроки.Верх По ОбластьПодстроки.Низ Цикл
				Подстрока = НоваяСтрока.Строки.Добавить();
				Подстрока.КодСтроки    = СокрЛП(Макет.Область(НомПодСекции, 1).Текст);
				Подстрока.Наименование = СокрЛП(Макет.Область(НомПодСекции, 2).Текст);
				Подстрока.КодПодстроки = НоваяСтрока.КодСтроки + "." + СокрЛП(Макет.Область(НомПодСекции, 1).Текст);
				Подстрока.Группа = 0;
			КонецЦикла;
		Иначе 
			Строка = Дерево.Строки.Добавить();
			Строка.КодСтроки    = СокрЛП(Макет.Область(Ном, 1).Текст);
			Строка.Наименование = СокрЛП(Макет.Область(Ном, 2).Текст);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево,"Таблица");
	
	//Инициализируемся на строке, если было уже выбрано значение из классификатора.
	Если ТекущийКодСтроки <> Неопределено И ТекущийКодСтроки <> "" Тогда
		ТекущийКодСтроки = ?(Прав(СокрЛП(ТекущийКодСтроки),1) = ".", Лев(ТекущийКодСтроки, СтрДлина(СокрЛП(ТекущийКодСтроки)) -1), СокрЛП(ТекущийКодСтроки));
		МассивНайденныхСтрок = Новый Массив;
		НайтиСтрокиВДанныхФормыДерево(Таблица.ПолучитьЭлементы(), "КодСтроки", ТекущийКодСтроки, МассивНайденныхСтрок);
		Если МассивНайденныхСтрок.Количество() <> 0 Тогда
			Элементы.Таблица.ТекущаяСтрока = МассивНайденныхСтрок[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ТаблицаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ЗначениеВозврата = Неопределено;
	
	Если НЕ ПустаяСтрока(Элемент.ТекущиеДанные.КодПодстроки) Тогда
		КодСтроки = Элемент.ТекущиеДанные.КодПодстроки;
		ИмяКолонки = "КодПодстроки";
	Иначе
		КодСтроки = Элемент.ТекущиеДанные.КодСтроки;
		ИмяКолонки = "КодСтроки";
 	КонецЕсли;
	
	Выбор(КодСтроки, Элемент.ТекущиеДанные.Наименование, ЗначениеВозврата, ИмяКолонки);
	
	Если ЗначениеВозврата = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ТипЗнч(ЗначениеВозврата) = Тип("Структура")
			И ЗначениеВозврата.Свойство("Развернуть") Тогда
		СтрокаДерева = Элементы.Таблица.ТекущаяСтрока;
		
		Если Элементы.Таблица.Развернут(СтрокаДерева) Тогда
			Элементы.Таблица.Свернуть(СтрокаДерева);
		Иначе	
			Элементы.Таблица.Развернуть(СтрокаДерева, Истина);
		КонецЕсли;	
		Возврат
	КонецЕсли;

	ОповеститьОВыборе(ЗначениеВозврата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура Выбор(КодСтроки, Наименование, ЗначениеВозврата, ИмяКолонки)
	
	Дерево = РеквизитФормыВЗначение("Таблица");
	
	Если ПолныйПоиск Тогда
		МассивСтрок = Дерево.Строки.НайтиСтроки(Новый Структура("КодСтроки, Наименование", КодСтроки, Наименование));
		Если МассивСтрок.Количество() > 0 Тогда
			Для Каждого СтрокаМассива Из МассивСтрок Цикл
				Если Группировать = Истина Тогда
					Если Не СтрокаМассива.Родитель = Неопределено И СтрокаМассива.Группа = КоличествоГрупп Тогда
						Если ПолучатьПолныеДанные Тогда
							ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", СтрокаМассива.КодСтроки, СтрокаМассива.Наименование);
						Иначе
							ЗначениеВозврата = СтрокаМассива.КодСтроки;
						КонецЕсли;
					Иначе
						Возврат;
					КонецЕсли;
				Иначе
					СтандартнаяОбработка = Ложь;
					Если ПолучатьПолныеДанные Тогда
						ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", СтрокаМассива.КодСтроки, СтрокаМассива.Наименование);
					Иначе
						ЗначениеВозврата = СтрокаМассива.КодСтроки;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе		
		МассивНайденныхСтрок = Новый Массив;
		НайтиСтрокиВДанныхФормыДерево(Таблица.ПолучитьЭлементы(), ИмяКолонки, КодСтроки, МассивНайденныхСтрок);
		Если МассивНайденныхСтрок.Количество() <> 0 Тогда
			ВыбраннаяСтрока = МассивНайденныхСтрок[0];
		КонецЕсли;
		Если Группировать = Истина Тогда
			Если Не ВыбраннаяСтрока.Родитель = Неопределено И ВыбраннаяСтрока.Группа = КоличествоГрупп Тогда
				Если ПолучатьПолныеДанные Тогда
					ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", ВыбраннаяСтрока.КодСтроки, ВыбраннаяСтрока.Наименование);
				Иначе
					ЗначениеВозврата = ВыбраннаяСтрока.КодСтроки;
				КонецЕсли;
			Иначе
				Возврат;
			КонецЕсли;
		ИначеЕсли ИмяСекции = "НДС_Реализация" ИЛИ ИмяСекции = "НДС_Зачет" Тогда
			Если ВыбраннаяСтрока.Группа = 1 Тогда
				СтандартнаяОбработка = Ложь;
				ЗначениеВозврата = Новый Структура("КодСтроки, Развернуть", ВыбраннаяСтрока.КодСтроки, Истина);
			Иначе 
				СтандартнаяОбработка = Ложь;
				Если ПолучатьПолныеДанные Тогда
					ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", КодСтроки, ВыбраннаяСтрока.Наименование);
				Иначе
					ЗначениеВозврата = КодСтроки;
				КонецЕсли;
			КонецЕсли;	
		ИначеЕсли СтрНайти(ИмяСекции, "НДС_Реализация_") <>	0 
				ИЛИ СтрНайти(ИмяСекции, "НДС_Зачет_") <> 0 Тогда
			СтандартнаяОбработка = Ложь;	
			ЗначениеВозврата = ВыбраннаяСтрока.КодСтроки;
		Иначе
			СтандартнаяОбработка = Ложь;
			Если ПолучатьПолныеДанные Тогда
				ЗначениеВозврата = Новый Структура("КодСтроки, Наименование", ВыбраннаяСтрока.КодСтроки, ВыбраннаяСтрока.Наименование);
			Иначе
				ЗначениеВозврата = ВыбраннаяСтрока.КодСтроки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиСтрокиВДанныхФормыДерево(ЭлементыДанныхФормыДерево, ИмяКолонки, ИскомоеЗначение, МассивНайденныхСтрок)
	
	Для Каждого ЭлементДерева Из ЭлементыДанныхФормыДерево Цикл
		
		ЗначенияСовпадают = Истина;
		
		Если ЭлементДерева[ИмяКолонки]  <> ИскомоеЗначение  Тогда
			ЗначенияСовпадают = Ложь;
		КонецЕсли;
		
		Если ЗначенияСовпадают Тогда
			МассивНайденныхСтрок.Добавить(ЭлементДерева);
		КонецЕсли;
		
		НайтиСтрокиВДанныхФормыДерево(ЭлементДерева.ПолучитьЭлементы(), "КодПодстроки", ИскомоеЗначение, МассивНайденныхСтрок);
	КонецЦикла;
	
	Возврат МассивНайденныхСтрок;
	
КонецФункции

#КонецОбласти